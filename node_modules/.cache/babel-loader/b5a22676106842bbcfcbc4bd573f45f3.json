{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/problemCenter/initQuestions/initQuestions.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/problemCenter/initQuestions/initQuestions.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nexport default {\n  name: 'initQuestions',\n  data: function data() {\n    return {\n      typeList: [],\n      type: '',\n      leavingText: '',\n      imageType: '2',\n      imgUrl: '',\n      // 上传图片 url\n      imgLoading: false,\n      imageDataStr: '',\n      buttonLoading: false\n    };\n  },\n  computed: {\n    buttonDisabled: function buttonDisabled() {\n      var flag = true;\n\n      if (this.type.length && this.leavingText.length || this.buttonLoading) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    isOpenUploadImg: function isOpenUploadImg() {\n      var data = this.$store.state.baseData.publicInfo;\n      var flag = '0';\n\n      if (data && data.switch && data.switch.is_open_upload_img && data.switch.is_open_upload_img.toString === '1') {\n        flag = '1';\n      }\n\n      return flag;\n    }\n  },\n  methods: {\n    init: function init() {\n      this.initTypeList();\n    },\n    onChangeFileFun: function onChangeFileFun() {\n      this.imgLoading = true;\n    },\n    uploadFinish: function uploadFinish(obj) {\n      if (obj.error) {\n        this.$bus.$emit('tip', {\n          text: obj.error,\n          type: 'error'\n        });\n        return;\n      }\n\n      this.imgUrl = obj.url;\n      this.imgLoading = false;\n      this.imageDataStr = obj.fileName;\n    },\n    // 初始化申诉类型\n    initTypeList: function initTypeList() {\n      var _this = this;\n\n      this.axios({\n        url: 'question/problem_tip_list'\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          var arr = [];\n          data.data.rqTypeList.forEach(function (item) {\n            arr.push({\n              value: item.value,\n              code: item.code.toString()\n            });\n          });\n          _this.typeList = arr; // if(arr.length) {\n          //   this.$nextTick(() => {\n          //     this.type = arr[0].code\n          //   })\n          // }\n        } else {\n          _this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    inputLineChange: function inputLineChange(v) {\n      this.leavingText = v;\n    },\n    changeType: function changeType(v) {\n      this.type = v.code;\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      this.buttonLoading = true;\n      this.axios({\n        url: 'question/create_problem',\n        params: {\n          imageDataStr: this.imageDataStr.length ? this.imageDataStr : undefined,\n          rqDescribe: this.leavingText,\n          rqType: this.type\n        }\n      }).then(function (data) {\n        _this2.buttonLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this2.$router.push('/questions/list');\n        } else {\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    }\n  }\n};",null]}