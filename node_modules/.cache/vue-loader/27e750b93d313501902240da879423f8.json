{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/trade/tradeForm/ex-tradeForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/trade/tradeForm/ex-tradeForm.vue","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport mixin from 'blockchain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/ex-tradeForm/ex-tradeForm';\nimport 'blockchain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/ex-tradeForm/ex-tradeForm.styl';\nimport {\n  myStorage, nul, getCoinShowName, fixD, division, cut,\n} from 'blockchain-ui-privatization/utils';\nimport tradeInput from './tradeInput.vue';\nimport GridTradeInput from './GridTradeInput.vue';\n\nexport default {\n  mixins: [mixin],\n  components: {\n    tradeInput,\n    GridTradeInput,\n  },\n  mounted() {\n    this.init();\n  },\n  // 组价离开前执行\n  beforeDestroy() {\n    clearInterval(this.assetsInter);\n  },\n  data() {\n    return {\n      marketData: [],\n      gridType: 1, // 专业版选择自定义或者ai\n      setType: 1, // 类型1等差2 等比\n      gridSetFormFlag: false,\n      gridAiFormFlag: false,\n      minimumOrderQuantity: 0, // 最小下单金额\n      // 七日年化收益率\n      sevenDay: '--',\n      gridAiMin: '--', // 最大利润率\n      gridAiMax: '--', // 最小利润率\n      gridAiMinPrice: '--', // Ai 最小值\n      gridAiMaxPrice: '--', // Ai 最大值\n      fee: null, // 手续费\n      // set代表自定义\n      gridSetMin: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridSetMax: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      // 数量\n      gridSetNum: {\n        units: '',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      // 资产\n      gridSetAccount: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 63%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      // 止盈价格\n      gridSetMaxBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 63%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      // 止损价格\n      gridSetMinBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 63%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiBlance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: true,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiNum: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: true,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiAccount: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 63%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiMaxBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 63%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiMinBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 63%',\n        errorHeight: '-30px',\n        value: '',\n      },\n    };\n  },\n  computed: {\n    lan() {\n      return this.$store.state.baseData.lan;\n    },\n    //  是否开启了 网格\n    gridTradeFlag() {\n      const { publicInfo } = this.$store.state.baseData;\n      let str = 0;\n      if (publicInfo && publicInfo.switch && publicInfo.switch.grid_trade_switch) {\n        str = Number(publicInfo.switch.grid_trade_switch);\n      }\n      return str;\n    },\n    // 该币对是否开启网格\n    showGridFlag() {\n      let flag = false;\n      if (this.symbolAll && this.symbolCurrent) {\n        const symbol = this.symbolAll[this.symbolCurrent];\n\n        if (symbol && symbol.is_grid_open) {\n          flag = true;\n        }\n      }\n      return flag;\n    },\n    // 按钮信息\n    gridbuttosContent() {\n      return {\n        gridButton: {\n          // 开启网格交易\n          text: this.isLogin\n            ? this.$t('gridTrade.btn1')\n            : this.$t('trade.loginReg'), // '登录/注册',\n          class: this.isLogin ? 'u-1-bg buyBtn u-16-cl' : 'u-8-bg buyBtn u-16-cl',\n        },\n        // 开启AI网格策略\n        gridAiButton: {\n          text: this.isLogin\n            ? this.$t('gridTrade.btn2')\n            : this.$t('trade.loginReg'), // '登录/注册',\n          class: this.isLogin ? 'u-1-bg buyBtn u-16-cl' : 'u-8-bg buyBtn u-16-cl',\n        },\n      };\n    },\n    // 等差网格（动态利润）： min ~ max\n\n    // max =（（最高价-最低价）/ （网格数量 - 1）/ 最低价）  - 买入手续费率 - 卖出手续费率\n\n    // min =（ (最高价-最低价）/ （网格数量 - 1））/ （最高价 - （ (最高价-最低价）/ （网格数量 - 1）））  - 买入手续费率 - 卖出手续费率\n\n    // 最低利润\n    gridSetMinProfits() {\n      // 1: 等差 2 等比\n      let val = null;\n      if (this.gridSetMax.value\n        && this.gridSetMin.value\n        && this.gridSetNum.value) {\n        if (this.setType === 1) {\n          const card = division(\n            cut(this.gridSetMax.value, this.gridSetMin.value),\n            (this.gridSetNum.value - 1),\n          );\n          val = nul(cut(\n            cut(\n              division(\n                card,\n                cut(\n                  this.gridSetMax.value,\n                  card,\n                ),\n              ),\n              this.fee,\n            ),\n            this.fee,\n          ), 100);\n        }\n      }\n      if (val === Infinity || val === -Infinity) {\n        val = null;\n      }\n      return fixD(val, 2) || '--';\n    },\n    // 最高利润\n    gridSetMaxProfits() {\n      // 1: 等差 2 等比\n      let val = null;\n      if (this.gridSetMax.value\n        && this.gridSetMin.value\n        && this.gridSetNum.value) {\n        if (this.setType === 1) {\n          val = nul(cut(\n            cut(\n              division(\n                division(\n                  cut(this.gridSetMax.value, this.gridSetMin.value),\n                  (this.gridSetNum.value - 1),\n                ), this.gridSetMin.value,\n              ),\n              this.fee,\n            ),\n            this.fee,\n          ), 100);\n          // 等比网格（固定利润）=（（最高价/最低价）开（网格数量-1）次方） - 手续费率*2-1\n        } else if (this.setType === 2) {\n          val = nul(cut(\n            cut(\n              division(\n                this.gridSetMax.value,\n                this.gridSetMin.value,\n              )\n                ** (1 / (this.gridSetNum.value - 1)),\n              nul(this.fee, 2),\n            ),\n            1,\n          ), 100);\n        }\n      }\n      if (val === Infinity || val === -Infinity) {\n        val = null;\n      }\n      return fixD(val, 2) || '--';\n    },\n    setNumVal() {\n      return this.gridSetNum.value;\n    },\n    symbolsData() {\n      if (this.marketData[this.symbolCurrent]) {\n        return this.marketData[this.symbolCurrent];\n      }\n      return {\n        name: '--',\n        symbol: {\n          symbol: '--',\n          unit: '--',\n        },\n        close: {\n          class: '',\n          data: 0,\n          price: '--',\n        },\n        amount: '--',\n        rose: {\n          class: '',\n          data: '--',\n        },\n      };\n    },\n  },\n  watch: {\n    // 切换自定义和ai\n    gridType() {\n      this.clearGridValue();\n      this.getAiData();\n    },\n    // 切换 限价交易 和 市价交易\n    transactionType(val) {\n      // 2 市价交易\n      this.$bus.$emit('tradeType', false);\n      if (val === 2) {\n        this.formData_1.disabled = true;\n        this.formData_1.disabledText = this.$t('trade.mPriceBuy'); // 以市场最优价买入\n        this.formData_2.title = this.$t('trade.dealMoney'); // '交易额';\n        this.formData_2.units = this.symbolUnit.units;\n        this.formData_3.disabled = true;\n        this.formData_3.disabledText = this.$t('trade.mPriceSell'); // 以市场最优价卖出\n      } else if (val === 1) {\n        this.formData_1.disabled = false;\n        this.formData_1.disabledText = '';\n        this.formData_2.title = this.$t('trade.number'); // '数量';\n        this.formData_2.units = this.symbolUnit.symbol;\n        this.formData_3.disabled = false;\n        this.formData_3.disabledText = '';\n      } else if (val === 4) {\n        this.clearGridValue();\n        this.getAiData();\n        // 改变父组件样式\n        this.$bus.$emit('tradeType', 'grid');\n      }\n    },\n    setNumVal(v) {\n      if (v) {\n        this.$nextTick(() => {\n          this.gridSetNum.value = fixD(v, 0);\n        });\n      }\n    },\n    // 各个输入框的 单位\n    symbolUnit(val) {\n      this.formData_1.units = this.getShowName(val.units);\n      this.formData_2.units = this.getShowName(val.symbol);\n      this.formData_3.units = this.getShowName(val.units);\n      this.formData_4.units = this.getShowName(val.symbol);\n      this.gridSetMin.units = this.getShowName(val.units);\n      this.gridSetMax.units = this.getShowName(val.units);\n      this.gridSetAccount.units = this.getShowName(val.units);\n      this.gridSetMaxBalance.units = this.getShowName(val.units);\n      this.gridSetMinBalance.units = this.getShowName(val.units);\n      this.gridAiAccount.units = this.getShowName(val.units);\n      this.gridAiMaxBalance.units = this.getShowName(val.units);\n      this.gridAiMinBalance.units = this.getShowName(val.units);\n    },\n  },\n  methods: {\n    init() {\n      // 两秒让报错消失\n      this.$bus.$on('errorMsg', () => {\n        const formKey = [\n          'gridAiAccount',\n          'gridAiMaxBalance',\n          'gridAiMinBalance',\n          'gridAiNum',\n          'gridSetMin',\n          'gridSetMax',\n          'gridSetNum',\n          'gridSetAccount',\n          'gridSetMaxBalance',\n          'gridSetMinBalance',\n        ];\n        formKey.forEach((item) => {\n          this[item].isError = false;\n        });\n      });\n      // 监听 当前货币对切换\n      this.$bus.$on('SYMBOL_CURRENT', (val) => {\n        this.clearValue();\n        this.clearGridValue();\n        this.symbolCurrent = val;\n        if (this.transactionType === 3) {\n          this.transactionType = 1;\n        }\n        if (this.transactionType === 4 && this.showGridFlag && this.gridTradeFlag) {\n          this.getAiData();\n        } else if (this.transactionType === 4 && (!this.showGridFlag || !this.gridTradeFlag)) {\n          this.transactionType = 1;\n        }\n      });\n      if (this.isLogin) {\n        this.$store.dispatch('assetsExchangeData', {\n          auto: false,\n          coinSymbols: this.coinSymbols,\n        });\n        // clearInterval(this.assetsInter);\n        // this.assetsInter = setInterval(() => {\n        //   this.$store.dispatch('assetsExchangeData', {\n        //     auto: true,\n        //     coinSymbols: this.symbolUnit.symbol,\n        //   });\n        // }, 10000);\n      }\n      // 监听 市场（最新价格） 数据\n      this.$bus.$on('MARKET_DATA', (data) => {\n        this.marketData = JSON.parse(JSON.stringify(data));\n      });\n      // 监听 价格点击\n      this.$bus.$on('HANDEL_PRICE', (data) => {\n        if (data) {\n        // const obj = {name: 'formData_1', data };\n          const arr = ['formData_1', 'formData_3'];\n          arr.forEach((item) => {\n            this.onChaneForm({ name: item, value: data });\n          });\n        // onChaneForm\n        // this.formData_1.value = data;\n        // this.formData_3.value = data;\n        }\n      });\n    },\n    switchGrid() {\n      this.clearValue();\n      this.transactionType = 4;\n    },\n    gradSub(type) {\n      if (!this.isLogin) {\n        this.$router.push('/login');\n      } else {\n        const {\n          formKey,\n          lowestPrice,\n          highestPrice,\n          gridNumber,\n          totalQuoteAmount,\n          stopHighPrice,\n          stopLowPrice,\n          quantType,\n          flag,\n          useOwnBase,\n          totalBaseAmount,\n          gridLineType,\n        } = this.submitGridFormKey(type);\n        let fal = true;\n        if (formKey.length) {\n          formKey.forEach((item) => {\n            const { value } = this[item];\n            if (!value) {\n              this[item].errorText = `${this.$t('trade.pleaseInput')}`;\n              this[item].isError = true;\n              fal = false;\n            }\n            if (parseFloat(value) <= 0) {\n              this[item].errorHeight = '-30px';\n              this[item].errorText = `${this.$t('trade.inputError')}`; // 输入有误\n              this[item].isError = true;\n              fal = false;\n            }\n          });\n          if (this.fal && fal && flag) {\n            // 单格利润过小，请重新设置ai\n            if (type !== 'gradTrad') {\n              // 判断投入资金是否有足够余额，如无，则提示：USDT余额不足\n              if (Number(totalQuoteAmount) > Number(this.currenTaccount.unitsAccoubt)) {\n                this.$bus.$emit('tip', { text: `${getCoinShowName(this.symbolUnit.units, this.coinList)} ${this.$t('gridTrade.error3')}` });\n                fal = false;\n                return;\n              } if (// 总投入资金/网格数量，不能小于当前币对的最小下单金额\n                division(Number(totalQuoteAmount), gridNumber) < Number(this.minimumOrderQuantity)\n              ) {\n                this.$bus.$emit('tip', { text: this.$t('gridTrade.error4') });\n                fal = false;\n                return;\n              } if (this.gridAiMax === '--' || this.gridAiMax <= 0 || this.gridAiMin === '--' || this.gridAiMin <= 0) {\n                fal = false;\n                this.$bus.$emit('tip', { text: this.$t('gridTrade.error9') });\n                return;\n              }\n            } else if (type === 'gradTrad') { // 单格利润过小，请重新设置自定义\n              // 判断投入资金是否有足够余额，如无，则提示：USDT余额不足\n              if (Number(totalQuoteAmount) > Number(this.currenTaccount.unitsAccoubt)) {\n                this.$bus.$emit('tip', { text: `${getCoinShowName(this.symbolUnit.units, this.coinList)} ${this.$t('gridTrade.error3')}` });\n                fal = false;\n                return;\n                // 总投入资金/网格数量，不能小于当前币对的最小下单金额\n              } if (division(Number(totalQuoteAmount), gridNumber)\n              < Number(this.minimumOrderQuantity)) {\n                this.$bus.$emit('tip', { text: this.$t('gridTrade.error4') });\n                // 每格投入资金小于当前币对的最小下单金额\n                fal = false;\n                return;\n              } if (gridLineType === 1) { // 等差\n                if (this.gridSetMinProfits === '--' || this.gridSetMinProfits <= 0 || this.gridSetMaxProfits === '--' || this.gridSetMaxProfits <= 0) {\n                  this.$bus.$emit('tip', { text: this.$t('gridTrade.error9') });\n                  fal = false;\n                  return;\n                }\n              } else if (gridLineType === 2) { // 等比只校验最大\n                if (this.gridSetMaxProfits === '--' || this.gridSetMaxProfits <= 0) {\n                  this.$bus.$emit('tip', { text: this.$t('gridTrade.error9') });\n                  fal = false;\n                  return;\n                }\n              }\n            }\n            if (Number(stopHighPrice) && Number(stopHighPrice) <= Number(highestPrice)) {\n              // 止盈价格必须高于网格最高价\n              this.$bus.$emit('tip', { text: this.$t('gridTrade.error5') });\n              fal = false;\n            } else if (Number(stopHighPrice)\n              && Number(stopHighPrice) <= Number(this.symbolsData.close.data)) {\n              this.$bus.$emit('tip', { text: this.$t('gridTrade.error7') });\n              fal = false;\n            } else if (Number(stopLowPrice)\n              && Number(stopLowPrice) >= Number(lowestPrice)) {\n              // 止损价格必须低于网格最低价\n              this.$bus.$emit('tip', { text: this.$t('gridTrade.error6') });\n              fal = false;\n            } else if (Number(stopLowPrice)\n              && Number(stopLowPrice) >= Number(this.symbolsData.close.data)) {\n              this.$bus.$emit('tip', { text: this.$t('gridTrade.error8') });\n              fal = false;\n            }\n          }\n          if (this.fal && fal && flag) {\n            this.fal = false;\n            const submitData = {\n              symbol: this.symbolCurrent,\n              lowestPrice,\n              highestPrice,\n              gridNumber,\n              totalQuoteAmount,\n              stopHighPrice,\n              stopLowPrice,\n              quantType,\n              useOwnBase,\n              totalBaseAmount,\n              gridLineType, // 网格类型 1:等差 2:等比\n              fee: this.fee,\n            };\n            if (useOwnBase) {\n              submitData.currentPrice = this.symbolsData.close.data;\n              if (submitData.currentPrice) {\n                this.gridCancelEvent(submitData);\n              }\n            } else {\n              this.gridSubData(submitData);\n            }\n          }\n        }\n      }\n    },\n    submitGridFormKey(type) {\n      let formKey = [];\n      let lowestPrice = null;\n      let highestPrice = null;\n      let gridNumber = null;\n      let totalQuoteAmount = null;\n      let stopHighPrice = null;\n      let stopLowPrice = null;\n      let quantType = null;\n      let flag = true;\n      let gridLineType = 1;\n      let useOwnBase = 0;\n      const BoxHeight = document.body.clientWidth;\n      if (type === 'gradTrad') {\n        this.gridSetAccount.errorHeight = '-30px';\n        formKey = ['gridSetMin', 'gridSetMax', 'gridSetNum', 'gridSetAccount'];\n        lowestPrice = fixD(this.gridSetMin.value, this.fixValue.priceFix);\n        highestPrice = fixD(this.gridSetMax.value, this.fixValue.priceFix);\n        gridNumber = fixD(this.gridSetNum.value, this.fixValue.volumeFix);\n        totalQuoteAmount = fixD(this.gridSetAccount.value, this.fixValue.priceFix);\n        stopHighPrice = this.gridSetMaxBalance.value\n          ? fixD(this.gridSetMaxBalance.value, this.fixValue.priceFix) : 0;\n        stopLowPrice = this.gridSetMinBalance.value\n          ? fixD(this.gridSetMinBalance.value, this.fixValue.priceFix) : 0;\n        quantType = 1; // 网格\n        gridLineType = this.setType;\n        useOwnBase = this.gridSetFormFlag ? 1 : 0;\n\n        // 判断最高价不能低于最低价的1.02倍。如低于，则提示：价格区间过小，请重新设置\n        if (Number(highestPrice) < nul(lowestPrice, 1.02)) {\n          this.gridSetMax.isError = true;\n          // 价格区间过小，请重新设置\n          if (BoxHeight < 1325) {\n            this.gridSetMax.errorHeight = '-40px';\n          }\n          this.gridSetMax.errorText = this.$t('gridTrade.error1');\n          flag = false;\n        }\n        if (Number(gridNumber) < 2 || Number(gridNumber) > 100) {\n          this.gridSetNum.isError = true;\n          // 数量区间为：2-100\n          this.gridSetNum.errorText = this.$t('gridTrade.error2');\n          flag = false;\n        }\n      } else {\n        this.gridAiAccount.errorHeight = '-30px';\n        formKey = ['gridAiAccount'];\n        lowestPrice = this.gridAiMinPrice;\n        highestPrice = this.gridAiMaxPrice;\n        gridNumber = this.gridAiNum.value;\n        totalQuoteAmount = fixD(this.gridAiAccount.value, this.fixValue.priceFix);\n        stopHighPrice = this.gridAiMaxBalance.value\n          ? fixD(this.gridAiMaxBalance.value, this.fixValue.priceFix) : 0;\n        stopLowPrice = this.gridAiMinBalance.value\n          ? fixD(this.gridAiMinBalance.value, this.fixValue.priceFix) : 0;\n        quantType = 1; // 网格\n        gridLineType = 1;\n        useOwnBase = this.gridAiFormFlag ? 1 : 0; // 是否使用Base资产 0:不使用 1:使用\n        // 单格利润过小，请重新设置\n        // 判断最高价不能低于最低价的1.02倍。如低于，则提示：价格区间过小，请重新设置\n        if (Number(highestPrice) < nul(lowestPrice, 1.02)) {\n          this.gridAiMaxPrice.isError = true;\n          if (BoxHeight < 1325) {\n            this.gridAiMaxPrice.errorHeight = '-40px';\n          }\n          // 价格区间过小，请重新设置\n          this.gridAiMaxPrice.errorText = this.$t('gridTrade.error1');\n          flag = false;\n        }\n\n        if (Number(gridNumber) < 2 || Number(gridNumber) > 100) {\n          this.gridAiNum.isError = true;\n          this.gridAiNum.errorText = this.$t('gridTrade.error2');\n          flag = false;\n        }\n      }\n      return {\n        formKey,\n        lowestPrice,\n        highestPrice,\n        gridNumber,\n        totalQuoteAmount,\n        stopHighPrice,\n        stopLowPrice,\n        quantType,\n        flag,\n        useOwnBase,\n        totalBaseAmount: useOwnBase ? this.currenTaccount.symbolAccoubt : 0,\n        gridLineType,\n      };\n    },\n    getShowName(v) {\n      let str = '';\n      const showNameMarket = this.$store.state.baseData.market;\n      if (showNameMarket) {\n        const { coinList } = showNameMarket;\n        str = getCoinShowName(v, coinList);\n      }\n      return str;\n    },\n    // 清空 表单数据\n    clearGridValue() {\n      const formKey = [\n        'gridAiAccount',\n        'gridAiMaxBalance',\n        'gridAiMinBalance',\n        'gridAiNum',\n        'gridSetMin',\n        'gridSetMax',\n        'gridSetNum',\n        'gridSetAccount',\n        'gridSetMaxBalance',\n        'gridSetMinBalance',\n      ];\n      formKey.forEach((item) => {\n        this[item].value = '';\n        this[item].isError = false;\n        this[item].subText = null;\n      });\n    },\n    // 请求ai数据\n    getAiData() {\n      this.axios({\n        url: 'noToken/quant/getAIStrategyInfo',\n        hostType: 'quant',\n        params: {\n          symbol: this.symbolCurrent,\n        },\n        method: 'post',\n      }).then((data) => {\n        if (data.code.toString() === '0') {\n          if (data.data && data.data.configParamMap) {\n            this.gridAiMinPrice = fixD(\n              data.data.configParamMap.lowestPrice, this.fixValue.priceFix,\n            );\n            this.gridAiMaxPrice = fixD(\n              data.data.configParamMap.highestPrice, this.fixValue.priceFix,\n            );\n            this.gridAiBlance.disabledText = `${this.gridAiMinPrice} ~ ${this.gridAiMaxPrice}`;\n            this.gridAiNum.disabledText = fixD(data.data.configParamMap.gridNumber, 0);\n            this.gridAiNum.value = fixD(data.data.configParamMap.gridNumber, 0);\n            this.gridAiMin = fixD(data.data.everyProfitMin, 2);\n            this.gridAiMax = fixD(data.data.everyProfitMax, 2);\n            this.fee = data.data.makerFee;\n            // 最小下单数量\n            this.minimumOrderQuantity = data.data.minimumOrderQuantity;\n            this.sevenDay = fixD(data.data.sevenAnnualizedYield, 2); // 7日年华收益\n          }\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n        }\n      });\n    },\n    // 给服务端传参数和当前行情用于判断是否够每格消耗\n    gridCancelEvent(params) {\n      this.axios({\n        url: 'quant/calBaseAmount',\n        hostType: 'quant',\n        method: 'post',\n        params,\n      }).then((req) => {\n        if (req.code.toString() === '0' && req.data) {\n          if (Number(req.data.baseAmount) > Number(this.currenTaccount.symbolAccoubt)) {\n            this.$bus.$emit('tip', {\n              text: `${this.$t('gridTrade.least')}${req.data.baseAmount}\n            ${getCoinShowName(this.symbolUnit.symbol, this.coinList)}`,\n              type: 'error',\n            });\n            this.fal = true;\n          } else {\n            const obj = { ...params, totalBaseAmount: Number(req.data.baseAmount) };\n            this.gridSubData(obj);\n          }\n        } else {\n          this.$bus.$emit('tip', { text: req.msg, type: 'error' });\n          this.fal = true;\n        }\n      });\n    },\n    gridSubData(params) {\n      this.axios({\n        url: 'quant/saveStrategy',\n        hostType: 'quant',\n        params,\n        method: 'post',\n      }).then((data) => {\n        if (data.code.toString() === '0') {\n          // 清空表单\n          this.clearGridValue();\n          // 重新请求资产\n          this.$store.dispatch('assetsExchangeData', {\n            auto: false,\n            coinSymbols: this.coinSymbols,\n          });\n          this.getAiData();\n          // 发送下单成功的事件\n          this.$bus.$emit('ORDER_CREATE', { type: 'success' });\n          // 提示成功 下单成功\n          this.$bus.$emit('tip', { text: this.$t('trade.dealCussess'), type: 'success' });\n          this.fal = true;\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n          this.fal = true;\n        }\n      }).catch(() => {\n        this.fal = true;\n      });\n    },\n    dialogClose() {\n      this.isShowDialog = false;\n    },\n  },\n};\n\n",{"version":3,"sources":["ex-tradeForm.vue"],"names":[],"mappingssffile":"ex-tradeForm.vue","sourceRoot":"app/view/src/components/modules/trade/tradeForm","sourcesContent":["<!-- 币币交易 下单 -->\n<template>\n  <div class=\"trade-box trade-box-ex-container b-2-cl\">\n    <div class=\"title-block a-21-bg a-3-bd\">\n      <span class=\"tab\"\n        @click=\"switchTradeType(1)\"\n        :class=\"{'a-12-bd b-1-cl': transactionType === 1}\">\n        <!-- 限价交易 -->\n        {{$t('trade.limitPriceTrade')}}\n      </span>\n      <span class=\"tab\"\n        @click=\"switchTradeType(2)\"\n        :class=\"{'a-12-bd b-1-cl': transactionType === 2}\">\n        <!-- 市价交易 -->\n        {{$t('trade.marketPriceTrade')}}\n      </span>\n      <span class=\"tab\"\n        v-if=\"showUnlockSell\"\n        @click=\"switchTradeType(3)\"\n        :class=\"{'a-12-bd b-1-cl': transactionType === 3}\">\n        <!-- 解锁交易 -->\n        {{$t('trade.unlockTrade')}}\n      </span>\n      <span class=\"tab\"\n        v-if=\"gridTradeFlag && showGridFlag\"\n        @click=\"switchGrid\"\n        :class=\"{'a-12-bd b-1-cl': transactionType === 4}\">\n        <!-- 网格交易 -->\n        {{$t('gridTrade.title')}}\n      </span>\n      <!-- <div class=\"total-assets\" v-if=\"accountBalance\">\n        {{$t('trade.total_money')}}\n        <template v-if=\"totalBalancesHide\">******</template>\n        <template v-else>{{accountBalance.totalBalance}}</template>\n        {{accountBalance.totalBalanceSymbol | getCoinShowName(coinList)}}\n        <span class=\"b-3-cl\">≈\n          <template v-if=\"totalBalancesHide\">******</template>\n          <template v-else>{{totalBalances.totalRater}}</template>\n        </span>\n        <i class=\"totalBalancesHide icon\"\n          @click=\"handelTotal\">\n          <svg class=\"icon icon-16\"\n              aria-hidden=\"true\"\n              v-if=\"!totalBalancesHide\">\n              <use xlink:href=\"#icon-c_9\"></use>\n          </svg>\n          <svg class=\"icon icon-16\"\n            v-else\n            aria-hidden=\"true\">\n            <use xlink:href=\"#icon-c_10\"></use>\n          </svg>\n        </i>\n      </div> -->\n    </div>\n    <div class=\"trade-form\" v-if=\"transactionType === 3\">\n      <div class=\"trade-block\">\n        <div class=\"form-block\">\n          <div class=\"top-mag\">\n            <!-- 占位 -->\n          </div>\n          <trade-input\n            v-model=\"formData_5.value\"\n            @onChanes = \"onChaneForm\"\n            name=\"formData_5\"\n            :fixValue = 'fixValue.priceFix'\n            :datas=\"formData_5\"/>\n          <trade-input\n            v-model=\"formData_6.value\"\n            @onChanes = \"onChaneForm\"\n            name=\"formData_6\"\n            :fixValue = 'fixValue.volumeFix'\n            :datas=\"formData_6\"/>\n          <c-button\n            :defaultColorClass = 'buttosContent.sellButton.class'\n            :hoverColorClass = 'buttosContent.sellButton.class'\n            :activeColorClass = 'buttosContent.sellButton.class'\n            @click=\"unlockSell\"\n            width=\"100%\">\n            <!-- 一键解锁卖出 -->\n            {{buttosContent.unlockSellButton.text}}\n          </c-button>\n        </div>\n      </div>\n      <div class=\"trade-block\">\n        <div class=\"form-block model-info\">\n          <div class=\"tit\">\n            <svg class=\"icon icon-14 hover_show\" aria-hidden=\"true\">\n            <use xlink:href=\"#icon-b_27\"></use>\n          </svg>\n            <!-- 模式说明 -->\n            {{$t('trade.modelInfo')}}\n          </div>\n          <div class=\"main-text b-1-cl\">\n            <!-- 模式说明说明 -->\n            {{overchargeMsg}}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"trade-form trade-grid\" v-else-if=\"transactionType === 4\">\n      <template>\n        <div class=\"trade-block\">\n          <div class=\"form-block\">\n            <div class=\"top-mag\">\n              <span class=\"trade-type b-1-cl\">\n                <!-- 自定义策略 -->\n                {{$t('gridTrade.type1')}}：\n              </span>\n              <span class=\"lov\" v-if=\"lan === 'zh_CN'\">\n                <!-- 可用 -->\n                {{$t('gridTrade.setText1')}}:\n                <span class=\"lovText\">\n                  {{currenTaccount.unitsAccoubt}}\n                </span>\n                <span class=\"mr-text\">\n                  {{symbolUnit.units | getCoinShowName(coinList)}}\n                </span>\n                <span class=\"lovText\">{{currenTaccount.symbolAccoubt}}\n                </span>\n                {{symbolUnit.symbol | getCoinShowName(coinList)}}\n              </span>\n            </div>\n            <p class=\"lov_val\" v-if=\"lan !== 'zh_CN'\">\n                <!-- 可用 -->\n                <span class=\"lovText mr-text\">{{$t('gridTrade.setText1')}}:\n                  {{currenTaccount.unitsAccoubt}}\n                    {{symbolUnit.units | getCoinShowName(coinList)}}\n                </span>\n                <span class=\"lovText\">{{currenTaccount.symbolAccoubt}}\n                      {{symbolUnit.symbol | getCoinShowName(coinList)}}\n                </span>\n              </p>\n            <!-- 价格区间 -->\n            <p style=\"lineHeight: 16px;\">{{$t('gridTrade.setText2')}}: </p>\n            <div class=\"input-inline-box clearfix\">\n              <div class=\"input-inline-item\">\n                <grid-trade-input\n                  v-model=\"gridSetMin.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridSetMin\"\n                  :fixValue='fixValue.priceFix'\n                  :placeText=\"$t('gridTrade.setText3')\"\n                  :datas=\"gridSetMin\"/>\n              </div>\n              <b class=\"a-3-bd\"></b>\n              <div class=\"input-inline-item\">\n                <grid-trade-input\n                  v-model=\"gridSetMax.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridSetMax\"\n                  :fixValue='fixValue.priceFix'\n                  :placeText=\"$t('gridTrade.setText4')\"\n                  :datas=\"gridSetMax\"/>\n              </div>\n            </div>\n            <!-- 网格数量 -->\n            <p>{{$t('gridTrade.setText5')}}: </p>\n            <div class=\"input-inline-box clearfix\">\n              <div class=\"input-inline-item\">\n                <grid-trade-input\n                  v-model=\"gridSetNum.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridSetNum\"\n                  :fixValue='fixValue.priceFix'\n                  :placeText=\"'2-100'\"\n                  :datas=\"gridSetNum\"/>\n              </div>\n              <div style=\"width: 28px;\"></div>\n              <div class=\"input-inline-item clearfix set-type\">\n                <div class=\"set-type-btn\"\n                :class=\"setType === 1 ? 'u-8-bd u-8-cl' : 'a-3-bd'\" @click=\"() => this.setType = 1\">\n                  <!-- 等差网格 -->\n                  {{$t('gridTrade.setText6')}}\n                </div>\n                <div class=\"set-type-btn\"\n                :class=\"setType === 2 ? 'u-8-bd u-8-cl' : 'a-3-bd'\" @click=\"() => this.setType = 2\">\n                  <!-- 等比网格 -->\n                  {{$t('gridTrade.setText7')}}\n                </div>\n              </div>\n            </div>\n            <p>\n              <!-- 每格利润 -->\n              {{$t('gridTrade.setText8')}}\n              {{setType === 1 ?\n              `${gridSetMinProfits}%～${gridSetMaxProfits}`\n              : gridSetMaxProfits}}%({{$t('gridTrade.setText9')}})</p>\n            <div class=\"set-num clearfix\">\n              <div class=\"setn-num-list\">\n                <!-- 投入资产 -->\n                <p>{{$t('gridTrade.setText10')}}</p>\n                <grid-trade-input\n                  v-model=\"gridSetAccount.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridSetAccount\"\n                  :fixValue='fixValue.priceFix'\n                  :datas=\"gridSetAccount\"/>\n              </div>\n              <div class=\"setn-num-list\">\n                <!-- 止损价格 -->\n                <p>{{$t('gridTrade.setText12')}}({{$t('gridTrade.optional')}})</p>\n                <grid-trade-input\n                  v-model=\"gridSetMinBalance.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridSetMinBalance\"\n                  :fixValue='fixValue.priceFix'\n                  :datas=\"gridSetMinBalance\"/>\n              </div>\n              <div class=\"setn-num-list\">\n                <!-- 止盈价格 -->\n                <p>{{$t('gridTrade.setText11')}}({{$t('gridTrade.optional')}})</p>\n                <grid-trade-input\n                  v-model=\"gridSetMaxBalance.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridSetMaxBalance\"\n                  :fixValue='fixValue.priceFix'\n                  :datas=\"gridSetMaxBalance\"/>\n              </div>\n            </div>\n            <div class=\"set-btc\">\n              <!-- 使用原有 -->\n                <span>\n                  {{$t('gridTrade.setText13')}} {{symbolUnit.symbol | getCoinShowName(coinList)}}\n                </span>\n                <div class=\"switch-inline\">\n                  <c-switch :value=\"gridSetFormFlag\"\n                  @click=\"() => this.gridSetFormFlag = !this.gridSetFormFlag\"/>\n                </div>\n              </div>\n            <c-button\n              @click=\"gradSub('gradTrad')\"\n              height=\"35px\"\n              width=\"100%\">\n              {{gridbuttosContent.gridButton.text}}\n            </c-button>\n          </div>\n        </div>\n        <div class=\"trade-block\">\n          <div class=\"form-block\">\n            <div class=\"top-mag\">\n              <span class=\"trade-type b-1-cl\">\n                <!-- AI策略： -->\n                {{$t('gridTrade.type2')}}：\n              </span>\n              <span class=\"lov\" v-if=\"lan === 'zh_CN'\">\n                <!-- 可用 -->\n                {{$t('gridTrade.setText1')}}:\n                <span class=\"lovText\">\n                  {{currenTaccount.unitsAccoubt}}\n                </span>\n                <span class=\"mr-text\">\n                  {{symbolUnit.units | getCoinShowName(coinList)}}\n                </span>\n                <span class=\"lovText\">{{currenTaccount.symbolAccoubt}}\n                </span>\n                {{symbolUnit.symbol | getCoinShowName(coinList)}}\n              </span>\n            </div>\n            <p class=\"lov_val\" v-if=\"lan !== 'zh_CN'\">\n                <!-- 可用 -->\n                <span class=\"lovText mr-text\">{{$t('gridTrade.setText1')}}:\n                  {{currenTaccount.unitsAccoubt}}\n                    {{symbolUnit.units | getCoinShowName(coinList)}}\n                </span>\n                <span class=\"lovText\">{{currenTaccount.symbolAccoubt}}\n                      {{symbolUnit.symbol | getCoinShowName(coinList)}}\n                </span>\n              </p>\n            <p class=\"fee_love\">\n              <span>\n                <!-- 价格区间: -->\n                {{$t('gridTrade.setText2')}}:\n              </span>\n              <b></b>\n              <label for=\"\">\n                <b>\n                  <!-- 七日年化收益率 -->\n                  {{$t('gridTrade.aiText1')}}\n                </b>\n                &nbsp;&nbsp;\n                <span class=\"u-1-cl\">\n                  {{sevenDay}} %\n                </span>\n              </label>\n            </p>\n            <div class=\"input-inline-box clearfix\">\n              <div class=\"input-inline-item\">\n                <grid-trade-input\n                  v-model=\"gridAiBlance.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridAiBlance\"\n                  :fixValue='fixValue.priceFix'\n                  :placeholder=\"$t('gridTrade.setText2')\"\n                  :datas=\"gridAiBlance\"/>\n              </div>\n            </div>\n            <!-- 网格数量 -->\n            <p>{{$t('gridTrade.setText5')}}: </p>\n            <div class=\"input-inline-box clearfix\">\n              <div class=\"input-inline-item\">\n                <grid-trade-input\n                  v-model=\"gridAiNum.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridAiNum\"\n                  :fixValue='fixValue.priceFix'\n                  :placeholder=\"$t('gridTrade.setText5')\"\n                  :datas=\"gridAiNum\"/>\n              </div>\n            </div>\n            <!-- 每格利润 {{gridAiMin}}%～{{gridAiMax}}%(已去除手续费) -->\n            <p>{{$t('gridTrade.setText8')}}\n              {{gridAiMin}}%～{{gridAiMax}}%({{$t('gridTrade.setText9')}})</p>\n            <div class=\"set-num clearfix\">\n              <div class=\"setn-num-list\">\n                <!-- 投入资产 -->\n                <p>{{$t('gridTrade.setText10')}}</p>\n                <grid-trade-input\n                  v-model=\"gridAiAccount.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridAiAccount\"\n                  :fixValue='fixValue.priceFix'\n                  :datas=\"gridAiAccount\"/>\n              </div>\n              <div class=\"setn-num-list\">\n                <!-- 止损价格 -->\n                <p>{{$t('gridTrade.setText12')}}({{$t('gridTrade.optional')}})</p>\n                <grid-trade-input\n                  v-model=\"gridAiMinBalance.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridAiMinBalance\"\n                  :fixValue='fixValue.priceFix'\n                  :datas=\"gridAiMinBalance\"/>\n              </div>\n              <div class=\"setn-num-list\">\n                <!-- 止盈价格 -->\n                <p>{{$t('gridTrade.setText11')}}({{$t('gridTrade.optional')}})</p>\n                <grid-trade-input\n                  v-model=\"gridAiMaxBalance.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridAiMaxBalance\"\n                  :fixValue='fixValue.priceFix'\n                  :datas=\"gridAiMaxBalance\"/>\n              </div>\n            </div>\n            <div class=\"set-btc\">\n                <span>\n                  {{$t('gridTrade.setText13')}} {{symbolUnit.symbol | getCoinShowName(coinList)}}\n                </span>\n                <div class=\"switch-inline\">\n                  <c-switch :value=\"gridAiFormFlag\"\n                  @click=\"() => this.gridAiFormFlag = !this.gridAiFormFlag\"/>\n                </div>\n              </div>\n            <c-button\n              @click=\"gradSub('GridAi')\"\n              height=\"35px\"\n              width=\"100%\">\n              {{gridbuttosContent.gridAiButton.text}}\n            </c-button>\n          </div>\n        </div>\n      </template>\n    </div>\n    <div class=\"trade-form\" v-else>\n      <div class=\"trade-block\">\n        <div class=\"form-block\">\n          <div class=\"top-mag\">\n            <span class=\"trade-type\">\n            <!-- 买入 -->\n            {{$t('trade.buy')}}\n            {{symbolUnit.symbol | getCoinShowName(coinList)}}\n          </span>\n            <span class=\"lov b-1-cl\">\n              <c-button type=\"text\" className=\"lovButton\"\n                v-if=\"this.isLogin && currenTaccount.unitsOpen.toString() === '1'\"\n                @click=\"goCz(symbolUnit.units)\">{{ $t('manageFinances.goRecharge') }}</c-button>\n              <span class=\"lovText\">{{currenTaccount.unitsAccoubt}}\n                {{symbolUnit.units | getCoinShowName(coinList)}}\n              </span>\n            </span>\n          </div>\n          <trade-input\n            v-model=\"formData_1.value\"\n            :fixValue = 'fixValue.priceFix'\n            @onChanes = \"onChaneForm\"\n            name=\"formData_1\"\n            :datas=\"formData_1\"/>\n          <trade-input\n            v-model=\"formData_2.value\"\n            :fixValue = 'formData2Fix'\n            @onChanes = \"onChaneForm\"\n            name=\"formData_2\"\n            :datas=\"formData_2\"/>\n          <div class=\"percentage\">\n            <span\n              v-for=\"(item, index) in perArr\"\n              :key=\"index + 'buy'\"\n              :class=\"perBuyClass(item)\"\n              @click=\"setPerNumber('buy', item)\"\n              class=\"per-item\">{{item}}%</span>\n          </div>\n          <div class=\"volume-trade\">\n            <div v-if=\"transactionType === 1\">\n              <!-- 交易额: -->\n              {{$t('trade.dealMoney')}}\n              <span class=\"vol\"\n                    v-if=\"tradeVolumeBuy !== '--'\">\n                    {{tradeVolumeBuy}}\n                    {{symbolUnit.units | getCoinShowName(coinList)}}\n              </span>\n            </div>\n          </div>\n          <c-button\n            :defaultColorClass = 'buttosContent.buyButton.class'\n            :hoverColorClass = 'buttosContent.buyButton.class'\n            :activeColorClass = 'buttosContent.buyButton.class'\n            @click=\"submit('BUY')\"\n            width=\"100%\">\n            {{buttosContent.buyButton.text}}\n          </c-button>\n        </div>\n      </div>\n      <div class=\"trade-block\">\n        <div class=\"form-block\">\n          <div class=\"top-mag\">\n            <span class=\"trade-type\">\n              <!-- 卖出 -->\n              {{$t('trade.sell')}}\n              {{symbolUnit.symbol | getCoinShowName(coinList)}}\n            </span>\n            <span class=\"lov b-1-cl\">\n              <c-button type=\"text\" className=\"lovButton\"\n                v-if=\"this.isLogin && currenTaccount.symbolOpen.toString() === '1'\"\n                @click=\"goCz(symbolUnit.symbol)\">{{ $t('manageFinances.goRecharge') }}</c-button>\n              <span class=\"lovText\">{{currenTaccount.symbolAccoubt}}\n              {{symbolUnit.symbol | getCoinShowName(coinList)}}\n            </span>\n            </span>\n          </div>\n          <trade-input\n            v-model=\"formData_3.value\"\n            @onChanes = \"onChaneForm\"\n            name=\"formData_3\"\n            :fixValue = 'fixValue.priceFix'\n            :datas=\"formData_3\"/>\n          <trade-input\n            v-model=\"formData_4.value\"\n            @onChanes = \"onChaneForm\"\n            name=\"formData_4\"\n            :fixValue = 'fixValue.volumeFix'\n            :datas=\"formData_4\"/>\n          <div class=\"percentage\">\n            <span\n              v-for=\"(item, index) in perArr\"\n              :key=\"index + 'sell'\"\n              @click=\"setPerNumber('sell', item)\"\n              class=\"per-item\"\n              :class=\"perSellClass(item)\">{{item}}%</span>\n          </div>\n          <div class=\"volume-trade\">\n            <div v-if=\"transactionType === 1\" class=\"volume-trade-opt\">\n              <!-- 交易额: -->\n              {{$t('trade.dealMoney')}}\n              <span class=\"vol\"\n                    :class=\"volumeTradeClass(tradeVolumeSell, currenTaccount.symbolAccoubt)\"\n                    v-if=\"tradeVolumeSell !== '--'\">\n                    {{tradeVolumeSell}}\n                    {{symbolUnit.units | getCoinShowName(coinList)}}\n              </span>\n              <!-- 解锁卖出 -->\n             <!--  <c-button v-if=\"showUnlockSell\"\n                @click=\"unlockSell\"\n                type=\"text\" className=\"volume-trade-opt-sell\">\n                解锁卖出\n              </c-button> -->\n            </div>\n          </div>\n          <c-button\n            :defaultColorClass = 'buttosContent.sellButton.class'\n            :hoverColorClass = 'buttosContent.sellButton.class'\n            :activeColorClass = 'buttosContent.sellButton.class'\n            @click=\"submit('SELL')\"\n            width=\"100%\">\n            {{buttosContent.sellButton.text}}\n          </c-button>\n        </div>\n      </div>\n    </div>\n    <!-- 未认证 提示框 -->\n    <c-alert :showFlag=\"isShowDialog\"\n        :buttonText=\"$t('otcRelease.DeCertification')\"\n        :imgMap=\"imgMap\"\n        @close=\"dialogClose\"\n        @confirm=\"gotoAuth\">\n      <div class=\"ts-content-text\">\n        <span v-if=\"tsTexttype === 1\">{{$t('personal.exccAuthForm.text18')}}</span>\n        <span v-else>{{$t('personal.exccAuthForm.text19')}}</span>\n      </div>\n    </c-alert>\n  </div>\n</template>\n<script>\nimport mixin from 'blockchain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/ex-tradeForm/ex-tradeForm';\nimport 'blockchain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/ex-tradeForm/ex-tradeForm.styl';\nimport {\n  myStorage, nul, getCoinShowName, fixD, division, cut,\n} from 'blockchain-ui-privatization/utils';\nimport tradeInput from './tradeInput.vue';\nimport GridTradeInput from './GridTradeInput.vue';\n\nexport default {\n  mixins: [mixin],\n  components: {\n    tradeInput,\n    GridTradeInput,\n  },\n  mounted() {\n    this.init();\n  },\n  // 组价离开前执行\n  beforeDestroy() {\n    clearInterval(this.assetsInter);\n  },\n  data() {\n    return {\n      marketData: [],\n      gridType: 1, // 专业版选择自定义或者ai\n      setType: 1, // 类型1等差2 等比\n      gridSetFormFlag: false,\n      gridAiFormFlag: false,\n      minimumOrderQuantity: 0, // 最小下单金额\n      // 七日年化收益率\n      sevenDay: '--',\n      gridAiMin: '--', // 最大利润率\n      gridAiMax: '--', // 最小利润率\n      gridAiMinPrice: '--', // Ai 最小值\n      gridAiMaxPrice: '--', // Ai 最大值\n      fee: null, // 手续费\n      // set代表自定义\n      gridSetMin: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridSetMax: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      // 数量\n      gridSetNum: {\n        units: '',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      // 资产\n      gridSetAccount: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 63%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      // 止盈价格\n      gridSetMaxBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 63%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      // 止损价格\n      gridSetMinBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 63%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiBlance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: true,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiNum: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: true,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiAccount: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 63%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiMaxBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 63%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiMinBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 63%',\n        errorHeight: '-30px',\n        value: '',\n      },\n    };\n  },\n  computed: {\n    lan() {\n      return this.$store.state.baseData.lan;\n    },\n    //  是否开启了 网格\n    gridTradeFlag() {\n      const { publicInfo } = this.$store.state.baseData;\n      let str = 0;\n      if (publicInfo && publicInfo.switch && publicInfo.switch.grid_trade_switch) {\n        str = Number(publicInfo.switch.grid_trade_switch);\n      }\n      return str;\n    },\n    // 该币对是否开启网格\n    showGridFlag() {\n      let flag = false;\n      if (this.symbolAll && this.symbolCurrent) {\n        const symbol = this.symbolAll[this.symbolCurrent];\n\n        if (symbol && symbol.is_grid_open) {\n          flag = true;\n        }\n      }\n      return flag;\n    },\n    // 按钮信息\n    gridbuttosContent() {\n      return {\n        gridButton: {\n          // 开启网格交易\n          text: this.isLogin\n            ? this.$t('gridTrade.btn1')\n            : this.$t('trade.loginReg'), // '登录/注册',\n          class: this.isLogin ? 'u-1-bg buyBtn u-16-cl' : 'u-8-bg buyBtn u-16-cl',\n        },\n        // 开启AI网格策略\n        gridAiButton: {\n          text: this.isLogin\n            ? this.$t('gridTrade.btn2')\n            : this.$t('trade.loginReg'), // '登录/注册',\n          class: this.isLogin ? 'u-1-bg buyBtn u-16-cl' : 'u-8-bg buyBtn u-16-cl',\n        },\n      };\n    },\n    // 等差网格（动态利润）： min ~ max\n\n    // max =（（最高价-最低价）/ （网格数量 - 1）/ 最低价）  - 买入手续费率 - 卖出手续费率\n\n    // min =（ (最高价-最低价）/ （网格数量 - 1））/ （最高价 - （ (最高价-最低价）/ （网格数量 - 1）））  - 买入手续费率 - 卖出手续费率\n\n    // 最低利润\n    gridSetMinProfits() {\n      // 1: 等差 2 等比\n      let val = null;\n      if (this.gridSetMax.value\n        && this.gridSetMin.value\n        && this.gridSetNum.value) {\n        if (this.setType === 1) {\n          const card = division(\n            cut(this.gridSetMax.value, this.gridSetMin.value),\n            (this.gridSetNum.value - 1),\n          );\n          val = nul(cut(\n            cut(\n              division(\n                card,\n                cut(\n                  this.gridSetMax.value,\n                  card,\n                ),\n              ),\n              this.fee,\n            ),\n            this.fee,\n          ), 100);\n        }\n      }\n      if (val === Infinity || val === -Infinity) {\n        val = null;\n      }\n      return fixD(val, 2) || '--';\n    },\n    // 最高利润\n    gridSetMaxProfits() {\n      // 1: 等差 2 等比\n      let val = null;\n      if (this.gridSetMax.value\n        && this.gridSetMin.value\n        && this.gridSetNum.value) {\n        if (this.setType === 1) {\n          val = nul(cut(\n            cut(\n              division(\n                division(\n                  cut(this.gridSetMax.value, this.gridSetMin.value),\n                  (this.gridSetNum.value - 1),\n                ), this.gridSetMin.value,\n              ),\n              this.fee,\n            ),\n            this.fee,\n          ), 100);\n          // 等比网格（固定利润）=（（最高价/最低价）开（网格数量-1）次方） - 手续费率*2-1\n        } else if (this.setType === 2) {\n          val = nul(cut(\n            cut(\n              division(\n                this.gridSetMax.value,\n                this.gridSetMin.value,\n              )\n                ** (1 / (this.gridSetNum.value - 1)),\n              nul(this.fee, 2),\n            ),\n            1,\n          ), 100);\n        }\n      }\n      if (val === Infinity || val === -Infinity) {\n        val = null;\n      }\n      return fixD(val, 2) || '--';\n    },\n    setNumVal() {\n      return this.gridSetNum.value;\n    },\n    symbolsData() {\n      if (this.marketData[this.symbolCurrent]) {\n        return this.marketData[this.symbolCurrent];\n      }\n      return {\n        name: '--',\n        symbol: {\n          symbol: '--',\n          unit: '--',\n        },\n        close: {\n          class: '',\n          data: 0,\n          price: '--',\n        },\n        amount: '--',\n        rose: {\n          class: '',\n          data: '--',\n        },\n      };\n    },\n  },\n  watch: {\n    // 切换自定义和ai\n    gridType() {\n      this.clearGridValue();\n      this.getAiData();\n    },\n    // 切换 限价交易 和 市价交易\n    transactionType(val) {\n      // 2 市价交易\n      this.$bus.$emit('tradeType', false);\n      if (val === 2) {\n        this.formData_1.disabled = true;\n        this.formData_1.disabledText = this.$t('trade.mPriceBuy'); // 以市场最优价买入\n        this.formData_2.title = this.$t('trade.dealMoney'); // '交易额';\n        this.formData_2.units = this.symbolUnit.units;\n        this.formData_3.disabled = true;\n        this.formData_3.disabledText = this.$t('trade.mPriceSell'); // 以市场最优价卖出\n      } else if (val === 1) {\n        this.formData_1.disabled = false;\n        this.formData_1.disabledText = '';\n        this.formData_2.title = this.$t('trade.number'); // '数量';\n        this.formData_2.units = this.symbolUnit.symbol;\n        this.formData_3.disabled = false;\n        this.formData_3.disabledText = '';\n      } else if (val === 4) {\n        this.clearGridValue();\n        this.getAiData();\n        // 改变父组件样式\n        this.$bus.$emit('tradeType', 'grid');\n      }\n    },\n    setNumVal(v) {\n      if (v) {\n        this.$nextTick(() => {\n          this.gridSetNum.value = fixD(v, 0);\n        });\n      }\n    },\n    // 各个输入框的 单位\n    symbolUnit(val) {\n      this.formData_1.units = this.getShowName(val.units);\n      this.formData_2.units = this.getShowName(val.symbol);\n      this.formData_3.units = this.getShowName(val.units);\n      this.formData_4.units = this.getShowName(val.symbol);\n      this.gridSetMin.units = this.getShowName(val.units);\n      this.gridSetMax.units = this.getShowName(val.units);\n      this.gridSetAccount.units = this.getShowName(val.units);\n      this.gridSetMaxBalance.units = this.getShowName(val.units);\n      this.gridSetMinBalance.units = this.getShowName(val.units);\n      this.gridAiAccount.units = this.getShowName(val.units);\n      this.gridAiMaxBalance.units = this.getShowName(val.units);\n      this.gridAiMinBalance.units = this.getShowName(val.units);\n    },\n  },\n  methods: {\n    init() {\n      // 两秒让报错消失\n      this.$bus.$on('errorMsg', () => {\n        const formKey = [\n          'gridAiAccount',\n          'gridAiMaxBalance',\n          'gridAiMinBalance',\n          'gridAiNum',\n          'gridSetMin',\n          'gridSetMax',\n          'gridSetNum',\n          'gridSetAccount',\n          'gridSetMaxBalance',\n          'gridSetMinBalance',\n        ];\n        formKey.forEach((item) => {\n          this[item].isError = false;\n        });\n      });\n      // 监听 当前货币对切换\n      this.$bus.$on('SYMBOL_CURRENT', (val) => {\n        this.clearValue();\n        this.clearGridValue();\n        this.symbolCurrent = val;\n        if (this.transactionType === 3) {\n          this.transactionType = 1;\n        }\n        if (this.transactionType === 4 && this.showGridFlag && this.gridTradeFlag) {\n          this.getAiData();\n        } else if (this.transactionType === 4 && (!this.showGridFlag || !this.gridTradeFlag)) {\n          this.transactionType = 1;\n        }\n      });\n      if (this.isLogin) {\n        this.$store.dispatch('assetsExchangeData', {\n          auto: false,\n          coinSymbols: this.coinSymbols,\n        });\n        // clearInterval(this.assetsInter);\n        // this.assetsInter = setInterval(() => {\n        //   this.$store.dispatch('assetsExchangeData', {\n        //     auto: true,\n        //     coinSymbols: this.symbolUnit.symbol,\n        //   });\n        // }, 10000);\n      }\n      // 监听 市场（最新价格） 数据\n      this.$bus.$on('MARKET_DATA', (data) => {\n        this.marketData = JSON.parse(JSON.stringify(data));\n      });\n      // 监听 价格点击\n      this.$bus.$on('HANDEL_PRICE', (data) => {\n        if (data) {\n        // const obj = {name: 'formData_1', data };\n          const arr = ['formData_1', 'formData_3'];\n          arr.forEach((item) => {\n            this.onChaneForm({ name: item, value: data });\n          });\n        // onChaneForm\n        // this.formData_1.value = data;\n        // this.formData_3.value = data;\n        }\n      });\n    },\n    switchGrid() {\n      this.clearValue();\n      this.transactionType = 4;\n    },\n    gradSub(type) {\n      if (!this.isLogin) {\n        this.$router.push('/login');\n      } else {\n        const {\n          formKey,\n          lowestPrice,\n          highestPrice,\n          gridNumber,\n          totalQuoteAmount,\n          stopHighPrice,\n          stopLowPrice,\n          quantType,\n          flag,\n          useOwnBase,\n          totalBaseAmount,\n          gridLineType,\n        } = this.submitGridFormKey(type);\n        let fal = true;\n        if (formKey.length) {\n          formKey.forEach((item) => {\n            const { value } = this[item];\n            if (!value) {\n              this[item].errorText = `${this.$t('trade.pleaseInput')}`;\n              this[item].isError = true;\n              fal = false;\n            }\n            if (parseFloat(value) <= 0) {\n              this[item].errorHeight = '-30px';\n              this[item].errorText = `${this.$t('trade.inputError')}`; // 输入有误\n              this[item].isError = true;\n              fal = false;\n            }\n          });\n          if (this.fal && fal && flag) {\n            // 单格利润过小，请重新设置ai\n            if (type !== 'gradTrad') {\n              // 判断投入资金是否有足够余额，如无，则提示：USDT余额不足\n              if (Number(totalQuoteAmount) > Number(this.currenTaccount.unitsAccoubt)) {\n                this.$bus.$emit('tip', { text: `${getCoinShowName(this.symbolUnit.units, this.coinList)} ${this.$t('gridTrade.error3')}` });\n                fal = false;\n                return;\n              } if (// 总投入资金/网格数量，不能小于当前币对的最小下单金额\n                division(Number(totalQuoteAmount), gridNumber) < Number(this.minimumOrderQuantity)\n              ) {\n                this.$bus.$emit('tip', { text: this.$t('gridTrade.error4') });\n                fal = false;\n                return;\n              } if (this.gridAiMax === '--' || this.gridAiMax <= 0 || this.gridAiMin === '--' || this.gridAiMin <= 0) {\n                fal = false;\n                this.$bus.$emit('tip', { text: this.$t('gridTrade.error9') });\n                return;\n              }\n            } else if (type === 'gradTrad') { // 单格利润过小，请重新设置自定义\n              // 判断投入资金是否有足够余额，如无，则提示：USDT余额不足\n              if (Number(totalQuoteAmount) > Number(this.currenTaccount.unitsAccoubt)) {\n                this.$bus.$emit('tip', { text: `${getCoinShowName(this.symbolUnit.units, this.coinList)} ${this.$t('gridTrade.error3')}` });\n                fal = false;\n                return;\n                // 总投入资金/网格数量，不能小于当前币对的最小下单金额\n              } if (division(Number(totalQuoteAmount), gridNumber)\n              < Number(this.minimumOrderQuantity)) {\n                this.$bus.$emit('tip', { text: this.$t('gridTrade.error4') });\n                // 每格投入资金小于当前币对的最小下单金额\n                fal = false;\n                return;\n              } if (gridLineType === 1) { // 等差\n                if (this.gridSetMinProfits === '--' || this.gridSetMinProfits <= 0 || this.gridSetMaxProfits === '--' || this.gridSetMaxProfits <= 0) {\n                  this.$bus.$emit('tip', { text: this.$t('gridTrade.error9') });\n                  fal = false;\n                  return;\n                }\n              } else if (gridLineType === 2) { // 等比只校验最大\n                if (this.gridSetMaxProfits === '--' || this.gridSetMaxProfits <= 0) {\n                  this.$bus.$emit('tip', { text: this.$t('gridTrade.error9') });\n                  fal = false;\n                  return;\n                }\n              }\n            }\n            if (Number(stopHighPrice) && Number(stopHighPrice) <= Number(highestPrice)) {\n              // 止盈价格必须高于网格最高价\n              this.$bus.$emit('tip', { text: this.$t('gridTrade.error5') });\n              fal = false;\n            } else if (Number(stopHighPrice)\n              && Number(stopHighPrice) <= Number(this.symbolsData.close.data)) {\n              this.$bus.$emit('tip', { text: this.$t('gridTrade.error7') });\n              fal = false;\n            } else if (Number(stopLowPrice)\n              && Number(stopLowPrice) >= Number(lowestPrice)) {\n              // 止损价格必须低于网格最低价\n              this.$bus.$emit('tip', { text: this.$t('gridTrade.error6') });\n              fal = false;\n            } else if (Number(stopLowPrice)\n              && Number(stopLowPrice) >= Number(this.symbolsData.close.data)) {\n              this.$bus.$emit('tip', { text: this.$t('gridTrade.error8') });\n              fal = false;\n            }\n          }\n          if (this.fal && fal && flag) {\n            this.fal = false;\n            const submitData = {\n              symbol: this.symbolCurrent,\n              lowestPrice,\n              highestPrice,\n              gridNumber,\n              totalQuoteAmount,\n              stopHighPrice,\n              stopLowPrice,\n              quantType,\n              useOwnBase,\n              totalBaseAmount,\n              gridLineType, // 网格类型 1:等差 2:等比\n              fee: this.fee,\n            };\n            if (useOwnBase) {\n              submitData.currentPrice = this.symbolsData.close.data;\n              if (submitData.currentPrice) {\n                this.gridCancelEvent(submitData);\n              }\n            } else {\n              this.gridSubData(submitData);\n            }\n          }\n        }\n      }\n    },\n    submitGridFormKey(type) {\n      let formKey = [];\n      let lowestPrice = null;\n      let highestPrice = null;\n      let gridNumber = null;\n      let totalQuoteAmount = null;\n      let stopHighPrice = null;\n      let stopLowPrice = null;\n      let quantType = null;\n      let flag = true;\n      let gridLineType = 1;\n      let useOwnBase = 0;\n      const BoxHeight = document.body.clientWidth;\n      if (type === 'gradTrad') {\n        this.gridSetAccount.errorHeight = '-30px';\n        formKey = ['gridSetMin', 'gridSetMax', 'gridSetNum', 'gridSetAccount'];\n        lowestPrice = fixD(this.gridSetMin.value, this.fixValue.priceFix);\n        highestPrice = fixD(this.gridSetMax.value, this.fixValue.priceFix);\n        gridNumber = fixD(this.gridSetNum.value, this.fixValue.volumeFix);\n        totalQuoteAmount = fixD(this.gridSetAccount.value, this.fixValue.priceFix);\n        stopHighPrice = this.gridSetMaxBalance.value\n          ? fixD(this.gridSetMaxBalance.value, this.fixValue.priceFix) : 0;\n        stopLowPrice = this.gridSetMinBalance.value\n          ? fixD(this.gridSetMinBalance.value, this.fixValue.priceFix) : 0;\n        quantType = 1; // 网格\n        gridLineType = this.setType;\n        useOwnBase = this.gridSetFormFlag ? 1 : 0;\n\n        // 判断最高价不能低于最低价的1.02倍。如低于，则提示：价格区间过小，请重新设置\n        if (Number(highestPrice) < nul(lowestPrice, 1.02)) {\n          this.gridSetMax.isError = true;\n          // 价格区间过小，请重新设置\n          if (BoxHeight < 1325) {\n            this.gridSetMax.errorHeight = '-40px';\n          }\n          this.gridSetMax.errorText = this.$t('gridTrade.error1');\n          flag = false;\n        }\n        if (Number(gridNumber) < 2 || Number(gridNumber) > 100) {\n          this.gridSetNum.isError = true;\n          // 数量区间为：2-100\n          this.gridSetNum.errorText = this.$t('gridTrade.error2');\n          flag = false;\n        }\n      } else {\n        this.gridAiAccount.errorHeight = '-30px';\n        formKey = ['gridAiAccount'];\n        lowestPrice = this.gridAiMinPrice;\n        highestPrice = this.gridAiMaxPrice;\n        gridNumber = this.gridAiNum.value;\n        totalQuoteAmount = fixD(this.gridAiAccount.value, this.fixValue.priceFix);\n        stopHighPrice = this.gridAiMaxBalance.value\n          ? fixD(this.gridAiMaxBalance.value, this.fixValue.priceFix) : 0;\n        stopLowPrice = this.gridAiMinBalance.value\n          ? fixD(this.gridAiMinBalance.value, this.fixValue.priceFix) : 0;\n        quantType = 1; // 网格\n        gridLineType = 1;\n        useOwnBase = this.gridAiFormFlag ? 1 : 0; // 是否使用Base资产 0:不使用 1:使用\n        // 单格利润过小，请重新设置\n        // 判断最高价不能低于最低价的1.02倍。如低于，则提示：价格区间过小，请重新设置\n        if (Number(highestPrice) < nul(lowestPrice, 1.02)) {\n          this.gridAiMaxPrice.isError = true;\n          if (BoxHeight < 1325) {\n            this.gridAiMaxPrice.errorHeight = '-40px';\n          }\n          // 价格区间过小，请重新设置\n          this.gridAiMaxPrice.errorText = this.$t('gridTrade.error1');\n          flag = false;\n        }\n\n        if (Number(gridNumber) < 2 || Number(gridNumber) > 100) {\n          this.gridAiNum.isError = true;\n          this.gridAiNum.errorText = this.$t('gridTrade.error2');\n          flag = false;\n        }\n      }\n      return {\n        formKey,\n        lowestPrice,\n        highestPrice,\n        gridNumber,\n        totalQuoteAmount,\n        stopHighPrice,\n        stopLowPrice,\n        quantType,\n        flag,\n        useOwnBase,\n        totalBaseAmount: useOwnBase ? this.currenTaccount.symbolAccoubt : 0,\n        gridLineType,\n      };\n    },\n    getShowName(v) {\n      let str = '';\n      const showNameMarket = this.$store.state.baseData.market;\n      if (showNameMarket) {\n        const { coinList } = showNameMarket;\n        str = getCoinShowName(v, coinList);\n      }\n      return str;\n    },\n    // 清空 表单数据\n    clearGridValue() {\n      const formKey = [\n        'gridAiAccount',\n        'gridAiMaxBalance',\n        'gridAiMinBalance',\n        'gridAiNum',\n        'gridSetMin',\n        'gridSetMax',\n        'gridSetNum',\n        'gridSetAccount',\n        'gridSetMaxBalance',\n        'gridSetMinBalance',\n      ];\n      formKey.forEach((item) => {\n        this[item].value = '';\n        this[item].isError = false;\n        this[item].subText = null;\n      });\n    },\n    // 请求ai数据\n    getAiData() {\n      this.axios({\n        url: 'noToken/quant/getAIStrategyInfo',\n        hostType: 'quant',\n        params: {\n          symbol: this.symbolCurrent,\n        },\n        method: 'post',\n      }).then((data) => {\n        if (data.code.toString() === '0') {\n          if (data.data && data.data.configParamMap) {\n            this.gridAiMinPrice = fixD(\n              data.data.configParamMap.lowestPrice, this.fixValue.priceFix,\n            );\n            this.gridAiMaxPrice = fixD(\n              data.data.configParamMap.highestPrice, this.fixValue.priceFix,\n            );\n            this.gridAiBlance.disabledText = `${this.gridAiMinPrice} ~ ${this.gridAiMaxPrice}`;\n            this.gridAiNum.disabledText = fixD(data.data.configParamMap.gridNumber, 0);\n            this.gridAiNum.value = fixD(data.data.configParamMap.gridNumber, 0);\n            this.gridAiMin = fixD(data.data.everyProfitMin, 2);\n            this.gridAiMax = fixD(data.data.everyProfitMax, 2);\n            this.fee = data.data.makerFee;\n            // 最小下单数量\n            this.minimumOrderQuantity = data.data.minimumOrderQuantity;\n            this.sevenDay = fixD(data.data.sevenAnnualizedYield, 2); // 7日年华收益\n          }\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n        }\n      });\n    },\n    // 给服务端传参数和当前行情用于判断是否够每格消耗\n    gridCancelEvent(params) {\n      this.axios({\n        url: 'quant/calBaseAmount',\n        hostType: 'quant',\n        method: 'post',\n        params,\n      }).then((req) => {\n        if (req.code.toString() === '0' && req.data) {\n          if (Number(req.data.baseAmount) > Number(this.currenTaccount.symbolAccoubt)) {\n            this.$bus.$emit('tip', {\n              text: `${this.$t('gridTrade.least')}${req.data.baseAmount}\n            ${getCoinShowName(this.symbolUnit.symbol, this.coinList)}`,\n              type: 'error',\n            });\n            this.fal = true;\n          } else {\n            const obj = { ...params, totalBaseAmount: Number(req.data.baseAmount) };\n            this.gridSubData(obj);\n          }\n        } else {\n          this.$bus.$emit('tip', { text: req.msg, type: 'error' });\n          this.fal = true;\n        }\n      });\n    },\n    gridSubData(params) {\n      this.axios({\n        url: 'quant/saveStrategy',\n        hostType: 'quant',\n        params,\n        method: 'post',\n      }).then((data) => {\n        if (data.code.toString() === '0') {\n          // 清空表单\n          this.clearGridValue();\n          // 重新请求资产\n          this.$store.dispatch('assetsExchangeData', {\n            auto: false,\n            coinSymbols: this.coinSymbols,\n          });\n          this.getAiData();\n          // 发送下单成功的事件\n          this.$bus.$emit('ORDER_CREATE', { type: 'success' });\n          // 提示成功 下单成功\n          this.$bus.$emit('tip', { text: this.$t('trade.dealCussess'), type: 'success' });\n          this.fal = true;\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n          this.fal = true;\n        }\n      }).catch(() => {\n        this.fal = true;\n      });\n    },\n    dialogClose() {\n      this.isShowDialog = false;\n    },\n  },\n};\n\n</script>\n\n<style lang=\"stylus\">\n.page-content-chain .tradeModel-exchange .title-block {\n  height: 29px!important;\n  line-height: 29px!important;\n  .tab {\n    height: 28px!important;\n  }\n  .total-assets {\n    height 28px;\n  }\n}\n.trade-box.trade-box-ex-container .trade_block_width {\n  width 100%;\n  .trade-input.trade-grid {\n    margin-top 6px;\n  }\n}\n\n.trade-box.trade-box-ex-container .trade-form .top-mag-line {\n  height: 40px;\n  line-height: 40px;\n  .lov {\n    line-height: 40px;\n  }\n}\n.trade-box.trade-box-ex-container .trade-form .volume-trade-line {\n      height: 44px;\n    line-height: 44px;\n}\n\n.trade-box p {\n  margin-bottom 0;\n}\n.trade-box .lov_val {\n  margin-bottom: 10px;\n}\n.trade-box label {\n  margin-bottom 0;\n}\n.set_grid_type {\n  height 30px;\n  font-size 12px;\n  line-height 30px;\n  padding 0 30px;\n  margin-bottom 10px;\n  >span {\n    margin-right 30px;\n    float left;\n    cursor: pointer;\n  }\n  p {\n    float right;\n  }\n}\n  .mr-text {\n    margin-right 10px;\n  }\n  .trade-box.trade-box-ex-container .trade-grid .top-mag .lov {\n    display: flex;\n    align-items: center;\n    height: 42px;\n    line-height: 16px;\n    justify-content: center;\n  }\n  .trade-box.trade-box-ex-container .trade-grid .top-mag .lov .lovText {\n    vertical-align: middle;\n    line-height: 16px;\n    display: inline-block;\n    word-wrap: break-word;\n  }\n  .trade-box.trade-box-ex-container .trade-grid .top-mag {\n    height: 42px;\n    line-height: 42px;\n  }\n  .input-inline-box {\n    display flex;\n    align-items: center;\n    justify-content space-between;\n    .input-inline-item {\n      flex 1;\n    }\n    >b {\n      display inline-block;\n      width 10px;\n      margin 0 9px;\n      border-bottom-width 2px;\n      border-bottom-style solid;\n      position relative;\n      top -2px;\n    }\n  }\n  .set-type {\n    margin-bottom: 6px;\n  }\n  .set-type-btn {\n    cursor pointer;\n    height 35px;\n    display inline-block;\n    width 45%;\n    border-radius: 2px;\n    border-width: 1px;\n    border-style: solid;\n    margin-right 5%;\n    box-sizing border-box;\n    float left;\n    line-height 35px;\n    text-align center;\n  }\n  .set-type-btn:nth-child(2) {\n    float right;\n    margin-right 0;\n  }\n  .set-num {\n    margin-top 14px;\n    .setn-num-list {\n      width 33.33%;\n      float left;\n      padding-right 10px;\n      box-sizing: border-box;\n      .trade-input.trade-input-china-container .input-item {\n        padding 8px 10px 0 15px;\n        .inputs {\n          width 62%;\n        }\n        .units {\n          right 10px;\n        }\n      }\n    }\n    .setn-num-list:last-child {\n      padding-right 0;\n    }\n  }\n  .set-btc {\n    margin-bottom 10px;\n  }\n  .switch-inline {\n    margin-left 40px;\n    display inline-block;\n    vertical-align: middle;\n  }\n  .fee_love {\n    display flex;\n    justify-content space-between;\n    align-items center;\n    width: 100%;\n    label {\n      display: flex;\n      align-items: center;\n      >span {\n        font-size: 16px;\n        line-height 16px;\n      }\n    }\n  }\n  .en_US .trade-box.trade-box-ex-container .trade-grid .top-mag {\n    margin-bottom 2px;\n  }\n</style>\n"]}]}