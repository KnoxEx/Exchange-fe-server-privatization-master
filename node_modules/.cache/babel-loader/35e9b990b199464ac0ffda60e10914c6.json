{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/Downloads/blockchain-ui-privatization/utils/calculateVolume.js","dependencies":[{"path":"/Users/h/Downloads/blockchain-ui-privatization/utils/calculateVolume.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// 计算 可买可买\n// 加 减 乘 除\nimport { nul, division } from \"./math\"; // @ canUseAmount  可用\n// @ nowLevel  当前合约杠杆\n// @ price  输入的限价\n// @ triggerPrice  条件单的触发价\n// @ marginRate  保证金汇率\n// @ multiplier  合约面值\n// @ activeCanClose  可平数量(对象，可凭多、可凭空)\n// @ coUnitType  数量单位类型 1:标的货币, 2:张\n// @ currentCategory  订单类型(1限价、2市价 、3条件单)\n// @ isMarket  是否条件单市价\n// @ zhiJianCang  是否只减仓\n// @ contractSide  合约方向（1正向、0反向）\n// @ transactionType 双向持仓中的 1开仓 2 平仓\n// @ activeNewPrice  当前合约平均价\n// @ volume 张数或者市价的开仓价值\n\nvar calculateVolume = function calculateVolume(type, data) {\n  // console.log(type, data);\n  var canUseAmount = data.canUseAmount,\n      nowLevel = data.nowLevel,\n      price = data.price,\n      triggerPrice = data.triggerPrice,\n      marginRate = data.marginRate,\n      multiplier = data.multiplier,\n      activeCanClose = data.activeCanClose,\n      coUnitType = data.coUnitType,\n      currentCategory = data.currentCategory,\n      isMarket = data.isMarket,\n      zhiJianCang = data.zhiJianCang,\n      contractSide = data.contractSide,\n      transactionType = data.transactionType,\n      activeNewPrice = data.activeNewPrice,\n      volume = data.volume;\n  var number = 0; // 成本\n\n  if (type === 'cost') {\n    // 平仓 || 只减仓 （仓位价值）\n    if (transactionType === 2 || zhiJianCang) return 0; // 限价单 or 条件限价单 （数量）\n\n    if (currentCategory === 1 || currentCategory === 3 && !isMarket) {\n      if (!price) return 0; // 反向 = 张数 * 面值 / 限价 / 杠杆 * 保证金汇率\n\n      number = nul(division(division(nul(volume, multiplier), price), nowLevel), marginRate); // 正向 | 张数 * 面值 * 限价 / 杠杆 * 保证金汇率\n\n      if (contractSide === 1) {\n        number = nul(division(nul(nul(volume, multiplier), price), nowLevel), marginRate);\n      }\n\n      return number;\n    } // 市价单 or 添加市价单\n\n\n    if (currentCategory === 2 || currentCategory === 3 && isMarket) {\n      // 反向 | 正向 = 开仓价值 / 杠杆 8 保证金汇率\n      number = nul(division(volume, nowLevel), marginRate);\n      return number;\n    }\n\n    return number;\n  } // 买入卖出\n  // 平仓 || 只减仓\n\n\n  if (transactionType === 2 || zhiJianCang) {\n    // 张\n    var canClose = 0;\n    var sT = type === 'SELL' ? 'BUY' : 'SELL';\n\n    if (activeCanClose && activeCanClose[sT]) {\n      canClose = activeCanClose[sT];\n    }\n\n    if (coUnitType === 2) {\n      number = canClose;\n    } else {\n      number = nul(canClose, multiplier);\n    }\n\n    return number;\n  } // 开仓、非只减仓\n\n\n  if (!canUseAmount) return 0; // 限价单 or 条件限价单\n\n  if (currentCategory === 1 || currentCategory === 3 && !isMarket) {\n    if (!price) return 0; // 反向 = 可用 * 杠杆 * 限价 / 保证金汇率\n\n    var N1 = division(nul(nul(canUseAmount, nowLevel), price), marginRate);\n\n    if (contractSide === 1) {\n      // 正向 = 可用 * 杠杆 / 限价 * 保证金汇率\n      N1 = division(division(nul(canUseAmount, nowLevel), price), marginRate);\n    } // 1标的货币：N1 | 张：N1 / 面值\n\n\n    number = coUnitType === 1 ? N1 : division(N1, multiplier);\n    return number;\n  } // 市价\n\n\n  if (currentCategory === 2) {\n    if (!activeNewPrice) return 0; // 反向 = 可用 / 保证金汇率 * 杠杆 * 本交易所最新价格\n\n    var N2 = nul(nul(division(canUseAmount, marginRate), nowLevel), activeNewPrice); // 正向 = 可用 / 保证金汇率 * 杠杆 / 本交易所最新价格\n\n    if (contractSide === 1) {\n      N2 = division(nul(division(canUseAmount, marginRate), nowLevel), activeNewPrice);\n    } // 1标的货币：N2 | 张：N2 / 面值\n\n\n    number = coUnitType === 1 ? N2 : division(N2, multiplier);\n    return number;\n  } // 条件单市价\n\n\n  if (currentCategory === 3 && isMarket) {\n    if (!triggerPrice) return 0; // 反向 = 可用 / 保证金汇率 * 杠杆 * 触发价\n\n    var N3 = nul(nul(division(canUseAmount, marginRate), nowLevel), triggerPrice); // 正向 = 可用 / 保证金汇率 * 杠杆 / 本交易所最新价格\n\n    if (contractSide === 1) {\n      N3 = division(nul(division(canUseAmount, marginRate), nowLevel), triggerPrice);\n    } // 1标的货币：N3 | 张：N3 / 面值\n\n\n    number = coUnitType === 1 ? N3 : division(N3, multiplier);\n    return number;\n  }\n\n  return number;\n};\n\nexport default calculateVolume;",{"version":3,"sources":["/Users/h/Downloads/blockchain-ui-privatization/utils/calculateVolume.js"],"names":["nul","division","calculateVolume","type","data","canUseAmount","nowLevel","price","triggerPrice","marginRate","multiplier","activeCanClose","coUnitType","currentCategory","isMarket","zhiJianCang","contractSide","transactionType","activeNewPrice","volume","number","canClose","sT","N1","N2","N3"],"mappings":"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","sourcesContent":["// 计算 可买可买\r\n// 加 减 乘 除\r\nimport { nul, division } from './math';\r\n// @ canUseAmount  可用\r\n// @ nowLevel  当前合约杠杆\r\n// @ price  输入的限价\r\n// @ triggerPrice  条件单的触发价\r\n// @ marginRate  保证金汇率\r\n// @ multiplier  合约面值\r\n// @ activeCanClose  可平数量(对象，可凭多、可凭空)\r\n// @ coUnitType  数量单位类型 1:标的货币, 2:张\r\n// @ currentCategory  订单类型(1限价、2市价 、3条件单)\r\n// @ isMarket  是否条件单市价\r\n// @ zhiJianCang  是否只减仓\r\n// @ contractSide  合约方向（1正向、0反向）\r\n// @ transactionType 双向持仓中的 1开仓 2 平仓\r\n// @ activeNewPrice  当前合约平均价\r\n// @ volume 张数或者市价的开仓价值\r\nconst calculateVolume = (type, data) => {\r\n  // console.log(type, data);\r\n  const {\r\n    canUseAmount,\r\n    nowLevel,\r\n    price,\r\n    triggerPrice,\r\n    marginRate,\r\n    multiplier,\r\n    activeCanClose,\r\n    coUnitType,\r\n    currentCategory,\r\n    isMarket,\r\n    zhiJianCang,\r\n    contractSide,\r\n    transactionType,\r\n    activeNewPrice,\r\n    volume,\r\n  } = data;\r\n  let number = 0;\r\n\r\n  // 成本\r\n  if (type === 'cost') {\r\n    // 平仓 || 只减仓 （仓位价值）\r\n    if (transactionType === 2 || zhiJianCang) return 0;\r\n    // 限价单 or 条件限价单 （数量）\r\n    if (currentCategory === 1 || (currentCategory === 3 && !isMarket)) {\r\n      if (!price) return 0;\r\n      // 反向 = 张数 * 面值 / 限价 / 杠杆 * 保证金汇率\r\n      number = nul(division(division(nul(volume, multiplier), price), nowLevel), marginRate);\r\n      // 正向 | 张数 * 面值 * 限价 / 杠杆 * 保证金汇率\r\n      if (contractSide === 1) {\r\n        number = nul(division(nul(nul(volume, multiplier), price), nowLevel), marginRate);\r\n      }\r\n      return number;\r\n    }\r\n    // 市价单 or 添加市价单\r\n    if (currentCategory === 2 || (currentCategory === 3 && isMarket)) {\r\n      // 反向 | 正向 = 开仓价值 / 杠杆 8 保证金汇率\r\n      number = nul(division(volume, nowLevel), marginRate);\r\n      return number;\r\n    }\r\n    return number;\r\n  }\r\n  // 买入卖出\r\n  // 平仓 || 只减仓\r\n  if (transactionType === 2 || zhiJianCang) {\r\n    // 张\r\n    let canClose = 0;\r\n    const sT = type === 'SELL' ? 'BUY' : 'SELL';\r\n    if (activeCanClose && activeCanClose[sT]) {\r\n      canClose = activeCanClose[sT];\r\n    }\r\n    if (coUnitType === 2) {\r\n      number = canClose;\r\n    } else {\r\n      number = nul(canClose, multiplier);\r\n    }\r\n    return number;\r\n  }\r\n  // 开仓、非只减仓\r\n  if (!canUseAmount) return 0;\r\n  // 限价单 or 条件限价单\r\n  if (currentCategory === 1 || (currentCategory === 3 && !isMarket)) {\r\n    if (!price) return 0;\r\n    // 反向 = 可用 * 杠杆 * 限价 / 保证金汇率\r\n    let N1 = division(nul(nul(canUseAmount, nowLevel), price), marginRate);\r\n    if (contractSide === 1) {\r\n      // 正向 = 可用 * 杠杆 / 限价 * 保证金汇率\r\n      N1 = division(division(nul(canUseAmount, nowLevel), price), marginRate);\r\n    }\r\n    // 1标的货币：N1 | 张：N1 / 面值\r\n    number = coUnitType === 1 ? N1 : division(N1, multiplier);\r\n    return number;\r\n  }\r\n  // 市价\r\n  if (currentCategory === 2) {\r\n    if (!activeNewPrice) return 0;\r\n    // 反向 = 可用 / 保证金汇率 * 杠杆 * 本交易所最新价格\r\n    let N2 = nul(nul(division(canUseAmount, marginRate), nowLevel), activeNewPrice);\r\n    // 正向 = 可用 / 保证金汇率 * 杠杆 / 本交易所最新价格\r\n    if (contractSide === 1) {\r\n      N2 = division(nul(division(canUseAmount, marginRate), nowLevel), activeNewPrice);\r\n    }\r\n    // 1标的货币：N2 | 张：N2 / 面值\r\n    number = coUnitType === 1 ? N2 : division(N2, multiplier);\r\n    return number;\r\n  }\r\n  // 条件单市价\r\n  if (currentCategory === 3 && isMarket) {\r\n    if (!triggerPrice) return 0;\r\n    // 反向 = 可用 / 保证金汇率 * 杠杆 * 触发价\r\n    let N3 = nul(nul(division(canUseAmount, marginRate), nowLevel), triggerPrice);\r\n    // 正向 = 可用 / 保证金汇率 * 杠杆 / 本交易所最新价格\r\n    if (contractSide === 1) {\r\n      N3 = division(nul(division(canUseAmount, marginRate), nowLevel), triggerPrice);\r\n    }\r\n    // 1标的货币：N3 | 张：N3 / 面值\r\n    number = coUnitType === 1 ? N3 : division(N3, multiplier);\r\n    return number;\r\n  }\r\n\r\n  return number;\r\n};\r\n\r\nexport default calculateVolume;\r\n"]}]}