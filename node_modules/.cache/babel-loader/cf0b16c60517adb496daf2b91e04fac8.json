{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/utils/calculateVolume.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/utils/calculateVolume.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// 计算 可买可买\n// 加 减 乘 除\nimport { nul, division } from \"./math\"; // @ canUseAmount  可用\n// @ nowLevel  当前合约杠杆\n// @ price  输入的限价\n// @ triggerPrice  条件单的触发价\n// @ marginRate  保证金汇率\n// @ multiplier  合约面值\n// @ activeCanClose  可平数量(对象，可凭多、可凭空)\n// @ coUnitType  数量单位类型 1:标的货币, 2:张\n// @ currentCategory  订单类型(1限价、2市价 、3条件单)\n// @ isMarket  是否条件单市价\n// @ zhiJianCang  是否只减仓\n// @ contractSide  合约方向（1正向、0反向）\n// @ transactionType 双向持仓中的 1开仓 2 平仓\n// @ activeNewPrice  当前合约平均价\n// @ volume 张数或者市价的开仓价值\n\nvar calculateVolume = function calculateVolume(type, data) {\n  // console.log(type, data);\n  var canUseAmount = data.canUseAmount,\n      nowLevel = data.nowLevel,\n      price = data.price,\n      triggerPrice = data.triggerPrice,\n      marginRate = data.marginRate,\n      multiplier = data.multiplier,\n      activeCanClose = data.activeCanClose,\n      coUnitType = data.coUnitType,\n      currentCategory = data.currentCategory,\n      isMarket = data.isMarket,\n      zhiJianCang = data.zhiJianCang,\n      contractSide = data.contractSide,\n      transactionType = data.transactionType,\n      activeNewPrice = data.activeNewPrice,\n      volume = data.volume;\n  var number = 0; // 成本\n\n  if (type === 'cost') {\n    // 平仓 || 只减仓 （仓位价值）\n    if (transactionType === 2 || zhiJianCang) return 0; // 限价单 or 条件限价单 （数量）\n\n    if (currentCategory === 1 || currentCategory === 3 && !isMarket) {\n      if (!price) return 0; // 反向 = 张数 * 面值 / 限价 / 杠杆 * 保证金汇率\n\n      number = nul(division(division(nul(volume, multiplier), price), nowLevel), marginRate); // 正向 | 张数 * 面值 * 限价 / 杠杆 * 保证金汇率\n\n      if (contractSide === 1) {\n        number = nul(division(nul(nul(volume, multiplier), price), nowLevel), marginRate);\n      }\n\n      return number;\n    } // 市价单 or 添加市价单\n\n\n    if (currentCategory === 2 || currentCategory === 3 && isMarket) {\n      // 反向 | 正向 = 开仓价值 / 杠杆 8 保证金汇率\n      number = nul(division(volume, nowLevel), marginRate);\n      return number;\n    }\n\n    return number;\n  } // 买入卖出\n  // 平仓 || 只减仓\n\n\n  if (transactionType === 2 || zhiJianCang) {\n    // 张\n    var canClose = 0;\n    var sT = type === 'SELL' ? 'BUY' : 'SELL';\n\n    if (activeCanClose && activeCanClose[sT]) {\n      canClose = activeCanClose[sT];\n    }\n\n    if (coUnitType === 2) {\n      number = canClose;\n    } else {\n      number = nul(canClose, multiplier);\n    }\n\n    return number;\n  } // 开仓、非只减仓\n\n\n  if (!canUseAmount) return 0; // 限价单 or 条件限价单\n\n  if (currentCategory === 1 || currentCategory === 3 && !isMarket) {\n    if (!price) return 0; // 反向 = 可用 * 杠杆 * 限价 / 保证金汇率\n\n    var N1 = division(nul(nul(canUseAmount, nowLevel), price), marginRate);\n\n    if (contractSide === 1) {\n      // 正向 = 可用 * 杠杆 / 限价 * 保证金汇率\n      N1 = division(division(nul(canUseAmount, nowLevel), price), marginRate);\n    } // 1标的货币：N1 | 张：N1 / 面值\n\n\n    number = coUnitType === 1 ? N1 : division(N1, multiplier);\n    return number;\n  } // 市价\n\n\n  if (currentCategory === 2) {\n    if (!activeNewPrice) return 0; // 反向 = 可用 / 保证金汇率 * 杠杆 * 本交易所最新价格\n\n    var N2 = nul(nul(division(canUseAmount, marginRate), nowLevel), activeNewPrice); // 正向 = 可用 / 保证金汇率 * 杠杆 / 本交易所最新价格\n\n    if (contractSide === 1) {\n      N2 = division(nul(division(canUseAmount, marginRate), nowLevel), activeNewPrice);\n    } // 1标的货币：N2 | 张：N2 / 面值\n\n\n    number = coUnitType === 1 ? N2 : division(N2, multiplier);\n    return number;\n  } // 条件单市价\n\n\n  if (currentCategory === 3 && isMarket) {\n    if (!triggerPrice) return 0; // 反向 = 可用 / 保证金汇率 * 杠杆 * 触发价\n\n    var N3 = nul(nul(division(canUseAmount, marginRate), nowLevel), triggerPrice); // 正向 = 可用 / 保证金汇率 * 杠杆 / 本交易所最新价格\n\n    if (contractSide === 1) {\n      N3 = division(nul(division(canUseAmount, marginRate), nowLevel), triggerPrice);\n    } // 1标的货币：N3 | 张：N3 / 面值\n\n\n    number = coUnitType === 1 ? N3 : division(N3, multiplier);\n    return number;\n  }\n\n  return number;\n};\n\nexport default calculateVolume;",null]}