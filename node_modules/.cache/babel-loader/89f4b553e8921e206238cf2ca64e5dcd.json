{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/trade/gridDialog/GridTabel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/trade/gridDialog/GridTabel.vue","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/toArray\";\nimport _toConsumableArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getComplexType } from 'BlockChain-ui-privatization/utils';\nexport default {\n  name: 'GridTabel',\n  props: {\n    h5Width: {\n      type: String,\n      default: '800px'\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    // 表头数据列表\n    columns: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    // 表格数据列表\n    dataList: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    // 展开数据\n    subContent: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    // 整个表格根元素的class\n    classes: {\n      type: [String, Array],\n      default: function _default() {\n        return [];\n      }\n    },\n    // 表头class\n    headClasses: {\n      type: [String, Array],\n      default: function _default() {\n        return [];\n      }\n    },\n    // 表内容class\n    bodyClasses: {\n      type: [String, Array],\n      default: function _default() {\n        return [];\n      }\n    },\n    // 表格每一行class\n    lineClasses: {\n      type: [String, Array],\n      default: function _default() {\n        return ['b—3-bd'];\n      }\n    },\n    // 表格每一行的hover class\n    lineClassesHover: {\n      type: [String, Array],\n      default: function _default() {\n        return [];\n      }\n    },\n    // 大于多少条后出现滚动条\n    lineNumber: {\n      type: Number,\n      default: 20\n    },\n    // 表格每一行的高度\n    cellHeight: {\n      type: Number,\n      default: 50\n    },\n    // 表头高度\n    headHeight: {\n      type: Number,\n      default: 30\n    },\n    // sub 表头\n    subColumns: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    // sub 表的自定义class\n    subClass: {\n      type: String,\n      default: ''\n    },\n    subContentId: {\n      type: [Number, String]\n    },\n    subLoading: {\n      type: Boolean,\n      default: false\n    },\n    colorMap: {\n      type: Object,\n      default: function _default() {},\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      // 是否排序\n      isSorte: false,\n      // 排序 使用的Key\n      sorteKey: null,\n      // 排序方向\n      sortType: null,\n      // 表头单元格的宽度\n      cellWidth: [],\n      // sub 显示的 id\n      subPpenId: null,\n      subIsOpen: 0,\n      // 滚动条配置\n      ops: {\n        rail: {\n          gutterOfSide: '0px'\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setCellWidth();\n    this.$bus.$on('WINFOW_ON_RESIIZE', function () {\n      _this.setCellWidth();\n    });\n  },\n  computed: {\n    classBoxStyle: function classBoxStyle() {\n      // const max = window.matchMedia('(max-width:960px)');\n      var str = 'width: 100%;'; // if (max.matches) {\n\n      str += \"min-width: \".concat(this.h5Width); // }\n\n      return str;\n    },\n    // 表格 根目录 class\n    classBox: function classBox() {\n      var cls = this.isType(this.classes) === 'Array' ? _toConsumableArray(this.classes) : this.classes;\n      return ['common-table', 'a-5-bg', cls];\n    },\n    // 表头 class\n    classHead: function classHead() {\n      var cls = this.isType(this.headClasses) === 'Array' ? _toConsumableArray(this.headClasses) : this.headClasses;\n      return ['table-head', 'a-3-bd', cls];\n    },\n    // 表格行 class\n    classLine: function classLine() {\n      var cls = this.isType(this.lineClasses) === 'Array' ? _toConsumableArray(this.lineClasses) : this.lineClasses;\n      return ['a-3-bd', cls];\n    },\n    // 表格 数据列表 设置排序\n    tableDataList: function tableDataList() {\n      if (!this.dataList || !this.dataList.length) return [];\n\n      if (this.isSorte) {\n        return this.sortType === 'down' ? this.quickSort(this.dataList) : this.quickSort(this.dataList).reverse();\n      }\n\n      return this.dataList;\n    },\n    // 获取表头传入的宽\n    columnsWidth: function columnsWidth() {\n      var _this$columns = _toArray(this.columns),\n          columns = _this$columns.slice(0);\n\n      var arr = [];\n      columns.forEach(function (item, i) {\n        var obj = {\n          index: i\n        };\n\n        if (item.width) {\n          obj.width = item.width;\n        }\n\n        if (item.align) {\n          obj['text-align'] = item.align;\n        }\n\n        if (item.styleClass) {\n          obj.styleClass = item.styleClass;\n        }\n\n        arr.push(obj);\n      });\n      return arr;\n    },\n    // 表格内容 高度 超出高度 出现滚动条\n    tableBodyHeight: function tableBodyHeight() {\n      if (this.tableDataList.length <= this.lineNumber) {\n        return false;\n      }\n\n      return {\n        height: \"\".concat(this.lineNumber * this.cellHeight, \"px\")\n      };\n    }\n  },\n  watch: {\n    // 监听表格数据的变化\n    dataList: function dataList(val) {\n      var _this2 = this;\n\n      setTimeout(function () {\n        // 重新设置表头单元格的宽度\n        _this2.setCellWidth();\n      }, 0);\n\n      if (val) {// 设置成默认排序\n        // this.isSorte = false;\n        // 排序 使用的Key\n        // this.sorteKey = null;\n        // 排序方向\n        // this.sortType = null;\n      }\n    }\n  },\n  methods: {\n    isObjectType: function isObjectType(element) {\n      return getComplexType(element) === 'Object';\n    },\n    isObjectTypeJoinClass: function isObjectTypeJoinClass(element) {\n      return this.isObjectType(element) && element.class ? element.class : '';\n    },\n    isObjectTypeJoinStyle: function isObjectTypeJoinStyle(element) {\n      return this.isObjectType(element) && element.style ? element.style : '';\n    },\n    isObjectTypeJoinText: function isObjectTypeJoinText(element) {\n      return this.isObjectType(element) && element.text ? element.text : element;\n    },\n    onChaneForm: function onChaneForm(item, id, val) {\n      var data = {};\n      data[id] = val;\n      this.$emit('elementClick', item.eventType, data);\n    },\n    listMouseOver: function listMouseOver(e) {\n      var colorMap = this.colorMap;\n      e.target.style.backgroundColor = colorMap['a-4-bg'];\n    },\n    listMouseOut: function listMouseOut(e) {\n      e.target.style.backgroundColor = 'transparent';\n    },\n    enter: function enter(index) {\n      this.hoverIndex = index;\n    },\n    leave: function leave() {\n      this.hoverIndex = null;\n    },\n    lineClassesH: function lineClassesH(index) {\n      if (index === this.hoverIndex) {\n        return this.lineClassesHover;\n      }\n\n      return null;\n    },\n    isType: function isType(obj) {\n      var types = Object.prototype.toString.call(obj);\n\n      if (types === '[object Array]') {\n        return 'Array';\n      }\n\n      if (types === '[object Object]') {\n        return 'Object';\n      }\n\n      return 'string';\n    },\n    // 表头文字 居中\n    cellStyleTh: function cellStyleTh(item) {\n      return {\n        'text-align': item.align\n      };\n    },\n    cellStyleClass: function cellStyleClass(index) {\n      if (this.columnsWidth.length) {\n        var obj = {};\n        this.columnsWidth.forEach(function (item) {\n          if (item.index === index && item.styleClass) {\n            obj = item.styleClass;\n          }\n        });\n        return obj;\n      }\n\n      return false;\n    },\n    // 设置 单元格 的宽度\n    cellStyleTd: function cellStyleTd(index) {\n      if (this.columnsWidth.length) {\n        var obj = {};\n        this.columnsWidth.forEach(function (item) {\n          if (item.index === index) {\n            obj = item;\n          }\n        });\n        return obj;\n      }\n\n      return false;\n    },\n    // 设置表头单元格的宽度\n    setCellWidth: function setCellWidth() {\n      var _this3 = this;\n\n      var tdFefsKeys = Object.keys(this.$refs);\n      this.cellWidth = [];\n      tdFefsKeys.forEach(function (item) {\n        if (item.indexOf('td') !== -1) {\n          if (_this3.$refs[item][0]) {\n            _this3.cellWidth.push(_this3.$refs[item][0].offsetWidth);\n          }\n        }\n      });\n    },\n    // 行 点击事件\n    lineClickEvent: function lineClickEvent(item) {\n      this.$emit('lineClick', item);\n    },\n    // 按钮 点击事件\n    elementClickEvent: function elementClickEvent(item, id) {\n      this.$emit('elementClick', item.eventType, id);\n\n      if (item.type === 'link') {\n        this.$router.push(item.links);\n      }\n    },\n    // 点击排序事件\n    sorteChane: function sorteChane(key, asynSorte) {\n      if (asynSorte) {\n        this.isSorte = true;\n        this.sortType = this.sortType === 'down' ? 'up' : 'down';\n\n        if (this.sorteKey !== key) {\n          this.sortType = 'down';\n          this.sorteKey = key;\n        }\n      }\n\n      this.$emit('sortOnChange', {\n        key: this.sorteKey,\n        type: this.sortType\n      });\n    },\n    getSortValue: function getSortValue(itemArr) {\n      var _this4 = this;\n\n      var val = null;\n\n      if (this.isType(itemArr) === 'Array') {\n        itemArr.forEach(function (option) {\n          if (_this4.isType(option) === 'Array') {\n            option.forEach(function (data) {\n              if (data.key === _this4.sorteKey) {\n                val = data.sortVal;\n              }\n            });\n          }\n        });\n      }\n\n      return parseFloat(val);\n    },\n    // 排序\n    quickSort: function quickSort(datas) {\n      var _this5 = this;\n\n      var _datas = _toArray(datas),\n          dataArray = _datas.slice(0);\n\n      if (!dataArray.length) {\n        return dataArray;\n      }\n\n      return dataArray.sort(function (a, b) {\n        return _this5.getSortValue(b.data) - _this5.getSortValue(a.data);\n      });\n    },\n    // 展开 sub 表格\n    opentSubCOntent: function opentSubCOntent(item, ids) {\n      this.subIsOpen = this.subPpenId !== ids ? 1 : 0;\n      this.$emit('elementClick', item.eventType, {\n        id: ids,\n        open: this.subPpenId !== ids ? 1 : 0\n      });\n      this.subPpenId = this.subPpenId === ids ? null : ids;\n    }\n  }\n};",{"version":3,"sources":["GridTabel.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- // Created by 侯东东.\n// 表格组件\n// ***************************** -->\n<template>\n<section class=\"h5Box\">\n  <div class=\"common-tabel-content\" :style=\"classBoxStyle\">\n    <div :class='classBox'>\n      <!-- 展示容器 -->\n      <div class='b-2-cl' :class='classHead'>\n        <table>\n          <thead>\n            <tr :style='{ height: headHeight + \"px\" }'>\n              <th\n                v-for='(item, index) in columns'\n                :key='item.key'\n                :width='cellWidth[index]'\n                :class='item.classes'\n                :style='cellStyleTh(item)'\n              >\n                <div\n                  :class='{ isSorte: item.sortable }'\n                  @click='sorteChane(item.key, item.sortable)'\n                >\n                  {{ item.title }}\n                  <span\n                    v-if='item.sortable'\n                    :class='{ selected: sorteKey === item.key }'\n                    class='sorte'\n                  >\n                    <svg\n                      v-if='sorteKey === item.key && sortType === \"down\"'\n                      class='icon icon-14'\n                      aria-hidden='true'\n                    >\n                      <use xlink:href='#icon-a_17_1'></use>\n                    </svg>\n                    <svg\n                      v-else-if='sorteKey === item.key && sortType === \"up\"'\n                      class='icon icon-14'\n                      aria-hidden='true'\n                    >\n                      <use xlink:href='#icon-a_17_2'></use>\n                    </svg>\n                    <svg v-else class='icon icon-14' aria-hidden='true'>\n                      <use xlink:href='#icon-a_17'></use>\n                    </svg>\n                  </span>\n                </div>\n              </th>\n            </tr>\n          </thead>\n        </table>\n      </div>\n      <!--  :style='tableBodyHeight' -->\n      <div class='table-body' :class='bodyClasses'>\n        <!-- <vue-scroll :ops='ops'> -->\n        <div class='table-body-bar b-1-cl'>\n          <div v-if='loading' class='no-data'>\n            <c-loading size='50' />\n          </div>\n          <table v-else-if='tableDataList && tableDataList.length'>\n            <tbody>\n              <template v-for='(line, index) in tableDataList'>\n                <tr\n                  @click='lineClickEvent(line)'\n                  :class='[classLine, line.classes, lineClassesH(index)]'\n                  @mouseenter='enter(index)'\n                  @mouseleave='leave()'\n                  :style='{ height: cellHeight + \"px\" }'\n                  :key='index'\n                >\n                  <td\n                    v-for='(item, i) in line.data'\n                    :ref='index === 0 ? \"td\" + i : \"\"'\n                    :key='\"td\" + i'\n                    :style='cellStyleTd(i)'\n                    :class='cellStyleClass(i)'\n                  >\n                    <div v-if='isType(item) === \"string\"'>{{ item }}</div>\n                    <div v-if='isType(item) === \"Array\"'>\n                      <template v-for='(element, n) in item'>\n                        <!-- 普通文字 -->\n                        <span\n                          v-if='!element.type'\n                          class='text'\n                          :key='\"text\" + n'\n                          :class='element.classes'\n                        >\n                          {{ element.text }}\n                        </span>\n                        <!-- label -->\n                        <label\n                          v-if='element.type === \"label\"'\n                          :class='element.classes'\n                          :key='\"label\" + n'\n                          class='label'\n                        >\n                          {{ element.text }}\n                        </label>\n                        <!-- 按钮 -->\n                        <c-button\n                          class='button'\n                          type='text'\n                          :key='\"btn\" + n'\n                          :class='element.classes'\n                          v-if='\n                            element.type === \"button\" || element.type === \"link\"\n                          '\n                          @click='elementClickEvent(element, line.id)'\n                        >\n                          {{ element.text }}\n                        </c-button>\n                        <!-- input -->\n                        <input\n                          class='inputext'\n                          type='text'\n                          :key='\"input\" + n'\n                          :class='element.classes'\n                          :value='element.text'\n                          v-if='element.type === \"input\"'\n                          @input='\n                            onChaneForm(element, line.id, $event.target.value)\n                          '\n                        />\n                        <!-- html -->\n                        <div\n                          class='html'\n                          v-html='element.text'\n                          :key='\"icon\" + n'\n                          :class='[element.classes]'\n                          v-if='element.type === \"html\" && !element.eventType'\n                        ></div>\n                        <!-- html -->\n                        <div\n                          class='html'\n                          v-html='element.text'\n                          :key='\"icon\" + n'\n                          :class='[element.classes]'\n                          v-if='element.type === \"html\" && element.eventType'\n                          @click.stop='elementClickEvent(element, line.id)'\n                        ></div>\n                        <!-- icon -->\n                        <div\n                          class='icon-btn'\n                          v-html='element.iconSvg'\n                          :key='\"icon\" + n'\n                          :class='[element.classes, element.iconClass]'\n                          v-if='element.type === \"icon\"'\n                          @click.stop='elementClickEvent(element, line.id)'\n                        ></div>\n                        <!-- 下拉框 -->\n                        <span\n                          class='t-select'\n                          v-if='element.type === \"select\"'\n                          :key='\"sel\" + n'\n                          :class='element.classes'\n                        >\n                          <i\n                            class='icon-btn'\n                            v-html='element.iconSvg'\n                            :class='element.iconClass'\n                            @click.stop='elementClickEvent(element, line.id)'\n                          >\n                          </i>\n                          <div class='select-box a-5-bg'>\n                            <vue-scroll>\n                              <ul class='select-box-ul'>\n                                <li\n                                  :style='\n                                    `${\n                                      element.selectWidth\n                                        ? \"width: \" + element.selectWidth + \"px\"\n                                        : \"\"\n                                    }`\n                                  '\n                                  class='select-option'\n                                  v-on:mouseover='listMouseOver'\n                                  v-on:mouseout='listMouseOut'\n                                  v-for='(list, k) in element.selectOption'\n                                  :key='\"opt\" + k'\n                                  @click.stop='elementClickEvent(element, list)'\n                                >\n                                  {{ list.value ? list.value : list }}\n                                </li>\n                              </ul>\n                            </vue-scroll>\n                          </div>\n                        </span>\n                        <!-- 展开 -->\n                        <template v-if='element.type === \"subTable\"'>\n                          <span\n                            :key='\"view\" + n'\n                            v-if='subPpenId === line.id && subLoading'\n                          >\n                            <c-loading size='14' className='detailLoading' />\n                          </span>\n                          <span\n                            v-else\n                            :key='\"view\" + n'\n                            @click.stop='opentSubCOntent(element, line.id)'\n                            :class='[\n                              element.classes,\n                              { isopen: subPpenId === line.id && subIsOpen }\n                            ]'\n                            class='sub-table-btn a-1-cl'\n                          >\n                            {{ element.text }}\n                            <i class='view-icon' :class='element.iconClass'>\n                              v\n                            </i>\n                          </span>\n                        </template>\n                        <p\n                          v-if='element.subContent'\n                          class='sub-text'\n                          :key='\"p\" + n'\n                          :class='element.subContent.classes'\n                        >\n                          <template v-if='typeof element.subContent === \"object\"'>\n                            {{ element.subContent.text }}\n                          </template>\n                          <template v-if='typeof element.subContent === \"string\"'>\n                            {{ element.subContent }}\n                          </template>\n                        </p>\n                      </template>\n                    </div>\n                  </td>\n                </tr>\n                <!-- sub Table -->\n                <tr\n                  :key='index + \"sub\"'\n                  class='sub-tr'\n                  v-if='subContentId === line.id && subIsOpen && !subLoading'\n                >\n                  <!-- :class='subPpenId === line.id ? 'animateIn' : 'animateOut'' -->\n                  <td :colspan='line.data.length'>\n                    <div class='sub-table a-5-bg' :class='subClass'>\n                      <div\n                      class=\"sub_content b-2-cl\"\n                        v-if='subContent && subContent.length'>\n                        <div class=\"type_item\" v-for=\"ele in subContent\" :key=\"ele.id\">\n                          <div class=\"type_title\">\n                            <span :class=\"Number(ele.type) === 1 ? 'u-1-cl' : 'u-4-cl'\">\n                              {{ele.typeText}}\n                            </span>\n                            <p>\n                              {{ele.orderCtime}}\n                            </p>\n                          </div>\n                          <div class=\"type_detial\">\n                            <dl>\n                              <dt>{{$t('contract.nowList8')}}({{ele.balanceSymbol}})</dt>\n                              <dd class=\"b-1-cl\">{{ele.avgPrice}}</dd>\n                            </dl>\n                            <dl>\n                              <dt>{{$t('contract.volume')}}({{ele.numSymbol}})</dt>\n                              <dd class=\"b-1-cl\">{{ele.dealVolume}}</dd>\n                            </dl>\n                            <dl>\n                              <dt>{{$t('gridTrade.clinchPrice')}}({{ele.balanceSymbol}})</dt>\n                              <dd class=\"b-1-cl\">{{ele.dealMoney}}</dd>\n                            </dl>\n                          </div>\n                        </div>\n\n                      </div>\n                      <div v-else class='no-data b-2-cl'>\n                        <svg class='icon icon-50' aria-hidden='true'>\n                          <use xlink:href='#icon-g_2'></use>\n                        </svg>\n                        <p>\n                          <!-- 暂无数据 -->\n                          {{ $t('common.notData') }}\n                        </p>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              </template>\n            </tbody>\n          </table>\n          <div v-else class='no-data b-2-cl'>\n            <svg class='icon icon-50' aria-hidden='true'>\n              <use xlink:href='#icon-g_2'></use>\n            </svg>\n            <p>\n              <!-- 暂无数据 -->\n              {{ $t('common.notData') }}\n            </p>\n          </div>\n        </div>\n        <!-- </vue-scroll> -->\n      </div>\n      <c-otcPayIcon style='display: none'></c-otcPayIcon>\n    </div>\n  </div>\n</section>\n</template>\n\n<script>\nimport { getComplexType } from 'BlockChain-ui-privatization/utils';\n\nexport default {\n  name: 'GridTabel',\n  props: {\n    h5Width: {\n      type: String,\n      default: '800px',\n    },\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n    // 表头数据列表\n    columns: {\n      type: Array,\n      default: () => [],\n    },\n    // 表格数据列表\n    dataList: {\n      type: Array,\n      default: () => [],\n    },\n    // 展开数据\n    subContent: {\n      type: Array,\n      default: () => [],\n    },\n    // 整个表格根元素的class\n    classes: {\n      type: [String, Array],\n      default: () => [],\n    },\n    // 表头class\n    headClasses: {\n      type: [String, Array],\n      default: () => [],\n    },\n    // 表内容class\n    bodyClasses: {\n      type: [String, Array],\n      default: () => [],\n    },\n    // 表格每一行class\n    lineClasses: {\n      type: [String, Array],\n      default: () => ['b—3-bd'],\n    },\n    // 表格每一行的hover class\n    lineClassesHover: {\n      type: [String, Array],\n      default: () => [],\n    },\n    // 大于多少条后出现滚动条\n    lineNumber: {\n      type: Number,\n      default: 20,\n    },\n    // 表格每一行的高度\n    cellHeight: {\n      type: Number,\n      default: 50,\n    },\n    // 表头高度\n    headHeight: {\n      type: Number,\n      default: 30,\n    },\n    // sub 表头\n    subColumns: {\n      type: Array,\n      default: () => [],\n    },\n    // sub 表的自定义class\n    subClass: {\n      type: String,\n      default: '',\n    },\n    subContentId: {\n      type: [Number, String],\n    },\n    subLoading: {\n      type: Boolean,\n      default: false,\n    },\n    colorMap: {\n      type: Object,\n      default: () => {},\n      required: true,\n    },\n  },\n  data() {\n    return {\n      // 是否排序\n      isSorte: false,\n      // 排序 使用的Key\n      sorteKey: null,\n      // 排序方向\n      sortType: null,\n      // 表头单元格的宽度\n      cellWidth: [],\n      // sub 显示的 id\n      subPpenId: null,\n      subIsOpen: 0,\n      // 滚动条配置\n      ops: {\n        rail: {\n          gutterOfSide: '0px',\n        },\n      },\n    };\n  },\n\n  mounted() {\n    this.setCellWidth();\n    this.$bus.$on('WINFOW_ON_RESIIZE', () => {\n      this.setCellWidth();\n    });\n  },\n  computed: {\n    classBoxStyle() {\n      // const max = window.matchMedia('(max-width:960px)');\n      let str = 'width: 100%;';\n      // if (max.matches) {\n      str += `min-width: ${this.h5Width}`;\n      // }\n      return str;\n    },\n    // 表格 根目录 class\n    classBox() {\n      const cls = this.isType(this.classes) === 'Array'\n        ? [...this.classes] : this.classes;\n      return ['common-table', 'a-5-bg', cls];\n    },\n    // 表头 class\n    classHead() {\n      const cls = this.isType(this.headClasses) === 'Array'\n        ? [...this.headClasses] : this.headClasses;\n      return ['table-head', 'a-3-bd', cls];\n    },\n    // 表格行 class\n    classLine() {\n      const cls = this.isType(this.lineClasses) === 'Array'\n        ? [...this.lineClasses] : this.lineClasses;\n      return ['a-3-bd', cls];\n    },\n    // 表格 数据列表 设置排序\n    tableDataList() {\n      if (!this.dataList || !this.dataList.length) return [];\n      if (this.isSorte) {\n        return this.sortType === 'down'\n          ? this.quickSort(this.dataList)\n          : this.quickSort(this.dataList).reverse();\n      }\n      return this.dataList;\n    },\n    // 获取表头传入的宽\n    columnsWidth() {\n      const [...columns] = this.columns;\n      const arr = [];\n      columns.forEach((item, i) => {\n        const obj = { index: i };\n        if (item.width) {\n          obj.width = item.width;\n        }\n        if (item.align) {\n          obj['text-align'] = item.align;\n        }\n        if (item.styleClass) {\n          obj.styleClass = item.styleClass;\n        }\n        arr.push(obj);\n      });\n      return arr;\n    },\n    // 表格内容 高度 超出高度 出现滚动条\n    tableBodyHeight() {\n      if (this.tableDataList.length <= this.lineNumber) {\n        return false;\n      }\n      return { height: `${this.lineNumber * this.cellHeight}px` };\n    },\n  },\n  watch: {\n    // 监听表格数据的变化\n    dataList(val) {\n      setTimeout(() => {\n        // 重新设置表头单元格的宽度\n        this.setCellWidth();\n      }, 0);\n      if (val) {\n        // 设置成默认排序\n        // this.isSorte = false;\n        // 排序 使用的Key\n        // this.sorteKey = null;\n        // 排序方向\n        // this.sortType = null;\n      }\n    },\n  },\n  methods: {\n    isObjectType(element) {\n      return getComplexType(element) === 'Object';\n    },\n    isObjectTypeJoinClass(element) {\n      return this.isObjectType(element) && element.class ? element.class : '';\n    },\n    isObjectTypeJoinStyle(element) {\n      return this.isObjectType(element) && element.style ? element.style : '';\n    },\n    isObjectTypeJoinText(element) {\n      return this.isObjectType(element) && element.text\n        ? element.text\n        : element;\n    },\n    onChaneForm(item, id, val) {\n      const data = {};\n      data[id] = val;\n      this.$emit('elementClick', item.eventType, data);\n    },\n    listMouseOver(e) {\n      const { colorMap } = this;\n      e.target.style.backgroundColor = colorMap['a-4-bg'];\n    },\n    listMouseOut(e) {\n      e.target.style.backgroundColor = 'transparent';\n    },\n    enter(index) {\n      this.hoverIndex = index;\n    },\n    leave() {\n      this.hoverIndex = null;\n    },\n    lineClassesH(index) {\n      if (index === this.hoverIndex) {\n        return this.lineClassesHover;\n      }\n      return null;\n    },\n    isType(obj) {\n      const types = Object.prototype.toString.call(obj);\n      if (types === '[object Array]') {\n        return 'Array';\n      }\n      if (types === '[object Object]') {\n        return 'Object';\n      }\n      return 'string';\n    },\n    // 表头文字 居中\n    cellStyleTh(item) {\n      return {\n        'text-align': item.align,\n      };\n    },\n    cellStyleClass(index) {\n      if (this.columnsWidth.length) {\n        let obj = {};\n        this.columnsWidth.forEach((item) => {\n          if (item.index === index && item.styleClass) {\n            obj = item.styleClass;\n          }\n        });\n        return obj;\n      }\n      return false;\n    },\n    // 设置 单元格 的宽度\n    cellStyleTd(index) {\n      if (this.columnsWidth.length) {\n        let obj = {};\n        this.columnsWidth.forEach((item) => {\n          if (item.index === index) {\n            obj = item;\n          }\n        });\n        return obj;\n      }\n      return false;\n    },\n    // 设置表头单元格的宽度\n    setCellWidth() {\n      const tdFefsKeys = Object.keys(this.$refs);\n      this.cellWidth = [];\n      tdFefsKeys.forEach((item) => {\n        if (item.indexOf('td') !== -1) {\n          if (this.$refs[item][0]) {\n            this.cellWidth.push(this.$refs[item][0].offsetWidth);\n          }\n        }\n      });\n    },\n    // 行 点击事件\n    lineClickEvent(item) {\n      this.$emit('lineClick', item);\n    },\n    // 按钮 点击事件\n    elementClickEvent(item, id) {\n      this.$emit('elementClick', item.eventType, id);\n      if (item.type === 'link') {\n        this.$router.push(item.links);\n      }\n    },\n    // 点击排序事件\n    sorteChane(key, asynSorte) {\n      if (asynSorte) {\n        this.isSorte = true;\n        this.sortType = this.sortType === 'down' ? 'up' : 'down';\n        if (this.sorteKey !== key) {\n          this.sortType = 'down';\n          this.sorteKey = key;\n        }\n      }\n      this.$emit('sortOnChange', { key: this.sorteKey, type: this.sortType });\n    },\n    getSortValue(itemArr) {\n      let val = null;\n      if (this.isType(itemArr) === 'Array') {\n        itemArr.forEach((option) => {\n          if (this.isType(option) === 'Array') {\n            option.forEach((data) => {\n              if (data.key === this.sorteKey) {\n                val = data.sortVal;\n              }\n            });\n          }\n        });\n      }\n      return parseFloat(val);\n    },\n    // 排序\n    quickSort(datas) {\n      const [...dataArray] = datas;\n      if (!dataArray.length) {\n        return dataArray;\n      }\n      return dataArray.sort(\n        (a, b) => this.getSortValue(b.data) - this.getSortValue(a.data),\n      );\n    },\n    // 展开 sub 表格\n    opentSubCOntent(item, ids) {\n      this.subIsOpen = this.subPpenId !== ids ? 1 : 0;\n      this.$emit('elementClick', item.eventType, {\n        id: ids,\n        open: this.subPpenId !== ids ? 1 : 0,\n      });\n      this.subPpenId = this.subPpenId === ids ? null : ids;\n    },\n  },\n};\n</script>\n\n<style lang='stylus'>\n.sub_content {\n  width 100%;\n}\n.type_title {\n  display flex;\n  margin-bottom 6px;\n  line-height 20px;\n}\n.type_title span {\n  margin-right 13px;\n}\n.type_detial {\n  display flex;\n  justify-content space-between;\n  margin-bottom 14px;\n  line-height 18px;\n}\n.type_detial dt {\n  margin-bottom 6px;\n}\n  .common-table {\n    width: 100%;\n    .mmd-loading-circle-right, .mmd-loading-circle-left {\n      border-color: #1baaec;\n    }\n    .detailLoading {\n      margin-right: 5px\n    }\n    table {\n      width: 100%\n      font-size: 12px;\n    }\n  }\n  .table-head {\n    padding: 0 20px;\n    border-bottom-width: 1px ;\n    border-bottom-style: solid;\n    tr {\n      vertical-align: middle;\n    }\n    th {\n      text-align: right;\n      vertical-align: middle;\n      &:first-child {\n        text-align: left;\n      }\n    }\n    .isSorte {\n      cursor: pointer;\n      user-select: none;\n      display: inline-block;\n      line-height: 14px;\n      height: 14px;\n    }\n    .sorte {\n      display: inline-block;\n      float: right;\n      width: 14spx;\n      height: 14px;\n      .icon {\n        vertical-align: initial;\n      }\n      i {\n        display: inline-block;\n        width: 8px;\n        height: 8px;\n        position: absolute;\n        left: 0;\n        line-height: 6px;\n        overflow: hidden;\n        em {\n          position: absolute;\n          top: 0;\n          right: 0;\n          transition: all .3s ease-in-out;\n          display: block;\n          border-width: 4px;\n          border-style: solid dashed dashed;\n          border-color: #828ea1 transparent transparent;\n          font-size: 0;\n          line-height: 0;\n          transform: rotate(180deg);\n        }\n        &.icon-triangle-up {\n          bottom: 0;\n          em {\n            transform: rotate(0deg);\n          }\n        }\n      }\n      &.selected {\n        .cur {\n          em {\n            border-color: #1baaec transparent transparent;\n          }\n        }\n      }\n    }\n  }\n  .table-body {\n    min-height: 330px;\n    border-radius: 0 0 2px 2px;\n    .table-body-bar {\n      padding: 0 20px;\n    }\n    tr {\n      height: 50px;\n      border-top-width: 1px ;\n      border-top-style: solid;\n      &:first-child {\n        border-top-width: 0px;\n      }\n    }\n    td {\n      text-align: right;\n      vertical-align: middle;\n      line-height: 14px;\n      &:first-child {\n        text-align: left;\n      }\n      .label {\n        line-height: 24px;\n        display: inline-block;\n        border-radius: 2px;\n        text-align: center;\n        padding: 0 10px;\n      }\n      .button, .link, .icon-btn {\n        display: inline-block;\n        vertical-align: middle;\n        margin-left: 10px;\n        line-height: 14px;\n        cursor: pointer;\n      }\n      span {\n        display: inline-block;\n        line-height: 14px;\n      }\n      p {\n        line-height: 14px;\n      }\n    }\n    .t-select {\n      position: relative;\n      .icon {\n        margin: 0;\n      }\n      &:hover {\n        .select-box {\n          display: block;\n        }\n      }\n    }\n    .inputext {\n      line-height: 30px;\n      width: 80px;\n      padding: 0 10px;\n      border-width: 1px;\n      border-style: solid;\n      border-radius: 3px;\n    }\n    .select-box {\n      display: none;\n      position: absolute;\n      text-align: left;\n      transform-origin: center top 0px;\n      top: 16px;\n      // left: 0;\n      right: 0;\n      z-index: 9;\n      box-shadow: 0 3px 4px 1px rgba(0,0,0,0.28);\n      border-radius: 2px;\n      font-size: 14px;\n      min-width: 120px;\n      // overflow-y: scroll;\n      padding: 10px 0px;\n      .select-box-ul {\n        max-height: 200px;\n      }\n      .select-option {\n        line-height: 40px;\n        padding: 0 20px;\n        cursor: pointer;\n        font-size: 12px;\n        &:hover {\n          background-color: #263043;\n        }\n      }\n    }\n    .sub-table-btn {\n      cursor: pointer;\n      position: relative;\n      padding: 0 20px 0 10px;\n      display: inline-block;\n      height: 24px;\n      line-height: 26px;\n      border-radius: 2px;\n      vertical-align: middle;\n      user-select: none;\n      .view-icon {\n        position: absolute;\n        top: 10px;\n        right: 5px;\n        display: block;\n        border-width: 5px;\n        border-style: solid dashed dashed;\n        border-color: #1baaec transparent transparent;\n        font-size: 0;\n        line-height: 0;\n      }\n      &.isopen {\n        .view-icon {\n          transform: rotate(180deg);\n          top: 5px;\n        }\n      }\n    }\n    .icon-btn {\n      display: inline-block;\n    }\n    .sub-tr {\n      border: none;\n    }\n  }\n  .sub-table {\n    padding: 0 20px\n    tr {\n      border: none;\n      height: 40px;\n      th {\n        text-align: right;\n        vertical-align: middle;\n        width: 1%;\n        &:first-child {\n          text-align: left;\n        }\n      }\n    }\n    &.showSubTable {\n      height: auto;\n      transition: all 3s;\n    }\n  }\n  .no-data {\n    padding: 80px 0 80px;\n    text-align: center;\n    font-size: 12px;\n    p {\n      margin-top: 5px;\n    }\n    .icon {\n      font-size: 36px;\n    }\n  }\n  // 国际版\n.Int {\n  .table-head {\n    padding: 0;\n  }\n}\n//   .animateIn {\n//   height: auto;\n//   -webkit-transition: height 1s;\n//   transition: height 1s;\n//   -webkit-animation: accordionIn 0.45s normal ease-in-out both 1;\n//           animation: accordionIn 0.45s normal ease-in-out both 1;\n// }\n\n// .animateOut {\n//   height: 0;\n//   -webkit-transition: height 1s;\n//   transition: height 1s;\n//   -webkit-animation: accordionOut 0.45s alternate ease-in-out both 1;\n//           animation: accordionOut 0.45s alternate ease-in-out both 1;\n// }\n\n// @-webkit-keyframes accordionIn {\n//   0% {\n//     opacity: 0;\n//     -webkit-transform: scale(0.9) rotateX(-60deg);\n//             transform: scale(0.9) rotateX(-60deg);\n//     -webkit-transform-origin: 50% 0;\n//             transform-origin: 50% 0;\n//   }\n//   100% {\n//     opacity: 1;\n//     -webkit-transform: scale(1);\n//             transform: scale(1);\n//   }\n// }\n\n// @keyframes accordionIn {\n//   0% {\n//     opacity: 0;\n//     -webkit-transform: scale(0.9) rotateX(-60deg);\n//             transform: scale(0.9) rotateX(-60deg);\n//     -webkit-transform-origin: 50% 0;\n//             transform-origin: 50% 0;\n//   }\n//   100% {\n//     opacity: 1;\n//     -webkit-transform: scale(1);\n//             transform: scale(1);\n//   }\n// }\n// @-webkit-keyframes accordionOut {\n//   0% {\n//     opacity: 1;\n//     -webkit-transform: scale(1);\n//             transform: scale(1);\n//   }\n//   100% {\n//     opacity: 0;\n//     -webkit-transform: scale(0.9) rotateX(-60deg);\n//             transform: scale(0.9) rotateX(-60deg);\n//   }\n// }\n// @keyframes accordionOut {\n//   0% {\n//     opacity: 1;\n//     -webkit-transform: scale(1);\n//             transform: scale(1);\n//   }\n//   100% {\n//     opacity: 0;\n//     -webkit-transform: scale(0.9) rotateX(-60deg);\n//             transform: scale(0.9) rotateX(-60deg);\n//   }\n// }\n.common-tabel-content {\n  width: 100%;\n}\n@media only screen and (max-width: 600px) {\n  .h5Box {\n    width: 100%;\n    overflow: scroll\n  }\n  .common-table {\n    .table-body {\n      min-height: 173px;\n    }\n  }\n}\n@media only screen and (max-width: 600px) {\n  .common-tabel-content {\n    position: relative;\n    // .common-table {\n    //   width: 960px;\n    // }\n  }\n}\n</style>\n"],"sourceRoot":"app/view/src/components/modules/trade/gridDialog"}]}