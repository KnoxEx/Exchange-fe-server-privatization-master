{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/components/transfer/transfer.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/components/transfer/transfer.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { fixD, fixInput } from '@/utils';\nexport default {\n  name: 'forced-reminder',\n  data: function data() {\n    return {\n      // 是否可以提交\n      dialogConfirmLoading: false,\n      // 是否禁止提交\n      // 当前币种\n      axiosSymbol: '',\n      // 划转方向  true 币币-合约  false 合约-币币\n      // direction: true,\n      transferSide: '1',\n      // 划转数量\n      // value: '',\n      transferValue: '',\n      // 当前币种数据\n      detailsData: {},\n      // 币币可转\n      exchangeAmount: null,\n      // 合约可转\n      contractAmount: null // 币种列表\n      // symbolList: [],\n\n    };\n  },\n  props: {\n    isShow: {\n      default: false,\n      type: Boolean\n    },\n    finish: {\n      default: false,\n      type: Boolean\n    },\n    close: {\n      default: function _default() {},\n      type: Function\n    },\n    symbol: {\n      default: '',\n      type: String\n    }\n  },\n  computed: {\n    // 币种信息\n    marginCoinInfor: function marginCoinInfor() {\n      if (this.$store.state.future.marginCoinInfor) {\n        return this.$store.state.future.marginCoinInfor;\n      }\n\n      return {};\n    },\n    // 保证金币种列表\n    marginCoinList: function marginCoinList() {\n      if (this.$store.state.future.marginCoinList) {\n        return this.$store.state.future.marginCoinList;\n      }\n\n      return [];\n    },\n    symbolList: function symbolList() {\n      if (this.marginCoinList.length !== 0) {\n        var arr = [];\n        this.marginCoinList.forEach(function (item) {\n          arr.push({\n            value: item,\n            code: item\n          });\n        }); // this.symbol = arr[0].code;\n\n        return arr;\n      }\n\n      return [];\n    },\n    // 用户合约资产\n    accountBalanceMap: function accountBalanceMap() {\n      if (this.$store.state.future.futureAccountBalance) {\n        return this.$store.state.future.futureAccountBalance;\n      }\n\n      return {};\n    },\n    // 币币资产\n    exchangeData: function exchangeData() {\n      if (this.$store.state.assets.exchangeData) {\n        return this.$store.state.assets.exchangeData;\n      }\n\n      return null;\n    },\n    // 币种精度\n    showPrecision: function showPrecision() {\n      if (this.marginCoinInfor && this.axiosSymbol) {\n        return this.marginCoinInfor[this.axiosSymbol].marginCoinPrecision;\n      }\n\n      return 4;\n    },\n    // 限制转入\n    fundsInStatus: function fundsInStatus() {\n      if (this.marginCoinInfor && this.axiosSymbol) {\n        return this.marginCoinInfor[this.axiosSymbol].fundsInStatus;\n      }\n\n      return false;\n    },\n    // 限制转出\n    fundsOutStatus: function fundsOutStatus() {\n      if (this.marginCoinInfor && this.axiosSymbol) {\n        return this.marginCoinInfor[this.axiosSymbol].fundsOutStatus;\n      }\n\n      return false;\n    },\n    // 弹窗是否可点击\n    dialogConfirmDisabled: function dialogConfirmDisabled() {\n      if (this.dialogConfirmLoading) {\n        return false;\n      }\n\n      var flag = true;\n\n      if (parseFloat(this.transferValue) > 0 && !this.transferError) {\n        flag = false;\n      }\n\n      if (this.marginCoinInfor && this.axiosSymbol) {\n        if (this.transferSide === '1') {\n          if (this.axiosSymbol && !this.fundsInStatus) {\n            flag = true;\n          }\n        } else if (this.transferSide === '2') {\n          if (this.axiosSymbol && !this.fundsOutStatus) {\n            flag = true;\n          }\n        }\n      }\n\n      return flag;\n    },\n    // 错误提示\n    transferError: function transferError() {\n      var flag = false; // 限制最大数量\\\n\n      if (this.transferSide === '1') {\n        if (parseFloat(this.transferValue) > parseFloat(this.exchangeAmount)) {\n          flag = true;\n        }\n      } else if (this.transferSide === '2') {\n        if (parseFloat(this.transferValue) > parseFloat(this.contractAmount)) {\n          flag = true;\n        }\n      }\n\n      return flag;\n    },\n    // 划转input框可用文案\n    transferWarningText: function transferWarningText() {\n      var text = this.$t('futures.transfer.canTransfer'); // 可转\n\n      var num = null;\n\n      if (this.marginCoinInfor && this.axiosSymbol) {\n        text = this.$t('futures.transfer.canTransfer'); // 可转\n\n        num = this.transferSide === '1' ? fixD(this.exchangeAmount, this.showPrecision) : fixD(this.contractAmount, this.showPrecision);\n        return \"\".concat(text, \" \").concat(num, \" \").concat(this.axiosSymbol);\n      }\n\n      return \"\".concat(text, \" \").concat(num, \" \").concat(this.axiosSymbol);\n    },\n    // 限制划转\n    confirmText: function confirmText() {\n      var text = this.$t('futures.transfer.confirm'); // 确定\n\n      if (this.marginCoinInfor && this.axiosSymbol) {\n        if (this.transferSide === '1' && this.axiosSymbol && !this.fundsInStatus) {\n          text = this.$t('futures.transfer.cantIn'); // 限制转入\n        }\n\n        if (this.transferSide === '2' && this.axiosSymbol && !this.fundsOutStatus) {\n          text = this.$t('futures.transfer.cantOut'); // 限制转出\n        }\n      }\n\n      return text;\n    },\n    // 方向\n    side: function side() {\n      var ex = this.$t('futures.transfer.exchangeAccount');\n      var co = this.$t('futures.transfer.coAccount');\n      var from = '';\n      var to = '';\n\n      if (this.transferSide === '1') {\n        from = ex;\n        to = co;\n      } else {\n        from = co;\n        to = ex;\n      }\n\n      return {\n        from: from,\n        to: to\n      };\n    }\n  },\n  watch: {\n    isShow: function isShow(v) {\n      if (v) {\n        this.axiosSymbol = this.symbol;\n        this.getData();\n      }\n    },\n    // 币币余额\n    exchangeData: function exchangeData(v) {\n      if (v && this.axiosSymbol) {\n        if (v.allCoinMap[this.axiosSymbol] !== undefined) {\n          var balance = v.allCoinMap[this.axiosSymbol].normal_balance;\n          this.exchangeAmount = fixD(balance, this.showPrecision);\n        } else {\n          this.exchangeAmount = fixD(0, this.showPrecision);\n        }\n      }\n    },\n    // 合约余额\n    accountBalanceMap: function accountBalanceMap(v) {\n      if (v && this.axiosSymbol) {\n        this.contractAmount = v[this.axiosSymbol].canUseAmount;\n      }\n    },\n    // 切换币种\n    symbol: function symbol(v) {\n      if (v && this.isShow) {\n        this.getData();\n      }\n    },\n    transferValue: function transferValue(v) {\n      if (v && this.showPrecision) {\n        this.transferValue = fixInput(v, this.showPrecision);\n      }\n    }\n  },\n  methods: {\n    init: function init() {},\n    getData: function getData() {\n      // 请求合约余额\n      this.$store.dispatch('getPositionList'); // 请求币币余额\n\n      this.$store.dispatch('assetsExchangeData'); // 重置\n\n      this.transferValue = '';\n    },\n    symbolChange: function symbolChange(item) {\n      this.axiosSymbol = item.code;\n      this.getData();\n    },\n    inputLineChange: function inputLineChange(value, name) {\n      this[name] = value;\n    },\n    dialogConfirm: function dialogConfirm() {\n      this.dialogConfirmLoading = true; // const { contractAccountType, walletAccountType } = this.detailsData;\n      // if (this.transferSide === '1') {\n      //   this.toContract();\n      // } else {\n      //   this.toExchange();\n      // }\n      // /contract/co_transfer\n\n      this.toCoTransfer();\n    },\n    // 通用\n    toCoTransfer: function toCoTransfer() {\n      var _this = this;\n\n      this.axios({\n        url: 'contract/co_transfer',\n        hostType: 'ex',\n        params: {\n          // wallet_to_contract:币币划转至合约  contract_to_wallet:合约划转至币币\n          transferType: this.transferSide === '1' ? 'wallet_to_contract' : 'contract_to_wallet',\n          amount: Number(this.transferValue),\n          coinSymbol: this.axiosSymbol\n        },\n        method: 'post'\n      }).then(function (data) {\n        _this.dialogConfirmLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this.close(true);\n\n          _this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n        } else {\n          _this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 从合约划转到币币\n    toExchange: function toExchange() {\n      var _this2 = this;\n\n      this.axios({\n        url: 'assets/saas_trans/co_to_ex',\n        hostType: 'co',\n        params: {\n          amount: Number(this.transferValue),\n          coinSymbol: this.axiosSymbol\n        },\n        method: 'post'\n      }).then(function (data) {\n        _this2.dialogConfirmLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this2.close(true);\n\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n        } else {\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 从币币到合约\n    toContract: function toContract() {\n      var _this3 = this;\n\n      this.axios({\n        url: 'web/futures_transfer',\n        hostType: 'ex',\n        params: {\n          amount: Number(this.transferValue),\n          coinSymbol: this.axiosSymbol\n        },\n        method: 'post'\n      }).then(function (data) {\n        _this3.dialogConfirmLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this3.close(true);\n\n          _this3.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n        } else {\n          _this3.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 修改划转方向\n    setTransferSide: function setTransferSide() {\n      if (this.transferSide === '1') {\n        this.transferSide = '2';\n      } else if (this.transferSide === '2') {\n        this.transferSide = '1';\n      }\n\n      this.transferValue = ''; // 重置划转数量\n    },\n    //  全部划转\n    allTransfer: function allTransfer() {\n      if (this.transferSide === '1') {\n        if (this.exchangeAmount === null) {\n          return;\n        }\n\n        this.transferValue = this.exchangeAmount.toString();\n      } else if (this.transferSide === '2') {\n        if (!this.contractAmount) {\n          return;\n        }\n\n        this.transferValue = this.contractAmount.toString();\n      }\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/components/transfer/transfer.js"],"names":["fixD","fixInput","name","data","dialogConfirmLoading","axiosSymbol","transferSide","transferValue","detailsData","exchangeAmount","contractAmount","props","isShow","default","type","Boolean","finish","close","Function","symbol","String","computed","marginCoinInfor","$store","state","future","marginCoinList","symbolList","length","arr","forEach","item","push","value","code","accountBalanceMap","futureAccountBalance","exchangeData","assets","showPrecision","marginCoinPrecision","fundsInStatus","fundsOutStatus","dialogConfirmDisabled","flag","parseFloat","transferError","transferWarningText","text","$t","num","confirmText","side","ex","co","from","to","watch","v","getData","allCoinMap","undefined","balance","normal_balance","canUseAmount","methods","init","dispatch","symbolChange","inputLineChange","dialogConfirm","toCoTransfer","axios","url","hostType","params","transferType","amount","Number","coinSymbol","method","then","toString","$bus","$emit","msg","toExchange","toContract","setTransferSide","allTransfer"],"mappings":"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","sourcesContent":["import { fixD, fixInput } from '@/utils';\r\n\r\nexport default {\r\n  name: 'forced-reminder',\r\n  data() {\r\n    return {\r\n      // 是否可以提交\r\n      dialogConfirmLoading: false,\r\n      // 是否禁止提交\r\n      // 当前币种\r\n      axiosSymbol: '',\r\n      // 划转方向  true 币币-合约  false 合约-币币\r\n      // direction: true,\r\n      transferSide: '1',\r\n      // 划转数量\r\n      // value: '',\r\n      transferValue: '',\r\n      // 当前币种数据\r\n      detailsData: {},\r\n      // 币币可转\r\n      exchangeAmount: null,\r\n      // 合约可转\r\n      contractAmount: null,\r\n      // 币种列表\r\n      // symbolList: [],\r\n    };\r\n  },\r\n  props: {\r\n    isShow: {\r\n      default: false,\r\n      type: Boolean,\r\n    },\r\n    finish: {\r\n      default: false,\r\n      type: Boolean,\r\n    },\r\n    close: {\r\n      default() {},\r\n      type: Function,\r\n    },\r\n    symbol: {\r\n      default: '',\r\n      type: String,\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    // 币种信息\r\n    marginCoinInfor() {\r\n      if (this.$store.state.future.marginCoinInfor) {\r\n        return this.$store.state.future.marginCoinInfor;\r\n      }\r\n      return {};\r\n    },\r\n    // 保证金币种列表\r\n    marginCoinList() {\r\n      if (this.$store.state.future.marginCoinList) {\r\n        return this.$store.state.future.marginCoinList;\r\n      }\r\n      return [];\r\n    },\r\n    symbolList() {\r\n      if (this.marginCoinList.length !== 0) {\r\n        const arr = [];\r\n        this.marginCoinList.forEach((item) => {\r\n          arr.push({ value: item, code: item });\r\n        });\r\n        // this.symbol = arr[0].code;\r\n        return arr;\r\n      }\r\n      return [];\r\n    },\r\n    // 用户合约资产\r\n    accountBalanceMap() {\r\n      if (this.$store.state.future.futureAccountBalance) {\r\n        return this.$store.state.future.futureAccountBalance;\r\n      }\r\n      return {};\r\n    },\r\n    // 币币资产\r\n    exchangeData() {\r\n      if (this.$store.state.assets.exchangeData) {\r\n        return this.$store.state.assets.exchangeData;\r\n      }\r\n      return null;\r\n    },\r\n    // 币种精度\r\n    showPrecision() {\r\n      if (this.marginCoinInfor && this.axiosSymbol) {\r\n        return this.marginCoinInfor[this.axiosSymbol].marginCoinPrecision;\r\n      }\r\n      return 4;\r\n    },\r\n    // 限制转入\r\n    fundsInStatus() {\r\n      if (this.marginCoinInfor && this.axiosSymbol) {\r\n        return this.marginCoinInfor[this.axiosSymbol].fundsInStatus;\r\n      }\r\n      return false;\r\n    },\r\n    // 限制转出\r\n    fundsOutStatus() {\r\n      if (this.marginCoinInfor && this.axiosSymbol) {\r\n        return this.marginCoinInfor[this.axiosSymbol].fundsOutStatus;\r\n      }\r\n      return false;\r\n    },\r\n    // 弹窗是否可点击\r\n    dialogConfirmDisabled() {\r\n      if (this.dialogConfirmLoading) { return false; }\r\n      let flag = true;\r\n      if (parseFloat(this.transferValue) > 0 && !this.transferError) {\r\n        flag = false;\r\n      }\r\n      if (this.marginCoinInfor && this.axiosSymbol) {\r\n        if (this.transferSide === '1') {\r\n          if (this.axiosSymbol && !this.fundsInStatus) {\r\n            flag = true;\r\n          }\r\n        } else if (this.transferSide === '2') {\r\n          if (this.axiosSymbol && !this.fundsOutStatus) {\r\n            flag = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      return flag;\r\n    },\r\n    // 错误提示\r\n    transferError() {\r\n      let flag = false;\r\n      // 限制最大数量\\\r\n      if (this.transferSide === '1') {\r\n        if (parseFloat(this.transferValue) > parseFloat(this.exchangeAmount)) {\r\n          flag = true;\r\n        }\r\n      } else if (this.transferSide === '2') {\r\n        if (parseFloat(this.transferValue) > parseFloat(this.contractAmount)) {\r\n          flag = true;\r\n        }\r\n      }\r\n      return flag;\r\n    },\r\n    // 划转input框可用文案\r\n    transferWarningText() {\r\n      let text = this.$t('futures.transfer.canTransfer'); // 可转\r\n      let num = null;\r\n      if (this.marginCoinInfor && this.axiosSymbol) {\r\n        text = this.$t('futures.transfer.canTransfer'); // 可转\r\n        num = this.transferSide === '1'\r\n          ? fixD(this.exchangeAmount, this.showPrecision)\r\n          : fixD(this.contractAmount, this.showPrecision);\r\n        return `${text} ${num} ${this.axiosSymbol}`;\r\n      }\r\n      return `${text} ${num} ${this.axiosSymbol}`;\r\n    },\r\n    // 限制划转\r\n    confirmText() {\r\n      let text = this.$t('futures.transfer.confirm'); // 确定\r\n      if (this.marginCoinInfor && this.axiosSymbol) {\r\n        if (this.transferSide === '1' && this.axiosSymbol && !this.fundsInStatus) {\r\n          text = this.$t('futures.transfer.cantIn'); // 限制转入\r\n        }\r\n        if (this.transferSide === '2' && this.axiosSymbol && !this.fundsOutStatus) {\r\n          text = this.$t('futures.transfer.cantOut'); // 限制转出\r\n        }\r\n      }\r\n      return text;\r\n    },\r\n    // 方向\r\n    side() {\r\n      const ex = this.$t('futures.transfer.exchangeAccount');\r\n      const co = this.$t('futures.transfer.coAccount');\r\n      let from = '';\r\n      let to = '';\r\n      if (this.transferSide === '1') {\r\n        from = ex;\r\n        to = co;\r\n      } else {\r\n        from = co;\r\n        to = ex;\r\n      }\r\n      return {\r\n        from,\r\n        to,\r\n      };\r\n    },\r\n  },\r\n  watch: {\r\n    isShow(v) {\r\n      if (v) {\r\n        this.axiosSymbol = this.symbol;\r\n        this.getData();\r\n      }\r\n    },\r\n    // 币币余额\r\n    exchangeData(v) {\r\n      if (v && this.axiosSymbol) {\r\n        if (v.allCoinMap[this.axiosSymbol] !== undefined) {\r\n          const balance = v.allCoinMap[this.axiosSymbol].normal_balance;\r\n          this.exchangeAmount = fixD(balance, this.showPrecision);\r\n        } else {\r\n          this.exchangeAmount = fixD(0, this.showPrecision);\r\n        }\r\n      }\r\n    },\r\n    // 合约余额\r\n    accountBalanceMap(v) {\r\n      if (v && this.axiosSymbol) {\r\n        this.contractAmount = v[this.axiosSymbol].canUseAmount;\r\n      }\r\n    },\r\n    // 切换币种\r\n    symbol(v) {\r\n      if (v && this.isShow) {\r\n        this.getData();\r\n      }\r\n    },\r\n    transferValue(v) {\r\n      if (v && this.showPrecision) {\r\n        this.transferValue = fixInput(v, this.showPrecision);\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    init() {},\r\n    getData() {\r\n      // 请求合约余额\r\n      this.$store.dispatch('getPositionList');\r\n      // 请求币币余额\r\n      this.$store.dispatch('assetsExchangeData');\r\n      // 重置\r\n      this.transferValue = '';\r\n    },\r\n    symbolChange(item) {\r\n      this.axiosSymbol = item.code;\r\n      this.getData();\r\n    },\r\n    inputLineChange(value, name) {\r\n      this[name] = value;\r\n    },\r\n    dialogConfirm() {\r\n      this.dialogConfirmLoading = true;\r\n      // const { contractAccountType, walletAccountType } = this.detailsData;\r\n      // if (this.transferSide === '1') {\r\n      //   this.toContract();\r\n      // } else {\r\n      //   this.toExchange();\r\n      // }\r\n      // /contract/co_transfer\r\n      this.toCoTransfer();\r\n    },\r\n    // 通用\r\n    toCoTransfer() {\r\n      this.axios({\r\n        url: 'contract/co_transfer',\r\n        hostType: 'ex',\r\n        params: {\r\n          // wallet_to_contract:币币划转至合约  contract_to_wallet:合约划转至币币\r\n          transferType: this.transferSide === '1' ? 'wallet_to_contract' : 'contract_to_wallet',\r\n          amount: Number(this.transferValue),\r\n          coinSymbol: this.axiosSymbol,\r\n        },\r\n        method: 'post',\r\n      }).then((data) => {\r\n        this.dialogConfirmLoading = false;\r\n        if (data.code.toString() === '0') {\r\n          this.close(true);\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'success' });\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    // 从合约划转到币币\r\n    toExchange() {\r\n      this.axios({\r\n        url: 'assets/saas_trans/co_to_ex',\r\n        hostType: 'co',\r\n        params: {\r\n          amount: Number(this.transferValue),\r\n          coinSymbol: this.axiosSymbol,\r\n        },\r\n        method: 'post',\r\n      }).then((data) => {\r\n        this.dialogConfirmLoading = false;\r\n        if (data.code.toString() === '0') {\r\n          this.close(true);\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'success' });\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    // 从币币到合约\r\n    toContract() {\r\n      this.axios({\r\n        url: 'web/futures_transfer',\r\n        hostType: 'ex',\r\n        params: {\r\n          amount: Number(this.transferValue),\r\n          coinSymbol: this.axiosSymbol,\r\n        },\r\n        method: 'post',\r\n      }).then((data) => {\r\n        this.dialogConfirmLoading = false;\r\n        if (data.code.toString() === '0') {\r\n          this.close(true);\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'success' });\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    // 修改划转方向\r\n    setTransferSide() {\r\n      if (this.transferSide === '1') { this.transferSide = '2'; } else if (this.transferSide === '2') { this.transferSide = '1'; }\r\n      this.transferValue = ''; // 重置划转数量\r\n    },\r\n    //  全部划转\r\n    allTransfer() {\r\n      if (this.transferSide === '1') {\r\n        if (this.exchangeAmount === null) { return; }\r\n        this.transferValue = this.exchangeAmount.toString();\r\n      } else if (this.transferSide === '2') {\r\n        if (!this.contractAmount) { return; }\r\n        this.transferValue = this.contractAmount.toString();\r\n      }\r\n    },\r\n  },\r\n};\r\n"]}]}