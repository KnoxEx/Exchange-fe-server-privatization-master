{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/assets/assets.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/assets/assets.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n// 按钮\nimport { fixD, thousandsComma as _thousandsComma, myStorage } from '@/utils';\nexport default {\n  name: 'futuresaAssets',\n  data: function data() {\n    return {\n      // 是否显示 划转弹框\n      transferIsShow: false,\n      // 显示类型\n      blockType: 2,\n      boxHeight: 332,\n      // 维持保证金列表\n      ladderList: [],\n      // 最低维持保证金绿\n      minMarginRate: 0.00\n    };\n  },\n  computed: {\n    lanText: function lanText() {\n      return {\n        text1: this.$t('futures.assets.text1'),\n        // '资产',\n        text2: this.$t('futures.assets.text2'),\n        // '合约信息',\n        text3: this.$t('futures.assets.text3'),\n        // '立即划转',\n        text4: this.$t('futures.assets.text4'),\n        // '更多',\n        text5: this.$t('futures.assets.text5'),\n        // '账户保证金率',\n        text6: this.$t('futures.assets.text6'),\n        // '账户保证金率=该币种总资产/该币种担保的仓位总价值。此值用来表示担保资产的大致水平。保证金率越低，仓位被强制减仓的风险越大。',\n        text7: this.$t('futures.assets.text7'),\n        // '总资产',\n        text8: this.$t('futures.assets.text8'),\n        // '合约账户总权益。账户总权益=全仓总权益+逐仓总权益+冻结保证金。',\n        text9: this.$t('futures.assets.text9'),\n        // '全仓保证金',\n        text10: this.$t('futures.assets.text10'),\n        // '所有用来担保全仓仓位的保证金。当全仓仓位被强制平仓时，会损失这些资产。请注意：转入合约账户的资产会自动作为全仓保证金。',\n        text11: this.$t('futures.assets.text11'),\n        // '逐仓保证金',\n        text12: this.$t('futures.assets.text12'),\n        // '所有用来担保逐仓仓位的保证金。逐仓保证金和全仓分开，全仓仓位被强制平仓不会影响到这部分资产。',\n        text13: this.$t('futures.assets.text13'),\n        // '冻结保证金',\n        text14: this.$t('futures.assets.text14'),\n        // '提交委托时冻结的委托保证金总和。',\n        text15: this.$t('futures.assets.text15'),\n        // '合约代号',\n        text16: this.$t('futures.assets.text16'),\n        // '到期日期',\n        text17: this.$t('futures.assets.text17'),\n        // '合约标的',\n        text18: this.$t('futures.assets.text18'),\n        // '指数',\n        text19: this.$t('futures.assets.text19'),\n        // '保证金币种',\n        text20: this.$t('futures.assets.text20'),\n        // '合约面值',\n        text21: this.$t('futures.assets.text21'),\n        // '最小价格变动单位',\n        text22: this.$t('futures.assets.text22'),\n        // '最低维持保证金率',\n        text23: this.$t('futures.assets.text23'),\n        // '结算周期',\n        text24: this.$t('futures.assets.text24'),\n        // '['永续', '周', '次周', '月', '季度'];',\n        text25: this.$t('futures.assets.text25') // '合约数据',\n\n      };\n    },\n    deliveryKind: function deliveryKind() {\n      return this.lanText.text24; //  ['永续', '周', '次周', '月', '季度'];\n    },\n    contractShowType: function contractShowType() {\n      if (this.contractInfo) {\n        return this.deliveryKind[Number(this.contractInfo.deliveryKind)];\n      }\n\n      return this.deliveryKind[0];\n    },\n    // 是否登录\n    isLogin: function isLogin() {\n      if (this.$store.state.baseData.isLogin) {\n        return this.$store.state.baseData.isLogin;\n      }\n\n      return false;\n    },\n    // 当前合约信息\n    contractInfo: function contractInfo() {\n      if (this.$store.state.future.contractInfo) {\n        return this.$store.state.future.contractInfo;\n      }\n\n      return {};\n    },\n    // 是否开通了合约交易\n    openContract: function openContract() {\n      return this.$store.state.future.openContract;\n    },\n    // 当前合约价格单位\n    priceUnit: function priceUnit() {\n      return this.$store.state.future.priceUnit;\n    },\n    // 当前合约保证金币种\n    marginCoin: function marginCoin() {\n      if (this.contractInfo) {\n        return this.contractInfo.marginCoin;\n      }\n\n      return '';\n    },\n    // 当前合约ID\n    contractId: function contractId() {\n      return this.$store.state.future.contractId;\n    },\n    // 当前合约保证金币种精度\n    marginCoinFix: function marginCoinFix() {\n      if (this.contractInfo && this.contractInfo.coinResultVo) {\n        return this.contractInfo.coinResultVo.marginCoinPrecision;\n      }\n\n      return 4;\n    },\n    // 用户合约资产\n    accountBalanceMap: function accountBalanceMap() {\n      return this.$store.state.future.futureAccountBalance;\n    },\n    accountBalance: function accountBalance() {\n      if (this.accountBalanceMap && this.marginCoin) {\n        return this.accountBalanceMap[this.marginCoin];\n      }\n\n      return {};\n    },\n    balanceInfor: function balanceInfor() {\n      if (this.accountBalance) {\n        return {\n          // 全仓保证金率\n          totalMarginRate: this.fixdRose(this.accountBalance.totalMarginRate),\n          // 可用\n          canUseAmount: fixD(this.accountBalance.canUseAmount, this.marginCoinFix),\n          // 总资产\n          totalAmount: fixD(this.accountBalance.totalAmount, this.marginCoinFix),\n          // 全仓保证金\n          totalMargin: fixD(this.accountBalance.totalMargin, this.marginCoinFix),\n          // 逐仓保证金\n          isolateMargin: fixD(this.accountBalance.isolateMargin, this.marginCoinFix),\n          // 冻结保证金\n          lockAmount: fixD(this.accountBalance.lockAmount, this.marginCoinFix),\n          // 已实现盈亏\n          realizedAmount: fixD(this.accountBalance.realizedAmount, this.marginCoinFix),\n          // 未实现盈亏\n          unRealizedAmount: fixD(this.accountBalance.unRealizedAmount, this.marginCoinFix)\n        };\n      }\n\n      return {\n        canUseAmount: '0',\n        // 可用\n        totalAmount: '0',\n        // 总资产\n        totalMargin: '0',\n        // 全仓保证金\n        isolateMargin: '0',\n        // 逐仓保证金\n        lockAmount: '0',\n        // 冻结保证金\n        realizedAmount: '0',\n        // 已实现盈亏\n        unRealizedAmount: '0' // 未实现盈亏\n\n      };\n    },\n    // 当前合约价格精度\n    pricefix: function pricefix() {\n      return this.$store.state.future.pricefix;\n    },\n    hintClass: function hintClass() {\n      if (this.balanceInfor.totalAmount && Number(this.balanceInfor.totalAmount) !== 0) {\n        return 'position-top';\n      }\n\n      return '';\n    },\n    linkurl: function linkurl() {\n      if (this.$store.state.baseData.publicInfo) {\n        return this.$store.state.baseData.publicInfo.url;\n      }\n\n      return {};\n    },\n    futuresDataUrl: function futuresDataUrl() {\n      var lan = this.$store.state.baseData.lan;\n\n      if (process.env.NODE_ENV === 'development') {\n        return '/co/zh_CN/futuresData';\n      }\n\n      if (this.$store.state.baseData && this.$store.state.baseData.publicInfo) {\n        return this.linkurl.coUrl ? \"\".concat(this.linkurl.coUrl, \"/\").concat(lan, \"/futuresData\") : '';\n      }\n\n      return '';\n    }\n  },\n  watch: {\n    isLogin: function isLogin(val) {\n      if (val && this.openContract) {\n        this.blockType = 1;\n      } else {\n        this.blockType = 2;\n        this.getladderList();\n      }\n    },\n    openContract: function openContract(val) {\n      if (val && this.isLogin) {\n        this.blockType = 1;\n      } else {\n        this.blockType = 2;\n        this.getladderList();\n      }\n    }\n  },\n  filters: {\n    setfixNumer: function setfixNumer(v) {\n      if (v === 0) {\n        return '1';\n      }\n\n      if (v === 1) {\n        return '0.1';\n      }\n\n      return \"\".concat(fixD(0, v - 1), \"1\");\n    },\n    setSymbolNumer: function setSymbolNumer(name) {\n      if (name) {\n        return name.replace(/-/g, '');\n      }\n\n      return '';\n    }\n  },\n  methods: {\n    contractNames: function contractNames(data) {\n      var name = data;\n\n      if (data) {\n        name = data.replace(/-/g, '');\n      } // 混合合约 || 模拟合约\n\n\n      var text = '';\n\n      if (this.contractInfo.contractType !== 'E') {\n        text = \"-\".concat(this.contractInfo.marginCoin);\n      }\n\n      return \"\".concat(name).concat(text);\n    },\n    init: function init() {\n      var _this = this;\n\n      this.$bus.$on('syHeight', function (val) {\n        _this.boxHeight = val;\n      });\n\n      if (this.isLogin) {\n        this.blockType = 1;\n      } else {\n        this.blockType = 2;\n        this.getladderList();\n      }\n    },\n    // 显示划转弹框\n    openTransfer: function openTransfer() {\n      this.transferIsShow = true;\n    },\n    fixdRose: function fixdRose(value) {\n      if (value && value !== '--') {\n        var slie = '';\n        var val = parseFloat(value, 0);\n\n        if (val > 0) {\n          slie = '+';\n        }\n\n        if (val < 0) {\n          slie = '-';\n        }\n\n        var num = Math.abs(value * 10000 / 100);\n        return \"\".concat(slie).concat(Number(num.toString().match(/^\\d+(?:\\.\\d{0,2})?/)));\n      }\n\n      return value;\n    },\n    // 关闭弹框\n    closeDialog: function closeDialog() {\n      // 关闭划转弹框\n      this.transferIsShow = false;\n    },\n    // 切换类型\n    switchBlock: function switchBlock(type) {\n      if (this.blockType !== type) {\n        this.blockType = type;\n      }\n\n      if (type === 2) {\n        this.getladderList();\n      }\n    },\n    // 获取阶梯设置列表\n    getladderList: function getladderList() {\n      var _this2 = this;\n\n      this.axios({\n        url: this.$store.state.url.futures.getLadderInfo,\n        method: 'post',\n        hostType: 'co',\n        params: {\n          contractId: this.contractId\n        }\n      }).then(function (rs) {\n        _this2.tableLoading = false;\n\n        if (rs.code === '0' && rs.data) {\n          if (rs.data.ladderList) {\n            _this2.ladderList = rs.data.ladderList.ladderList || [];\n\n            if (_this2.ladderList && _this2.ladderList.length) {\n              var rate = _this2.ladderList[0].minMarginRate;\n              _this2.minMarginRate = fixD(rate * 100, 2);\n            }\n          }\n        }\n      });\n    },\n    thousandsComma: function thousandsComma(num) {\n      if (num) {\n        return _thousandsComma(num);\n      }\n\n      return num;\n    },\n    // 跳转至合约数据页面\n    goFuturesData: function goFuturesData() {\n      var type = myStorage.get('futuresMarketCurrent');\n      window.location.href = \"\".concat(this.futuresDataUrl, \"?marginCoin=\").concat(this.marginCoin, \"&type=\").concat(type, \"&contractId=\").concat(this.contractId);\n    }\n  }\n};",null]}