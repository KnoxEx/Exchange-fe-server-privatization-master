{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/spotTrade/tradingView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/spotTrade/tradingView.vue","mtime":1636856356946},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport mixin from 'blockchain-ui-privatization/PC/common-mixin/modules/trade/tradingView/tradingView';\nimport 'blockchain-ui-privatization/PC/common-mixin/modules/trade/tradingView/tradingView.styl';\nimport {\n  myStorage, getCookie,\n} from 'blockchain-ui-privatization/utils';\nimport Echarts from '@/components/modules/trade/echarts/index.vue';\n// import EchartsKline from '../echartsKline/index.vue';\n\n\nexport default {\n  mixins: [mixin],\n  components: {\n    Echarts,\n    // EchartsKline,\n  },\n  mounted() {\n    this.init();\n  },\n  data() {\n    return {\n      TvBoxHeight: '400px',\n    };\n  },\n  destroyed() {\n    this.$bus.$off('SYMBOL_LIST_ALL');\n    // 监听 WebSocket 链接成功\n    this.$bus.$off('WEBSOCKET_ON_OPEN');\n    // 获取 当前选中的货币对\n    this.$bus.$off('SYMBOL_CURRENT');\n  },\n  beforeDestroy() {\n    this.MywebSocket = false;\n  },\n  computed: {\n    //  是否开启了 网格\n    gridTradeFlag() {\n      const { publicInfo } = this.$store.state.baseData;\n      let str = 0;\n      if (publicInfo && publicInfo.switch && publicInfo.switch.grid_trade_switch) {\n        str = Number(publicInfo.switch.grid_trade_switch);\n      }\n      return str;\n    },\n    // 该币对是否开启网格\n    showGridFlag() {\n      let flag = false;\n      if (this.symbolAll && this.symbolCurrent) {\n        const symbol = this.symbolAll[this.symbolCurrent];\n        if (symbol && symbol.is_grid_open && this.gridTradeFlag) {\n          flag = true;\n        }\n      }\n      return flag;\n    },\n    lan() {\n      if (this.$store.state.baseData) {\n        return this.$store.state.baseData.lan;\n      }\n      return null;\n    },\n  },\n  watch: {\n    showGridFlag() {\n      this.setTvBoxHeight();\n    },\n  },\n  methods: {\n    init() {\n      // 杠杆当前选中的币对\n      if (this.moduleType === 'lever') {\n        this.symbolCurrent = myStorage.get('leverSymbolName');\n      }\n      // 合约当前选中的币对\n      if (this.moduleType === 'co') {\n        this.TvBoxHeight = '710px';\n        this.symbolCurrent = myStorage.get('coNowSymbol');\n      }\n      // 监听TV 是否是全屏状态\n      document.removeEventListener('fullscreenchange', this.quitfullTv);\n      document.addEventListener('fullscreenchange', this.quitfullTv);\n      this.$bus.$on('SYMBOL_LIST_ALL', (data) => {\n        this.coSymbolAll = data;\n      });\n      // 设置国际版TV的高度\n      this.setTvBoxHeight();\n      this.$bus.$on('WINFOW_ON_RESIIZE', () => {\n        const { topMenuBox = null, topMenuBar = null } = this.$refs;\n\n        // 监听TV 是否是全屏状态\n        this.quitfullTv();\n        // 设置国际版TV的高度\n        this.setTvBoxHeight();\n        // 市场 个数的超出宽度\n\n        if (topMenuBox && topMenuBar) {\n          this.maxPosition = topMenuBox.offsetWidth - topMenuBar.offsetWidth;\n        }\n\n        this.slideMarket('left');\n      });\n      if (this.lanArry.indexOf(this.language) <= -1) {\n        this.language = 'en';\n      }\n      if (getCookie('lan') === 'el_GR') {\n        this.language = 'zh_TW';\n      }\n      if (!myStorage.get('lastTimeS')) {\n        myStorage.set('lastTimeS', '30min');\n        this.lastTimeS = '30min';\n      }\n      // 监听 WebSocket 链接成功\n      this.$bus.$on('WEBSOCKET_ON_OPEN', (val) => {\n        this.MywebSocket = val;\n        if (this.MywebSocket) {\n          this.isCreateWidget = false;\n          this.initTradingView();\n        }\n      });\n      // 获取 当前选中的货币对\n      this.$bus.$on('SYMBOL_CURRENT', (val) => {\n        if (this.symbolCurrent !== val) {\n          if (this.chartType === 1) {\n            this.isshowLoading = true;\n          }\n          this.symbolCurrent = val;\n          if (window.tvWidget) {\n            let { showSymbol } = this.symbolName;\n            if (this.moduleType === 'co') {\n              showSymbol = this.symbolName.symbol;\n            }\n            window.tvWidget.setSymbol(\n              showSymbol,\n              this.getTimeMin(true, this.lastTimeS),\n              () => {\n                this.widget.chart().executeActionById('chartReset');\n              },\n            );\n          }\n        }\n        this.setTvBoxHeight();\n      });\n      this.$bus.$on('HIDE_LOADING', () => {\n        this.isshowLoading = false;\n      });\n      const screenWidth = document.body.clientWidth;\n      const screenHeight = document.documentElement.clientHeight;\n      if (screenWidth < 961) {\n        this.isMobile = true;\n        this.TvBoxHeight = `${screenHeight - 180}px`;\n        this.disabled_features_arr.push('header_settings');\n      }\n      // 市场 个数的超出宽度\n      this.maxPosition = this.$refs.topMenuBox.offsetWidth - this.$refs.topMenuBar.offsetWidth;\n    },\n    setTvBoxHeight() {\n      let bodyH = document.documentElement.clientHeight;\n      const { activeName } = this.$route.meta;\n      if (bodyH < 800) bodyH = 800;\n      if (this.templateLayoutType === '2') {\n        if (this.moduleType === 'co') {\n          this.TvBoxHeight = '100%';\n        } else {\n          this.TvBoxHeight = `${bodyH - 475}px`;\n        }\n      } else if (this.showGridFlag && this.lan !== 'zh_CN') {\n        this.TvBoxHeight = '375px';\n      } else {\n        this.TvBoxHeight = '400px';\n      }\n      // 如果是专业版交易页面 则设置 TV的高度为响应式（包含币币和杠杆）\n      if (activeName && activeName.indexOf('proTrade') > -1) {\n        this.TvBoxHeight = `${bodyH - 398}px`;\n      }\n    },\n  },\n};\n",{"version":3,"sources":["tradingView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tradingView.vue","sourceRoot":"app/view/src/components/modules/spotTrade","sourcesContent":["<template>\n  <div\n    class=\"ex-canter-echart-box a-6-bg\"\n    :style=\"{ height: TvBoxHeight }\"\n    :class=\"{ 'canter-echart-full': isfullTv }\"\n    ref=\"tv_chart_container\"\n  >\n    <div class=\"top-menu b-3-cl\" :class=\"{hide: chartType === 2, lefts: chartType === 3 }\">\n      <div class=\"top-menu-bar\" ref=\"topMenuBar\">\n        <i\n          class=\"slide-btn icon-left a-6-bg\"\n          :class=\"{ 'slide-btn-cur': parseFloat(slidePosition) < 0 }\"\n          @click=\"slideMarket('left')\"\n        >\n          <svg class=\"icon icon-14 hover_hide\" aria-hidden=\"true\">\n            <use xlink:href=\"#icon-a_10_1\"></use>\n          </svg>\n          <svg class=\"icon icon-14 hover_show\" aria-hidden=\"true\">\n            <use xlink:href=\"#icon-a_10\"></use>\n          </svg>\n        </i>\n        <div\n          class=\"top-menu-box\"\n          :style=\"{ left: slidePosition }\"\n          ref=\"topMenuBox\"\n        >\n          <span\n            @click=\"timeClike('Line')\"\n            :class=\"{ 'a-4-bg b-1-cl': lastTimeS === 'Line' }\"\n            class=\"time-line  a-4-cl-h\"\n          >\n            <i class=\"hoverHide\">Line</i>\n            <i class=\"b-1-cl hoverShow\">Line</i>\n          </span>\n          <span\n            v-for=\"item in baseTimeArry\"\n            @click=\"timeClike(item)\"\n            :key=\"item\"\n            :class=\"{ 'a-4-bg b-1-cl': lastTimeS === item }\"\n            class=\"time-line a-4-cl-h\"\n          >\n            <i class=\"hoverHide\">{{ item }}</i>\n            <i class=\"b-1-cl hoverShow\">{{ item }}</i>\n          </span>\n          <span class=\"time-line full-btn a-8-bd a-4-cl-h\" @click=\"fullTv\">\n            <template v-if=\"!isfullTv\">\n              <i class=\"hoverHide\">{{ $t(\"trade.full\") }}</i>\n              <i class=\"b-1-cl hoverShow\">{{ $t(\"trade.full\") }}</i>\n            </template>\n            <template v-else>\n              <i class=\"hoverHide\">{{ $t(\"trade.outFull\") }}</i>\n              <i class=\"b-1-cl hoverShow\">{{ $t(\"trade.outFull\") }}</i>\n            </template>\n          </span>\n        </div>\n        <i\n          class=\"slide-btn icon-right a-6-bg\"\n          :class=\"{\n            'slide-btn-cur':\n              maxPosition > 0 && parseFloat(slidePosition) > -maxPosition\n          }\"\n          @click=\"slideMarket('right')\"\n        >\n          <svg class=\"icon icon-14 hover_hide\" aria-hidden=\"true\">\n            <use xlink:href=\"#icon-a_11_1\"></use>\n          </svg>\n          <svg class=\"icon icon-14 hover_show\" aria-hidden=\"true\">\n            <use xlink:href=\"#icon-a_11\"></use>\n          </svg>\n        </i>\n      </div>\n    </div>\n    <transition name=\"fade\">\n      <div v-show=\"isshowLoading\" class=\"loading\">\n        <c-loading size=\"50\" />\n      </div>\n    </transition>\n    <p class=\"a-8-bg inline\"></p>\n    <div class=\"top-tab\">\n      <!-- <span class=\"switch-chart-type\"\n        @mouseenter=\"enter(3)\"\n        @mouseleave=\"leave()\"\n        @click=\"switchChartType(3)\"\n        :class=\"{'u-8-cl':chartTypeShow(3) }\">\n        {{$t('trade.dataType1')}}\n      </span> -->\n      <span\n        @click=\"switchChartType(1)\"\n        @mouseenter=\"enter(1)\"\n        @mouseleave=\"leave()\"\n        class=\"switch-chart-type\"\n        :class=\"{'u-8-cl':chartTypeShow(1) }\"\n      >\n        <!-- {{$t('trade.dataType2')}} -->\n        <svg v-if=\"chartTypeShow(1)\" class=\"icon icon-16\" aria-hidden=\"true\">\n          <use xlink:href=\"#icon-c_12_1\"></use>\n        </svg>\n        <svg v-else class=\"icon icon-16\" aria-hidden=\"true\">\n          <use xlink:href=\"#icon-c_12\"></use>\n        </svg>\n      </span>\n      <span\n        @click=\"switchChartType(2)\"\n        @mouseenter=\"enter(2)\"\n        @mouseleave=\"leave()\"\n        class=\"switch-chart-type\"\n        :class=\"{'u-8-cl':chartTypeShow(2) }\"\n      >\n        <!-- 深度图 -->\n        <!-- {{$t('trade.dataType3')}} -->\n        <svg v-if=\"chartTypeShow(2)\" class=\"icon icon-16\" aria-hidden=\"true\">\n          <use xlink:href=\"#icon-c_13_1\"></use>\n        </svg>\n        <svg v-else class=\"icon icon-16\" aria-hidden=\"true\">\n          <use xlink:href=\"#icon-c_13\"></use>\n        </svg>\n      </span>\n    </div>\n    <div class=\"kline-bg\" v-if=\"klineLogo\">\n      <img :src=\"klineLogo\" class=\"kline-img\" alt=\"\" />\n    </div>\n    <div class=\"coverKlineBox\"></div>\n    <div class=\"slide\" :class=\"{ selected: chartType === 1 }\">\n      <div id=\"tv_chart_container\" class=\"tv_chart_container\"></div>\n    </div>\n    <div class=\"slide\" :class=\"{ selected: chartType === 2 }\">\n      <div class=\"echarts\" style=\"height: 100%\">\n        <Echarts />\n      </div>\n    </div>\n    <div class=\"slide\" v-if=\"{ selected: chartType === 3 }\" :class=\"{ selected: chartType === 3 }\">\n      <div class=\"echarts\" style=\"height: 100%\">\n        <!-- <EchartsKline /> -->\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport mixin from 'blockchain-ui-privatization/PC/common-mixin/modules/trade/tradingView/tradingView';\nimport 'blockchain-ui-privatization/PC/common-mixin/modules/trade/tradingView/tradingView.styl';\nimport {\n  myStorage, getCookie,\n} from 'blockchain-ui-privatization/utils';\nimport Echarts from '@/components/modules/trade/echarts/index.vue';\n// import EchartsKline from '../echartsKline/index.vue';\n\n\nexport default {\n  mixins: [mixin],\n  components: {\n    Echarts,\n    // EchartsKline,\n  },\n  mounted() {\n    this.init();\n  },\n  data() {\n    return {\n      TvBoxHeight: '400px',\n    };\n  },\n  destroyed() {\n    this.$bus.$off('SYMBOL_LIST_ALL');\n    // 监听 WebSocket 链接成功\n    this.$bus.$off('WEBSOCKET_ON_OPEN');\n    // 获取 当前选中的货币对\n    this.$bus.$off('SYMBOL_CURRENT');\n  },\n  beforeDestroy() {\n    this.MywebSocket = false;\n  },\n  computed: {\n    //  是否开启了 网格\n    gridTradeFlag() {\n      const { publicInfo } = this.$store.state.baseData;\n      let str = 0;\n      if (publicInfo && publicInfo.switch && publicInfo.switch.grid_trade_switch) {\n        str = Number(publicInfo.switch.grid_trade_switch);\n      }\n      return str;\n    },\n    // 该币对是否开启网格\n    showGridFlag() {\n      let flag = false;\n      if (this.symbolAll && this.symbolCurrent) {\n        const symbol = this.symbolAll[this.symbolCurrent];\n        if (symbol && symbol.is_grid_open && this.gridTradeFlag) {\n          flag = true;\n        }\n      }\n      return flag;\n    },\n    lan() {\n      if (this.$store.state.baseData) {\n        return this.$store.state.baseData.lan;\n      }\n      return null;\n    },\n  },\n  watch: {\n    showGridFlag() {\n      this.setTvBoxHeight();\n    },\n  },\n  methods: {\n    init() {\n      // 杠杆当前选中的币对\n      if (this.moduleType === 'lever') {\n        this.symbolCurrent = myStorage.get('leverSymbolName');\n      }\n      // 合约当前选中的币对\n      if (this.moduleType === 'co') {\n        this.TvBoxHeight = '710px';\n        this.symbolCurrent = myStorage.get('coNowSymbol');\n      }\n      // 监听TV 是否是全屏状态\n      document.removeEventListener('fullscreenchange', this.quitfullTv);\n      document.addEventListener('fullscreenchange', this.quitfullTv);\n      this.$bus.$on('SYMBOL_LIST_ALL', (data) => {\n        this.coSymbolAll = data;\n      });\n      // 设置国际版TV的高度\n      this.setTvBoxHeight();\n      this.$bus.$on('WINFOW_ON_RESIIZE', () => {\n        const { topMenuBox = null, topMenuBar = null } = this.$refs;\n\n        // 监听TV 是否是全屏状态\n        this.quitfullTv();\n        // 设置国际版TV的高度\n        this.setTvBoxHeight();\n        // 市场 个数的超出宽度\n\n        if (topMenuBox && topMenuBar) {\n          this.maxPosition = topMenuBox.offsetWidth - topMenuBar.offsetWidth;\n        }\n\n        this.slideMarket('left');\n      });\n      if (this.lanArry.indexOf(this.language) <= -1) {\n        this.language = 'en';\n      }\n      if (getCookie('lan') === 'el_GR') {\n        this.language = 'zh_TW';\n      }\n      if (!myStorage.get('lastTimeS')) {\n        myStorage.set('lastTimeS', '30min');\n        this.lastTimeS = '30min';\n      }\n      // 监听 WebSocket 链接成功\n      this.$bus.$on('WEBSOCKET_ON_OPEN', (val) => {\n        this.MywebSocket = val;\n        if (this.MywebSocket) {\n          this.isCreateWidget = false;\n          this.initTradingView();\n        }\n      });\n      // 获取 当前选中的货币对\n      this.$bus.$on('SYMBOL_CURRENT', (val) => {\n        if (this.symbolCurrent !== val) {\n          if (this.chartType === 1) {\n            this.isshowLoading = true;\n          }\n          this.symbolCurrent = val;\n          if (window.tvWidget) {\n            let { showSymbol } = this.symbolName;\n            if (this.moduleType === 'co') {\n              showSymbol = this.symbolName.symbol;\n            }\n            window.tvWidget.setSymbol(\n              showSymbol,\n              this.getTimeMin(true, this.lastTimeS),\n              () => {\n                this.widget.chart().executeActionById('chartReset');\n              },\n            );\n          }\n        }\n        this.setTvBoxHeight();\n      });\n      this.$bus.$on('HIDE_LOADING', () => {\n        this.isshowLoading = false;\n      });\n      const screenWidth = document.body.clientWidth;\n      const screenHeight = document.documentElement.clientHeight;\n      if (screenWidth < 961) {\n        this.isMobile = true;\n        this.TvBoxHeight = `${screenHeight - 180}px`;\n        this.disabled_features_arr.push('header_settings');\n      }\n      // 市场 个数的超出宽度\n      this.maxPosition = this.$refs.topMenuBox.offsetWidth - this.$refs.topMenuBar.offsetWidth;\n    },\n    setTvBoxHeight() {\n      let bodyH = document.documentElement.clientHeight;\n      const { activeName } = this.$route.meta;\n      if (bodyH < 800) bodyH = 800;\n      if (this.templateLayoutType === '2') {\n        if (this.moduleType === 'co') {\n          this.TvBoxHeight = '100%';\n        } else {\n          this.TvBoxHeight = `${bodyH - 475}px`;\n        }\n      } else if (this.showGridFlag && this.lan !== 'zh_CN') {\n        this.TvBoxHeight = '375px';\n      } else {\n        this.TvBoxHeight = '400px';\n      }\n      // 如果是专业版交易页面 则设置 TV的高度为响应式（包含币币和杠杆）\n      if (activeName && activeName.indexOf('proTrade') > -1) {\n        this.TvBoxHeight = `${bodyH - 398}px`;\n      }\n    },\n  },\n};\n</script>\n"]}]}