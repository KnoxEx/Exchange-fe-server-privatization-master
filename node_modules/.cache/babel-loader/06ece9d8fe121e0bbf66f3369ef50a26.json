{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/assets/mainChainMixins.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/assets/mainChainMixins.js","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nexport default {\n  data: function data() {\n    return {\n      haveBranch: false,\n      // 是否存在多主链\n      branchArr: [],\n      activeBranch: '' // 当前选中的子链\n\n    };\n  },\n  methods: {\n    branchInit: function branchInit(v) {\n      var _this = this;\n\n      var coinList = v.coinList,\n          followCoinList = v.followCoinList;\n      this.haveBranch = false;\n      this.branchArr = [];\n      this.activeBranch = '';\n\n      if (this.symbol && coinList[this.symbol] && coinList[this.symbol].mainChainType === 1) {\n        this.haveBranch = true;\n\n        if (followCoinList[this.symbol]) {\n          var arr = [];\n          var coinKeys = Object.keys(followCoinList[this.symbol]);\n          coinKeys.forEach(function (item) {\n            var even = followCoinList[_this.symbol][item];\n            arr.push({\n              value: even.mainChainName,\n              code: item\n            });\n          });\n          this.branchArr = arr;\n\n          if (coinKeys.indexOf(this.symbol) !== -1) {\n            this.activeBranch = this.symbol;\n          } else {\n            var _coinKeys = _slicedToArray(coinKeys, 1),\n                activeBranch = _coinKeys[0];\n\n            this.activeBranch = activeBranch;\n          }\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/assets/mainChainMixins.js"],"names":["data","haveBranch","branchArr","activeBranch","methods","branchInit","v","coinList","followCoinList","symbol","mainChainType","arr","coinKeys","Object","keys","forEach","item","even","push","value","mainChainName","code","indexOf"],"mappings":";;;AAAA,eAAe;AACbA,EAAAA,IADa,kBACN;AACL,WAAO;AACLC,MAAAA,UAAU,EAAE,KADP;AACc;AACnBC,MAAAA,SAAS,EAAE,EAFN;AAGLC,MAAAA,YAAY,EAAE,EAHT,CAGa;;AAHb,KAAP;AAKD,GAPY;AAQbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UADO,sBACIC,CADJ,EACO;AAAA;;AACZ,UAAQC,QAAR,GAAqCD,CAArC,CAAQC,QAAR;AAAA,UAAkBC,cAAlB,GAAqCF,CAArC,CAAkBE,cAAlB;AACA,WAAKP,UAAL,GAAkB,KAAlB;AACA,WAAKC,SAAL,GAAiB,EAAjB;AACA,WAAKC,YAAL,GAAoB,EAApB;;AACA,UAAI,KAAKM,MAAL,IAAeF,QAAQ,CAAC,KAAKE,MAAN,CAAvB,IACCF,QAAQ,CAAC,KAAKE,MAAN,CAAR,CAAsBC,aAAtB,KAAwC,CAD7C,EACgD;AAC9C,aAAKT,UAAL,GAAkB,IAAlB;;AACA,YAAIO,cAAc,CAAC,KAAKC,MAAN,CAAlB,EAAiC;AAC/B,cAAME,GAAG,GAAG,EAAZ;AACA,cAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,cAAc,CAAC,KAAKC,MAAN,CAA1B,CAAjB;AACAG,UAAAA,QAAQ,CAACG,OAAT,CAAiB,UAACC,IAAD,EAAU;AACzB,gBAAMC,IAAI,GAAGT,cAAc,CAAC,KAAI,CAACC,MAAN,CAAd,CAA4BO,IAA5B,CAAb;AACAL,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEC,cAAAA,KAAK,EAAEF,IAAI,CAACG,aAAd;AAA6BC,cAAAA,IAAI,EAAEL;AAAnC,aAAT;AACD,WAHD;AAIA,eAAKd,SAAL,GAAiBS,GAAjB;;AACA,cAAIC,QAAQ,CAACU,OAAT,CAAiB,KAAKb,MAAtB,MAAkC,CAAC,CAAvC,EAA0C;AACxC,iBAAKN,YAAL,GAAoB,KAAKM,MAAzB;AACD,WAFD,MAEO;AACL,2CAAuBG,QAAvB;AAAA,gBAAOT,YAAP;;AACA,iBAAKA,YAAL,GAAoBA,YAApB;AACD;AACF;AACF;AACF;AAzBM;AARI,CAAf","sourcesContent":["export default {\n  data() {\n    return {\n      haveBranch: false, // 是否存在多主链\n      branchArr: [],\n      activeBranch: '', // 当前选中的子链\n    };\n  },\n  methods: {\n    branchInit(v) {\n      const { coinList, followCoinList } = v;\n      this.haveBranch = false;\n      this.branchArr = [];\n      this.activeBranch = '';\n      if (this.symbol && coinList[this.symbol]\n        && coinList[this.symbol].mainChainType === 1) {\n        this.haveBranch = true;\n        if (followCoinList[this.symbol]) {\n          const arr = [];\n          const coinKeys = Object.keys(followCoinList[this.symbol]);\n          coinKeys.forEach((item) => {\n            const even = followCoinList[this.symbol][item];\n            arr.push({ value: even.mainChainName, code: item });\n          });\n          this.branchArr = arr;\n          if (coinKeys.indexOf(this.symbol) !== -1) {\n            this.activeBranch = this.symbol;\n          } else {\n            const [activeBranch] = coinKeys;\n            this.activeBranch = activeBranch;\n          }\n        }\n      }\n    },\n  },\n};\n"]}]}