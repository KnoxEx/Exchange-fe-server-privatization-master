{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/Downloads/blockchain-ui-privatization/PC/components/button/Button.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/Downloads/blockchain-ui-privatization/PC/components/button/Button.vue","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.big\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'c-button',\n  data: function data() {\n    return {\n      flag: true,\n      wH: 0,\n      // 动画变量\n      nX: 0,\n      // 动画变量\n      nY: 0,\n      // 动画变量\n      canvClass: '',\n      // 动画class\n      isHover: false,\n      isClick: false\n    };\n  },\n  props: {\n    name: {\n      default: '',\n      type: String\n    },\n    // 类型   实心-solid 空心-hollow 文本-test\n    type: {\n      validator: function validator(val) {\n        return ['solid', 'hollow', 'text'].indexOf(val) !== -1;\n      },\n      default: 'solid'\n    },\n    className: {\n      default: '',\n      type: String\n    },\n    // 根容器class 默认样式 不要传进来选中样式和滑过样式\n    // *** 如果要配置颜色组 需要传入一整套颜色\n    defaultColorClass: {\n      default: '',\n      type: String\n    },\n    // 该组件默认颜色组\n    hoverColorClass: {\n      default: '',\n      type: String\n    },\n    // 该组件滑过颜色组 仅空心按钮 框线按钮\n    activeColorClass: {\n      default: '',\n      type: String\n    },\n    // 该组件选中颜色组 仅空心按钮 框线按钮\n    // ***\n    disabled: {\n      default: false,\n      type: Boolean\n    },\n    // 是否禁用 (!** 该属性仅存在solid类型 **!)\n    loading: {\n      default: false,\n      type: Boolean\n    },\n    // 是否loading  (!** 该属性仅存在solid类型 **!)\n    big: {\n      default: false,\n      type: Boolean\n    },\n    // 是否为略大button  (!** 该属性仅存在hollow类型 **!)\n    kind: {\n      default: false,\n      type: Boolean\n    },\n    // false为蓝色系 true为灰色系  (!** 该属性仅存在text类型 **!)\n    paddingW: {\n      default: '',\n      type: String\n    },\n    // 左右padding\n    height: {\n      default: '',\n      type: String\n    },\n    // 该容器根容器 height属性\n    width: {\n      default: '',\n      type: String\n    },\n    // 该容器根容器 width属性\n    marginTop: {\n      default: '0px',\n      type: String\n    } // 该组件根容器 margin-top属性\n\n  },\n  created: function created() {\n    var _this = this;\n\n    // 错误处理： 如果 disable和loading同时存在\n    if (this.disabled && this.loading) {\n      this.flag = false; // 不展示组件\n      // throw('Common-button: disable 和 loading 只可存在一个') // 抛错\n      // console.error('Common-button: disable 和 loading 只可存在一个');\n    }\n\n    this.$bus.$on('button-click', function (name) {\n      if (name === _this.name) {\n        _this.handClick();\n      }\n    });\n  },\n  computed: {\n    // overClass() {\n    //   let className = ''\n    //   if(this.type === 'solid') { return className }\n    //   if(this.isHover) {\n    //     if(this.type === 'hollow') {\n    //       // if(this.big) {  }\n    //       return 'a-12-bd'\n    //     }\n    //   }\n    // },\n    // 用于实心按钮 滑过和点击\n    solidBcClass: function solidBcClass() {\n      var className = null;\n\n      if (this.type === 'solid' && !this.loading && !this.disabled) {\n        if (this.isHover) {\n          className = 'u-14-bg';\n        }\n\n        if (this.isClick) {\n          className = 'u-15-bg';\n        }\n      }\n\n      return className;\n    },\n    contentStyle: function contentStyle() {\n      var _this$$props = this.$props,\n          width = _this$$props.width,\n          height = _this$$props.height,\n          paddingW = _this$$props.paddingW;\n      var hollowH = this.big ? '30px' : '24px';\n\n      switch (this.type) {\n        // 实心\n        case 'solid':\n          width = width === '' ? '' : width;\n          height = height === '' ? '40px' : height;\n          paddingW = paddingW === '' ? '20px' : paddingW;\n          break;\n        // 空心\n\n        case 'hollow':\n          width = width === '' ? '' : width;\n          height = height === '' ? hollowH : height;\n          paddingW = paddingW === '' ? '20px' : paddingW;\n          break;\n        // 文本\n\n        case 'text':\n          width = width === '' ? '' : width;\n          height = height === '' ? '24px' : height;\n          paddingW = paddingW === '' ? '10px' : paddingW;\n          break;\n\n        default:\n          break;\n      }\n\n      return {\n        width: width,\n        height: height,\n        paddingLeft: paddingW,\n        paddingRight: paddingW,\n        marginTop: this.marginTop\n      };\n    },\n    // 整理当前类型和状态\n    nowType: function nowType() {\n      var type = 'solid';\n\n      if (this.type === 'solid') {\n        type = 'solid';\n\n        if (this.loading) {\n          type = 'solid-loading';\n        }\n\n        if (this.disabled) {\n          type = 'solid-disabled';\n        }\n      } else if (this.type === 'hollow') {\n        type = 'hollow';\n\n        if (this.big) {\n          type = 'hollow-big';\n        }\n      } else if (this.type === 'text') {\n        type = 'text';\n\n        if (this.kind) {\n          type = 'text-king';\n        }\n      }\n\n      return type;\n    },\n    // 基础样式\n    infoClass: function infoClass() {\n      switch (this.nowType) {\n        // 实心\n        case 'solid':\n          return 'common-button-solid';\n\n        case 'solid-loading':\n          return 'common-button-solid-loading';\n\n        case 'solid-disabled':\n          return 'common-button-solid-disabled';\n        // 框线\n\n        case 'hollow':\n          return 'common-button-hollow';\n\n        case 'hollow-big':\n          return 'common-button-hollow-big';\n        // 文本\n\n        case 'text':\n          return 'common-button-text';\n\n        case 'text-king':\n          return 'common-button-text-kind';\n\n        default:\n          return 'common-button-solid';\n      }\n    },\n    // 元素默认颜色\n    defaultColor: function defaultColor() {\n      if (this.defaultColorClass.length > 0) {\n        return this.defaultColorClass;\n      }\n\n      switch (this.nowType) {\n        // 实心\n        case 'solid':\n          return 'u-8-bg u-16-cl';\n        // ( class 背景色-蓝 字体色-白 )\n\n        case 'solid-loading':\n          return 'u-8-bg u-16-cl';\n        // ( class 背景色-蓝 字体色-白 )\n\n        case 'solid-disabled':\n          return 'u-11-bg u-16-cl';\n        // ( class 背景色-灰 字体色-白 )\n        // 框线\n\n        case 'hollow':\n          return 'u-11-cl u-11-bd';\n        // ( class 字体色-灰 边框色-灰 )\n\n        case 'hollow-big':\n          return 'u-11-cl u-8-bd';\n        // ( class 字体色-灰 边框色-蓝 )\n        // 文本\n\n        case 'text':\n          return 'u-8-cl';\n        // ( class 字体色-蓝 )\n\n        case 'text-king':\n          return 'u-11-cl';\n        // ( class 字体色-灰 )\n\n        default:\n          return 'u-8-bg u-11-cl';\n        // ( class 背景色-蓝 字体色-白 )\n      }\n    },\n    // 元素滑过颜色\n    hoverColor: function hoverColor() {\n      if (this.hoverColorClass.length > 0) {\n        return this.hoverColorClass;\n      }\n\n      switch (this.nowType) {\n        // 实心\n        case 'solid':\n          return 'u-8-bg u-16-cl';\n        // ( class 背景色-蓝 字体色-白 )\n\n        case 'solid-loading':\n          return 'u-8-bg u-16-cl';\n        // ( class 背景色-蓝 字体色-白 )\n\n        case 'solid-disabled':\n          return 'u-11-bg u-16-cl';\n        // ( class 背景色-灰 字体色-白 )\n        // 框线\n\n        case 'hollow':\n          return 'u-8-cl u-8-bd';\n        // ( class 字体色-蓝 边框色-蓝 )\n\n        case 'hollow-big':\n          return 'u-8-cl u-8-bd';\n        // ( class 字体色-蓝 边框色-蓝 )\n        // 文本\n\n        case 'text':\n          return 'u-8-cl u-9-bg';\n        // ( class 字体色 )\n\n        case 'text-king':\n          return 'u-11-cl u-12-bg';\n        // ( class 字体色 )\n\n        default:\n          return 'u-8-bg u-11-cl';\n        // ( class 背景色 字体色 )\n      }\n    },\n    // 元素点击颜色\n    activeColor: function activeColor() {\n      if (this.activeColorClass.length > 0) {\n        return this.activeColorClass;\n      }\n\n      switch (this.nowType) {\n        // 实心\n        case 'solid':\n          return 'u-8-bg u-16-cl';\n        // ( class 背景色-蓝 字体色-白 )\n\n        case 'solid-loading':\n          return 'u-8-bg u-16-cl';\n        // ( class 背景色-蓝 字体色-白 )\n\n        case 'solid-disabled':\n          return 'u-12-bg u-16-cl';\n        // ( class 背景色-灰 字体色-白 )\n        // 框线\n\n        case 'hollow':\n          return 'u-8-cl u-8-bd';\n        // ( class 字体色-蓝 边框色-蓝 )\n\n        case 'hollow-big':\n          return 'u-8-cl u-8-bd';\n        // ( class 字体色-蓝 边框色-蓝 )\n        // 文本3\n\n        case 'text':\n          return 'u-8-cl u-10-bg';\n        // ( class 字体色 )\n\n        case 'text-king':\n          return 'u-11-cl u-12-bg';\n        // ( class 字体色 )\n\n        default:\n          return 'u-8-bg u-11-cl';\n        // ( class 背景色 字体色 )\n      }\n    },\n    allClass: function allClass() {\n      var colorClass = this.defaultColor;\n\n      if (this.isHover) {\n        colorClass = this.hoverColor;\n      }\n\n      if (this.isClick) {\n        colorClass = this.activeColor;\n      }\n\n      return \"\".concat(this.infoClass, \" \").concat(colorClass);\n    },\n    // 特效点击点\n    canvStyle: function canvStyle() {\n      return {\n        width: \"\".concat(this.wH, \"px\"),\n        height: \"\".concat(this.wH, \"px\"),\n        left: \"\".concat(this.nX, \"px\"),\n        top: \"\".concat(this.nY, \"px\")\n      };\n    }\n  },\n  methods: {\n    // input 鼠标划入\n    handMouseenter: function handMouseenter() {\n      this.isHover = true;\n    },\n    // input 鼠标划出\n    handMouseleave: function handMouseleave() {\n      this.isHover = false;\n    },\n    handMouseDown: function handMouseDown() {\n      this.isClick = true;\n    },\n    handMouseUp: function handMouseUp() {\n      this.isClick = false;\n    },\n    handClick: function handClick() {\n      if (this.disabled || this.loading) return;\n      this.$emit('click');\n    }\n  }\n};",{"version":3,"sources":["Button.vue"],"names":[],"mappings":"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","sourcesContent":["// Created by 任泽阳 on 18/12/06. // 按钮组件 // *****************************\r\n// 注 1.该组件必须传入type // 注 2.组件内容通过slot传入\r\n<template>\r\n  <!--  -->\r\n  <button\r\n    class='common-button'\r\n    :style='contentStyle'\r\n    :class='`${allClass} ${className}`'\r\n    @click.stop='handClick'\r\n    ref='button'\r\n    @mousedown='handMouseDown'\r\n    @mouseup='handMouseUp'\r\n    @mouseenter='handMouseenter'\r\n    @mouseleave='handMouseleave'\r\n  >\r\n    <div class='common-button-slot'>\r\n      <button\r\n        size='10'\r\n        className='common-button-loading'\r\n        v-if='loading'\r\n        colorName='f-1-cl'\r\n      />\r\n      <slot />\r\n    </div>\r\n    <!-- 用于实心按钮 滑过和点击 -->\r\n    <div v-if='solidBcClass' class='solidBc' :class='solidBcClass'></div>\r\n    <!-- 动画 -->\r\n  </button>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'c-button',\r\n  data() {\r\n    return {\r\n      flag: true,\r\n      wH: 0, // 动画变量\r\n      nX: 0, // 动画变量\r\n      nY: 0, // 动画变量\r\n      canvClass: '', // 动画class\r\n      isHover: false,\r\n      isClick: false,\r\n    };\r\n  },\r\n  props: {\r\n    name: { default: '', type: String },\r\n    // 类型   实心-solid 空心-hollow 文本-test\r\n    type: {\r\n      validator(val) {\r\n        return ['solid', 'hollow', 'text'].indexOf(val) !== -1;\r\n      },\r\n      default: 'solid',\r\n    },\r\n    className: { default: '', type: String }, // 根容器class 默认样式 不要传进来选中样式和滑过样式\r\n    // *** 如果要配置颜色组 需要传入一整套颜色\r\n    defaultColorClass: { default: '', type: String }, // 该组件默认颜色组\r\n    hoverColorClass: { default: '', type: String }, // 该组件滑过颜色组 仅空心按钮 框线按钮\r\n    activeColorClass: { default: '', type: String }, // 该组件选中颜色组 仅空心按钮 框线按钮\r\n    // ***\r\n    disabled: { default: false, type: Boolean }, // 是否禁用 (!** 该属性仅存在solid类型 **!)\r\n    loading: { default: false, type: Boolean }, // 是否loading  (!** 该属性仅存在solid类型 **!)\r\n    big: { default: false, type: Boolean }, // 是否为略大button  (!** 该属性仅存在hollow类型 **!)\r\n    kind: { default: false, type: Boolean }, // false为蓝色系 true为灰色系  (!** 该属性仅存在text类型 **!)\r\n    paddingW: { default: '', type: String }, // 左右padding\r\n    height: { default: '', type: String }, // 该容器根容器 height属性\r\n    width: { default: '', type: String }, // 该容器根容器 width属性\r\n    marginTop: { default: '0px', type: String }, // 该组件根容器 margin-top属性\r\n  },\r\n  created() {\r\n    // 错误处理： 如果 disable和loading同时存在\r\n    if (this.disabled && this.loading) {\r\n      this.flag = false; // 不展示组件\r\n      // throw('Common-button: disable 和 loading 只可存在一个') // 抛错\r\n      // console.error('Common-button: disable 和 loading 只可存在一个');\r\n    }\r\n    this.$bus.$on('button-click', (name) => {\r\n      if (name === this.name) {\r\n        this.handClick();\r\n      }\r\n    });\r\n  },\r\n  computed: {\r\n    // overClass() {\r\n    //   let className = ''\r\n    //   if(this.type === 'solid') { return className }\r\n    //   if(this.isHover) {\r\n    //     if(this.type === 'hollow') {\r\n    //       // if(this.big) {  }\r\n    //       return 'a-12-bd'\r\n    //     }\r\n    //   }\r\n    // },\r\n    // 用于实心按钮 滑过和点击\r\n    solidBcClass() {\r\n      let className = null;\r\n      if (this.type === 'solid' && !this.loading && !this.disabled) {\r\n        if (this.isHover) {\r\n          className = 'u-14-bg';\r\n        }\r\n        if (this.isClick) {\r\n          className = 'u-15-bg';\r\n        }\r\n      }\r\n      return className;\r\n    },\r\n    contentStyle() {\r\n      let { width, height, paddingW } = this.$props;\r\n      const hollowH = this.big ? '30px' : '24px';\r\n      switch (this.type) {\r\n        // 实心\r\n        case 'solid':\r\n          width = width === '' ? '' : width;\r\n          height = height === '' ? '40px' : height;\r\n          paddingW = paddingW === '' ? '20px' : paddingW;\r\n          break;\r\n        // 空心\r\n        case 'hollow':\r\n          width = width === '' ? '' : width;\r\n          height = height === '' ? hollowH : height;\r\n          paddingW = paddingW === '' ? '20px' : paddingW;\r\n          break;\r\n        // 文本\r\n        case 'text':\r\n          width = width === '' ? '' : width;\r\n          height = height === '' ? '24px' : height;\r\n          paddingW = paddingW === '' ? '10px' : paddingW;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return {\r\n        width,\r\n        height,\r\n        paddingLeft: paddingW,\r\n        paddingRight: paddingW,\r\n        marginTop: this.marginTop,\r\n      };\r\n    },\r\n    // 整理当前类型和状态\r\n    nowType() {\r\n      let type = 'solid';\r\n      if (this.type === 'solid') {\r\n        type = 'solid';\r\n        if (this.loading) {\r\n          type = 'solid-loading';\r\n        }\r\n        if (this.disabled) {\r\n          type = 'solid-disabled';\r\n        }\r\n      } else if (this.type === 'hollow') {\r\n        type = 'hollow';\r\n        if (this.big) {\r\n          type = 'hollow-big';\r\n        }\r\n      } else if (this.type === 'text') {\r\n        type = 'text';\r\n        if (this.kind) {\r\n          type = 'text-king';\r\n        }\r\n      }\r\n      return type;\r\n    },\r\n    // 基础样式\r\n    infoClass() {\r\n      switch (this.nowType) {\r\n        // 实心\r\n        case 'solid':\r\n          return 'common-button-solid';\r\n        case 'solid-loading':\r\n          return 'common-button-solid-loading';\r\n        case 'solid-disabled':\r\n          return 'common-button-solid-disabled';\r\n        // 框线\r\n        case 'hollow':\r\n          return 'common-button-hollow';\r\n        case 'hollow-big':\r\n          return 'common-button-hollow-big';\r\n        // 文本\r\n        case 'text':\r\n          return 'common-button-text';\r\n        case 'text-king':\r\n          return 'common-button-text-kind';\r\n        default:\r\n          return 'common-button-solid';\r\n      }\r\n    },\r\n    // 元素默认颜色\r\n    defaultColor() {\r\n      if (this.defaultColorClass.length > 0) {\r\n        return this.defaultColorClass;\r\n      }\r\n      switch (this.nowType) {\r\n        // 实心\r\n        case 'solid':\r\n          return 'u-8-bg u-16-cl'; // ( class 背景色-蓝 字体色-白 )\r\n        case 'solid-loading':\r\n          return 'u-8-bg u-16-cl'; // ( class 背景色-蓝 字体色-白 )\r\n        case 'solid-disabled':\r\n          return 'u-11-bg u-16-cl'; // ( class 背景色-灰 字体色-白 )\r\n        // 框线\r\n        case 'hollow':\r\n          return 'u-11-cl u-11-bd'; // ( class 字体色-灰 边框色-灰 )\r\n        case 'hollow-big':\r\n          return 'u-11-cl u-8-bd'; // ( class 字体色-灰 边框色-蓝 )\r\n        // 文本\r\n        case 'text':\r\n          return 'u-8-cl'; // ( class 字体色-蓝 )\r\n        case 'text-king':\r\n          return 'u-11-cl'; // ( class 字体色-灰 )\r\n        default:\r\n          return 'u-8-bg u-11-cl'; // ( class 背景色-蓝 字体色-白 )\r\n      }\r\n    },\r\n    // 元素滑过颜色\r\n    hoverColor() {\r\n      if (this.hoverColorClass.length > 0) {\r\n        return this.hoverColorClass;\r\n      }\r\n      switch (this.nowType) {\r\n        // 实心\r\n        case 'solid':\r\n          return 'u-8-bg u-16-cl'; // ( class 背景色-蓝 字体色-白 )\r\n        case 'solid-loading':\r\n          return 'u-8-bg u-16-cl'; // ( class 背景色-蓝 字体色-白 )\r\n        case 'solid-disabled':\r\n          return 'u-11-bg u-16-cl'; // ( class 背景色-灰 字体色-白 )\r\n        // 框线\r\n        case 'hollow':\r\n          return 'u-8-cl u-8-bd'; // ( class 字体色-蓝 边框色-蓝 )\r\n        case 'hollow-big':\r\n          return 'u-8-cl u-8-bd'; // ( class 字体色-蓝 边框色-蓝 )\r\n        // 文本\r\n        case 'text':\r\n          return 'u-8-cl u-9-bg'; // ( class 字体色 )\r\n        case 'text-king':\r\n          return 'u-11-cl u-12-bg'; // ( class 字体色 )\r\n        default:\r\n          return 'u-8-bg u-11-cl'; // ( class 背景色 字体色 )\r\n      }\r\n    },\r\n    // 元素点击颜色\r\n    activeColor() {\r\n      if (this.activeColorClass.length > 0) {\r\n        return this.activeColorClass;\r\n      }\r\n      switch (this.nowType) {\r\n        // 实心\r\n        case 'solid':\r\n          return 'u-8-bg u-16-cl'; // ( class 背景色-蓝 字体色-白 )\r\n        case 'solid-loading':\r\n          return 'u-8-bg u-16-cl'; // ( class 背景色-蓝 字体色-白 )\r\n        case 'solid-disabled':\r\n          return 'u-12-bg u-16-cl'; // ( class 背景色-灰 字体色-白 )\r\n        // 框线\r\n        case 'hollow':\r\n          return 'u-8-cl u-8-bd'; // ( class 字体色-蓝 边框色-蓝 )\r\n        case 'hollow-big':\r\n          return 'u-8-cl u-8-bd'; // ( class 字体色-蓝 边框色-蓝 )\r\n        // 文本3\r\n        case 'text':\r\n          return 'u-8-cl u-10-bg'; // ( class 字体色 )\r\n        case 'text-king':\r\n          return 'u-11-cl u-12-bg'; // ( class 字体色 )\r\n        default:\r\n          return 'u-8-bg u-11-cl'; // ( class 背景色 字体色 )\r\n      }\r\n    },\r\n    allClass() {\r\n      let colorClass = this.defaultColor;\r\n      if (this.isHover) {\r\n        colorClass = this.hoverColor;\r\n      }\r\n      if (this.isClick) {\r\n        colorClass = this.activeColor;\r\n      }\r\n      return `${this.infoClass} ${colorClass}`;\r\n    },\r\n    // 特效点击点\r\n    canvStyle() {\r\n      return {\r\n        width: `${this.wH}px`,\r\n        height: `${this.wH}px`,\r\n        left: `${this.nX}px`,\r\n        top: `${this.nY}px`,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    // input 鼠标划入\r\n    handMouseenter() {\r\n      this.isHover = true;\r\n    },\r\n    // input 鼠标划出\r\n    handMouseleave() {\r\n      this.isHover = false;\r\n    },\r\n    handMouseDown() {\r\n      this.isClick = true;\r\n    },\r\n    handMouseUp() {\r\n      this.isClick = false;\r\n    },\r\n    handClick() {\r\n      if (this.disabled || this.loading) return;\r\n      this.$emit('click');\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang='stylus'>\r\n.solidBc {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n}\r\n// 实心按钮\r\nsolid-style() {\r\n  height: 40px;\r\n  line-height: 40px;\r\n}\r\n// 实心按钮 -- 默认\r\n.common-button-solid {\r\n  font-size: 14px;\r\n}\r\n\r\n// 实心按钮 -- 禁止\r\n.common-button-solid-disabled {\r\n  font-size: 14px;\r\n  cursor: not-allowed!important\r\n}\r\n\r\n// 实心按钮 -- 等待\r\n.common-button-solid-loading {\r\n  font-size: 14px;\r\n  cursor: wait!important\r\n}\r\n\r\n// 空心按钮\r\n.common-button-hollow, .common-button-hollow-big {\r\n  border-width: 1px;\r\n  border-style: solid;\r\n}\r\n.common-button-hollow {\r\n  font-size: 12px\r\n}\r\n.common-button-hollow-big {\r\n  font-size: 14px\r\n}\r\n\r\n// 文本按钮\r\n.common-button-text,\r\n.common-button-text-kind {\r\n  font-size: 12px;\r\n}\r\n.common-button {\r\n  transition: all 0.3s;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  display: inline-block;\r\n  .common-button-slot {\r\n    position: relative;\r\n    display: inline;\r\n    vertical-align: middle;\r\n    .common-button-loading {\r\n      position: absolute;\r\n      vertical-align: middle;\r\n      left: -14px;\r\n      top: 50%;\r\n      transform: translateY(-50%)\r\n    }\r\n  }\r\n  .button-background {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 2;\r\n  }\r\n}\r\n.button-canv {\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 20px;\r\n  transform: scale(0);\r\n}\r\n.mmd-waves-effect {\r\n  border-radius: 100%;\r\n  background-color: #D8D8D8;\r\n\r\n}\r\n\r\n.mmd-waves-effect-animation {\r\n  animation: mmd-maves-animation-definition 0.8s ease-out;\r\n  /* 兼容各大浏览器 */\r\n  -moz-animation: mmd-maves-animation-definition 0.8s ease-out;\r\n  -webkit-animation: mmd-maves-animation-definition 0.8s ease-out;\r\n  -o-animation: mmd-maves-animation-definition 0.8s ease-out;\r\n}\r\n\r\n@keyframes mmd-maves-animation-definition {\r\n  from {\r\n    transform: scale(0.1);\r\n    opacity: 0.5;\r\n  }\r\n\r\n  to {\r\n    transform: scale(2); /* 因为涟漪的大小为标签的最长边，为了保证点击标签边缘时，涟漪也能覆盖整个标签，scale值最小应为2 */\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes mmd-maves-animation-definition {\r\n  from {\r\n    transform: scale(0.1);\r\n    opacity: 0.5;\r\n  }\r\n\r\n  to {\r\n    transform: scale(2); /* 因为涟漪的大小为标签的最长边，为了保证点击标签边缘时，涟漪也能覆盖整个标签，scale值最小应为2 */\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes mmd-maves-animation-definition {\r\n  from {\r\n    transform: scale(0.1);\r\n    opacity: 0.5;\r\n  }\r\n\r\n  to {\r\n    transform: scale(2); /* 因为涟漪的大小为标签的最长边，为了保证点击标签边缘时，涟漪也能覆盖整个标签，scale值最小应为2 */\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes mmd-maves-animation-definition {\r\n  from {\r\n    transform: scale(0.1);\r\n    opacity: 0.5;\r\n  }\r\n\r\n  to {\r\n    transform: scale(2); /* 因为涟漪的大小为标签的最长边，为了保证点击标签边缘时，涟漪也能覆盖整个标签，scale值最小应为2 */\r\n    opacity: 0;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"../../Downloads/blockchain-ui-privatization/PC/components/button"}]}