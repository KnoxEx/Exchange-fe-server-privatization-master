{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/components/set-futures/set-futures.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/components/set-futures/set-futures.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n\n/*\r\n@ 喜好设置\r\n@author HDD */\nimport { myStorage } from '@/utils';\nexport default {\n  name: 'forced-reminder',\n  data: function data() {\n    return {\n      // 持仓类型 1: 单向持仓 2： 双向持仓\n      positionModel: myStorage.get('positionModel') || 2,\n      // 下单二次确认\n      pcSecondConfirm: myStorage.get('pcSecondConfirm') || 1,\n      // 展示单位\n      coUnit: myStorage.get('coUnitType') || 2,\n      // 是否可以切换持仓类型\n      positionModelCanSwitch: true,\n      // 二次确认开关\n      switchFlag: true,\n      // 有效期\n      expireTime: 14\n    };\n  },\n  props: {\n    isShow: {\n      default: false,\n      type: Boolean\n    },\n    close: {\n      default: function _default() {},\n      type: Function\n    }\n  },\n  computed: {\n    lanText: function lanText() {\n      return {\n        titleText: this.$t('futures.setFutures.titleText'),\n        // '交易喜好设置',\n        text1: this.$t('futures.setFutures.text1'),\n        // '持仓类型',\n        text2: this.$t('futures.setFutures.text2'),\n        // '持有任何合约仓位/有挂单时不可更改持仓类型',\n        text3: this.$t('futures.setFutures.text3'),\n        // '单向持仓',\n        text4: this.$t('futures.setFutures.text4'),\n        // '单向持仓模式下，一个合约只允许持有一个方向的仓位',\n        text5: this.$t('futures.setFutures.text5'),\n        // '双向持仓',\n        text6: this.$t('futures.setFutures.text6'),\n        // '双向持仓模式下，一个合约可允许同时持有多空两个方向的仓位，并且同一合约下不同方向仓位风险对冲',\n        text7: this.$t('futures.setFutures.text7'),\n        // '下单前弹框确认',\n        text8: this.$t('futures.setFutures.text8'),\n        // '开启',\n        text9: this.$t('futures.setFutures.text9'),\n        // '关闭',\n        text10: this.$t('futures.setFutures.text10'),\n        // '合约单位',\n        text11: this.$t('futures.setFutures.text11'),\n        // '张',\n        text12: this.$t('futures.setFutures.text12') // '确定',\n\n      };\n    },\n    // 用户配置信息\n    userConfig: function userConfig() {\n      return this.$store.state.future.futureUserConfig;\n    },\n    // 当前合约信息\n    contractInfo: function contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 币种单位\n    multiplierCoin: function multiplierCoin() {\n      if (this.userConfig) {\n        return this.userConfig.multiplierCoin;\n      }\n\n      if (this.contractInfo) {\n        return this.contractInfo.base;\n      }\n\n      return 'BTC';\n    },\n    // 是否Login\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    // 当前合约ID\n    contractId: function contractId() {\n      return this.$store.state.future.contractId;\n    },\n    // 提交保证金按钮文案\n    confirmText: function confirmText() {\n      return this.lanText.text12; // '确定';\n    },\n    // 是否开通了合约交易\n    openContract: function openContract() {\n      return this.$store.state.future.openContract;\n    }\n  },\n  watch: {\n    userConfig: function userConfig(val) {\n      if (val) {\n        this.positionModel = this.userConfig.positionModel;\n        this.pcSecondConfirm = this.userConfig.pcSecondConfirm;\n        this.coUnit = this.userConfig.coUnit;\n        this.expireTime = this.userConfig.expireTime;\n        this.positionModelCanSwitch = !!this.userConfig.positionModelCanSwitch;\n        myStorage.set('pcSecondConfirm', this.pcSecondConfirm);\n      } else {\n        this.pcSecondConfirm = myStorage.get('pcSecondConfirm') || 1;\n      }\n\n      if (this.pcSecondConfirm) {\n        this.switchFlag = true;\n      } else {\n        this.switchFlag = false;\n      }\n    }\n  },\n  methods: {\n    init: function init() {\n      if (this.userConfig) {\n        this.positionModel = this.userConfig.positionModel;\n        this.pcSecondConfirm = this.userConfig.pcSecondConfirm;\n        this.coUnit = this.userConfig.coUnit;\n        this.expireTime = this.userConfig.expireTime;\n        this.positionModelCanSwitch = !!this.userConfig.positionModelCanSwitch;\n        myStorage.set('pcSecondConfirm', this.pcSecondConfirm);\n      } else {\n        this.pcSecondConfirm = myStorage.get('pcSecondConfirm') || 1;\n      }\n\n      if (this.pcSecondConfirm) {\n        this.switchFlag = true;\n      } else {\n        this.switchFlag = false;\n      }\n    },\n    // 切换事件\n    redioChange: function redioChange(type, vlaue) {\n      if (type === 'positionModel' && !this.positionModelCanSwitch && this.isLogin && this.openContract) {\n        this.$bus.$emit('tip', {\n          text: '持有任何合约仓位/有挂单时不可更改持仓类型',\n          type: 'error'\n        });\n      } else {\n        this[type] = vlaue;\n      }\n    },\n    switchChange: function switchChange() {\n      this.switchFlag = !this.switchFlag;\n    },\n    // 提交\n    submitConfirm: function submitConfirm() {\n      var _this = this;\n\n      // 判断未登录 或者 为开通合约的情况\n      if (!this.isLogin || !this.openContract) {\n        myStorage.set('coUnitType', this.coUnit);\n        myStorage.set('pcSecondConfirm', this.pcSecondConfirm);\n        myStorage.set('positionModel', this.positionModel);\n        this.$store.commit('SET_COUNIT_TYPE', this.coUnit);\n        this.$store.dispatch('setActivePublicInfo');\n        this.$bus.$emit('set-future', {\n          positionModel: this.positionModel,\n          coUnit: this.coUnit,\n          pcSecondConfirm: this.pcSecondConfirm\n        });\n        this.close();\n        return false;\n      }\n\n      if (this.userConfig) {\n        this.dialogConfirmLoading = true;\n        this.axios({\n          url: this.$store.state.url.futures.editUserPageConfig,\n          hostType: 'co',\n          method: 'post',\n          params: {\n            positionModel: this.positionModel,\n            pcSecondConfirm: this.switchFlag ? 1 : 0,\n            coUnit: this.coUnit,\n            contractId: this.contractId,\n            expireTime: this.expireTime\n          }\n        }).then(function (_ref) {\n          var code = _ref.code,\n              msg = _ref.msg;\n\n          if (code.toString() === '0') {\n            myStorage.set('pcSecondConfirm', _this.pcSecondConfirm);\n            myStorage.set('coUnitType', _this.coUnit);\n            myStorage.set('positionModel', _this.positionModel);\n\n            _this.$store.dispatch('getUserConfig');\n\n            _this.close();\n\n            _this.$bus.$emit('tip', {\n              text: msg,\n              type: 'success'\n            });\n          } else {\n            _this.$bus.$emit('tip', {\n              text: msg,\n              type: 'error'\n            });\n          }\n\n          _this.dialogConfirmLoading = false;\n        });\n      } else {\n        console.error('没有获取到userConfig');\n      }\n\n      return false;\n    }\n  }\n};",null]}