{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/mining/mining.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/mining/mining.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { fixD, formatTime, getComplexType, imgMap, colorMap, getCoinShowName } from '@/utils';\nexport default {\n  name: 'noticeInfo',\n  data: function data() {\n    return {\n      currentTab: 1,\n      navTab: [{\n        name: this.$t('mining.my_earnings'),\n        index: 1\n      }, {\n        name: this.$t('mining.invite_bonus'),\n        index: 2\n      }],\n      marginRight: 50,\n      lineHeight: '48',\n      headClasses: '',\n      bodyClasses: '',\n      tableLoading: false,\n      backgroundImg: \"background: url(\".concat(imgMap.jjrNeaderBg, \") center bottom no-repeat\"),\n      myData: {},\n      tableType: 'return_list',\n      pagination: {\n        // 翻页数据\n        count: 0,\n        // 总数量\n        pageSize: 10,\n        // 每页显示条数\n        page: 1 // 当前页数\n\n      },\n      // 邀请分红相关数据\n      inviteNumber: '',\n      inviteReturnNumber: '',\n      inviteCode: '',\n      inviteCodeShow: true,\n      inviteUrlShow: true,\n      inviteUrl: '',\n      inviteQECode: '',\n      inviteQECodeShow: false,\n      page: 1,\n      pageSize: 10,\n      count: 0,\n      loading: true,\n      classes: '',\n      lineClass: '',\n      // table 参数\n      columnsBonus: [{\n        title: this.$t('personal.inviteCodeManagement.columns')[0],\n        align: 'left',\n        width: '200px',\n        classes: ''\n      }, {\n        title: this.$t('personal.inviteCodeManagement.columns')[1],\n        align: 'center',\n        width: ''\n      }\n      /*\r\n              {\r\n                title: this.$t('personal.inviteCodeManagement.columns')[2],\r\n                align: 'center',\r\n                width: '',\r\n              },\r\n              {\r\n                title: this.$t('personal.inviteCodeManagement.columns')[3],\r\n                align: 'center',\r\n                width: '',\r\n              },\r\n              */\n      ],\n      imgMap: imgMap,\n      colorMap: colorMap,\n      dataListBonus: [],\n      isInviteOpen: true\n    };\n  },\n  watch: {\n    isLogin: function isLogin(val) {\n      if (val) {\n        this.getData();\n      }\n    },\n    inviteInfoList: function inviteInfoList(_inviteInfoList) {\n      if (_inviteInfoList !== null) {\n        this.loading = false;\n        this.inviteNumber = _inviteInfoList.invite_number;\n        this.count = Number(_inviteInfoList.invite_number);\n        this.inviteReturnNumber = _inviteInfoList.invite_return_number;\n        this.inviteCode = _inviteInfoList.inviteCode;\n        this.inviteQECode = _inviteInfoList.inviteQECode;\n        this.inviteUrl = _inviteInfoList.inviteUrl;\n        this.processData(_inviteInfoList.invite_list);\n      }\n    },\n    publicInfo: function publicInfo(_publicInfo) {\n      if (_publicInfo !== null) {\n        if (Number(_publicInfo.switch.is_invite_open) === 1) {\n          this.isInviteOpen = true;\n        } else {\n          this.isInviteOpen = false;\n        }\n      }\n    }\n  },\n  computed: {\n    coinList: function coinList() {\n      if (this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n\n      return null;\n    },\n    publicInfo: function publicInfo() {\n      return this.$store.state.baseData.publicInfo;\n    },\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    inviteInfoList: function inviteInfoList() {\n      return this.$store.state.personal.inviteInfoList;\n    },\n    speed: function speed() {\n      if (this.myData.total_return_number) {\n        var speed = this.myData.total_return_number / this.myData.dividend_total_amount * 100;\n        return fixD(speed, 2);\n      }\n\n      return 0;\n    },\n    tabList: function tabList() {\n      return [{\n        key: 'return_list',\n        text: this.$t('mining.mining_detail') // '今日挖矿明细',\n\n      }, {\n        key: 'dividend_list',\n        text: this.$t('mining.amount_dividends') // '今日待分红收入',\n\n      }, {\n        key: 'yesterday_dividend_list',\n        text: this.$t('mining.bonus') // '昨日分红',\n\n      }];\n    },\n    columns: function columns() {\n      if (this.tableType === 'return_list') {\n        return [{\n          title: this.$t('mining.time'),\n          // '时间',\n          width: '100px'\n        }, {\n          title: \"\".concat(this.$t('mining.trader_volume'), \"(BTC)\"),\n          // '交易量折合(BTC)',\n          width: '30%'\n        }, {\n          title: \"\".concat(this.$t('mining.Produce'), \"\\n            (\").concat(getCoinShowName(this.myData.coin, this.coinList), \")\"),\n          // `产出(${this.myData.coin})`,\n          width: '30%'\n        }, {\n          title: this.$t('mining.state'),\n          // '状态',\n          width: '30%'\n        }];\n      }\n\n      return [{\n        title: this.$t('mining.coin'),\n        // '币种 ',\n        width: '100px'\n      }, {\n        title: this.$t('mining.platform'),\n        // '平台总手续费',\n        width: '48%'\n      }, {\n        title: this.$t('mining.divided'),\n        // '待分红',\n        width: '48%'\n      }];\n    },\n    dataList: function dataList() {\n      var _this = this;\n\n      var data = [];\n      var oData = this.myData[this.tableType];\n\n      if (oData && oData.length) {\n        oData.forEach(function (item, index) {\n          var lineData = {\n            id: \"\".concat(_this.tableType).concat(index)\n          };\n\n          if (_this.tableType === 'return_list') {\n            var status = item.status === 0 ? _this.$t('mining.replaced') : _this.$t('mining.Return'); // '待返还' : '返还';\n\n            lineData.data = [formatTime(item.dtime), _this.fixDFun(item.return_number_btc, 'BTC'), _this.fixDFun(item.return_number, _this.myData.coin), status];\n          } else {\n            lineData.data = [getCoinShowName(item.coin, _this.coinList), _this.fixDFun(item.fee, _this.myData.coin), _this.fixDFun(item.dividend_number, _this.myData.coin)];\n          }\n\n          data.push(lineData);\n        });\n      }\n\n      return data;\n    }\n  },\n  methods: {\n    // 切换\n    currentType: function currentType(data) {\n      if (data.index !== this.currentTab) {\n        this.currentTab = data.index;\n      }\n    },\n    fixDFun: function fixDFun(val, symbol) {\n      if (this.showPrecision(symbol)) {\n        return fixD(val, this.showPrecision(symbol));\n      }\n\n      return val;\n    },\n    showPrecision: function showPrecision(symbol) {\n      if (this.coinList) {\n        // const { coinList } = this.$store.state.baseData.market;\n        if (this.coinList[symbol]) {\n          var precision = this.coinList[symbol].showPrecision;\n\n          if (precision) {\n            return precision;\n          }\n        }\n      }\n\n      return 4;\n    },\n    // 翻页事件\n    pagechange: function pagechange(num) {\n      this.pagination.page = num;\n      this.getData();\n    },\n    // 请求数据\n    getData: function getData() {\n      var _this2 = this;\n\n      this.axios({\n        url: this.$store.state.url.common.return_info_list,\n        params: {\n          page: this.pagination.page,\n          pageSize: this.pagination.pageSize\n        },\n        method: 'post'\n      }).then(function (data) {\n        if (data.code === '0') {\n          _this2.myData = data.data;\n\n          if (_this2.tableType === 'return_list') {\n            _this2.pagination.count = data.data.return_count;\n          }\n\n          if (_this2.tableType === 'dividend_list') {\n            _this2.pagination.count = data.data.dividend_count;\n          }\n\n          if (_this2.tableType === 'yesterday_dividend_list') {\n            _this2.pagination.count = data.data.yesterday_dividend_count;\n          }\n        }\n      });\n    },\n    // 切换类型\n    switcherType: function switcherType(type) {\n      this.tableType = type;\n      this.pagination.page = 1;\n      this.getData();\n    },\n    copyClick: function copyClick(name) {\n      if (name === 'inviteCode') {\n        this.copy(this.inviteCode);\n      } else {\n        this.copy(this.inviteUrl);\n      }\n    },\n    copy: function copy(str) {\n      this.$bus.$emit('tip', {\n        text: this.$t('personal.prompt.copySucces'),\n        type: 'success'\n      });\n\n      function save(e) {\n        e.clipboardData.setData('text/plain', str); // 下面会说到clipboardData对象\n\n        e.preventDefault(); // 阻止默认行为\n      }\n\n      document.addEventListener('copy', save);\n      document.execCommand('copy'); // 使文档处于可编辑状态，否则无效\n\n      document.removeEventListener('copy', save);\n    },\n    handMouseenter: function handMouseenter(name) {\n      if (name === 'inviteCode') {\n        this.inviteCodeShow = false;\n      } else {\n        this.inviteUrlShow = false;\n      }\n    },\n    handMouseleave: function handMouseleave(name) {\n      if (name === 'inviteCode') {\n        this.inviteCodeShow = true;\n      } else {\n        this.inviteUrlShow = true;\n      }\n    },\n    processData: function processData(list) {\n      // 处理数据\n      if (getComplexType(list) === 'Array') {\n        this.dataListBonus = list.map(function (obj) {\n          return {\n            data: [formatTime(obj.register_time), obj.invitee]\n          };\n        });\n      }\n    },\n    pagechangeBonus: function pagechangeBonus(page) {\n      this.page = page;\n      var info = {\n        page: page,\n        pageSize: this.pageSize\n      };\n      this.$store.dispatch('inviteInfoList', info);\n    }\n  }\n};",null]}