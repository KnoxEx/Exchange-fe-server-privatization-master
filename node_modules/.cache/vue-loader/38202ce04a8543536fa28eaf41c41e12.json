{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/Downloads/BlockChain-ui-privatization/PC/components/button/Button.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/h/Downloads/BlockChain-ui-privatization/PC/components/button/Button.vue","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.solidBc {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n}\r\n// 实心按钮\r\nsolid-style() {\r\n  height: 40px;\r\n  line-height: 40px;\r\n}\r\n// 实心按钮 -- 默认\r\n.common-button-solid {\r\n  font-size: 14px;\r\n}\r\n\r\n// 实心按钮 -- 禁止\r\n.common-button-solid-disabled {\r\n  font-size: 14px;\r\n  cursor: not-allowed!important\r\n}\r\n\r\n// 实心按钮 -- 等待\r\n.common-button-solid-loading {\r\n  font-size: 14px;\r\n  cursor: wait!important\r\n}\r\n\r\n// 空心按钮\r\n.common-button-hollow, .common-button-hollow-big {\r\n  border-width: 1px;\r\n  border-style: solid;\r\n}\r\n.common-button-hollow {\r\n  font-size: 12px\r\n}\r\n.common-button-hollow-big {\r\n  font-size: 14px\r\n}\r\n\r\n// 文本按钮\r\n.common-button-text,\r\n.common-button-text-kind {\r\n  font-size: 12px;\r\n}\r\n.common-button {\r\n  transition: all 0.3s;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  display: inline-block;\r\n  .common-button-slot {\r\n    position: relative;\r\n    display: inline;\r\n    vertical-align: middle;\r\n    .common-button-loading {\r\n      position: absolute;\r\n      vertical-align: middle;\r\n      left: -14px;\r\n      top: 50%;\r\n      transform: translateY(-50%)\r\n    }\r\n  }\r\n  .button-background {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 2;\r\n  }\r\n}\r\n.button-canv {\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 20px;\r\n  transform: scale(0);\r\n}\r\n.mmd-waves-effect {\r\n  border-radius: 100%;\r\n  background-color: #D8D8D8;\r\n\r\n}\r\n\r\n.mmd-waves-effect-animation {\r\n  animation: mmd-maves-animation-definition 0.8s ease-out;\r\n  /* 兼容各大浏览器 */\r\n  -moz-animation: mmd-maves-animation-definition 0.8s ease-out;\r\n  -webkit-animation: mmd-maves-animation-definition 0.8s ease-out;\r\n  -o-animation: mmd-maves-animation-definition 0.8s ease-out;\r\n}\r\n\r\n@keyframes mmd-maves-animation-definition {\r\n  from {\r\n    transform: scale(0.1);\r\n    opacity: 0.5;\r\n  }\r\n\r\n  to {\r\n    transform: scale(2); /* 因为涟漪的大小为标签的最长边，为了保证点击标签边缘时，涟漪也能覆盖整个标签，scale值最小应为2 */\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes mmd-maves-animation-definition {\r\n  from {\r\n    transform: scale(0.1);\r\n    opacity: 0.5;\r\n  }\r\n\r\n  to {\r\n    transform: scale(2); /* 因为涟漪的大小为标签的最长边，为了保证点击标签边缘时，涟漪也能覆盖整个标签，scale值最小应为2 */\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes mmd-maves-animation-definition {\r\n  from {\r\n    transform: scale(0.1);\r\n    opacity: 0.5;\r\n  }\r\n\r\n  to {\r\n    transform: scale(2); /* 因为涟漪的大小为标签的最长边，为了保证点击标签边缘时，涟漪也能覆盖整个标签，scale值最小应为2 */\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes mmd-maves-animation-definition {\r\n  from {\r\n    transform: scale(0.1);\r\n    opacity: 0.5;\r\n  }\r\n\r\n  to {\r\n    transform: scale(2); /* 因为涟漪的大小为标签的最长边，为了保证点击标签边缘时，涟漪也能覆盖整个标签，scale值最小应为2 */\r\n    opacity: 0;\r\n  }\r\n}\r\n",{"version":3,"sources":["Button.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Button.vue","sourceRoot":"../../Downloads/BlockChain-ui-privatization/PC/components/button","sourcesContent":["// Created by 任泽阳 on 18/12/06. // 按钮组件 // *****************************\r\n// 注 1.该组件必须传入type // 注 2.组件内容通过slot传入\r\n<template>\r\n  <!--  -->\r\n  <button\r\n    class='common-button'\r\n    :style='contentStyle'\r\n    :class='`${allClass} ${className}`'\r\n    @click.stop='handClick'\r\n    ref='button'\r\n    @mousedown='handMouseDown'\r\n    @mouseup='handMouseUp'\r\n    @mouseenter='handMouseenter'\r\n    @mouseleave='handMouseleave'\r\n  >\r\n    <div class='common-button-slot'>\r\n      <button\r\n        size='10'\r\n        className='common-button-loading'\r\n        v-if='loading'\r\n        colorName='f-1-cl'\r\n      />\r\n      <slot />\r\n    </div>\r\n    <!-- 用于实心按钮 滑过和点击 -->\r\n    <div v-if='solidBcClass' class='solidBc' :class='solidBcClass'></div>\r\n    <!-- 动画 -->\r\n  </button>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'c-button',\r\n  data() {\r\n    return {\r\n      flag: true,\r\n      wH: 0, // 动画变量\r\n      nX: 0, // 动画变量\r\n      nY: 0, // 动画变量\r\n      canvClass: '', // 动画class\r\n      isHover: false,\r\n      isClick: false,\r\n    };\r\n  },\r\n  props: {\r\n    name: { default: '', type: String },\r\n    // 类型   实心-solid 空心-hollow 文本-test\r\n    type: {\r\n      validator(val) {\r\n        return ['solid', 'hollow', 'text'].indexOf(val) !== -1;\r\n      },\r\n      default: 'solid',\r\n    },\r\n    className: { default: '', type: String }, // 根容器class 默认样式 不要传进来选中样式和滑过样式\r\n    // *** 如果要配置颜色组 需要传入一整套颜色\r\n    defaultColorClass: { default: '', type: String }, // 该组件默认颜色组\r\n    hoverColorClass: { default: '', type: String }, // 该组件滑过颜色组 仅空心按钮 框线按钮\r\n    activeColorClass: { default: '', type: String }, // 该组件选中颜色组 仅空心按钮 框线按钮\r\n    // ***\r\n    disabled: { default: false, type: Boolean }, // 是否禁用 (!** 该属性仅存在solid类型 **!)\r\n    loading: { default: false, type: Boolean }, // 是否loading  (!** 该属性仅存在solid类型 **!)\r\n    big: { default: false, type: Boolean }, // 是否为略大button  (!** 该属性仅存在hollow类型 **!)\r\n    kind: { default: false, type: Boolean }, // false为蓝色系 true为灰色系  (!** 该属性仅存在text类型 **!)\r\n    paddingW: { default: '', type: String }, // 左右padding\r\n    height: { default: '', type: String }, // 该容器根容器 height属性\r\n    width: { default: '', type: String }, // 该容器根容器 width属性\r\n    marginTop: { default: '0px', type: String }, // 该组件根容器 margin-top属性\r\n  },\r\n  created() {\r\n    // 错误处理： 如果 disable和loading同时存在\r\n    if (this.disabled && this.loading) {\r\n      this.flag = false; // 不展示组件\r\n      // throw('Common-button: disable 和 loading 只可存在一个') // 抛错\r\n      // console.error('Common-button: disable 和 loading 只可存在一个');\r\n    }\r\n    this.$bus.$on('button-click', (name) => {\r\n      if (name === this.name) {\r\n        this.handClick();\r\n      }\r\n    });\r\n  },\r\n  computed: {\r\n    // overClass() {\r\n    //   let className = ''\r\n    //   if(this.type === 'solid') { return className }\r\n    //   if(this.isHover) {\r\n    //     if(this.type === 'hollow') {\r\n    //       // if(this.big) {  }\r\n    //       return 'a-12-bd'\r\n    //     }\r\n    //   }\r\n    // },\r\n    // 用于实心按钮 滑过和点击\r\n    solidBcClass() {\r\n      let className = null;\r\n      if (this.type === 'solid' && !this.loading && !this.disabled) {\r\n        if (this.isHover) {\r\n          className = 'u-14-bg';\r\n        }\r\n        if (this.isClick) {\r\n          className = 'u-15-bg';\r\n        }\r\n      }\r\n      return className;\r\n    },\r\n    contentStyle() {\r\n      let { width, height, paddingW } = this.$props;\r\n      const hollowH = this.big ? '30px' : '24px';\r\n      switch (this.type) {\r\n        // 实心\r\n        case 'solid':\r\n          width = width === '' ? '' : width;\r\n          height = height === '' ? '40px' : height;\r\n          paddingW = paddingW === '' ? '20px' : paddingW;\r\n          break;\r\n        // 空心\r\n        case 'hollow':\r\n          width = width === '' ? '' : width;\r\n          height = height === '' ? hollowH : height;\r\n          paddingW = paddingW === '' ? '20px' : paddingW;\r\n          break;\r\n        // 文本\r\n        case 'text':\r\n          width = width === '' ? '' : width;\r\n          height = height === '' ? '24px' : height;\r\n          paddingW = paddingW === '' ? '10px' : paddingW;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return {\r\n        width,\r\n        height,\r\n        paddingLeft: paddingW,\r\n        paddingRight: paddingW,\r\n        marginTop: this.marginTop,\r\n      };\r\n    },\r\n    // 整理当前类型和状态\r\n    nowType() {\r\n      let type = 'solid';\r\n      if (this.type === 'solid') {\r\n        type = 'solid';\r\n        if (this.loading) {\r\n          type = 'solid-loading';\r\n        }\r\n        if (this.disabled) {\r\n          type = 'solid-disabled';\r\n        }\r\n      } else if (this.type === 'hollow') {\r\n        type = 'hollow';\r\n        if (this.big) {\r\n          type = 'hollow-big';\r\n        }\r\n      } else if (this.type === 'text') {\r\n        type = 'text';\r\n        if (this.kind) {\r\n          type = 'text-king';\r\n        }\r\n      }\r\n      return type;\r\n    },\r\n    // 基础样式\r\n    infoClass() {\r\n      switch (this.nowType) {\r\n        // 实心\r\n        case 'solid':\r\n          return 'common-button-solid';\r\n        case 'solid-loading':\r\n          return 'common-button-solid-loading';\r\n        case 'solid-disabled':\r\n          return 'common-button-solid-disabled';\r\n        // 框线\r\n        case 'hollow':\r\n          return 'common-button-hollow';\r\n        case 'hollow-big':\r\n          return 'common-button-hollow-big';\r\n        // 文本\r\n        case 'text':\r\n          return 'common-button-text';\r\n        case 'text-king':\r\n          return 'common-button-text-kind';\r\n        default:\r\n          return 'common-button-solid';\r\n      }\r\n    },\r\n    // 元素默认颜色\r\n    defaultColor() {\r\n      if (this.defaultColorClass.length > 0) {\r\n        return this.defaultColorClass;\r\n      }\r\n      switch (this.nowType) {\r\n        // 实心\r\n        case 'solid':\r\n          return 'u-8-bg u-16-cl'; // ( class 背景色-蓝 字体色-白 )\r\n        case 'solid-loading':\r\n          return 'u-8-bg u-16-cl'; // ( class 背景色-蓝 字体色-白 )\r\n        case 'solid-disabled':\r\n          return 'u-11-bg u-16-cl'; // ( class 背景色-灰 字体色-白 )\r\n        // 框线\r\n        case 'hollow':\r\n          return 'u-11-cl u-11-bd'; // ( class 字体色-灰 边框色-灰 )\r\n        case 'hollow-big':\r\n          return 'u-11-cl u-8-bd'; // ( class 字体色-灰 边框色-蓝 )\r\n        // 文本\r\n        case 'text':\r\n          return 'u-8-cl'; // ( class 字体色-蓝 )\r\n        case 'text-king':\r\n          return 'u-11-cl'; // ( class 字体色-灰 )\r\n        default:\r\n          return 'u-8-bg u-11-cl'; // ( class 背景色-蓝 字体色-白 )\r\n      }\r\n    },\r\n    // 元素滑过颜色\r\n    hoverColor() {\r\n      if (this.hoverColorClass.length > 0) {\r\n        return this.hoverColorClass;\r\n      }\r\n      switch (this.nowType) {\r\n        // 实心\r\n        case 'solid':\r\n          return 'u-8-bg u-16-cl'; // ( class 背景色-蓝 字体色-白 )\r\n        case 'solid-loading':\r\n          return 'u-8-bg u-16-cl'; // ( class 背景色-蓝 字体色-白 )\r\n        case 'solid-disabled':\r\n          return 'u-11-bg u-16-cl'; // ( class 背景色-灰 字体色-白 )\r\n        // 框线\r\n        case 'hollow':\r\n          return 'u-8-cl u-8-bd'; // ( class 字体色-蓝 边框色-蓝 )\r\n        case 'hollow-big':\r\n          return 'u-8-cl u-8-bd'; // ( class 字体色-蓝 边框色-蓝 )\r\n        // 文本\r\n        case 'text':\r\n          return 'u-8-cl u-9-bg'; // ( class 字体色 )\r\n        case 'text-king':\r\n          return 'u-11-cl u-12-bg'; // ( class 字体色 )\r\n        default:\r\n          return 'u-8-bg u-11-cl'; // ( class 背景色 字体色 )\r\n      }\r\n    },\r\n    // 元素点击颜色\r\n    activeColor() {\r\n      if (this.activeColorClass.length > 0) {\r\n        return this.activeColorClass;\r\n      }\r\n      switch (this.nowType) {\r\n        // 实心\r\n        case 'solid':\r\n          return 'u-8-bg u-16-cl'; // ( class 背景色-蓝 字体色-白 )\r\n        case 'solid-loading':\r\n          return 'u-8-bg u-16-cl'; // ( class 背景色-蓝 字体色-白 )\r\n        case 'solid-disabled':\r\n          return 'u-12-bg u-16-cl'; // ( class 背景色-灰 字体色-白 )\r\n        // 框线\r\n        case 'hollow':\r\n          return 'u-8-cl u-8-bd'; // ( class 字体色-蓝 边框色-蓝 )\r\n        case 'hollow-big':\r\n          return 'u-8-cl u-8-bd'; // ( class 字体色-蓝 边框色-蓝 )\r\n        // 文本3\r\n        case 'text':\r\n          return 'u-8-cl u-10-bg'; // ( class 字体色 )\r\n        case 'text-king':\r\n          return 'u-11-cl u-12-bg'; // ( class 字体色 )\r\n        default:\r\n          return 'u-8-bg u-11-cl'; // ( class 背景色 字体色 )\r\n      }\r\n    },\r\n    allClass() {\r\n      let colorClass = this.defaultColor;\r\n      if (this.isHover) {\r\n        colorClass = this.hoverColor;\r\n      }\r\n      if (this.isClick) {\r\n        colorClass = this.activeColor;\r\n      }\r\n      return `${this.infoClass} ${colorClass}`;\r\n    },\r\n    // 特效点击点\r\n    canvStyle() {\r\n      return {\r\n        width: `${this.wH}px`,\r\n        height: `${this.wH}px`,\r\n        left: `${this.nX}px`,\r\n        top: `${this.nY}px`,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    // input 鼠标划入\r\n    handMouseenter() {\r\n      this.isHover = true;\r\n    },\r\n    // input 鼠标划出\r\n    handMouseleave() {\r\n      this.isHover = false;\r\n    },\r\n    handMouseDown() {\r\n      this.isClick = true;\r\n    },\r\n    handMouseUp() {\r\n      this.isClick = false;\r\n    },\r\n    handClick() {\r\n      if (this.disabled || this.loading) return;\r\n      this.$emit('click');\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang='stylus'>\r\n.solidBc {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n}\r\n// 实心按钮\r\nsolid-style() {\r\n  height: 40px;\r\n  line-height: 40px;\r\n}\r\n// 实心按钮 -- 默认\r\n.common-button-solid {\r\n  font-size: 14px;\r\n}\r\n\r\n// 实心按钮 -- 禁止\r\n.common-button-solid-disabled {\r\n  font-size: 14px;\r\n  cursor: not-allowed!important\r\n}\r\n\r\n// 实心按钮 -- 等待\r\n.common-button-solid-loading {\r\n  font-size: 14px;\r\n  cursor: wait!important\r\n}\r\n\r\n// 空心按钮\r\n.common-button-hollow, .common-button-hollow-big {\r\n  border-width: 1px;\r\n  border-style: solid;\r\n}\r\n.common-button-hollow {\r\n  font-size: 12px\r\n}\r\n.common-button-hollow-big {\r\n  font-size: 14px\r\n}\r\n\r\n// 文本按钮\r\n.common-button-text,\r\n.common-button-text-kind {\r\n  font-size: 12px;\r\n}\r\n.common-button {\r\n  transition: all 0.3s;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  display: inline-block;\r\n  .common-button-slot {\r\n    position: relative;\r\n    display: inline;\r\n    vertical-align: middle;\r\n    .common-button-loading {\r\n      position: absolute;\r\n      vertical-align: middle;\r\n      left: -14px;\r\n      top: 50%;\r\n      transform: translateY(-50%)\r\n    }\r\n  }\r\n  .button-background {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 2;\r\n  }\r\n}\r\n.button-canv {\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 20px;\r\n  transform: scale(0);\r\n}\r\n.mmd-waves-effect {\r\n  border-radius: 100%;\r\n  background-color: #D8D8D8;\r\n\r\n}\r\n\r\n.mmd-waves-effect-animation {\r\n  animation: mmd-maves-animation-definition 0.8s ease-out;\r\n  /* 兼容各大浏览器 */\r\n  -moz-animation: mmd-maves-animation-definition 0.8s ease-out;\r\n  -webkit-animation: mmd-maves-animation-definition 0.8s ease-out;\r\n  -o-animation: mmd-maves-animation-definition 0.8s ease-out;\r\n}\r\n\r\n@keyframes mmd-maves-animation-definition {\r\n  from {\r\n    transform: scale(0.1);\r\n    opacity: 0.5;\r\n  }\r\n\r\n  to {\r\n    transform: scale(2); /* 因为涟漪的大小为标签的最长边，为了保证点击标签边缘时，涟漪也能覆盖整个标签，scale值最小应为2 */\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes mmd-maves-animation-definition {\r\n  from {\r\n    transform: scale(0.1);\r\n    opacity: 0.5;\r\n  }\r\n\r\n  to {\r\n    transform: scale(2); /* 因为涟漪的大小为标签的最长边，为了保证点击标签边缘时，涟漪也能覆盖整个标签，scale值最小应为2 */\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes mmd-maves-animation-definition {\r\n  from {\r\n    transform: scale(0.1);\r\n    opacity: 0.5;\r\n  }\r\n\r\n  to {\r\n    transform: scale(2); /* 因为涟漪的大小为标签的最长边，为了保证点击标签边缘时，涟漪也能覆盖整个标签，scale值最小应为2 */\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes mmd-maves-animation-definition {\r\n  from {\r\n    transform: scale(0.1);\r\n    opacity: 0.5;\r\n  }\r\n\r\n  to {\r\n    transform: scale(2); /* 因为涟漪的大小为标签的最长边，为了保证点击标签边缘时，涟漪也能覆盖整个标签，scale值最小应为2 */\r\n    opacity: 0;\r\n  }\r\n}\r\n</style>\r\n"]}]}