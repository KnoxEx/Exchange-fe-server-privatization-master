{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/market/index/index.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/market/index/index.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapState } from 'vuex';\nimport _worker from '@/utils/webWorker';\nimport { myStorage, getCoinShowName } from '@/utils';\nexport default {\n  data: function data() {\n    return {\n      // 市场数据\n      marketData: null,\n      // MywebSocket\n      MywebSocket: null,\n      // 当前市场\n      marketCurrent: null,\n      // 当前币对\n      symbolCurrent: null,\n      // 当前币对列表\n      symbolCurrentList: [],\n      // 筛选 货币对\n      listfilter: null,\n      // 表格加载LOADING\n      tableLoading: false,\n      // 表格 超过 20条出现滚动条\n      lineNumber: 20,\n      // 24小时行情WS数据\n      marketDataObj: [],\n      marketDataList: [],\n      // 推荐位数据\n      recommendDataList: {},\n      klineDataList: {},\n      // 自选币对\n      mySymbolList: myStorage.get('mySymbol') || [],\n      setMyMarketSwitch: true,\n      // 是否显示左侧数据栏\n      isShowRecommend: true\n    };\n  },\n  computed: _objectSpread(_objectSpread({\n    coinTagLangs: function coinTagLangs() {\n      return this.$store.state.baseData.coinTagLangs;\n    },\n    coinTagOpen: function coinTagOpen() {\n      return this.$store.state.baseData.coin_tag_open;\n    }\n  }, mapState({\n    baseInfo: function baseInfo(_ref) {\n      var baseData = _ref.baseData;\n      this.marketData = baseData.market; // 获取当前市场\n\n      this.marketCurrent = myStorage.get('homeMarkTitle'); // 获取当前币对\n\n      this.symbolCurrent = myStorage.get('sSymbolName');\n      return baseData;\n    }\n  })), {}, {\n    // WS worker\n    worker: function worker() {\n      return _worker();\n    },\n    // 全部 货币对\n    symbolAll: function symbolAll() {\n      return this.$store.state.baseData.symbolAll;\n    },\n    // 当前市场列表\n    currentMarketList: function currentMarketList() {\n      return this.marketData ? this.marketData.market : null;\n    },\n    coinList: function coinList() {\n      if (this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n\n      return null;\n    },\n    // 当前币对列表\n    symbolList: function symbolList() {\n      var _this = this;\n\n      // 如果 当前市场 是 自选市场\n      if (this.marketCurrent === 'myMarket') {\n        var mySymbol = myStorage.get('mySymbol') || [];\n        var marketList = {};\n\n        if (mySymbol.length) {\n          mySymbol.forEach(function (item) {\n            if (item && _this.symbolAll[item]) {\n              marketList[item] = _this.symbolAll[item];\n            }\n          });\n        }\n\n        return marketList;\n      }\n\n      if (this.currentMarketList && this.marketCurrent) {\n        return this.currentMarketList[this.marketCurrent];\n      }\n\n      return null;\n    },\n    // 汇率单位\n    rateData: function rateData() {\n      return this.$store.state.baseData.rate;\n    },\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    optionalSymbolServerOpen: function optionalSymbolServerOpen() {\n      return this.$store.state.baseData.optional_symbol_server_open;\n    }\n  }),\n  watch: {\n    symbolList: function symbolList(val, oldVal) {\n      if (oldVal) {\n        this.webSocketSend('Market', 'unsub', this.symbolCurrent, oldVal);\n        this.webSocketSend('Market', 'sub', this.symbolCurrent, val);\n      }\n    },\n    // 监听 是否登录\n    isLogin: function isLogin(val) {\n      if (val) {\n        this.mySymbolList = myStorage.get('mySymbol') || [];\n      }\n    },\n    // 监听获取到 market 接口的数据\n    marketData: function marketData(val) {\n      if (val.wsUrl) {\n        // 创建WS\n        this.worker.postMessage({\n          type: 'CREAT_WEBSOCKET',\n          data: {\n            wsUrl: val.wsUrl,\n            lan: this.$store.state.baseData.lan,\n            rate: this.rateData,\n            symbolAll: this.symbolAll\n          }\n        });\n      }\n    },\n    // 监听 webSocket 创建成功\n    MywebSocket: function MywebSocket(val) {\n      if (val) {\n        // 发送 24小时行情历史数据 Send\n        this.webSocketSend('Review', null, this.symbolCurrent, this.symbolAll); // 发送 24小时行情实时数据 Send\n\n        this.webSocketSend('Market', 'sub', this.symbolCurrent, this.symbolList); // 发送 推荐位 kline数据 Send\n\n        if (this.symbolCurrent) {\n          this.klneSend();\n        }\n      }\n    },\n    symbolCurrent: function symbolCurrent(val, oldVal) {\n      if (val && this.MywebSocket) {\n        this.isShowRecommend = true;\n        this.klneSend(oldVal);\n      }\n    },\n    mySymbolList: function mySymbolList(val) {\n      if (val) {\n        this.$bus.$emit('MYSYMBOL-LIST', val);\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.webSocketSend('Market', 'unsub', this.symbolCurrent, this.symbolList);\n    window.onscroll = null;\n  },\n  methods: {\n    init: function init() {\n      var _this2 = this;\n\n      this.onmessageWorker(); // 监听 市场切换\n\n      this.$bus.$on('SWITCH-MARKET', function (data) {\n        _this2.marketCurrent = data;\n\n        _this2.setMarketData();\n      });\n      this.$bus.$on('SWITCH-STORE', function (data) {\n        _this2.setMyMarket(data);\n\n        _this2.setMarketData();\n      });\n      this.$bus.$on('SWITCH-SYMBOL', function (data) {\n        _this2.symbolCurrent = data;\n\n        _this2.setRecommendData();\n      });\n      this.$bus.$emit('MYSYMBOL-LIST', this.mySymbolList); // 监听 窗口的大小改变\n\n      this.$bus.$on('WINFOW_ON_RESIIZE', function () {\n        _this2.isShowRecommend = true;\n      });\n    },\n    klneSend: function klneSend(oldVal) {\n      var symbolArr = this.symbolCurrent.toLowerCase().split('/');\n      var symbol = symbolArr[0] + symbolArr[1];\n\n      if (oldVal) {\n        var oldSymbolArr = oldVal.toLowerCase().split('/');\n        var oldSsymbol = oldSymbolArr[0] + oldSymbolArr[1];\n        this.worker.postMessage({\n          type: 'WEBSOCKET_KLINE_SEND',\n          data: {\n            symbol: oldSsymbol,\n            type: 'unsub',\n            lastTimeS: '1min'\n          }\n        });\n      }\n\n      this.worker.postMessage({\n        type: 'WEBSOCKET_KLINE_SEND',\n        data: {\n          symbol: symbol,\n          type: 'req',\n          lastTimeS: '1min',\n          lTime: false,\n          number: 100,\n          symbolCurrent: this.symbolCurrent\n        }\n      });\n      this.worker.postMessage({\n        type: 'WEBSOCKET_KLINE_SEND',\n        data: {\n          symbol: symbol,\n          type: 'sub',\n          lastTimeS: '1min',\n          lTime: false,\n          symbolCurrent: this.symbolCurrent\n        }\n      });\n    },\n    onmessageWorker: function onmessageWorker() {\n      var _this3 = this;\n\n      this.worker.onmessage = function (event) {\n        var data = event.data; // 监听 WebSocket 链接成功\n\n        if (data.type === 'WEBSOCKET_ON_OPEN') {\n          _this3.MywebSocket = data.data.type;\n        } // 监听 WS 数据\n\n\n        if (data.type === 'WEBSOCKET_DATA') {\n          _this3.listenWSData(data.data);\n        }\n      };\n    },\n    // 监听 WS 返回的数据\n    listenWSData: function listenWSData(data) {\n      var _this4 = this;\n\n      var type = data.type,\n          WsData = data.WsData; // 24小时行情数据\n\n      if (type === 'MARKET_DATA') {\n        this.marketDataObj = WsData;\n        this.setMarketData();\n        this.setRecommendData();\n      }\n\n      if (type.indexOf('KLINE_DATA') > -1) {\n        var _WsData$channel$split = WsData.channel.split('_'),\n            _WsData$channel$split2 = _slicedToArray(_WsData$channel$split, 2),\n            symbolType = _WsData$channel$split2[1];\n\n        var key = this.symbolCurrent;\n        var symbolArr = this.symbolCurrent.toLowerCase().split('/');\n        var symbol = symbolArr[0] + symbolArr[1];\n\n        if (symbol === symbolType) {\n          if (WsData.event_rep === 'rep') {\n            var kData = WsData.data;\n            this.klineDataList[key] = [];\n            var lengthNumber = kData.slice(-20);\n            lengthNumber.forEach(function (item) {\n              _this4.klineDataList[key].push([item.id, item.close]);\n            });\n          } else {\n            var _kData = WsData.tick;\n            var keyYs = this.klineDataList[key] || [];\n            var lengths = keyYs.length;\n\n            if (this.klineDataList[key].length) {\n              var lastId = this.klineDataList[key][lengths - 1][0];\n\n              if (lastId === _kData.id) {\n                this.klineDataList[key].pop();\n              }\n\n              if (this.klineDataList[key].length > 20) {\n                this.klineDataList[key].shift();\n              }\n\n              if (lastId <= _kData.id) {\n                this.klineDataList[key].push([_kData.id, _kData.close]);\n              }\n            }\n          }\n        }\n\n        this.$bus.$emit('RECOMMEEND_KLINE_DATA', this.klineDataList);\n      }\n    },\n    // 发送 Send\n    webSocketSend: function webSocketSend(type, sendType, symbolData, symbolList) {\n      this.worker.postMessage({\n        type: 'WEBSOCKET_SEND',\n        data: {\n          type: type,\n          sendType: sendType,\n          symbolData: symbolData,\n          symbolList: symbolList\n        }\n      });\n    },\n    // 格式化 推荐位的 K线数据\n    setRecommendData: function setRecommendData() {\n      if (this.marketDataObj && this.marketDataObj[this.symbolCurrent]) {\n        this.$bus.$emit('RECOMMEEND_DATA', this.marketDataObj[this.symbolCurrent]);\n      }\n    },\n    getCoinLabel: function getCoinLabel(name) {\n      var coinList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (coinList && coinList[name.toUpperCase()]) {\n        var _coinList$name$toUppe = coinList[name.toUpperCase()].coinTag,\n            coinTag = _coinList$name$toUppe === void 0 ? '' : _coinList$name$toUppe;\n        return coinTag ? this.coinTagLangs[coinTag] : '';\n      }\n\n      return '';\n    },\n    // 格式化 推荐位的24小时行情数据\n    setMarketData: function setMarketData() {\n      var _this5 = this;\n\n      if (!this.symbolList) return;\n      var marketDataList = [];\n      var keyarr = Object.keys(this.symbolList);\n      keyarr.forEach(function (item) {\n        if (_this5.symbolList[item].newcoinFlag) {\n          _this5.newcoinFlag = true;\n        }\n\n        var itemData = _this5.marketDataObj[item];\n\n        if (itemData) {\n          var showName = getCoinShowName(itemData.name, _this5.symbolAll);\n\n          var coinLabel = _this5.getCoinLabel(itemData.symbol.symbol, _this5.coinList);\n\n          var iconSvg = \"<span>\".concat(showName, \"</span>\");\n\n          if (coinLabel && _this5.coinTagOpen) {\n            var str = \"<div class=\\\"coin-label\\\">\\n              <span class=\\\"coin-text a-12-cl\\\">\".concat(coinLabel, \"</span>\\n              <span class=\\\"coin-bg a-12-bg\\\"></span>\\n            </div>\");\n            iconSvg = \"\".concat(iconSvg).concat(str);\n          }\n\n          marketDataList.push({\n            isShow: _this5.symbolList[item].isShow,\n            id: itemData.name,\n            showName: showName,\n            data: [[{\n              iconSvg: _this5.myMarketIcon(itemData.name),\n              type: 'icon',\n              eventType: 'store'\n            }, {\n              iconSvg: iconSvg,\n              type: 'icon',\n              eventType: 'symbol',\n              classes: 'symbolName',\n              sortVal: itemData.sort,\n              key: 'sort'\n            }], [{\n              text: itemData.close.data,\n              classes: ['fontSize14'],\n              sortVal: itemData.closes,\n              key: 'closes',\n              subContent: {\n                text: itemData.close.price !== '--' ? \"\\u2248 \".concat(itemData.close.price) : itemData.close.price,\n                classes: ['b-2-cl'] // 默认没有\n\n              }\n            }], [{\n              type: 'label',\n              text: itemData.rose.data,\n              sortVal: itemData.roses,\n              key: 'roses',\n              classes: _this5.itemRoseClass(itemData.rose)\n            }], [{\n              text: itemData.high\n            }], [{\n              text: itemData.low\n            }], [{\n              text: itemData.vol\n            }], [{\n              text: itemData.amount\n            }]]\n          });\n        }\n      });\n      this.marketDataList = marketDataList.sort(function (a, b) {\n        return a.sort - b.sort;\n      });\n    },\n    // 设置币对是否收藏的ICON\n    myMarketIcon: function myMarketIcon(symbol) {\n      if (this.mySymbolList.indexOf(symbol) === -1) {\n        return \"<svg class=\\\"icon icon-16\\\" aria-hidden=\\\"true\\\">\\n                <use xlink:href=\\\"#icon-c_11\\\">\\n              </use></svg>\";\n      }\n\n      return \"<svg class=\\\"icon icon-16\\\" aria-hidden=\\\"true\\\">\\n                <use xlink:href=\\\"#icon-c_11_1\\\">\\n              </use></svg>\";\n    },\n    // 设置 自选币对\n    setMyMarket: function setMyMarket(symbol) {\n      var _this6 = this;\n\n      var url = this.$store.state.url.common.optional_symbol;\n\n      if (this.optionalSymbolServerOpen === 1) {\n        url = this.$store.state.url.common.optional_symbols;\n      } // 防止重复点击\n\n\n      if (!this.setMyMarketSwitch) return;\n      this.setMyMarketSwitch = false;\n      var mySymbol = myStorage.get('mySymbol') || [];\n      var addOrDelete = true;\n\n      if (mySymbol.length && mySymbol.indexOf(symbol) > -1) {\n        mySymbol = mySymbol.filter(function (item) {\n          return item !== symbol;\n        });\n        addOrDelete = false;\n      } else {\n        mySymbol.push(symbol);\n        addOrDelete = true;\n      }\n\n      if (this.optionalSymbolServerOpen === 1 && this.isLogin) {\n        this.axios({\n          url: url,\n          headers: {},\n          params: {\n            operationType: addOrDelete === true ? '1' : '2',\n            // 0批量添加 1单个添加 2单个删除\n            symbols: symbol\n          },\n          method: 'post'\n        }).then(function (data) {\n          if (data.code === '0') {\n            _this6.setMyMarketSwitch = true;\n            _this6.mySymbolList = mySymbol;\n            myStorage.set('mySymbol', mySymbol);\n          } else {\n            _this6.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      } else {\n        this.setMyMarketSwitch = true;\n        this.mySymbolList = mySymbol;\n        myStorage.set('mySymbol', mySymbol);\n      }\n    },\n    // 24小时行情 涨跌幅 的背景、样色的class\n    itemRoseClass: function itemRoseClass(rose) {\n      var bgClass = null;\n\n      if (rose.class === 'u-1-cl') {\n        bgClass = 'rose-label u-3-bg';\n      } else if (rose.class === 'u-4-cl') {\n        bgClass = 'rose-label u-6-bg';\n      }\n\n      return [rose.class, bgClass];\n    },\n    closeRecommend: function closeRecommend() {\n      this.isShowRecommend = false;\n    }\n  }\n};",null]}