{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/Downloads/blockchain-ui-privatization/PC/components/oldUploadFile/OldUploadFile.vue?vue&type=style&index=0&id=17e22ca6&scoped=true&lang=stylus&","dependencies":[{"path":"/Users/h/Downloads/blockchain-ui-privatization/PC/components/oldUploadFile/OldUploadFile.vue","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.input_upload_file{\r\n  opacity: 0;\r\n}\r\n.upload-div{\r\n  width:100%;\r\n  height:100%;\r\n  position: absolute;\r\n  top:0;\r\n  opacity: 0;\r\n  z-index: 3;\r\n  cursor: pointer;\r\n}\r\n",{"version":3,"sources":["OldUploadFile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OldUploadFile.vue","sourceRoot":"../../Downloads/blockchain-ui-privatization/PC/components/oldUploadFile","sourcesContent":["// Created by 王晓波. // 上传图片 // *****************************\r\n<template>\r\n  <div>\r\n    <input\r\n      class='input_upload_file'\r\n      type='file'\r\n      :class='className'\r\n      :accept='formatValue'\r\n      ref='upload'\r\n      @change='tellFun'\r\n    />\r\n    <div class='upload-div' @click='uploadClick'></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'c-oldUploadFile',\r\n  props: {\r\n    // 最大尺寸\r\n    maxSize: {\r\n      type: String,\r\n      default: '5',\r\n    },\r\n    imageType: {\r\n      type: String,\r\n      default: '2',\r\n    },\r\n    // 上传数据类型\r\n    formatValue: {\r\n      type: String,\r\n      default: 'image/jpeg, image/jpg, image/png',\r\n    },\r\n    // 接口名\r\n    url: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    // 外部传入name\r\n    name: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    // 外部传入请求类型\r\n    isOpenUploadImg: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    // 外部传入可拓展项\r\n    expand: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    // className\r\n    className: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    // isWaterMark 添加水印\r\n    isWaterMark: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      // 真实文件尺寸\r\n      size: '',\r\n      // 真实文件格式\r\n      realFormatValue: '',\r\n    };\r\n  },\r\n  mounted() {},\r\n  computed: {},\r\n  watch: {},\r\n  methods: {\r\n    uploadClick() {\r\n      this.$refs.upload.click();\r\n    },\r\n    tellFun(e) {\r\n      const val = e.target.files[0];\r\n      if (val.size > this.maxSize * 1024 * 1024) {\r\n        this.$emit('tellMessage', {\r\n          error: '图片尺寸过大',\r\n          code: 'maxSize',\r\n        });\r\n        e.target.value = '';\r\n      } else {\r\n        this.$emit('tellMessage', {\r\n          name: this.name,\r\n        });\r\n        const formData = new FormData();\r\n        formData.append(this.name, val);\r\n        formData.append('name', this.name);\r\n        // 添加水印\r\n        if (this.isWaterMark) {\r\n          // formData.append('isWaterMark', 1);\r\n        }\r\n        if (this.expand.length > 0) {\r\n          this.expand.forEach((item) => {\r\n            formData.append(Object.keys(item)[0], item[Object.keys(item)[0]]);\r\n          });\r\n        }\r\n        this.axios({\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n          method: 'post',\r\n          url: this.url,\r\n          hostType: Number(this.isOpenUploadImg) === 1 ? 'upload' : null,\r\n          params: formData,\r\n        }).then((res) => {\r\n          if (!Number(res.code)) {\r\n            const { data } = res;\r\n            const fileName = data.filenameStr\r\n              ? data.filenameStr\r\n              : data.filename;\r\n            const name = data.name || this.name;\r\n            this.$emit('uploadFinish', {\r\n              url: data.base_image_url + fileName,\r\n              imgSrc: data.filename,\r\n              fileName,\r\n              name,\r\n            });\r\n            e.target.value = '';\r\n          }\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang='stylus'>\r\n.input_upload_file{\r\n  opacity: 0;\r\n}\r\n.upload-div{\r\n  width:100%;\r\n  height:100%;\r\n  position: absolute;\r\n  top:0;\r\n  opacity: 0;\r\n  z-index: 3;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}