{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/futuresData/futuresData.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/futuresData/futuresData.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { colorMap, getHex, imgMap, formatTime, fixD, getCookie } from '@/utils';\nexport default {\n  name: 'futuresData',\n  data: function data() {\n    return {\n      imgMap: imgMap,\n      colorMap: colorMap,\n      tableType: 1,\n      headClasses: 'c-4-bg',\n      bodyClasses: 'c-4-bg',\n      symbol: null,\n      type: null,\n      contractId: null,\n      tableLoading: false,\n      dataList: [],\n      brokenLineList: [],\n      historyList: [],\n      amount: 0,\n      pagination: {\n        // 翻页数据\n        count: 0,\n        // 总数量\n        pageSize: 10,\n        // 每页显示条数\n        page: 1 // 当前页数\n\n      }\n    };\n  },\n  computed: {\n    // 类型列表 USDT合约/币本位合约\n    typeTabList: function typeTabList() {\n      return [{\n        code: '1',\n        value: this.$t('futuresData.typeTabList1') // 'USDT合约',\n\n      }, {\n        code: '0',\n        value: this.$t('futuresData.typeTabList2') // '币本位合约',\n\n      }, {\n        code: '2',\n        value: this.$t('futuresData.typeTabList3') // '混合合约',\n\n      }, {\n        code: '3',\n        value: this.$t('futuresData.typeTabList4') // '模拟合约',\n\n      }];\n    },\n    tbaleTitle: function tbaleTitle() {\n      var text = this.$t('futuresData.tabList1'); //  '收支记录';\n\n      if (this.tableType === 2) {\n        text = this.$t('futuresData.tabList2'); //  '历史数据';\n      }\n\n      if (this.tableType === 3) {\n        text = this.$t('futuresData.tabList3'); //  '指数价格组成';\n      }\n\n      return text;\n    },\n    moreText: function moreText() {\n      var data = {\n        text: this.$t('futuresData.moreText1'),\n        //  '了解保险基金',\n        link: 'https://chainupfutures.zendesk.com/hc/zh-sg/articles/900003529386-%E4%BF%9D%E9%99%A9%E5%9F%BA%E9%87%91'\n      };\n\n      if (this.tableType === 2) {\n        data = {\n          text: this.$t('futuresData.moreText2'),\n          //  '了解资金费率',\n          link: 'https://chainupfutures.zendesk.com/hc/zh-sg/articles/900004402523-%E8%B5%84%E9%87%91%E8%B4%B9%E7%8E%87'\n        };\n      }\n\n      if (this.tableType === 3) {\n        data = {\n          text: this.$t('futuresData.moreText3'),\n          //  '了解指数价格',\n          link: 'https://chainupfutures.zendesk.com/hc/zh-sg/articles/900004402503-%E6%8C%87%E6%95%B0%E4%BB%B7%E6%A0%BC'\n        };\n      }\n\n      if (this.tableType === 4) {\n        data = {\n          text: this.$t('futuresData.moreText4'),\n          //  '了解指标记价格',\n          link: 'https://chainupfutures.zendesk.com/hc/zh-sg/articles/900003490006-%E6%A0%87%E8%AE%B0%E4%BB%B7%E6%A0%BC'\n        };\n      }\n\n      return data;\n    },\n    // 合约列表\n    contractList: function contractList() {\n      return this.$store.state.future.contractList;\n    },\n    // 当前基金币种信息\n    acriveSymbol: function acriveSymbol() {\n      var _this = this;\n\n      var data = {};\n\n      if (this.contractList.length && this.symbol) {\n        this.contractList.forEach(function (item) {\n          if (item.marginCoin === _this.symbol) {\n            data = item;\n          }\n        });\n      }\n\n      return data;\n    },\n    // 当前合约信息\n    acriveContract: function acriveContract() {\n      var _this2 = this;\n\n      var data = {};\n\n      if (this.contractList.length && this.symbol) {\n        this.contractList.forEach(function (item) {\n          if (item.id === _this2.contractId) {\n            data = item;\n          }\n        });\n      }\n\n      return data;\n    },\n    // 合约列表\n    marketList: function marketList() {\n      var _this3 = this;\n\n      var data = [];\n      var text = '';\n\n      if (this.contractList && this.contractList.length) {\n        this.contractList.forEach(function (item) {\n          if (Number(_this3.type) === _this3.filterType(item)) {\n            if (item.contractType !== 'E') {\n              text = \"-\".concat(item.marginCoin);\n            } else {\n              text = '';\n            }\n\n            var symbolName = item.symbol.replace('-', '');\n            data.push({\n              value: \"\".concat(symbolName).concat(text),\n              code: item.id\n            });\n          }\n        });\n      }\n\n      return data;\n    },\n    // 保证金币种列表\n    marginCoinList: function marginCoinList() {\n      if (this.$store.state.future.marginCoinList) {\n        return this.$store.state.future.marginCoinList;\n      }\n\n      return [];\n    },\n    tabList: function tabList() {\n      return [{\n        key: 1,\n        text: this.$t('futuresData.tabList1') // '永续合约保险基金',\n\n      }, {\n        key: 2,\n        text: this.$t('futuresData.tabList2') // '资金费率',\n\n      }, {\n        key: 3,\n        text: this.$t('futuresData.tabList3') // '指数价格',\n\n      }, {\n        key: 4,\n        text: this.$t('futuresData.tabList4') // '标记价格',\n\n      }];\n    },\n    // 保险基金币种\n    symbolOPtion: function symbolOPtion() {\n      var arr = [];\n\n      if (this.marginCoinList.length) {\n        this.marginCoinList.forEach(function (item) {\n          arr.push({\n            value: item,\n            code: item\n          });\n        });\n      }\n\n      return arr;\n    },\n    columns: function columns() {\n      if (this.tableType === 1) {\n        return [{\n          title: this.$t('futuresData.columns1'),\n          //  '时间',\n          width: '33%'\n        }, {\n          title: this.$t('futuresData.columns2'),\n          //  '流水类型',\n          width: '33%'\n        }, {\n          title: this.$t('futuresData.columns3'),\n          //  '金额',\n          width: '33%'\n        }];\n      }\n\n      if (this.tableType === 2) {\n        return [{\n          title: this.$t('futuresData.columns1'),\n          //  '时间',\n          width: '33%'\n        }, {\n          title: this.$t('futuresData.columns4'),\n          //  '合约',\n          width: '33%'\n        }, {\n          title: this.$t('futuresData.columns5'),\n          //  '当期资金费率',\n          width: '33%'\n        }];\n      }\n\n      return [{\n        title: this.$t('futuresData.columns6'),\n        //  '交易所',\n        width: '50%'\n      }, {\n        title: this.$t('futuresData.columns7'),\n        //  '权重',\n        width: '50%'\n      }];\n    },\n    contractName: function contractName() {\n      var _this4 = this;\n\n      if (this.contractId && this.marketList.length) {\n        var name = '';\n        this.marketList.forEach(function (item) {\n          if (_this4.contractId === item.code) {\n            name = item.value;\n          }\n        });\n        return name;\n      }\n\n      return '';\n    },\n    publicInfo: function publicInfo() {\n      if (this.$store.state && this.$store.state.baseData) {\n        return this.$store.state.baseData.publicInfo;\n      }\n\n      return null;\n    },\n    // 页面标题title\n    documentTitle: function documentTitle() {\n      var lang = getCookie('lan');\n      var str = '';\n\n      if (this.publicInfo) {\n        var _this$publicInfo = this.publicInfo,\n            indexHeaderTitle = _this$publicInfo.indexHeaderTitle,\n            seo = _this$publicInfo.seo;\n        var title = '';\n\n        if (indexHeaderTitle) {\n          if (lang) {\n            title = seo.title || indexHeaderTitle[lang];\n          } else {\n            var lan = this.publicInfo.lan.defLan;\n            title = seo.title || indexHeaderTitle[lan];\n          }\n        }\n\n        str = \"\\u5408\\u7EA6\\u6570\\u636E - \".concat(title);\n      }\n\n      return str;\n    }\n  },\n  watch: {\n    // 页面标题title\n    documentTitle: function documentTitle(val) {\n      setTimeout(function () {\n        document.title = val;\n      }, 200);\n    },\n    // 永续合约保险基金列表\n    symbolOPtion: function symbolOPtion(val, old) {\n      if (val.length && !old.length) {\n        this.setSymbolValue();\n      }\n    },\n    // 永续合约保险基金\n    symbol: function symbol(val) {\n      if (val) {\n        this.pagination.page = 1;\n        this.getData();\n        this.getRiskAccount();\n      }\n    },\n    // 合约类型列表\n    typeTabList: function typeTabList(val, old) {\n      if (val.length && !old.length) {\n        // this.type = val[0].code;\n        this.setTypeValue();\n      }\n    },\n    // 合约列表\n    marketList: function marketList(val) {\n      if (val.length) {\n        this.pagination.page = 1; // this.contractId = val[0].code;\n\n        this.setcoValue();\n      } else {\n        this.contractId = null;\n      }\n    },\n    contractId: function contractId(val) {\n      this.brokenLineList = [];\n\n      if (val) {\n        this.getData();\n      }\n    },\n    tableType: function tableType(val) {\n      if (val) {\n        this.setSymbolValue();\n\n        if (this.typeTabList.length) {\n          // this.type = this.typeTabList[0].code;\n          this.setTypeValue();\n        }\n\n        if (this.marketList.length) {\n          // this.contractId = this.marketList[0].code;\n          this.setcoValue();\n        }\n\n        this.getData();\n      }\n    },\n    // line\n    brokenLineList: function brokenLineList() {\n      var _this5 = this;\n\n      var time = [];\n      var datas = [];\n\n      if (this.brokenLineList && this.brokenLineList.length) {\n        this.brokenLineList.forEach(function (item) {\n          time.push(formatTime(item.ctime));\n          datas.push(fixD(item.amount, _this5.acriveSymbol.mCionFix));\n        });\n      } else {\n        time = [0];\n        datas = [0];\n      }\n\n      this.myEcharts.setOption({\n        xAxis: {\n          data: time\n        },\n        series: [{\n          type: 'line',\n          data: datas\n        }]\n      });\n    }\n  },\n  methods: {\n    init: function init() {\n      this.initEachart();\n      this.setInitValue();\n      this.setSymbolValue();\n      document.title = this.documentTitle;\n    },\n    // 设置默认保险基金币种\n    setSymbolValue: function setSymbolValue() {\n      if (this.symbolOPtion.length) {\n        var marginCoin = this.$route.query.marginCoin;\n\n        if (marginCoin && this.isIndexFo(this.symbolOPtion, marginCoin)) {\n          this.symbol = marginCoin;\n        } else if (this.isIndexFo(this.symbolOPtion, 'USDT')) {\n          this.symbol = 'USDT';\n        } else {\n          this.symbol = this.symbolOPtion[0].code;\n        }\n      }\n    },\n    // 设置默认合约类型\n    setTypeValue: function setTypeValue() {\n      if (this.typeTabList.length) {\n        var type = this.$route.query.type;\n\n        if (type && this.isIndexFo(this.typeTabList, type)) {\n          this.type = type;\n        } else {\n          this.type = this.typeTabList[0].code;\n        }\n      }\n    },\n    // 设置默认合约\n    setcoValue: function setcoValue() {\n      if (this.marketList.length) {\n        var contractId = this.$route.query.contractId;\n\n        if (contractId && this.isIndexFo(this.marketList, contractId)) {\n          this.contractId = Number(contractId);\n        } else {\n          this.contractId = this.marketList[0].code;\n        }\n      }\n    },\n    isIndexFo: function isIndexFo(list, val) {\n      var flag = false;\n      list.forEach(function (item) {\n        if (item.code.toString() === val.toString()) {\n          flag = true;\n        }\n      });\n      return flag;\n    },\n    setInitValue: function setInitValue() {\n      // 合约列表\n      if (this.marketList.length) {\n        // this.contractId = this.marketList[0].code;\n        this.setcoValue();\n      } // 合约类型\n\n\n      if (this.typeTabList.length) {\n        // this.type = this.typeTabList[0].code;\n        this.setTypeValue();\n      } // 保险基金币种\n\n\n      if (this.symbolOPtion.length) {\n        // this.symbol = this.symbolOPtion[0].code;\n        this.setSymbolValue();\n      }\n    },\n    initEachart: function initEachart() {\n      // 基于准备好的dom，初始化echarts实例\n      this.myEcharts = window.echarts.init(document.getElementById('chartbox')); // 绘制图表\n\n      this.myEcharts.setOption({\n        animation: false,\n        tooltip: {\n          trigger: 'axis',\n          // 不限时弹层\n          axisPointer: {\n            // 显示随手指移动的刻度线\n            type: 'cross',\n            crossStyle: {\n              width: 2,\n              color: getHex(colorMap['b-2-cl']),\n              type: 'cross'\n            }\n          }\n        },\n        grid: {\n          show: true,\n          borderWidth: 0,\n          borderColor: getHex(colorMap['a-3-bd']),\n          containLabel: true,\n          left: 5,\n          top: 40,\n          right: 5,\n          bottom: 0\n        },\n        xAxis: {\n          data: [],\n          axisPointer: {\n            show: true,\n            type: 'line'\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              width: 1,\n              color: getHex(colorMap['a-3-bd'])\n            }\n          },\n          axisTick: {\n            lineStyle: {\n              color: getHex(colorMap['a-3-bd'])\n            }\n          },\n          axisLabel: {\n            color: getHex(colorMap['b-2-cl']),\n            formatter: function name(value) {\n              return value;\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              width: 1,\n              color: getHex(colorMap['a-3-bd'])\n            }\n          }\n        },\n        yAxis: [{\n          type: 'value',\n          axisLine: {\n            show: true,\n            lineStyle: {\n              width: 1,\n              color: getHex(colorMap['a-3-bd'])\n            }\n          },\n          axisTick: {\n            lineStyle: {\n              color: getHex(colorMap['a-3-bd'])\n            }\n          },\n          axisLabel: {\n            color: getHex(colorMap['b-2-cl'])\n          },\n          splitLine: {\n            lineStyle: {\n              width: 1,\n              color: getHex(colorMap['a-3-bd'])\n            }\n          }\n        }],\n        series: [{\n          data: [],\n          // lineStyle: {\n          //   color: getHex(colorMap['b-1-cl']),\n          // },\n          type: 'line'\n        }]\n      });\n    },\n    // 筛选币对列表\n    filterType: function filterType(data) {\n      // USDT 合约\n      if (data.contractType === 'E' && data.contractSide === 1) {\n        return 1;\n      } // 币本位合约\n\n\n      if (data.contractType === 'E' && data.contractSide === 0) {\n        return 0;\n      } // 模拟合约\n\n\n      if (data.contractType === 'S') {\n        return 3;\n      }\n\n      return 2;\n    },\n    // 切换类型\n    switcherType: function switcherType(type) {\n      this.pagination.page = 1;\n      this.tableType = type;\n\n      if (type === 1) {\n        this.getRiskAccount();\n      }\n    },\n    // select 选择事件\n    selectOnChange: function selectOnChange(data, name) {\n      this[name] = data.code;\n    },\n    getData: function getData() {\n      var _this6 = this;\n\n      var url = this.$store.state.url.futures.riskBalanceList;\n      var paramsData = {\n        symbol: this.symbol,\n        page: this.pagination.page,\n        limit: this.pagination.pageSize\n      };\n\n      if (this.tableType === 2) {\n        url = this.$store.state.url.futures.fundingRateList;\n        paramsData = {\n          contractId: this.contractId,\n          page: this.pagination.page,\n          limit: this.pagination.pageSize\n        };\n      }\n\n      if (this.tableType === 3) {\n        url = this.$store.state.url.futures.indexPriceWeightList;\n        paramsData = {\n          contractId: this.contractId,\n          page: this.pagination.page,\n          limit: this.pagination.pageSize\n        };\n      }\n\n      this.brokenLineList = [];\n      this.axios({\n        url: url,\n        hostType: 'co',\n        params: paramsData\n      }).then(function (_ref) {\n        var data = _ref.data,\n            code = _ref.code;\n        _this6.tableLoading = false;\n\n        if (code === '0') {\n          _this6.historyList = data.historyList;\n          _this6.brokenLineList = data.brokenLineList || [];\n\n          if (_this6.tableType === 3) {\n            _this6.setData(data.records);\n          } else {\n            _this6.setData(_this6.historyList);\n          }\n\n          if (_this6.tableType === 1) {\n            _this6.pagination.count = data.hisCount;\n          }\n\n          if (_this6.tableType === 2) {\n            _this6.pagination.count = data.count;\n          }\n        }\n      });\n    },\n    setData: function setData(dataList) {\n      var _this7 = this;\n\n      var arr = [];\n\n      if (dataList && dataList.length) {\n        if (this.tableType === 1) {\n          dataList.forEach(function (item) {\n            arr.push({\n              id: item.id,\n              data: [formatTime(item.ctime), // '接管盈利注入' : '风险准备金支出',\n              item.type === 1 ? _this7.$t('futuresData.text2') : _this7.$t('futuresData.text3'), fixD(item.hisAmount, _this7.acriveSymbol.mCionFix)]\n            });\n          });\n        }\n\n        if (this.tableType === 2) {\n          dataList.forEach(function (item) {\n            arr.push({\n              id: item.id,\n              data: [formatTime(item.ctime), item.contractName, \"\".concat(fixD(item.amount * 100, 5), \"%\")]\n            });\n          });\n        }\n\n        if (this.tableType === 3) {\n          dataList.forEach(function (item) {\n            arr.push({\n              id: item.id,\n              data: [item.name, \"\".concat(fixD(item.weightRate * 100, 2), \"%\")]\n            });\n          });\n        }\n      }\n\n      this.dataList = arr;\n    },\n    getRiskAccount: function getRiskAccount() {\n      var _this8 = this;\n\n      var url = this.$store.state.url.futures.getRiskAccount;\n      var paramsData = {\n        coinSymbol: this.symbol\n      };\n      this.axios({\n        url: url,\n        hostType: 'co',\n        params: paramsData\n      }).then(function (_ref2) {\n        var data = _ref2.data,\n            code = _ref2.code;\n        _this8.tableLoading = false;\n\n        if (code === '0') {\n          _this8.amount = fixD(data.amount, _this8.acriveSymbol.mCionFix);\n        }\n      });\n    },\n    pagechange: function pagechange(v) {\n      this.pagination.page = v;\n      this.getData();\n    },\n    linkMore: function linkMore(link) {\n      window.open(link);\n    }\n  }\n};",null]}