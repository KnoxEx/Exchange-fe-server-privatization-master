{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/countryList/countryList.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/countryList/countryList.js","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nexport default {\n  data: function data() {\n    return {\n      countryKeyCode: '',\n      country: '' // 所在地\n\n    };\n  },\n  watch: {\n    countryObj: {\n      handler: function handler() {\n        var v = this.defaultCountryCode;\n\n        if (v && this.countryKeyCode === '') {\n          this.countryKeyCode = v;\n        }\n\n        if (!this.defaultCountryCodeReal && !this.country && v && this.countryMap && this.countryMap[v]) {\n          this.country = this.countryMap[v].code;\n        }\n\n        if (this.defaultCountryCodeReal && this.country === '') {\n          this.country = this.defaultCountryCodeReal;\n        }\n      }\n    },\n    defaultCountryCodeReal: {\n      handler: function handler(v) {\n        if (v && this.country === '') {\n          this.country = v;\n        }\n      },\n      immediate: true\n    },\n    defaultCountryCode: {\n      handler: function handler(v) {\n        if (v && this.countryKeyCode === '') {\n          if (this.defaultCountryCodeReal) {\n            this.countryKeyCode = this.countryListKeyObj[this.defaultCountryCodeReal].keyCode;\n          } else {\n            this.countryKeyCode = v;\n          }\n        }\n\n        if (!this.defaultCountryCodeReal && !this.country && v && this.countryMap && this.countryMap[v]) {\n          this.country = this.countryMap[v].code;\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    countryListKeyObj: function countryListKeyObj() {\n      var list = {};\n      this.countryObj.list.forEach(function (item) {\n        list[item.code] = {\n          code: item.code,\n          keyCode: item.keyCode,\n          value: item.value.split(' ')[0]\n        };\n      });\n      return list;\n    },\n    // 国家渲染列表\n    countryList: function countryList() {\n      return this.countryObj.list;\n    },\n    countryListMoy: function countryListMoy() {\n      var arr = [];\n      this.countryObj.list.forEach(function (item) {\n        arr.push({\n          code: item.code,\n          keyCode: item.keyCode,\n          value: item.value.split(' +')[0]\n        });\n      });\n      return arr;\n    },\n    countryMap: function countryMap() {\n      return this.countryObj.countryMap;\n    },\n    countryRealMap: function countryRealMap() {\n      return this.countryObj.countryRealMap;\n    },\n    countryObj: function countryObj() {\n      return this.$store.state.baseData.countryObj;\n    },\n    // 默认区号\n    defaultCountryCode: function defaultCountryCode() {\n      return this.$store.state.baseData.defaultCountryCode;\n    },\n    defaultCountryCodeReal: function defaultCountryCodeReal() {\n      return this.$store.state.baseData.defaultCountryCodeReal;\n    }\n  },\n  methods: {\n    // 国家列表change\n    countryChange: function countryChange(item) {\n      this.country = item.code;\n      this.countryKeyCode = item.keyCode;\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/countryList/countryList.js"],"names":["data","countryKeyCode","country","watch","countryObj","handler","v","defaultCountryCode","defaultCountryCodeReal","countryMap","code","immediate","countryListKeyObj","keyCode","computed","list","forEach","item","value","split","countryList","countryListMoy","arr","push","countryRealMap","$store","state","baseData","methods","countryChange"],"mappings":"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","sourcesContent":["export default {\n  data() {\n    return {\n      countryKeyCode: '',\n      country: '', // 所在地\n    };\n  },\n  watch: {\n    countryObj: {\n      handler() {\n        const v = this.defaultCountryCode;\n        if (v && this.countryKeyCode === '') {\n          this.countryKeyCode = v;\n        }\n        if (!this.defaultCountryCodeReal\n            && !this.country\n            && v\n            && this.countryMap\n            && this.countryMap[v]) {\n          this.country = this.countryMap[v].code;\n        }\n        if (this.defaultCountryCodeReal && this.country === '') {\n          this.country = this.defaultCountryCodeReal;\n        }\n      },\n    },\n    defaultCountryCodeReal: {\n      handler(v) {\n        if (v && this.country === '') {\n          this.country = v;\n        }\n      },\n      immediate: true,\n    },\n    defaultCountryCode: {\n      handler(v) {\n        if (v && this.countryKeyCode === '') {\n          if (this.defaultCountryCodeReal) {\n            this.countryKeyCode = this.countryListKeyObj[\n              this.defaultCountryCodeReal].keyCode;\n          } else {\n            this.countryKeyCode = v;\n          }\n        }\n        if (\n          !this.defaultCountryCodeReal\n          && !this.country\n          && v\n          && this.countryMap\n          && this.countryMap[v]\n        ) {\n          this.country = this.countryMap[v].code;\n        }\n      },\n      immediate: true,\n    },\n  },\n  computed: {\n    countryListKeyObj() {\n      const list = {};\n      this.countryObj.list.forEach((item) => {\n        list[item.code] = {\n          code: item.code,\n          keyCode: item.keyCode,\n          value: item.value.split(' ')[0],\n        };\n      });\n      return list;\n    },\n    // 国家渲染列表\n    countryList() {\n      return this.countryObj.list;\n    },\n    countryListMoy() {\n      const arr = [];\n      this.countryObj.list.forEach((item) => {\n        arr.push({\n          code: item.code,\n          keyCode: item.keyCode,\n          value: item.value.split(' +')[0],\n        });\n      });\n      return arr;\n    },\n    countryMap() {\n      return this.countryObj.countryMap;\n    },\n    countryRealMap() {\n      return this.countryObj.countryRealMap;\n    },\n    countryObj() {\n      return this.$store.state.baseData.countryObj;\n    },\n    // 默认区号\n    defaultCountryCode() {\n      return this.$store.state.baseData.defaultCountryCode;\n    },\n    defaultCountryCodeReal() {\n      return this.$store.state.baseData.defaultCountryCodeReal;\n    },\n  },\n  methods: {\n    // 国家列表change\n    countryChange(item) {\n      this.country = item.code;\n      this.countryKeyCode = item.keyCode;\n    },\n  },\n};\n"]}]}