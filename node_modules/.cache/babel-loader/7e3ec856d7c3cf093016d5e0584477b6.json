{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/components/verify/geetest.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/components/verify/geetest.vue","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'common-geetest',\n  data: function data() {\n    return {\n      nowState: false,\n      // 当前状态 true可滑动 false不可滑动 用于下划线时判断\n      isHover: false,\n      // 是否划过\n      isReady: false // 是否准备成功\n\n    };\n  },\n  props: {\n    product: {\n      default: '',\n      type: String\n    },\n    width: {\n      default: '100%',\n      type: String\n    },\n    // 该容器根容器 width属性\n    marginTop: {\n      default: '0px',\n      type: String\n    },\n    // 该组件根容器 margin-top属性\n    errorHave: {\n      default: false,\n      type: Boolean\n    },\n    // 是否有错误文案\n    errorText: {\n      default: '',\n      type: String\n    },\n    // 错误文案\n    errorFlag: {\n      default: false,\n      type: Boolean\n    },\n    // 错误文案是否显示\n    geetestBg: {\n      default: 'a-7-bg',\n      type: String\n    },\n    // 极验的背景颜色\n    colorMap: {\n      default: function _default() {},\n      required: true\n    }\n  },\n  computed: {\n    lan: function lan() {\n      return this.$store.state.baseData.lan;\n    },\n    geetestLan: function geetestLan() {\n      var language = ''; // 简体中文\n\n      if (this.lan === 'zh_CN') {\n        language = 'zh-cn'; // 繁体中文\n      } else if (this.lan === 'el_GR') {\n        language = 'zh-hk'; // 葡萄牙\n      } else if (this.lan === 'pt_PT') {\n        language = 'pt-pt';\n      } else {\n        var arr = ['en', // 英文\n        'ja', // 日文\n        'id', // 印尼\n        'ko', // 韩语\n        'ru', // 俄语\n        'ar', // 阿拉伯\n        'es', // 西班牙语\n        'fr', // 法语\n        'de' // 德语\n        ];\n\n        if (this.lan.length && this.lan.split('_').length) {\n          if (arr.indexOf(this.lan.split('_')[0].toLowerCase()) !== -1) {\n            var _this$lan$split = this.lan.split('_'),\n                _this$lan$split2 = _slicedToArray(_this$lan$split, 1),\n                lans = _this$lan$split2[0];\n\n            language = lans;\n          }\n        }\n      }\n\n      if (!language.length) {\n        language = 'en';\n      }\n\n      return language;\n    },\n    // 根容器 行内样式\n    contentStyle: function contentStyle() {\n      return {\n        width: this.width,\n        marginTop: this.marginTop\n      };\n    },\n    // 基础占位容器 class\n    baseStanceClass: function baseStanceClass() {\n      if (this.errorHave && this.errorFlag) {\n        return 'common-geetest-baseStance-error';\n      }\n\n      return '';\n    },\n    // 下横向 行内样式\n    activeLineStyle: function activeLineStyle() {\n      var width = '0%';\n\n      if (this.nowState && this.isHover || this.errorHave && this.errorFlag) {\n        width = '100%';\n      }\n\n      return {\n        width: width\n      };\n    },\n    // 下横线 class\n    activeLineClass: function activeLineClass() {\n      var className = 'a-12-bg';\n\n      if (this.errorHave && this.errorFlag && !this.isFocus) {\n        className = 'a-19-bg';\n      }\n\n      return className;\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    // input 鼠标划入\n    handMouseenter: function handMouseenter() {\n      this.isHover = true;\n    },\n    // input 鼠标划出\n    handMouseleave: function handMouseleave() {\n      this.isHover = false;\n    },\n    init: function init() {\n      var _this = this;\n\n      this.axios({\n        url: 'common/tartCaptcha',\n        headers: {},\n        params: {},\n        method: 'post'\n      }).then(function (data) {\n        if (data.code === '0') {\n          _this.geetest({\n            challenge: data.data.captcha.challenge,\n            gt: data.data.captcha.gt,\n            success: data.data.captcha.success\n          });\n        }\n      });\n    },\n    setStyle: function setStyle() {\n      var colorMap = this.colorMap;\n      var radar = document.getElementsByClassName('geetest_radar_tip_content');\n      var reset = document.getElementsByClassName('geetest_reset_tip_content');\n      var geetestRadarBtn = document.getElementsByClassName('geetest_radar_btn');\n      var geetestSuccessBtn = document.getElementsByClassName('geetest_success_btn');\n\n      if (colorMap) {\n        if (radar && radar.length) {\n          radar[0].style.color = colorMap['b-2-cl'];\n        }\n\n        if (reset && reset.length) {\n          reset[0].style.color = colorMap['b-2-cl'];\n        }\n\n        if (geetestRadarBtn && geetestRadarBtn.length) {\n          geetestRadarBtn[0].style.background = colorMap[this.geetestBg];\n        }\n\n        if (geetestSuccessBtn && geetestSuccessBtn.length) {\n          geetestSuccessBtn[0].style.background = colorMap[this.geetestBg];\n        }\n      }\n    },\n    // 构件极验\n    geetest: function geetest(_ref) {\n      var _this2 = this;\n\n      var challenge = _ref.challenge,\n          gt = _ref.gt,\n          success = _ref.success;\n      var product = this.product ? this.product : 'popup';\n      window.initGeetest({\n        // 以下 4 个配置参数为必须，不能缺少\n        product: product,\n        lang: this.geetestLan,\n        gt: gt,\n        challenge: challenge,\n        offline: !success,\n        // 表示用户后台检测极验服务器是否宕机\n        new_captcha: true,\n        // 用于宕机时表示是新验证码的宕机\n        width: '100%'\n      }, function (captchaObj) {\n        _this2.nowState = true;\n        captchaObj.appendTo(_this2.$refs.captchaBox);\n\n        _this2.$emit('getCaptchaObj', captchaObj);\n\n        captchaObj.onReady(function () {\n          _this2.isReady = true;\n\n          _this2.$nextTick(function () {\n            _this2.setStyle();\n          });\n        });\n        captchaObj.onError(function () {});\n        captchaObj.onSuccess(function () {\n          _this2.nowState = false;\n          var result = captchaObj.getValidate();\n          setTimeout(function () {\n            _this2.$emit('callback', {\n              geetest_challenge: result.geetest_challenge,\n              geetest_seccode: result.geetest_seccode,\n              geetest_validate: result.geetest_validate,\n              verificationType: '2',\n              token: true,\n              nc: Object.assign(captchaObj, {\n                reset: captchaObj.reset\n              })\n            });\n          }, 300);\n        });\n      });\n    }\n  }\n};",null]}