{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/echarts/echarts.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/echarts/echarts.js","mtime":1637303595013},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { colorMap, getHex, myStorage, fixD, nul } from '@/utils';\nexport default {\n  name: 'chartsDepth',\n  components: {},\n  props: {\n    chartType: {\n      default: 0,\n      type: Number\n    }\n  },\n  watch: {\n    chartType: function chartType(val) {\n      if (val === 2) {\n        this.intervalGetdata();\n        this.eachart();\n      } else {\n        clearInterval(this.intervalData);\n        this.intervalData = null;\n      }\n    },\n    contractId: function contractId(val) {\n      if (val && this.chartType === 2) {\n        this.getData();\n      }\n    },\n    coUnitType: function coUnitType(val) {\n      if (val && this.chartType === 2) {\n        this.getData();\n      }\n    }\n  },\n  data: function data() {\n    return {\n      symbolCurrent: myStorage.get('sSymbolName'),\n      isshowLoading: true,\n      myEcharts: null,\n      loading: true,\n      destory: false,\n      echartsData: {\n        minval: 0,\n        maxval: 0,\n        buysArr: [],\n        asksArr: []\n      },\n      styleObject: {\n        height: '630px'\n      },\n      interval: 5000,\n      intervalData: null,\n      deptValue: 8\n    };\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      this.$bus.$on('WINFOW_ON_RESIIZE', function () {\n        if (_this.myEcharts) {\n          _this.myEcharts.resize();\n        }\n      });\n    },\n    intervalGetdata: function intervalGetdata() {\n      var _this2 = this;\n\n      this.getData(true);\n      clearInterval(this.intervalData);\n      this.intervalData = setInterval(function () {\n        _this2.getData();\n      }, this.interval);\n    },\n    getData: function getData(first) {\n      var _this3 = this;\n\n      this.axios({\n        url: this.$store.state.url.futures.depthMap,\n        hostType: 'co',\n        params: {\n          contractId: this.contractId\n        }\n      }).then(function (data) {\n        if (first) {\n          _this3.loading = false;\n        }\n\n        if (data.code && data.code.toString() === '0') {\n          if (data.data && data.data.buys && data.data.buys.length) {\n            var bl = data.data.buys.length;\n            var lasteData = data.data.buys[bl - 1];\n\n            var _lasteData = _slicedToArray(lasteData, 1);\n\n            _this3.echartsData.minval = _lasteData[0];\n            var buysArr = [];\n            data.data.buys.forEach(function (item) {\n              buysArr.push([item[0], _this3.setNumber(item[2])]);\n            });\n            _this3.echartsData.buysArr = buysArr.reverse();\n          } else {\n            _this3.echartsData.buysArr = [];\n          }\n\n          if (data.data && data.data.asks && data.data.asks.length) {\n            var sl = data.data.asks.length;\n            var lasteAsks = data.data.asks[sl - 1];\n\n            var _lasteAsks = _slicedToArray(lasteAsks, 1);\n\n            _this3.echartsData.maxval = _lasteAsks[0];\n            _this3.echartsData.asksArr = [];\n            data.data.asks.forEach(function (item) {\n              _this3.echartsData.asksArr.push([item[0], _this3.setNumber(item[2])]);\n            });\n          } else {\n            _this3.echartsData.asksArr = [];\n          }\n\n          _this3.eachart();\n        } else {\n          _this3.clearData();\n        }\n      });\n    },\n    setNumber: function setNumber(volume) {\n      if (this.coUnitType === 1) {\n        return fixD(nul(volume, this.multiplier), this.volfix);\n      }\n\n      return volume;\n    },\n    clearData: function clearData() {\n      this.echartsData = {\n        minval: 0,\n        maxval: 0,\n        yminval: 0,\n        ymaxval: 0,\n        buysArr: [],\n        asksArr: []\n      };\n      this.eachart();\n    },\n    eachart: function eachart() {\n      if (this.destory) {\n        return;\n      }\n\n      if (this.myEcharts) {\n        this.myEcharts.dispose(this.myEcharts);\n      }\n\n      this.initEachart();\n      var data = JSON.parse(JSON.stringify(this.echartsData));\n      this.myEcharts.resize();\n      this.isshowLoading = false;\n      var series = [];\n      series = [_objectSpread(_objectSpread({}, this.seriesTypes.buy), {}, {\n        data: data.buysArr,\n        type: 'line'\n      }), _objectSpread(_objectSpread({}, this.seriesTypes.ask), {}, {\n        data: data.asksArr,\n        type: 'line'\n      })];\n      this.myEcharts.setOption({\n        xAxis: [{\n          min: data.minval,\n          max: data.maxval\n        }],\n        series: series\n      });\n    },\n    initEachart: function initEachart() {\n      var self = this; // 基于准备好的dom，初始化echarts实例\n\n      this.myEcharts = window.echarts.init(document.getElementById('myEcharts')); // 绘制图表\n\n      this.myEcharts.setOption({\n        animation: false,\n        tooltip: {\n          trigger: 'axis',\n          // 不限时弹层\n          axisPointer: {\n            // 显示随手指移动的刻度线\n            type: 'cross',\n            crossStyle: {\n              width: 2,\n              color: getHex(colorMap['b-2-cl']),\n              type: 'cross'\n            }\n          }\n        },\n        grid: {\n          show: true,\n          borderWidth: 0,\n          borderColor: getHex(colorMap['a-3-bd']),\n          containLabel: true,\n          left: 5,\n          top: 67,\n          right: 5,\n          bottom: 0\n        },\n        xAxis: {\n          type: 'value',\n          axisPointer: {\n            show: true,\n            type: 'line',\n            lineStyle: {\n              color: getHex(colorMap['b-2-cl']),\n              width: 2,\n              type: 'dotted'\n            }\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              width: 1,\n              color: getHex(colorMap['a-3-bd'])\n            }\n          },\n          axisTick: {\n            lineStyle: {\n              color: getHex(colorMap['a-3-bd'])\n            }\n          },\n          axisLabel: {\n            color: getHex(colorMap['b-2-cl']),\n            showMaxLabel: false,\n            showMinLabel: false,\n            formatter: function name(value) {\n              return value.toFixed(self.pricefix);\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              width: 1,\n              color: getHex(colorMap['a-3-bd'])\n            }\n          }\n        },\n        yAxis: [{\n          min: 'dataMin',\n          type: 'value',\n          axisLine: {\n            show: true,\n            lineStyle: {\n              width: 1,\n              color: getHex(colorMap['a-3-bd'])\n            }\n          },\n          axisTick: {\n            lineStyle: {\n              color: getHex(colorMap['a-3-bd'])\n            }\n          },\n          axisLabel: {\n            color: getHex(colorMap['b-2-cl'])\n          },\n          splitLine: {\n            lineStyle: {\n              width: 1,\n              color: getHex(colorMap['a-3-bd'])\n            }\n          }\n        }]\n      });\n    }\n  },\n  computed: {\n    // 当前合约币对\n    contractId: function contractId() {\n      return this.$store.state.future.contractId;\n    },\n    // 合约币对价格精度\n    pricefix: function pricefix() {\n      return this.$store.state.future.pricefix;\n    },\n    // 数量单位类型Number(1标的货币 2张)\n    coUnitType: function coUnitType() {\n      return this.$store.state.future.coUnitType;\n    },\n    // 当前合约面值\n    multiplier: function multiplier() {\n      return Number(this.$store.state.future.multiplier) || 1;\n    },\n    // 当前合约数量精度\n    volfix: function volfix() {\n      if (this.coUnitType === 1) {\n        return this.$store.state.future.volfix;\n      }\n\n      return 0;\n    },\n    seriesTypes: function seriesTypes() {\n      var buy = {\n        type: 'line',\n        symbol: 'none',\n        itemStyle: {\n          normal: {\n            color: colorMap['a-18-bg']\n          }\n        },\n        lineStyle: {\n          normal: {\n            color: colorMap['a-18-bg'],\n            width: 2\n          }\n        },\n        areaStyle: {\n          normal: {\n            color: new window.echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: colorMap['a-18-bg']\n            }, {\n              offset: 1,\n              color: colorMap['u-2-bg']\n            }])\n          }\n        },\n        data: []\n      };\n      var ask = {\n        type: 'line',\n        symbol: 'none',\n        lineStyle: {\n          normal: {\n            color: colorMap['a-19-bg'],\n            width: 2\n          }\n        },\n        itemStyle: {\n          normal: {\n            color: colorMap['a-19-bg']\n          }\n        },\n        areaStyle: {\n          normal: {\n            color: new window.echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: colorMap['a-19-bg']\n            }, {\n              offset: 1,\n              color: colorMap['u-5-bg']\n            }])\n          }\n        },\n        data: []\n      };\n\n      var autoBuy = _objectSpread(_objectSpread({}, buy), {}, {\n        lineStyle: {\n          normal: {\n            width: 0\n          }\n        }\n      });\n\n      var autoAsk = _objectSpread(_objectSpread({}, ask), {}, {\n        lineStyle: {\n          normal: {\n            width: 0\n          }\n        }\n      });\n\n      return {\n        buy: buy,\n        ask: ask,\n        autoBuy: autoBuy,\n        autoAsk: autoAsk\n      };\n    } // // 全部币对列表\n    // symbolAll() {\n    //   return this.$store.state.baseData.symbolAll;\n    // },\n    // // 当前币对精度计算的值\n    // fixValue() {\n    //   if (this.symbolAll && this.symbolCurrent) {\n    //     const symbol = this.symbolAll[this.symbolCurrent];\n    //     return {\n    //       priceFix: symbol.price,\n    //       volumeFix: symbol.volume,\n    //     };\n    //   }\n    //   return {\n    //     priceFix: 2,\n    //     volumeFix: 8,\n    //   };\n    // },\n\n  },\n  destroyed: function destroyed() {\n    this.$bus.$off('SYMBOL_CURRENT');\n    this.$bus.$off('WINFOW_ON_RESIIZE');\n    this.$bus.$off('DEPTH_VALUE');\n    clearInterval(this.intervalData);\n    this.intervalData = null;\n    this.destory = true;\n  }\n};",null]}