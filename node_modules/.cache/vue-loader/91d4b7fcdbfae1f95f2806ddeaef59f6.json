{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/components/getCode/GetCode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/components/getCode/GetCode.vue","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'c-getCode',\r\n  props: {\r\n    className: { default: '', type: String }, // 根节点class\r\n    // : { default: 100, type: Number }, // 倒计时时间\r\n    name: { default: '', type: String }, // name标示\r\n    buttonName: { default: 'codeClickButton', type: String }, // 获取验证码按钮name\r\n    codeFlag: { default: true, type: Boolean }, // 按钮是否可点击\r\n    autoStart: { default: true, type: Boolean }, // 按钮按下时 自动开始倒计时\r\n  },\r\n  data() {\r\n    return {\r\n      flag: true, // 是否可点击\r\n      mins: 0, // 倒计时仅展示\r\n      timer: null,\r\n      code: 60,\r\n    };\r\n  },\r\n  watch: {\r\n    codeFlag(newValue) {\r\n      if (newValue) {\r\n        this.clear();\r\n      } else {\r\n        this.startTime();\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.$bus.$emit('getCode-clear');\r\n    this.$bus.$on('getCode-clear', (name) => {\r\n      if (name === this.name) {\r\n        this.clear();\r\n      }\r\n    });\r\n    this.$bus.$emit('getCode-start');\r\n    this.$bus.$on('getCode-start', (name) => {\r\n      if (name === this.name) {\r\n        this.startTime();\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    codeClick() {\r\n      this.$emit('click', this.name);\r\n      if (this.autoStart) {\r\n        this.startTime();\r\n      }\r\n    },\r\n    startTime() {\r\n      this.clear();\r\n      this.flag = false;\r\n      this.mins = this.code;\r\n      this.mins -= 1;\r\n      this.timer = setInterval(() => {\r\n        this.mins -= 1;\r\n        if (this.mins === 0) {\r\n          this.clear();\r\n        }\r\n      }, 1000);\r\n    },\r\n    clear() {\r\n      this.$emit('clear');\r\n      this.flag = true;\r\n      clearInterval(this.timer);\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    this.clear();\r\n  },\r\n};\r\n",null]}