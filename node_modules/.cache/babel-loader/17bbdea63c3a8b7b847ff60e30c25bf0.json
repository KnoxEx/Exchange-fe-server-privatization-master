{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/Downloads/BlockChain-ui-privatization/PC/common-mixin/personal/kycAuth/kycAuth.js","dependencies":[{"path":"/Users/h/Downloads/BlockChain-ui-privatization/PC/common-mixin/personal/kycAuth/kycAuth.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nexport default {\n  name: 'common-keyAuth',\n  data: function data() {\n    return {\n      loading: true,\n      // 页面loading\n      qrCode: '',\n      // 二维码\n      time: 0,\n      // 倒计时\n      timeReload: false,\n      statusLoading: false,\n      // 认证状态的loading\n      forceAuto: false,\n      // 是否强制审核\n      goIDauthLoading: false // 选择人工的loading\n\n    };\n  },\n  computed: {\n    publicInfo: function publicInfo() {\n      return this.$store.state.baseData.publicInfo;\n    },\n    showTime: function showTime() {\n      if (this.time) {\n        var min = Math.floor(this.time / 60);\n        var sec = this.time - 60 * min;\n        var str = '';\n\n        if (min) {\n          str += \"\".concat(min).concat(this.$t('personal.kyc.kycMin'));\n        }\n\n        str += \"\".concat(sec).concat(this.$t('personal.kyc.kycSec'));\n        return str;\n      }\n\n      return '';\n    }\n  },\n  methods: {\n    init: function init() {\n      this.getData();\n    },\n    // 获取页面信息\n    getData: function getData() {\n      var _this = this;\n\n      this.axios({\n        url: '/kyc/Api/get_Valid_QRcode'\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          _this.loading = false;\n\n          _this.setData(data.data);\n        } else {\n          _this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 选择人工\n    goIDauth: function goIDauth() {\n      var _this2 = this;\n\n      if (this.goIDauthLoading) return;\n      this.goIDauthLoading = true; // 判断开关是否开启\n\n      var customConfigData = this.publicInfo.custom_config;\n      var kycSingaporeOpen = null;\n      var customConfig = null;\n\n      if (customConfigData) {\n        try {\n          customConfig = JSON.parse(customConfigData);\n        } catch (error) {\n          console.log(error);\n        }\n\n        kycSingaporeOpen = customConfig ? customConfig.kyc_singapore_open : null;\n      }\n\n      this.axios({\n        url: '/kyc/Api/get_Valid_QRcode'\n      }).then(function (data) {\n        _this2.goIDauthLoading = false;\n\n        if (data.code.toString() === '0') {\n          // 需求5.2.2 否，则跳转至账号管理界面，界面右上角显示提示语提示：“已存在实名认证信息”。\n          if (data.data.authStatus === '1') {\n            _this2.$bus.$emit('tip', {\n              text: _this2.$t('personal.kyc.kycAuth7'),\n              type: 'warning'\n            });\n\n            _this2.$router.push('/personal/userManagement'); // 需求5.2.1 是，则跳转至实名认证页_中国界面进行人工审核模式提交实名认证\n\n          } else if (kycSingaporeOpen && kycSingaporeOpen !== '0') {\n            _this2.$store.dispatch('exccKycConfig', {});\n          } else {\n            _this2.$router.push('/personal/idAuth?kycPhone=86');\n          }\n        } else {\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 获取当前认证结果\n    getStatus: function getStatus() {\n      var _this3 = this;\n\n      this.statusLoading = true;\n      this.axios({\n        url: '/kyc/Api/get_Database_Authentication_result'\n      }).then(function (data) {\n        _this3.statusLoading = false;\n\n        if (data.code.toString() === '0') {\n          var authStatus = data.data.authStatus; // 需求4.2.1 存在，则跳转至该用户的账号管理界面，提示语提示：“已存在实名认证信息”。\n\n          if (authStatus && authStatus.toString() === '1') {\n            _this3.$bus.$emit('tip', {\n              text: _this3.$t('personal.kyc.kycAuth7'),\n              type: 'warning'\n            });\n\n            _this3.$router.push('/personal/userManagement'); // 需求4.2.2 不存在，则停留在当前界面，提示语提示：“请扫描二维码完成认证”\n\n          } else {\n            _this3.$bus.$emit('tip', {\n              text: _this3.$t('personal.kyc.kycAuth8'),\n              type: 'warning'\n            });\n          }\n        } else {\n          _this3.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    setData: function setData(_ref) {\n      var _this4 = this;\n\n      var openAuto = _ref.openAuto,\n          limitFlag = _ref.limitFlag,\n          authStatus = _ref.authStatus,\n          qrCode = _ref.qrCode,\n          validSecond = _ref.validSecond,\n          forceAuto = _ref.forceAuto;\n\n      // 需求3.1.1 如果未开启自动审核 则跳转到人工审核\n      // 需求3.4.1 当日平台、个人超出当日自动审核限制 则跳转到人工审核\n      if (openAuto && openAuto.toString() === '0' || limitFlag && limitFlag.toString() === '1') {\n        this.$bus.$emit('tip', {\n          text: this.$t('personal.kyc.kycAuth9'),\n          type: 'warning'\n        }); // this.$router.push('/personal/idAuth?kycPhone=86');\n\n        this.$store.dispatch('exccKycConfig', {});\n        return;\n      } // 需求3.2.1 判断该用户存在未审核或已通过的实名信息 则跳转到账号管理\n\n\n      if (authStatus && authStatus.toString() === '1') {\n        this.$bus.$emit('tip', {\n          text: this.$t('personal.kyc.kycAuth7'),\n          type: 'warning'\n        });\n        this.$router.push('/personal/userManagement');\n        return;\n      } // 需求5.1 本段文只有在后台配置了非强制自动审核时才会显示\n\n\n      if (forceAuto && forceAuto.toString() === '0') {\n        this.forceAuto = true;\n      } // 需求1 展示二维码\n\n\n      this.qrCode = qrCode; // 需求2 倒计时\n\n      if (validSecond) {\n        // 需求2.1 有效时长根据数据库存储的该用户的token过期时间计算，文案需倒数动态显示\n        var timer = null;\n        this.time = validSecond;\n        timer = setInterval(function () {\n          _this4.time -= 1;\n\n          if (_this4.time === 0) {\n            clearInterval(timer); // 需求2.2 倒计时结束后，文案变为红色字体提示：“二维码已过期，请刷新页面重新获取”\n\n            _this4.timeReload = true;\n          }\n        }, 1000);\n      }\n    }\n  }\n};",{"version":3,"sources":["/Users/h/Downloads/BlockChain-ui-privatization/PC/common-mixin/personal/kycAuth/kycAuth.js"],"names":["name","data","loading","qrCode","time","timeReload","statusLoading","forceAuto","goIDauthLoading","computed","publicInfo","$store","state","baseData","showTime","min","Math","floor","sec","str","$t","methods","init","getData","axios","url","then","code","toString","setData","$bus","$emit","text","msg","type","goIDauth","customConfigData","custom_config","kycSingaporeOpen","customConfig","JSON","parse","error","console","log","kyc_singapore_open","authStatus","$router","push","dispatch","getStatus","openAuto","limitFlag","validSecond","timer","setInterval","clearInterval"],"mappings":"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","sourcesContent":["export default {\r\n  name: 'common-keyAuth',\r\n  data() {\r\n    return {\r\n      loading: true, // 页面loading\r\n      qrCode: '', // 二维码\r\n      time: 0, // 倒计时\r\n      timeReload: false,\r\n      statusLoading: false, // 认证状态的loading\r\n      forceAuto: false, // 是否强制审核\r\n      goIDauthLoading: false, // 选择人工的loading\r\n    };\r\n  },\r\n  computed: {\r\n    publicInfo() { return this.$store.state.baseData.publicInfo; },\r\n    showTime() {\r\n      if (this.time) {\r\n        const min = Math.floor(this.time / 60);\r\n        const sec = this.time - 60 * min;\r\n        let str = '';\r\n        if (min) {\r\n          str += `${min}${this.$t('personal.kyc.kycMin')}`;\r\n        }\r\n        str += `${sec}${this.$t('personal.kyc.kycSec')}`;\r\n        return str;\r\n      }\r\n      return '';\r\n    },\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.getData();\r\n    },\r\n    // 获取页面信息\r\n    getData() {\r\n      this.axios({\r\n        url: '/kyc/Api/get_Valid_QRcode',\r\n      }).then((data) => {\r\n        if (data.code.toString() === '0') {\r\n          this.loading = false;\r\n          this.setData(data.data);\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    // 选择人工\r\n    goIDauth() {\r\n      if (this.goIDauthLoading) return;\r\n      this.goIDauthLoading = true;\r\n      // 判断开关是否开启\r\n      const customConfigData = this.publicInfo.custom_config;\r\n      let kycSingaporeOpen = null;\r\n      let customConfig = null;\r\n      if (customConfigData) {\r\n        try {\r\n          customConfig = JSON.parse(customConfigData);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n        kycSingaporeOpen = customConfig ? customConfig.kyc_singapore_open : null;\r\n      }\r\n      this.axios({\r\n        url: '/kyc/Api/get_Valid_QRcode',\r\n      }).then((data) => {\r\n        this.goIDauthLoading = false;\r\n        if (data.code.toString() === '0') {\r\n          // 需求5.2.2 否，则跳转至账号管理界面，界面右上角显示提示语提示：“已存在实名认证信息”。\r\n          if (data.data.authStatus === '1') {\r\n            this.$bus.$emit('tip', { text: this.$t('personal.kyc.kycAuth7'), type: 'warning' });\r\n            this.$router.push('/personal/userManagement');\r\n          // 需求5.2.1 是，则跳转至实名认证页_中国界面进行人工审核模式提交实名认证\r\n          } else if (kycSingaporeOpen && kycSingaporeOpen !== '0') {\r\n            this.$store.dispatch('exccKycConfig', {});\r\n          } else {\r\n            this.$router.push('/personal/idAuth?kycPhone=86');\r\n          }\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    // 获取当前认证结果\r\n    getStatus() {\r\n      this.statusLoading = true;\r\n      this.axios({\r\n        url: '/kyc/Api/get_Database_Authentication_result',\r\n      }).then((data) => {\r\n        this.statusLoading = false;\r\n        if (data.code.toString() === '0') {\r\n          const { authStatus } = data.data;\r\n          // 需求4.2.1 存在，则跳转至该用户的账号管理界面，提示语提示：“已存在实名认证信息”。\r\n          if (authStatus && authStatus.toString() === '1') {\r\n            this.$bus.$emit('tip', { text: this.$t('personal.kyc.kycAuth7'), type: 'warning' });\r\n            this.$router.push('/personal/userManagement');\r\n          // 需求4.2.2 不存在，则停留在当前界面，提示语提示：“请扫描二维码完成认证”\r\n          } else {\r\n            this.$bus.$emit('tip', { text: this.$t('personal.kyc.kycAuth8'), type: 'warning' });\r\n          }\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    setData({\r\n      openAuto, limitFlag, authStatus, qrCode, validSecond, forceAuto,\r\n    }) {\r\n      // 需求3.1.1 如果未开启自动审核 则跳转到人工审核\r\n      // 需求3.4.1 当日平台、个人超出当日自动审核限制 则跳转到人工审核\r\n      if ((openAuto && openAuto.toString() === '0')\r\n        || (limitFlag && limitFlag.toString() === '1')) {\r\n        this.$bus.$emit('tip', { text: this.$t('personal.kyc.kycAuth9'), type: 'warning' });\r\n        // this.$router.push('/personal/idAuth?kycPhone=86');\r\n        this.$store.dispatch('exccKycConfig', {});\r\n        return;\r\n      }\r\n      // 需求3.2.1 判断该用户存在未审核或已通过的实名信息 则跳转到账号管理\r\n      if (authStatus && authStatus.toString() === '1') {\r\n        this.$bus.$emit('tip', { text: this.$t('personal.kyc.kycAuth7'), type: 'warning' });\r\n        this.$router.push('/personal/userManagement');\r\n        return;\r\n      }\r\n      // 需求5.1 本段文只有在后台配置了非强制自动审核时才会显示\r\n      if (forceAuto && forceAuto.toString() === '0') {\r\n        this.forceAuto = true;\r\n      }\r\n      // 需求1 展示二维码\r\n      this.qrCode = qrCode;\r\n      // 需求2 倒计时\r\n      if (validSecond) {\r\n        // 需求2.1 有效时长根据数据库存储的该用户的token过期时间计算，文案需倒数动态显示\r\n        let timer = null;\r\n        this.time = validSecond;\r\n        timer = setInterval(() => {\r\n          this.time -= 1;\r\n          if (this.time === 0) {\r\n            clearInterval(timer);\r\n            // 需求2.2 倒计时结束后，文案变为红色字体提示：“二维码已过期，请刷新页面重新获取”\r\n            this.timeReload = true;\r\n          }\r\n        }, 1000);\r\n      }\r\n    },\r\n  },\r\n};\r\n"]}]}