{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/ClosePhone/ClosePhone.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/ClosePhone/ClosePhone.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  name: 'bindEmail',\n  watch: {\n    sendSmsCode: function sendSmsCode(_sendSmsCode) {\n      if (_sendSmsCode !== null) {\n        if (_sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    closeMobileVerify: function closeMobileVerify(_closeMobileVerify) {\n      if (_closeMobileVerify !== null) {\n        this.loading = false;\n\n        if (_closeMobileVerify.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _closeMobileVerify.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n          this.$router.push('/personal/userManagement');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _closeMobileVerify.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n\n          if (_closeMobileVerify.code !== '10009') {\n            this.$bus.$emit('getCode-clear', 'smsCode');\n          }\n        }\n      }\n    }\n  },\n  computed: {\n    sendSmsCode: function sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    closeMobileVerify: function closeMobileVerify() {\n      return this.$store.state.personal.closeMobileVerify;\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      checkValue1: '',\n      checkValue2: '',\n      promptText1: this.$t('personal.label.googleCodeText'),\n      promptText2: this.$t('personal.label.smsCodeText'),\n      errorText1: this.$t('personal.prompt.errorCode'),\n      errorText2: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag1: false,\n      checkErrorFlag2: false,\n      disabled: true\n    };\n  },\n  methods: {\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick: function getCodeClick(name) {\n      if (name === 'smsCode') {\n        this.$bus.$emit('getCode-start', 'smsCode');\n        var info = {\n          operationType: 14\n        };\n        this.$store.dispatch('sendSmsCode', info);\n      }\n    },\n    inputChanges: function inputChanges(value, name) {\n      if (name === 'googleCode') {\n        this.checkValue1 = value;\n\n        if (this.codeFlag(value)) {\n          this.checkErrorFlag1 = false;\n        } else {\n          this.checkErrorFlag1 = true;\n        }\n      } else {\n        this.checkValue2 = value;\n\n        if (this.codeFlag(value)) {\n          this.checkErrorFlag2 = false;\n        } else {\n          this.checkErrorFlag2 = true;\n        }\n      }\n\n      if (this.checkValue1 && this.checkValue2 && !this.checkErrorFlag1 && !this.checkErrorFlag2) {\n        this.disabled = false;\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink: function btnLink() {\n      this.loading = true;\n      var info = {\n        googleCode: this.checkValue1,\n        smsValidCode: this.checkValue2\n      };\n      this.$store.dispatch('closeMobileVerify', info);\n    }\n  }\n};",null]}