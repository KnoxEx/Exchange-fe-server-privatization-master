{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/spotTrade/trade/tradingView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/spotTrade/trade/tradingView.vue","mtime":1642318859115},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport mixin from 'blockchain-ui-privatization/PC/common-mixin/modules/trade/tradingView/tradeTradingView';\nimport 'blockchain-ui-privatization/PC/common-mixin/modules/trade/tradingView/tradeTradingView.styl';\nimport { myStorage, getCookie } from 'blockchain-ui-privatization/utils';\nimport Echarts from '@/components/modules/trade/echarts/index.vue'; // import EchartsKline from '../echartsKline/index.vue';\n\nimport tabs from '@/components/modules/spotTrade/tab.vue';\nimport timeSelect from \"../select.vue\";\nexport default {\n  mixins: [mixin],\n  components: {\n    Echarts: Echarts,\n    tabs: tabs,\n    timeSelect: timeSelect // EchartsKline,\n\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  data: function data() {\n    return {\n      chartTabs: [{\n        label: this.$t('pageTitle.priceChart'),\n        value: 'price'\n      }, {\n        label: this.$t('pageTitle.deepChart'),\n        value: 'deep'\n      }],\n      activeChart: 'price',\n      timeLabel: '30min'\n    };\n  },\n  destroyed: function destroyed() {\n    this.$bus.$off('SYMBOL_LIST_ALL'); // 监听 WebSocket 链接成功\n\n    this.$bus.$off('WEBSOCKET_ON_OPEN'); // 获取 当前选中的货币对\n\n    this.$bus.$off('SYMBOL_CURRENT');\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.MywebSocket = false;\n  },\n  computed: {\n    //  是否开启了 网格\n    gridTradeFlag: function gridTradeFlag() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var str = 0;\n\n      if (publicInfo && publicInfo.switch && publicInfo.switch.grid_trade_switch) {\n        str = Number(publicInfo.switch.grid_trade_switch);\n      }\n\n      return str;\n    },\n    // 该币对是否开启网格\n    showGridFlag: function showGridFlag() {\n      var flag = false;\n\n      if (this.symbolAll && this.symbolCurrent) {\n        var symbol = this.symbolAll[this.symbolCurrent];\n\n        if (symbol && symbol.is_grid_open && this.gridTradeFlag) {\n          flag = true;\n        }\n      }\n\n      return flag;\n    },\n    lan: function lan() {\n      if (this.$store.state.baseData) {\n        return this.$store.state.baseData.lan;\n      }\n\n      return null;\n    }\n  },\n  watch: {\n    showGridFlag: function showGridFlag() {\n      this.setTvBoxHeight();\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      // 杠杆当前选中的币对\n      if (this.moduleType === 'lever') {\n        this.symbolCurrent = myStorage.get('leverSymbolName');\n      } // 合约当前选中的币对\n\n\n      if (this.moduleType === 'co') {\n        this.TvBoxHeight = '710px';\n        this.symbolCurrent = myStorage.get('coNowSymbol');\n      } // 监听TV 是否是全屏状态\n\n\n      document.removeEventListener('fullscreenchange', this.quitfullTv);\n      document.addEventListener('fullscreenchange', this.quitfullTv);\n      this.$bus.$on('SYMBOL_LIST_ALL', function (data) {\n        _this.coSymbolAll = data;\n      }); // 设置国际版TV的高度\n\n      this.setTvBoxHeight();\n      this.$bus.$on('WINFOW_ON_RESIIZE', function () {\n        var _this$$refs = _this.$refs,\n            _this$$refs$topMenuBo = _this$$refs.topMenuBox,\n            topMenuBox = _this$$refs$topMenuBo === void 0 ? null : _this$$refs$topMenuBo,\n            _this$$refs$topMenuBa = _this$$refs.topMenuBar,\n            topMenuBar = _this$$refs$topMenuBa === void 0 ? null : _this$$refs$topMenuBa; // 监听TV 是否是全屏状态\n\n        _this.quitfullTv(); // 设置国际版TV的高度\n\n\n        _this.setTvBoxHeight(); // 市场 个数的超出宽度\n        // if (topMenuBox && topMenuBar) {\n        //   this.maxPosition = topMenuBox.offsetWidth - topMenuBar.offsetWidth;\n        // }\n\n\n        _this.slideMarket('left');\n      });\n\n      if (this.lanArry.indexOf(this.language) <= -1) {\n        this.language = 'en';\n      }\n\n      if (getCookie('lan') === 'el_GR') {\n        this.language = 'zh_TW';\n      }\n\n      if (!myStorage.get('lastTimeS')) {\n        myStorage.set('lastTimeS', '30min');\n        this.lastTimeS = '30min';\n        this.timeLabel = '30min';\n      } // 监听 WebSocket 链接成功\n\n\n      this.$bus.$on('WEBSOCKET_ON_OPEN', function (val) {\n        _this.MywebSocket = val;\n\n        if (_this.MywebSocket) {\n          _this.isCreateWidget = false;\n\n          _this.initTradingView();\n        }\n      }); // 获取 当前选中的货币对\n\n      this.$bus.$on('SYMBOL_CURRENT', function (val) {\n        if (_this.symbolCurrent !== val) {\n          if (_this.chartType === 1) {\n            _this.isshowLoading = true;\n          }\n\n          _this.symbolCurrent = val;\n\n          if (window.tvWidget) {\n            var showSymbol = _this.symbolName.showSymbol;\n\n            if (_this.moduleType === 'co') {\n              showSymbol = _this.symbolName.symbol;\n            }\n\n            window.tvWidget.setSymbol(showSymbol, _this.getTimeMin(true, _this.lastTimeS), function () {\n              _this.widget.chart().executeActionById('chartReset');\n            });\n          }\n        }\n\n        _this.setTvBoxHeight();\n      });\n      this.$bus.$on('HIDE_LOADING', function () {\n        _this.isshowLoading = false;\n      });\n      var screenWidth = document.body.clientWidth;\n      var screenHeight = document.documentElement.clientHeight;\n\n      if (screenWidth < 961) {\n        this.isMobile = true;\n        this.TvBoxHeight = \"\".concat(screenHeight - 180, \"px\");\n        this.disabled_features_arr.push('header_settings');\n      } // 市场 个数的超出宽度\n      // this.maxPosition = this.$refs.topMenuBox.offsetWidth - this.$refs.topMenuBar.offsetWidth;\n\n    },\n    setTvBoxHeight: function setTvBoxHeight() {\n      var bodyH = document.documentElement.clientHeight;\n      var activeName = this.$route.meta.activeName;\n      if (bodyH < 800) bodyH = 800;\n\n      if (this.templateLayoutType === '2') {\n        if (this.moduleType === 'co') {\n          this.TvBoxHeight = '100%';\n        } else {\n          this.TvBoxHeight = \"\".concat(bodyH - 475, \"px\");\n        }\n      } else if (this.showGridFlag && this.lan !== 'zh_CN') {\n        this.TvBoxHeight = '375px';\n      } else {\n        this.TvBoxHeight = '400px';\n      } // 如果是专业版交易页面 则设置 TV的高度为响应式（包含币币和杠杆）\n\n\n      if (activeName && activeName.indexOf('proTrade') > -1) {\n        this.TvBoxHeight = \"\".concat(bodyH - 398, \"px\");\n      }\n    },\n    handlerClickChart: function handlerClickChart(value) {\n      if (value === 'price') {\n        // price chart\n        this.switchChartType(1);\n      } else {\n        // deep chart\n        this.switchChartType(2);\n      }\n    }\n  }\n};",null]}