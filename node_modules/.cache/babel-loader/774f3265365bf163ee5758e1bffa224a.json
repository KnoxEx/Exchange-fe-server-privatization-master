{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/Downloads/BlockChain-ui-privatization/PC/components/calendar/calendar.js","dependencies":[{"path":"/Users/h/Downloads/BlockChain-ui-privatization/PC/components/calendar/calendar.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nexport default {\n  // 当某月的天数\n  getDaysInOneMonth: function getDaysInOneMonth(date) {\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var d = new Date(year, month, 0);\n    return d.getDate();\n  },\n  // 向前空几个\n  getMonthweek: function getMonthweek(date) {\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var dateFirstOne = new Date(\"\".concat(year, \"/\").concat(month, \"/1\"));\n\n    if (this.sundayStart) {\n      return dateFirstOne.getDay() === 0 ? 7 : dateFirstOne.getDay();\n    }\n\n    return dateFirstOne.getDay() === 0 ? 6 : dateFirstOne.getDay() - 1;\n  },\n  // 获取当前日期上个月或者下个月\n  getOtherMonth: function getOtherMonth(date) {\n    var str = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'nextMonth';\n    var timeArray = this.dateFormat(date).split('/');\n    var year = timeArray[0];\n    var month = timeArray[1];\n    var day = timeArray[2];\n    var year2 = year;\n    var month2;\n\n    if (str === 'nextMonth') {\n      month2 = parseInt(month, 0) + 1;\n\n      if (month2 === 13) {\n        year2 = parseInt(year2, 0) + 1;\n        month2 = 1;\n      }\n    } else {\n      month2 = parseInt(month, 0) - 1;\n\n      if (month2 === 0) {\n        year2 = parseInt(year2, 0) - 1;\n        month2 = 12;\n      }\n    }\n\n    var day2 = day;\n    var days2 = new Date(year2, month2, 0).getDate();\n\n    if (day2 > days2) {\n      day2 = days2;\n    }\n\n    if (month2 < 10) {\n      month2 = \"0\".concat(month2);\n    }\n\n    if (day2 < 10) {\n      day2 = \"0\".concat(day2);\n    }\n\n    var t2 = \"\".concat(year2, \"/\").concat(month2, \"/\").concat(day2);\n    return new Date(t2);\n  },\n  // 上个月末尾的一些日期\n  getLeftArr: function getLeftArr(date) {\n    var arr = [];\n    var leftNum = this.getMonthweek(date);\n    var num = this.getDaysInOneMonth(this.getOtherMonth(date, 'preMonth')) - leftNum + 1;\n    var preDate = this.getOtherMonth(date, 'preMonth'); // 上个月多少开始\n\n    for (var i = 0; i < leftNum; i += 1) {\n      var nowTime = \"\".concat(preDate.getFullYear(), \"/\").concat(preDate.getMonth() + 1, \"/\").concat(num + i);\n      arr.push({\n        id: num + i,\n        date: nowTime,\n        isToday: false,\n        otherMonth: 'preMonth'\n      });\n    }\n\n    return arr;\n  },\n  // 下个月末尾的一些日期\n  getRightArr: function getRightArr(date) {\n    var arr = [];\n    var nextDate = this.getOtherMonth(date, 'nextMonth');\n    var leftLength = this.getDaysInOneMonth(date) + this.getMonthweek(date);\n    var CleftLength = leftLength % 7;\n    var Nlength = 7 - CleftLength;\n\n    for (var i = 0; i < Nlength; i += 1) {\n      var nowTime = \"\".concat(nextDate.getFullYear(), \"/\").concat(nextDate.getMonth() + 1, \"/\").concat(i + 1);\n      arr.push({\n        id: i + 1,\n        date: nowTime,\n        isToday: false,\n        otherMonth: 'nextMonth'\n      });\n    }\n\n    return arr;\n  },\n  // format日期\n  dateFormat: function dateFormat(date) {\n    var Ndate = typeof date === 'string' ? new Date(date.replace(/-/g, '/')) : date;\n    return \"\".concat(Ndate.getFullYear(), \"/\").concat(Ndate.getMonth() + 1, \"/\").concat(Ndate.getDate());\n  },\n  // 获取某月的列表不包括上月和下月\n  getMonthListNoOther: function getMonthListNoOther(date) {\n    var arr = [];\n    var num = this.getDaysInOneMonth(date);\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var toDay = this.dateFormat(new Date());\n\n    for (var i = 0; i < num; i += 1) {\n      var nowTime = \"\".concat(year, \"/\").concat(month, \"/\").concat(i + 1);\n      arr.push({\n        id: i + 1,\n        date: nowTime,\n        isToday: toDay === nowTime,\n        otherMonth: 'nowMonth'\n      });\n    }\n\n    return arr;\n  },\n  // 获取某月的列表 用于渲染\n  getMonthList: function getMonthList(date) {\n    return [].concat(_toConsumableArray(this.getLeftArr(date)), _toConsumableArray(this.getMonthListNoOther(date)), _toConsumableArray(this.getRightArr(date)));\n  },\n  // 默认是周一开始\n  sundayStart: false\n};",{"version":3,"sources":["/Users/h/Downloads/BlockChain-ui-privatization/PC/components/calendar/calendar.js"],"names":["getDaysInOneMonth","date","year","getFullYear","month","getMonth","d","Date","getDate","getMonthweek","dateFirstOne","sundayStart","getDay","getOtherMonth","str","timeArray","dateFormat","split","day","year2","month2","parseInt","day2","days2","t2","getLeftArr","arr","leftNum","num","preDate","i","nowTime","push","id","isToday","otherMonth","getRightArr","nextDate","leftLength","CleftLength","Nlength","Ndate","replace","getMonthListNoOther","toDay","getMonthList"],"mappings":"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","sourcesContent":["export default {\r\n  // 当某月的天数\r\n  getDaysInOneMonth(date) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const d = new Date(year, month, 0);\r\n    return d.getDate();\r\n  },\r\n  // 向前空几个\r\n  getMonthweek(date) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const dateFirstOne = new Date(`${year}/${month}/1`);\r\n    if (this.sundayStart) {\r\n      return dateFirstOne.getDay() === 0 ? 7 : dateFirstOne.getDay();\r\n    }\r\n    return dateFirstOne.getDay() === 0 ? 6 : dateFirstOne.getDay() - 1;\r\n  },\r\n  // 获取当前日期上个月或者下个月\r\n  getOtherMonth(date, str = 'nextMonth') {\r\n    const timeArray = this.dateFormat(date).split('/');\r\n    const year = timeArray[0];\r\n    const month = timeArray[1];\r\n    const day = timeArray[2];\r\n    let year2 = year;\r\n    let month2;\r\n    if (str === 'nextMonth') {\r\n      month2 = parseInt(month, 0) + 1;\r\n      if (month2 === 13) {\r\n        year2 = parseInt(year2, 0) + 1;\r\n        month2 = 1;\r\n      }\r\n    } else {\r\n      month2 = parseInt(month, 0) - 1;\r\n      if (month2 === 0) {\r\n        year2 = parseInt(year2, 0) - 1;\r\n        month2 = 12;\r\n      }\r\n    }\r\n    let day2 = day;\r\n    const days2 = new Date(year2, month2, 0).getDate();\r\n    if (day2 > days2) {\r\n      day2 = days2;\r\n    }\r\n    if (month2 < 10) {\r\n      month2 = `0${month2}`;\r\n    }\r\n    if (day2 < 10) {\r\n      day2 = `0${day2}`;\r\n    }\r\n    const t2 = `${year2}/${month2}/${day2}`;\r\n    return new Date(t2);\r\n  },\r\n  // 上个月末尾的一些日期\r\n  getLeftArr(date) {\r\n    const arr = [];\r\n    const leftNum = this.getMonthweek(date);\r\n    const num = this.getDaysInOneMonth(this.getOtherMonth(date, 'preMonth'))\r\n      - leftNum\r\n      + 1;\r\n    const preDate = this.getOtherMonth(date, 'preMonth');\r\n    // 上个月多少开始\r\n    for (let i = 0; i < leftNum; i += 1) {\r\n      const nowTime = `${preDate.getFullYear()}/${preDate.getMonth()\r\n        + 1}/${num + i}`;\r\n      arr.push({\r\n        id: num + i,\r\n        date: nowTime,\r\n        isToday: false,\r\n        otherMonth: 'preMonth',\r\n      });\r\n    }\r\n    return arr;\r\n  },\r\n  // 下个月末尾的一些日期\r\n  getRightArr(date) {\r\n    const arr = [];\r\n    const nextDate = this.getOtherMonth(date, 'nextMonth');\r\n    const leftLength = this.getDaysInOneMonth(date) + this.getMonthweek(date);\r\n    const CleftLength = leftLength % 7;\r\n    const Nlength = 7 - CleftLength;\r\n    for (let i = 0; i < Nlength; i += 1) {\r\n      const nowTime = `${nextDate.getFullYear()}/${nextDate.getMonth()\r\n        + 1}/${i + 1}`;\r\n      arr.push({\r\n        id: i + 1,\r\n        date: nowTime,\r\n        isToday: false,\r\n        otherMonth: 'nextMonth',\r\n      });\r\n    }\r\n    return arr;\r\n  },\r\n  // format日期\r\n  dateFormat(date) {\r\n    const Ndate = typeof date === 'string' ? new Date(date.replace(/-/g, '/')) : date;\r\n    return `${Ndate.getFullYear()}/${Ndate.getMonth() + 1}/${Ndate.getDate()}`;\r\n  },\r\n  // 获取某月的列表不包括上月和下月\r\n  getMonthListNoOther(date) {\r\n    const arr = [];\r\n    const num = this.getDaysInOneMonth(date);\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const toDay = this.dateFormat(new Date());\r\n\r\n    for (let i = 0; i < num; i += 1) {\r\n      const nowTime = `${year}/${month}/${i + 1}`;\r\n      arr.push({\r\n        id: i + 1,\r\n        date: nowTime,\r\n        isToday: toDay === nowTime,\r\n        otherMonth: 'nowMonth',\r\n      });\r\n    }\r\n    return arr;\r\n  },\r\n  // 获取某月的列表 用于渲染\r\n  getMonthList(date) {\r\n    return [\r\n      ...this.getLeftArr(date),\r\n      ...this.getMonthListNoOther(date),\r\n      ...this.getRightArr(date),\r\n    ];\r\n  },\r\n  // 默认是周一开始\r\n  sundayStart: false,\r\n};\r\n"]}]}