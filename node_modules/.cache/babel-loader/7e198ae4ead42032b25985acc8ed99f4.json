{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/assets/innerTransfer/innerTransfer.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/assets/innerTransfer/innerTransfer.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { fixD, fixInput, getCoinShowName, colorMap, imgMap } from '@/utils';\nexport default {\n  name: 'page-withdraw',\n  data: function data() {\n    return {\n      imgMap: imgMap,\n      colorMap: colorMap,\n      alertFlag: false,\n      // alert变量\n      detailsList: [{\n        key: 'sum',\n        value: '--'\n      }, {\n        key: 'normal',\n        value: '--'\n      }, {\n        key: 'lock',\n        value: '--'\n      }],\n      withdrawMin: '--',\n      // 最小提币额度\n      withdrawMax: '--',\n      // 最大提币额度\n      daywithdrawMax: '--',\n      // 最大提币额度\n      symbol: '',\n      numberValue: '',\n      // 提币数量\n      proceduresValue: '',\n      // 手续费\n      dialogFlag: false,\n      // 弹窗开关\n      dialogConfirmLoading: false,\n      // 弹窗按钮loading\n      googleValue: '',\n      // 谷歌\n      phoneValue: '',\n      // 手机\n      defaultFeeFlag: true,\n      defaultFee: null,\n      symbol_withdraw_msg: null,\n      notIdShowDialog: false,\n      nowType: 1,\n      // 1为站外提现 2为站内提现\n      accountValue: '',\n      // 账号\n      accountFlag: false\n    };\n  },\n  filters: {\n    fixDFn: function fixDFn(v, that) {\n      return fixD(v, that.showPrecision);\n    }\n  },\n  watch: {\n    userInfoIsReady: function userInfoIsReady() {\n      this.canAlert();\n    },\n    exchangeData: function exchangeData(v) {\n      if (v) {\n        this.initDetails();\n      }\n    },\n    symbol: function symbol(v) {\n      if (v && this.market) {\n        // this.innerInit();\n        this.defInit();\n      }\n    },\n    market: {\n      immediate: true,\n      handler: function handler(v) {\n        if (v && this.symbol) {\n          // this.innerInit();\n          this.defInit();\n        }\n      }\n    },\n    proceduresValue: function proceduresValue(v) {\n      this.proceduresValue = fixInput(v, this.showPrecision);\n    },\n    numberValue: function numberValue(v) {\n      this.numberValue = fixInput(v, this.showPrecision);\n    }\n  },\n  computed: {\n    // finance/account_balance 接口返回成功的数据\n    exchangeData: function exchangeData() {\n      return this.$store.state.assets.exchangeData;\n    },\n    showSymbol: function showSymbol() {\n      var str = this.symbol;\n\n      if (this.market && this.market.coinList && this.market.coinList[this.symbol]) {\n        str = getCoinShowName(this.symbol, this.market.coinList);\n      }\n\n      return str;\n    },\n    enforceGoogleAuth: function enforceGoogleAuth() {\n      return this.$store.state.baseData.is_enforce_google_auth || 0;\n    },\n    authTitleText: function authTitleText() {\n      var text = this.enforceGoogleAuth ? 'assets.withdraw.enforceGoogleAuth' : 'assets.withdraw.safetyWarningError';\n      return this.$t(text);\n    },\n    switchadd: function switchadd() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var switchopen = 0;\n\n      if (publicInfo && publicInfo.switch.open_txid_addr) {\n        switchopen = Number(publicInfo.switch.open_txid_addr);\n      }\n\n      return switchopen;\n    },\n    alertData: function alertData() {\n      var arr = [// 绑定谷歌验证\n      {\n        text: this.$t('assets.withdraw.bindGoogle'),\n        flag: this.OpenGoogle\n      }];\n\n      if (!this.enforceGoogleAuth) {\n        // 绑定手机验证\n        arr.push({\n          text: this.$t('assets.withdraw.bindPhone'),\n          flag: this.OpenMobile\n        });\n      }\n\n      return arr;\n    },\n    // paginationObjCurrentPage() { return this.paginationObj.currentPage; },\n    // 当前币种精度\n    showPrecision: function showPrecision() {\n      var v = 0;\n      var market = this.$store.state.baseData.market;\n\n      if (market && market.coinList && market.coinList[this.symbol]) {\n        v = market.coinList[this.symbol].showPrecision;\n      }\n\n      return v;\n    },\n    // market 接口\n    market: function market() {\n      return this.$store.state.baseData.market;\n    },\n    // 提现按钮禁用状态\n    btnDisabled: function btnDisabled() {\n      var flag = true;\n\n      if (this.accountValue.length && this.numberOptions.flag) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    userInfoIsReady: function userInfoIsReady() {\n      return this.$store.state.baseData.userInfoIsReady;\n    },\n    // 用户是否开启手机\n    OpenMobile: function OpenMobile() {\n      var flag = false;\n      var userInfo = this.$store.state.baseData.userInfo;\n\n      if (userInfo && userInfo.isOpenMobileCheck.toString() === '1') {\n        flag = true;\n      }\n\n      return flag;\n    },\n    idAuth: function idAuth() {\n      var userInfo = this.$store.state.baseData.userInfo;\n      var idAuth = 0;\n\n      if (userInfo) {\n        idAuth = Number(userInfo.authLevel);\n      }\n\n      return idAuth;\n    },\n    // 用户是否开启谷歌\n    OpenGoogle: function OpenGoogle() {\n      var flag = false;\n      var userInfo = this.$store.state.baseData.userInfo;\n\n      if (userInfo && userInfo.googleStatus.toString() === '1') {\n        flag = true;\n      }\n\n      return flag;\n    },\n    // phoneValue 是否复合正则验证\n    phoneValueFlag: function phoneValueFlag() {\n      return this.$store.state.regExp.verification.test(this.phoneValue);\n    },\n    // googleValue 是否复合正则验证\n    googleValueFlag: function googleValueFlag() {\n      return this.$store.state.regExp.verification.test(this.googleValue);\n    },\n    phoneError: function phoneError() {\n      if (this.phoneValue.length !== 0 && !this.phoneValueFlag) return true;\n      return false;\n    },\n    googleError: function googleError() {\n      if (this.googleValue.length !== 0 && !this.googleValueFlag) return true;\n      return false;\n    },\n    // 弹窗确认按钮\n    dialogConfirmDisabled: function dialogConfirmDisabled() {\n      var phone = true;\n      var google = true;\n\n      if (this.OpenMobile) {\n        phone = this.phoneValueFlag;\n      }\n\n      if (this.OpenGoogle) {\n        google = this.googleValueFlag;\n      }\n\n      if (phone && google || this.dialogConfirmLoading) {\n        return false;\n      }\n\n      return true;\n    },\n    that: function that() {\n      return this;\n    },\n    // 提币数量的校验\n    // 提现条件：\n    // 1. 提现数量 > 手续费\n    // 2. 提现数量 <= 可用余额 （提现数量包含手续费）\n    // 3. 提现最小限额 =< (提现数量 -手续费) =<提现最大限额\n    numberOptions: function numberOptions() {\n      var obj = {\n        text: '',\n        // 错误提示文案\n        flag: null,\n        // 是否通过校验\n        error: null // 是否展示文案\n\n      };\n      var haveNum = parseFloat(this.detailsList[1].value) || 0; // 可用\n\n      var minNum = parseFloat(this.withdrawMin) || 0; // 最小提币额\n\n      var maxNum = parseFloat(this.withdrawMax) || 0; // 最大提币额\n\n      var daymaxNum = parseFloat(this.daywithdrawMax) || 0; // 单日最大提币额\n\n      var spk = fixD(this.numberValue - this.proceduresValue, this.showPrecision); // 提币数量减手续费\n\n      if (this.numberValue.length === 0 || parseFloat(this.numberValue) === 0) {\n        // 请输入提币数量\n        obj.text = this.$t('assets.withdraw.NumberOfCoinsError');\n        obj.flag = false;\n        obj.error = false;\n        return obj;\n      }\n\n      if (parseFloat(this.numberValue) <= parseFloat(this.proceduresValue)) {\n        // 提币数量需大于矿工手续费\n        obj.text = this.$t('assets.withdraw.NumberOfCoinsError2');\n        obj.flag = false;\n        obj.error = true;\n        return obj;\n      }\n\n      if (parseFloat(this.numberValue) > haveNum) {\n        // 提币数量不得大于可用余额\n        obj.text = this.$t('assets.withdraw.NumberOfCoinsError3');\n        obj.flag = false;\n        obj.error = true;\n        return obj;\n      }\n\n      if (parseFloat(minNum) > spk || parseFloat(maxNum) < spk) {\n        // （提币数量-矿工手续费）需要大于最小提币额且小于最大提币额\n        obj.text = this.$t('assets.withdraw.NumberOfCoinsError4');\n        obj.flag = false;\n        obj.error = true;\n        return obj;\n      }\n\n      if (this.switchadd === 1) {\n        if (parseFloat(daymaxNum) < spk) {\n          // （提币数量-矿工手续费）需要小于单日最大提币额\n          obj.text = this.$t('assets.withdraw.NumberOfCoinsError5');\n          obj.flag = false;\n          obj.error = true;\n          return obj;\n        }\n      }\n\n      obj.flag = true;\n      obj.error = false;\n      return obj;\n    },\n    baseData: function baseData() {\n      return this.$store.state.baseData.publicInfo;\n    },\n    // 提现是否开启了必须实名认证\n    withdrawKycOpen: function withdrawKycOpen() {\n      var isOpen = 0;\n\n      if (this.baseData && this.baseData.kycLimitConfig) {\n        isOpen = this.baseData.kycLimitConfig.withdraw_kyc_open;\n      }\n\n      return Number(isOpen);\n    }\n  },\n  methods: {\n    defInit: function defInit() {\n      if (!this.exchangeData) {\n        this.$store.dispatch('assetsExchangeData');\n      } else {\n        this.initDetails();\n      }\n    },\n    init: function init() {\n      // 如果不存在币种跳走\n      if (this.$route.query.symbol) {\n        this.symbol = this.$route.query.symbol.toUpperCase();\n      } else {\n        this.$router.push('/assets/exchangeAccount');\n      }\n\n      if (this.userInfoIsReady) {\n        this.canAlert();\n      }\n    },\n    canAlert: function canAlert() {\n      var _this = this;\n\n      if (this.OpenGoogle || !this.enforceGoogleAuth && this.OpenMobile) {\n        this.alertFlag = false;\n      } else {\n        setTimeout(function () {\n          _this.alertFlag = true;\n        }, 100);\n      }\n    },\n    alertClone: function alertClone() {\n      this.alertFlag = false;\n      this.notIdShowDialog = false;\n    },\n    alertGo: function alertGo() {\n      this.$router.push('/personal/userManagement');\n    },\n    goAddress: function goAddress() {\n      this.$router.push('/assets/addressMent');\n    },\n    inputChange: function inputChange(v, name) {\n      this[name] = v;\n    },\n    innerInit: function innerInit() {// 该币种是否有标签\n    },\n    // 上半部分 左侧数据\n    initDetails: function initDetails() {\n      var obj = this.exchangeData.allCoinMap[this.symbol];\n      var normalBalance = Number(obj.normal_balance) || Number(obj.overcharge_balance);\n      this.detailsList = [{\n        key: 'sum',\n        value: fixD(obj.total_balance, this.showPrecision)\n      }, // 总额\n      {\n        key: 'normal',\n        value: fixD(normalBalance, this.showPrecision)\n      }, // 可用\n      {\n        key: 'lock',\n        value: fixD(obj.lock_balance, this.showPrecision)\n      } // 冻结\n      ];\n      this.symbol_withdraw_msg = obj.symbol_withdraw_msg || null; // 注意事项\n\n      this.withdrawMin = fixD(obj.withdraw_min, this.showPrecision); // 最小提币额\n\n      this.withdrawMax = fixD(obj.withdraw_max, this.showPrecision); // 最大提币额\n\n      this.daywithdrawMax = fixD(obj.withdraw_max_day, this.showPrecision); // 单日最大提币额\n\n      this.defaultFee = \"\".concat(obj.innerTransferFee);\n      this.proceduresValue = \"\".concat(obj.innerTransferFee); // 默认手续费\n    },\n    // 全部提现\n    allWithDraw: function allWithDraw() {\n      if (this.detailsList[1].value === '--') return;\n      this.numberValue = this.detailsList[1].value;\n    },\n    // 获取验证码\n    getCodeClick: function getCodeClick() {\n      this.sendSmsCode();\n    },\n    // 发送验证码\n    sendSmsCode: function sendSmsCode() {\n      var _this2 = this;\n\n      this.axios({\n        url: 'v4/common/smsValidCode',\n        params: {\n          operationType: '34'\n        }\n      }).then(function (data) {\n        if (data.code.toString() !== '0') {\n          setTimeout(function () {\n            // 倒计时重置\n            _this2.$bus.$emit('getCode-clear', 'withdrawGetcode'); // tip框提示错误\n\n\n            _this2.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }, 2000);\n        } else {\n          _this2.$bus.$emit('tip', {\n            text: _this2.$t('assets.withdraw.phoneSendSuccess'),\n            type: 'success'\n          });\n        }\n      });\n    },\n    withdrawClick: function withdrawClick() {\n      if (this.OpenGoogle || !this.enforceGoogleAuth && this.OpenMobile) {\n        if (this.withdrawKycOpen && this.idAuth !== 1) {\n          this.notIdShowDialog = true;\n          return;\n        }\n\n        this.isExistAccount(); // this.dialogFlag = true;\n\n        return;\n      }\n\n      this.alertFlag = true;\n    },\n    // 判断站内账户是否存在\n    isExistAccount: function isExistAccount() {\n      var _this3 = this;\n\n      this.axios({\n        url: 'inner_transfer/user_auth',\n        params: {\n          transferUid: this.accountValue // 对方账号\n\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          _this3.dialogFlag = true;\n        } else {\n          // this.accountFlag = true;\n          _this3.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 弹窗关闭\n    dialogClose: function dialogClose() {\n      this.phoneValue = '';\n      this.googleValue = '';\n      this.dialogFlag = false;\n    },\n    // 弹窗确认\n    dialogConfirm: function dialogConfirm() {\n      var _this4 = this;\n\n      this.dialogConfirmLoading = true;\n      var pv = this.showPrecision;\n      var amount = fixD(this.numberValue - this.proceduresValue, pv);\n      this.axios({\n        url: 'inner_transfer/do_withdraw',\n        params: {\n          transferUid: this.accountValue,\n          // 提现地址id\n          fee: this.proceduresValue,\n          // 手续费\n          amount: amount,\n          // 提现金额（不包含手续费\n          googleCode: this.googleValue,\n          smsAuthCode: this.phoneValue,\n          symbol: this.symbol\n        }\n      }).then(function (data) {\n        _this4.dialogConfirmLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this4.$bus.$emit('innerList');\n\n          _this4.$store.dispatch('assetsExchangeData'); // 更新额度\n\n\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this4.proceduresValue = '';\n          _this4.numberValue = '';\n          _this4.phoneValue = '';\n          _this4.googleValue = '';\n          _this4.accountValue = '';\n          _this4.dialogFlag = false;\n        } else {\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 去认证\n    gotoAuth: function gotoAuth() {\n      this.$router.push('/personal/userManagement');\n    }\n  }\n};",null]}