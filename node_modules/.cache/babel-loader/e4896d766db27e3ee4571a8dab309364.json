{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/spotTrade/trade.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/spotTrade/trade.vue","mtime":1641872298677},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport mixin from 'blockchain-ui-privatization/PC/common-mixin/modules/trade/index/mixin';\nimport 'blockchain-ui-privatization/PC/common-mixin/trade/index/index.styl';\nimport currentSymbol from '@/components/modules/spotTrade/trade/currentSymbol.vue';\nimport exchangeMarket from '@/components/modules/spotTrade/trade/exchangeMarket.vue'; // tradingView/ Echarts\n\nimport tradingView from '@/components/modules/spotTrade/trade/tradingView.vue'; // 盘口 & 实时成交\n\nimport Depth from '@/components/modules/spotTrade/trade/depth.vue';\nimport InternationalDepth from '@/components/modules/spotTrade/trade/internationalDepth.vue';\nimport InternationalTradeForm from '@/components/modules/spotTrade/trade/internationalTradeForm.vue'; // 下单交易\n\nimport tradeForm from '@/components/modules/spotTrade/trade/ex-tradeForm.vue'; // 订单列表\n\nimport orderList from '@/components/modules/spotTrade/trade/orderList.vue';\nexport default {\n  mixins: [mixin],\n  components: {\n    currentSymbol: currentSymbol,\n    exchangeMarket: exchangeMarket,\n    tradingView: tradingView,\n    Depth: Depth,\n    InternationalDepth: InternationalDepth,\n    InternationalTradeForm: InternationalTradeForm,\n    tradeForm: tradeForm,\n    orderList: orderList\n  },\n  data: function data() {\n    return {\n      activeExchange: 'spot',\n      coinTabs: [{\n        label: this.$t('pageTitle.spot'),\n        value: 'spot'\n      }, {\n        label: this.$t('pageTitle.futures'),\n        value: 'futures'\n      }]\n    };\n  },\n  created: function created() {\n    this.createdInit(); // this.init();\n  },\n  computed: {\n    //  是否开启了 网格\n    gridTradeFlag: function gridTradeFlag() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var str = 1;\n\n      if (publicInfo && publicInfo.switch && publicInfo.switch.grid_trade_switch) {\n        str = Number(publicInfo.switch.grid_trade_switch);\n      }\n\n      return str;\n    },\n    // 该币对是否开启网格\n    showGridFlag: function showGridFlag() {\n      var flag = false;\n\n      if (this.symbolAll && this.symbolCurrent) {\n        var symbol = this.symbolAll[this.symbolCurrent];\n\n        if (symbol && symbol.is_grid_open && this.gridTradeFlag) {\n          flag = true;\n        }\n      }\n\n      return flag;\n    },\n    lan: function lan() {\n      return this.$store.state.baseData.lan;\n    }\n  },\n  methods: {\n    handlerChangeTab: function handlerChangeTab(item) {\n      this.activeExchange = item.value;\n      this.$emit('tabChange', item.value);\n    }\n  }\n};",null]}