{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/order/coOrder/coOrder.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/order/coOrder/coOrder.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport { fixD, formatTime, imgMap, colorMap } from '@/utils';\nexport default {\n  name: 'page-otcOrder',\n  data: function data() {\n    return {\n      imgMap: imgMap,\n      colorMap: colorMap,\n      switchFlag: false,\n      tabelLoading: true,\n      tabelList: [],\n      startTime: '',\n      endTime: '',\n      nowType: 1,\n      // 1为当前委托 2\b计划委托 3\b历史委托 4\b历史成交\n      contractList: [],\n      // 合约\n      side: '',\n      // 当前方向\n      contractType: '',\n      // 合约类型\n      contract: '',\n      // 当前合约\n      orderType: '',\n      // 订单类型\n      paginationObj: {\n        total: 0,\n        // 数据总条数\n        display: 20,\n        // 每页显示条数\n        currentPage: 1 // 当前页码\n\n      },\n      revokeList: [] // 撤销队列\n\n    };\n  },\n  watch: {\n    sideList: function sideList(v) {\n      if (v && v.length) {\n        this.side = 1;\n      }\n    },\n    contractTypeList: function contractTypeList(v) {\n      if (v && v.length) {\n        this.contractType = 1;\n      }\n    },\n    orderTypeList: function orderTypeList(v) {\n      if (v && v.length) {\n        this.orderType = 'all';\n      }\n    },\n    contractListAll: function contractListAll(newVal) {\n      if (newVal && newVal.length) {\n        this.getContractList();\n      }\n    },\n    startTime: function startTime(newVal, oldVal) {\n      if (oldVal) {\n        this.getData();\n      }\n    },\n    endTime: function endTime(newVal, oldVal) {\n      if (oldVal) {\n        this.getData();\n      }\n    }\n  },\n  computed: {\n    startTimeNum: function startTimeNum() {\n      return (new Date(this.startTime.replace(/-/g, '/')).getTime() / 1000).toString();\n    },\n    endTimeNum: function endTimeNum() {\n      return (new Date(this.endTime.replace(/-/g, '/')).getTime() / 1000).toString();\n    },\n    // 合约列表\n    contractListAll: function contractListAll() {\n      if (this.$store.state.future) {\n        return this.$store.state.future.contractList;\n      }\n\n      return [];\n    },\n    // 合约列表 MAP\n    contractListMap: function contractListMap() {\n      if (this.$store.state.future) {\n        return this.$store.state.future.contractListMap;\n      }\n\n      return {};\n    },\n    coPublicInfo: function coPublicInfo() {\n      return this.$store.state.baseData.coPublicInfo;\n    },\n    navTab: function navTab() {\n      return [// 当前委托\n      {\n        name: this.$t('futures.order.title1'),\n        index: 1\n      }, // \b计划委托\n      {\n        name: this.$t('futures.order.title2'),\n        index: 2\n      }, // \b历史委托\n      {\n        name: this.$t('futures.order.title3'),\n        index: 3\n      }, // \b历史计划委托\n      {\n        name: this.$t('futures.order.title4'),\n        index: 4\n      }, // \b历史成交\n      {\n        name: this.$t('futures.order.title5'),\n        index: 5\n      }];\n    },\n    sideList: function sideList() {\n      return [// 交割类型列表\n      // 永续合约\n      {\n        code: 1,\n        value: this.$t('futures.order.typeList1')\n      }, // 模拟合约\n      {\n        code: 2,\n        value: this.$t('futures.order.typeList2')\n      }, // 混合合约\n      {\n        code: 3,\n        value: this.$t('futures.order.typeList3')\n      }];\n    },\n    // 合约类型\n    contractTypeList: function contractTypeList() {\n      return [// 合约类型列表\n      // USDT合约\n      {\n        code: 1,\n        value: this.$t('futures.order.sideType1')\n      }, // 币本位合约\n      {\n        code: 0,\n        value: this.$t('futures.order.sideType2')\n      } // // 混合合约\n      // { code: 2, value: '混合合约' },\n      ];\n    },\n    // 订单类型\n    orderTypeList: function orderTypeList() {\n      return [// 订单类型列表\n      // 全部\n      {\n        code: 'all',\n        value: this.$t('futures.order.all')\n      }, // 限价单\n      {\n        code: 1,\n        value: this.$t('futures.order.orderType1')\n      }, // 市价单\n      {\n        code: 2,\n        value: this.$t('futures.order.orderType2')\n      }, // PostOnly\n      {\n        code: 3,\n        value: this.$t('futures.order.orderType3')\n      }, // IOC\n      {\n        code: 4,\n        value: this.$t('futures.order.orderType4')\n      }, // FOK\n      {\n        code: 5,\n        value: this.$t('futures.order.orderType5')\n      }];\n    },\n    //\n    axiosType: function axiosType() {\n      if (this.orderType === 'all') {\n        return '';\n      }\n\n      return this.orderType;\n    },\n    // 表格title\n    columns: function columns() {\n      var list = [];\n\n      if (this.nowType === 1) {\n        list = [{\n          title: this.$t('futures.order.contract'),\n          width: '10%',\n          align: 'left'\n        }, // 合约\n        {\n          title: this.$t('futures.order.time'),\n          width: '10%'\n        }, // 时间\n        {\n          title: this.$t('futures.order.orderType'),\n          width: '10%'\n        }, // 订单类型\n        {\n          title: this.$t('futures.order.side'),\n          width: '10%'\n        }, // 方向\n        {\n          title: this.$t('futures.order.intrustPrice'),\n          width: '10%'\n        }, // 委托价格\n        {\n          title: this.$t('futures.order.intrustVolume'),\n          width: '10%'\n        }, // 委托数量\n        {\n          title: this.$t('futures.order.dealVolume'),\n          width: '10%'\n        }, // 成交数量\n        {\n          title: this.$t('futures.order.dealPrice'),\n          width: '10%'\n        }, // 成交均价\n        {\n          title: this.$t('futures.order.onlyCut'),\n          width: '10%'\n        }, // 只减仓\n        {\n          title: this.$t('futures.order.opera'),\n          width: '10%'\n        } // 操作\n        ];\n      }\n\n      if (this.nowType === 2) {\n        list = [{\n          title: this.$t('futures.order.contract'),\n          width: '10%',\n          align: 'left'\n        }, // 合约\n        {\n          title: this.$t('futures.order.time'),\n          width: '10%'\n        }, // 时间\n        {\n          title: this.$t('futures.order.orderType'),\n          width: '10%'\n        }, // 订单类型\n        {\n          title: this.$t('futures.order.side'),\n          width: '10%'\n        }, // 方向\n        {\n          title: this.$t('futures.order.triggerPrice'),\n          width: '10%'\n        }, // 触发价\n        {\n          title: this.$t('futures.order.intrustPrice'),\n          width: '10%'\n        }, // 委托价格\n        {\n          title: this.$t('futures.order.intrustVolumeOrNum'),\n          width: '10%'\n        }, // 委托数量/价值\n        // { title: '成交数量(张)', width: '10%' }, // 价值\n        // { title: '成交均价', width: '10%' }, // 成交均价\n        {\n          title: this.$t('futures.order.onlyCut'),\n          width: '10%'\n        }, // 只减仓\n        {\n          title: this.$t('futures.order.overTime'),\n          width: '10%'\n        }, // 只减仓\n        {\n          title: this.$t('futures.order.opera'),\n          width: '10%'\n        } // 操作\n        ];\n      }\n\n      if (this.nowType === 3) {\n        list = [{\n          title: this.$t('futures.order.contract'),\n          width: '8%',\n          align: 'left'\n        }, // 合约\n        {\n          title: this.$t('futures.order.time'),\n          width: '10%'\n        }, // 时间\n        {\n          title: this.$t('futures.order.orderType'),\n          width: '10%'\n        }, // 订单类型(张)\n        {\n          title: this.$t('futures.order.side'),\n          width: '10%'\n        }, // 方向\n        {\n          title: this.$t('futures.order.intrustPrice'),\n          width: '10%'\n        }, // 委托价格\n        {\n          title: this.$t('futures.order.intrustVolumeOrNum'),\n          width: '10%'\n        }, // 委托数量/价值\n        {\n          title: this.$t('futures.order.dealVolume'),\n          width: '10%'\n        }, // 成交数量\n        {\n          title: this.$t('futures.order.dealPrice'),\n          width: '8%'\n        }, // 成交均价\n        {\n          title: this.$t('futures.order.fee'),\n          width: '8%'\n        }, // 手续费\n        {\n          title: this.$t('futures.order.onlyCut'),\n          width: '8%'\n        }, // 只减仓\n        {\n          title: this.$t('futures.order.status'),\n          width: '8%'\n        } // 状态\n        ];\n      }\n\n      if (this.nowType === 4) {\n        list = [{\n          title: this.$t('futures.order.contract'),\n          width: '10%',\n          align: 'left'\n        }, // 合约\n        {\n          title: this.$t('futures.order.side'),\n          width: '10%'\n        }, // 方向\n        {\n          title: this.$t('futures.order.triggerPrice'),\n          width: '15%'\n        }, // 触发价格\n        {\n          title: this.$t('futures.order.intrustPrice'),\n          width: '15%'\n        }, // 委托价格\n        {\n          title: this.$t('futures.order.intrustVolumeOrNum'),\n          width: '10%'\n        }, // 委托数量/价值\n        {\n          title: this.$t('futures.order.onlyCut'),\n          width: '10%'\n        }, // 只减仓\n        {\n          title: this.$t('futures.order.status'),\n          width: '10%'\n        }, // 状态\n        {\n          title: this.$t('futures.order.submitTime'),\n          width: '10%'\n        }, // 提交委托时间\n        {\n          title: this.$t('futures.order.triggerTime'),\n          width: '10%'\n        } // 触发时间\n        ];\n      }\n\n      if (this.nowType === 5) {\n        list = [{\n          title: this.$t('futures.order.contract'),\n          width: '10%',\n          align: 'left'\n        }, // 合约\n        {\n          title: this.$t('futures.order.time'),\n          width: '15%'\n        }, // 时间\n        {\n          title: this.$t('futures.order.side'),\n          width: '15%'\n        }, // 方向\n        {\n          title: this.$t('futures.order.roles'),\n          width: '15%'\n        }, // 角色\n        {\n          title: this.$t('futures.order.dealVolume'),\n          width: '15%'\n        }, // 成交数量\n        {\n          title: this.$t('futures.order.priceDeal'),\n          width: '15%'\n        }, // 成交价格\n        {\n          title: this.$t('futures.order.fee'),\n          width: '15%'\n        } // 手续费\n        ];\n      }\n\n      return list;\n    },\n    // 历史委托\n    historyMemoText: function historyMemoText() {\n      return [this.$t('futures.orderList.memoText1'), this.$t('futures.orderList.memoText2'), this.$t('futures.orderList.memoText3'), this.$t('futures.orderList.memoText4'), this.$t('futures.orderList.memoText5'), this.$t('futures.orderList.memoText6'), this.$t('futures.orderList.memoText7'), this.$t('futures.orderList.memoText8')]; // return [\n      //   '用户撤销',\n      //   '订单异常，被系统撤销',\n      //   '仓位发生强平，未成交委托被系统撤销',\n      //   '对手盘不足，委托被系统取消',\n      //   'FOK订单，无法全部成交时被系统撤销',\n      //   'IOC订单，无法立即成交时部分委托被系统撤销',\n      //   '被动委托, 被动委托，撮合时为taker部分被系统撤销',\n      // ];\n    }\n  },\n  methods: {\n    init: function init() {\n      if (this.sideList[0].value) {\n        this.side = 1;\n      }\n\n      if (this.contractTypeList[0].value) {\n        this.contractType = 1;\n      }\n\n      if (this.orderTypeList[0].value) {\n        this.orderType = 'all';\n      }\n\n      if (this.contractListAll) {\n        this.getContractList();\n      }\n\n      this.resetTime();\n    },\n    // 重置时间\n    resetTime: function resetTime() {\n      var timestamp = new Date().getTime();\n      var t = 60 * 60 * 24 * 1000 * 2;\n      this.startTime = this.getNowTime(timestamp - t);\n      this.endTime = this.getNowTime(timestamp);\n      this.start = \"\".concat(this.startTime, \" 00:00:00\");\n      this.end = \"\".concat(this.endTime, \" 23:59:59\");\n    },\n    getNowTime: function getNowTime() {\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var date = new Date(time);\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      var day = date.getDate();\n      return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n    },\n    getContractList: function getContractList() {\n      var side = '';\n\n      if (this.side) {\n        if (this.side === 1) {\n          side = 'E';\n        } else if (this.side === 2) {\n          side = 'S';\n        } else {\n          side = 'H';\n        }\n      } else {\n        side = 'E';\n      }\n\n      var contractType = '';\n\n      if (this.contractType !== '') {\n        contractType = this.contractType;\n      } else {\n        contractType = 1;\n      }\n\n      var list = [];\n      this.contract = null;\n      this.contractListAll.forEach(function (item) {\n        if (item.coType === side && item.contractSide === contractType) {\n          list.push({\n            code: item.id,\n            value: item.symbol.replace('-', '')\n          });\n        }\n      });\n      this.contractList = list;\n\n      if (list.length) {\n        this.contract = list[0].code;\n        this.tabelLoading = true;\n        this.getData();\n      } else {\n        this.paginationObj.currentPage = 1; // 页码\n\n        this.paginationObj.total = 0; // 总条数\n\n        this.tabelList = [];\n        this.tabelLoading = false;\n      }\n    },\n    // initContractList() {\n    //   const { market } = this.coPublicInfo;\n    //   const list = [];\n    //   Object.keys(market).forEach((vitem) => {\n    //     market[vitem].forEach((item) => {\n    //       const {\n    //         baseSymbol, quoteSymbol, contractType, settleTime, maxLeverageLevel,\n    //       } = item;\n    //       let time = '';\n    //       if (contractType) {\n    //         const t = settleTime.split(' ')[0].split('-');\n    //         time = t[1] + t[2];\n    //       }\n    //       const msg = `${this.getContractType(contractType)} · ${time} (${maxLeverageLevel}X)`;\n    //       const str = `${baseSymbol}${quoteSymbol} - ${msg}`;\n    //       list.push(\n    //         {\n    //           code: item.id,\n    //           value: str,\n    //         },\n    //       );\n    //     });\n    //   });\n    //   this.contractList = list;\n    //   if (list.length) {\n    //     this.contract = list[0].code;\n    //     this.getData();\n    //   }\n    // },\n    // switchChange() {\n    //   this.switchFlag = !this.switchFlag;\n    //   this.getData();\n    // },\n    getData: function getData() {\n      if (this.nowType === 1) {\n        this.getNowData();\n      } else if (this.nowType === 2) {\n        this.getPlanData();\n      } else if (this.nowType === 3) {\n        this.getHisData();\n      } else if (this.nowType === 4) {\n        this.getHisPlanData();\n      } else if (this.nowType === 5) {\n        this.getHisDealData();\n      }\n    },\n    typeStatus: function typeStatus(status) {\n      var str = '';\n\n      switch (status) {\n        case 1:\n          str = this.$t('futures.order.orderType1'); // '限价单';\n\n          break;\n\n        case 2:\n          str = this.$t('futures.order.orderType2'); // '市价单';\n\n          break;\n\n        case 3:\n          str = this.$t('futures.order.orderType4'); // 'IOC';\n\n          break;\n\n        case 4:\n          str = this.$t('futures.order.orderType5'); // 'FOK';\n\n          break;\n\n        case 5:\n          str = this.$t('futures.order.orderType3'); // 'POST_ONLY';\n\n          break;\n\n        case 6:\n          str = this.$t('futures.order.orderType6'); // '强制减仓';\n\n          break;\n\n        case 7:\n          str = this.$t('futures.order.orderType7'); // '仓位合并';\n\n          break;\n\n        default:\n          str = '';\n      }\n\n      return str;\n    },\n    getStatus: function getStatus(status) {\n      var str = '';\n\n      switch (status) {\n        case 0:\n          str = this.$t('futures.order.status1'); // '新订单';\n\n          break;\n\n        case 1:\n          str = this.$t('futures.order.status1'); // '新订单';\n\n          break;\n\n        case 2:\n          str = this.$t('futures.order.status2'); // '完全成交';\n\n          break;\n\n        case 3:\n          str = this.$t('futures.order.status3'); // '部分成交';\n\n          break;\n\n        case 4:\n          str = this.$t('futures.order.status4'); // '已取消';\n\n          break;\n\n        case 5:\n          str = this.$t('futures.order.status5'); // '待撤销';\n\n          break;\n\n        case 6:\n          str = this.$t('futures.order.status6'); // '异常订单';\n\n          break;\n\n        case 7:\n          str = this.$t('futures.order.status7'); // '部分成交已撤销';\n\n          break;\n\n        default:\n          str = '';\n      }\n\n      return str;\n    },\n    getContractType: function getContractType(contractType) {\n      var type = '';\n\n      switch (contractType) {\n        case 0:\n          type = this.$t('futures.order.contractType1'); // '永续';\n\n          break;\n\n        case 1:\n          type = this.$t('futures.order.contractType2'); // '当周';\n\n          break;\n\n        case 2:\n          type = this.$t('futures.order.contractType3'); // '次周';\n\n          break;\n\n        case 3:\n          type = this.$t('futures.order.contractType4'); // '月度';\n\n          break;\n\n        case 4:\n          type = this.$t('futures.order.contractType5'); // '季度';\n\n          break;\n\n        default:\n          type = '';\n      }\n\n      return type;\n    },\n    statusText: function statusText(status) {\n      var str = '';\n\n      switch (status) {\n        case 0:\n          str = this.$t('futures.order.statusText1'); // '有效';\n\n          break;\n\n        case 1:\n          str = this.$t('futures.order.statusText2'); // '已过期';\n\n          break;\n\n        case 2:\n          str = this.$t('futures.order.statusText3'); // '已完成';\n\n          break;\n\n        case 3:\n          str = this.$t('futures.order.statusText4'); // '触发失败';\n\n          break;\n\n        case 4:\n          str = this.$t('futures.order.status4'); // '已取消';\n\n          break;\n\n        default:\n          str = '';\n      }\n\n      return str;\n    },\n    // 获取当前委托\n    getNowData: function getNowData() {\n      var _this = this;\n\n      this.axios({\n        url: 'order/current_order_list',\n        hostType: 'co',\n        method: 'post',\n        params: {\n          type: this.axiosType,\n          // side: this.side,\n          limit: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          contractId: this.contract\n        }\n      }).then(function (data) {\n        if (_this.nowType !== 1) return;\n        _this.tabelLoading = false;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var _data$data = data.data,\n              orderList = _data$data.orderList,\n              count = _data$data.count;\n\n          if (orderList && orderList.length) {\n            orderList.forEach(function (item) {\n              var open = item.open === 'OPEN' ? _this.$t('futures.order.open') : _this.$t('futures.order.close');\n\n              var side = _this.$t('futures.order.sell');\n\n              if (item.open === 'OPEN' && item.side === 'BUY' || item.open === 'CLOSE' && item.side === 'SELL') {\n                side = _this.$t('futures.order.buy');\n              }\n\n              var price = null;\n\n              if (item.type === 2 && Number(item.price) === 0) {\n                price = _this.$t('futures.order.currentPrice');\n              } else {\n                price = fixD(item.price, item.pricePrecision);\n              }\n\n              list.push({\n                id: JSON.stringify(item),\n                data: [item.symbol, // 合约\n                formatTime(item.ctime), // 时间\n                _this.typeStatus(item.type), open + side, price, // 委托价格\n                item.volume, // 委托数量\n                item.dealVolume, // 成交数量\n                item.avgPrice ? fixD(item.avgPrice, item.pricePrecision) : '--', // 成交均价\n                item.open === 'CLOSE' ? _this.$t('futures.order.yes') : _this.$t('futures.order.no'), // 只减仓\n                [{\n                  type: 'button',\n                  text: _this.$t('futures.order.cancel'),\n                  // 撤单\n                  eventType: 'cancelOrder'\n                }]]\n              });\n            });\n          }\n\n          _this.tabelList = list;\n          _this.paginationObj.total = count;\n        }\n      });\n    },\n    // 获取计划委托\n    getPlanData: function getPlanData() {\n      var _this2 = this;\n\n      this.axios({\n        url: 'order/trigger_order_list',\n        hostType: 'co',\n        method: 'post',\n        params: {\n          type: this.axiosType,\n          // side: this.side,\n          limit: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          contractId: this.contract\n        }\n      }).then(function (data) {\n        if (_this2.nowType !== 2) return;\n        _this2.tabelLoading = false;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var _data$data2 = data.data,\n              trigOrderList = _data$data2.trigOrderList,\n              count = _data$data2.count;\n\n          if (trigOrderList && trigOrderList.length) {\n            trigOrderList.forEach(function (item) {\n              var open = item.open === 'OPEN' ? _this2.$t('futures.order.open') : _this2.$t('futures.order.close');\n\n              var side = _this2.$t('futures.order.sell');\n\n              if (item.open === 'OPEN' && item.side === 'BUY' || item.open === 'CLOSE' && item.side === 'SELL') {\n                side = _this2.$t('futures.order.buy');\n              }\n\n              var price = null;\n              var unit = null;\n              var volume = null;\n\n              if (item.type === 2 && Number(item.price) === 0) {\n                price = _this2.$t('futures.order.currentPrice');\n\n                if (item.open === 'OPEN') {\n                  if (_this2.contractListMap) {\n                    unit = _this2.contractListMap[item.contractName].marginCoin;\n                    volume = fixD(item.volume, _this2.contractListMap[item.contractName].mCionFix);\n                  }\n                } else {\n                  volume = item.volume;\n                  unit = _this2.$t('futures.order.per');\n                }\n              } else {\n                volume = item.volume;\n                price = fixD(item.price, item.pricePrecision);\n                unit = _this2.$t('futures.order.per');\n              }\n\n              list.push({\n                id: JSON.stringify(item),\n                data: [item.symbol, // 合约\n                formatTime(item.ctime), // 时间\n                _this2.typeStatus(item.type), open + side, fixD(item.triggerPrice, item.pricePrecision), // 触发价\n                price, // 委托价格\n                \"\".concat(volume, \" \").concat(unit), // 委托数量\n                // item.dealVolume, // 成交数量\n                // fixD(item.avgPrice, item.pricePrecision), // 成交均价\n                item.open === 'CLOSE' ? _this2.$t('futures.order.yes') : _this2.$t('futures.order.no'), // 只减仓\n                formatTime(item.expireTime), // 过期时间\n                [{\n                  type: 'button',\n                  text: _this2.$t('futures.order.cancel'),\n                  // 撤单\n                  eventType: 'cancelOrder'\n                }]]\n              });\n            });\n          }\n\n          _this2.tabelList = list;\n          _this2.paginationObj.total = count;\n        }\n      });\n    },\n    // 获取历史委托\n    getHisData: function getHisData() {\n      var _this3 = this;\n\n      this.axios({\n        url: 'order/history_order_list',\n        hostType: 'co',\n        method: 'post',\n        params: {\n          type: this.axiosType,\n          limit: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          contractId: this.contract,\n          beginTime: new Date(this.start).getTime(),\n          endTime: new Date(this.end).getTime()\n        }\n      }).then(function (data) {\n        if (_this3.nowType !== 3) return;\n        _this3.tabelLoading = false;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var _data$data3 = data.data,\n              orderList = _data$data3.orderList,\n              count = _data$data3.count;\n\n          if (orderList && orderList.length) {\n            orderList.forEach(function (item, index) {\n              var open = item.open === 'OPEN' ? _this3.$t('futures.order.open') : _this3.$t('futures.order.close');\n\n              var side = _this3.$t('futures.order.sell');\n\n              if (item.open === 'OPEN' && item.side === 'BUY' || item.open === 'CLOSE' && item.side === 'SELL') {\n                side = _this3.$t('futures.order.buy');\n              }\n\n              var price = null;\n              var unit = null;\n              var volume = null;\n\n              if (item.type === 2 && Number(item.price) === 0) {\n                price = _this3.$t('futures.order.currentPrice');\n\n                if (item.open === 'OPEN') {\n                  if (_this3.contractListMap) {\n                    unit = _this3.contractListMap[item.contractName].marginCoin;\n                    volume = fixD(item.volume, _this3.contractListMap[item.contractName].mCionFix);\n                  }\n                } else {\n                  volume = item.volume;\n                  unit = _this3.$t('futures.order.per');\n                }\n              } else {\n                volume = item.volume;\n                price = fixD(item.price, item.pricePrecision);\n                unit = _this3.$t('futures.order.per');\n              }\n\n              var lastClass = null;\n\n              if (index > 3) {\n                lastClass = 'position-bottom';\n              }\n\n              list.push({\n                id: JSON.stringify(item),\n                data: [item.symbol, // 合约\n                formatTime(item.ctime), // 时间\n                // this.typeStatus(item.type),\n                item.liqPositionMsg ? [{\n                  text: \"<div class=\\\"cancel_cause cancel_cause_right\\\">\\n                      \".concat(_this3.typeStatus(item.type), \"\\n                      <span class=\\\"cancel_cause-btn\\\">\\n                        <svg aria-hidden=\\\"true\\\" class=\\\"icon icon-16\\\">\\n                          <use xlink:href=\\\"#icon-a_15\\\"></use>\\n                        </svg>\\n                        <div class=\\\"cancel_cause_text a-5-bg b-1-cl a-3-bd \").concat(lastClass, \"\\\">\\n                        \").concat(_this3.replaceAll(item.liqPositionMsg), \"\\n                        </div>\\n                      </span>\\n                    </div>\"),\n                  type: 'html'\n                }] : _this3.typeStatus(item.type), open + side, item.type === 6 ? '--' : price, // 委托价格\n                \"\".concat(volume, \" \").concat(unit), // 委托数量\n                item.dealVolume, // 成交数量\n                !item.avgPrice || item.type === 6 ? '--' : fixD(item.avgPrice, item.pricePrecision), // 成交均价\n                \"\".concat(fixD(item.tradeFee, item.pricePrecision), \" \").concat(_this3.contractListMap[item.contractName].marginCoin), /// 手续费\n                item.open === 'CLOSE' ? _this3.$t('futures.order.yes') : _this3.$t('futures.order.no'), // 只减仓\n                // this.getStatus(item.status), // 状态\n                // 状态\n                item.status === 4 && item.memo ? [{\n                  text: \"<div class=\\\"cancel_cause\\\">\\n                      \".concat(_this3.getStatus(item.status), \"\\n                      <span class=\\\"cancel_cause-btn\\\">\\n                        <svg aria-hidden=\\\"true\\\" class=\\\"icon icon-16\\\">\\n                          <use xlink:href=\\\"#icon-a_15\\\"></use>\\n                        </svg>\\n\\n                        <div class=\\\"cancel_cause_text a-7-bg b-1-cl a-3-bd \").concat(lastClass, \"\\\">\\n                          \").concat(_this3.historyMemoText[item.memo - 1], \"\\n                        </div>\\n                      </span>\\n                    </div>\"),\n                  type: 'html'\n                }] : _this3.getStatus(item.status)]\n              });\n            });\n          }\n\n          _this3.tabelList = list;\n          _this3.paginationObj.total = count;\n        }\n      });\n    },\n    // 获取历史计划委托\n    getHisPlanData: function getHisPlanData() {\n      var _this4 = this;\n\n      this.axios({\n        url: 'order/history_trigger_order_list',\n        hostType: 'co',\n        method: 'post',\n        params: {\n          type: this.axiosType,\n          limit: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          contractId: this.contract,\n          beginTime: new Date(this.start).getTime(),\n          endTime: new Date(this.end).getTime()\n        }\n      }).then(function (data) {\n        if (_this4.nowType !== 4) return;\n        _this4.tabelLoading = false;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var _data$data4 = data.data,\n              trigOrderList = _data$data4.trigOrderList,\n              count = _data$data4.count;\n\n          if (trigOrderList && trigOrderList.length) {\n            trigOrderList.forEach(function (item, index) {\n              var open = item.open === 'OPEN' ? _this4.$t('futures.order.open') : _this4.$t('futures.order.close');\n\n              var side = _this4.$t('futures.order.sell');\n\n              if (item.open === 'OPEN' && item.side === 'BUY' || item.open === 'CLOSE' && item.side === 'SELL') {\n                side = _this4.$t('futures.order.buy');\n              }\n\n              var price = null;\n              var unit = null;\n              var volume = null;\n\n              if (item.type === 2 && Number(item.price) === 0) {\n                price = _this4.$t('futures.order.currentPrice');\n\n                if (item.open === 'OPEN') {\n                  if (_this4.contractListMap) {\n                    unit = _this4.contractListMap[item.contractName].marginCoin;\n                    volume = fixD(item.volume, _this4.contractListMap[item.contractName].mCionFix);\n                  }\n                } else {\n                  volume = item.volume;\n                  unit = _this4.$t('futures.order.per');\n                }\n              } else {\n                volume = item.volume;\n                price = fixD(item.price, item.pricePrecision);\n                unit = _this4.$t('futures.order.per');\n              }\n\n              var lastClass = null;\n\n              if (index > 3) {\n                lastClass = 'position-bottom';\n              }\n\n              list.push({\n                id: JSON.stringify(item),\n                data: [item.symbol, // 合约\n                open + side, // 方向\n                fixD(item.triggerPrice, item.pricePrecision), // 触发价格\n                price, // 委托价格\n                \"\".concat(volume, \" \").concat(unit), // 委托数量\n                item.open === 'CLOSE' ? _this4.$t('futures.order.yes') : _this4.$t('futures.order.no'), // 只减仓\n                // this.statusText(item.status), // 状态\n                item.status === 4 && item.memo ? [{\n                  text: \"<div class=\\\"cancel_cause\\\">\\n                      \".concat(_this4.statusText(item.status), \"\\n                      <span class=\\\"cancel_cause-btn\\\">\\n                        <svg aria-hidden=\\\"true\\\" class=\\\"icon icon-16\\\">\\n                          <use xlink:href=\\\"#icon-a_15\\\"></use>\\n                        </svg>\\n                        <div class=\\\"cancel_cause_text a-7-bg b-1-cl a-3-bd \").concat(lastClass, \"\\\">\\n                          \").concat(_this4.memoText(item), \"\\n                        </div>\\n                      </span>\\n                    </div>\"),\n                  type: 'html'\n                }] : _this4.statusText(item.status), formatTime(item.ctime), // 提交委托时间\n                formatTime(item.mtime) // 触发时间\n                ]\n              });\n            });\n          }\n\n          _this4.tabelList = list;\n          _this4.paginationObj.total = count;\n        }\n      });\n    },\n    replaceAll: function replaceAll(str) {\n      return str.replace(/\\\\n/g, '<br/>');\n    },\n    // 取消原因\n    memoText: function memoText(data) {\n      var _this5 = this;\n\n      var type = '';\n      this.sideList.forEach(function (item) {\n        if (_this5.side === item.code) {\n          type = item.value;\n        }\n      });\n\n      if (data.memo === 1) {\n        return this.$t('futures.order.memoText1'); // '用户取消';\n      }\n\n      if (data.memo === 2) {\n        return this.$t('futures.order.memoText2'); // '超过有效期';\n      }\n\n      if (data.memo === 3) {\n        // 最新价格达到\n        return \"\".concat(formatTime(data.mtime)).concat(data.symbol).concat(type, \" \").concat(this.$t('futures.order.memoText3'), \"\\n        \").concat(fixD(data.triggerPrice, data.pricePrecision), \"\\n        \").concat(this.$t('futures.order.memoText4')); // 触发计划委托，因账户保证金余额不足，委托无法提交，执行失败\n      }\n\n      if (data.memo === 4) {\n        return \"\".concat(formatTime(data.mtime)).concat(data.symbol).concat(type, \" \").concat(this.$t('futures.order.memoText3'), \"\\n        \").concat(fixD(data.triggerPrice, data.pricePrecision), \"\\n        \").concat(this.$t('futures.order.memoText5')); // 触发计划委托，因仓位可平数量不足，无法提交委托，执行失败`;\n      }\n\n      if (data.memo === 5) {\n        return \"\".concat(formatTime(data.mtime)).concat(data.symbol).concat(type, \" \").concat(this.$t('futures.order.memoText3'), \"\\n        \").concat(fixD(data.triggerPrice, data.pricePrecision), \"\\n        \").concat(this.$t('futures.order.memoText6')); // 触发计划委托，因仓位发生强平，无法提交委托，执行失败`;\n      }\n\n      if (data.memo === 6) {\n        return \"\".concat(formatTime(data.mtime)).concat(data.symbol).concat(type, \" \").concat(this.$t('futures.order.memoText3'), \"\\n        \").concat(fixD(data.triggerPrice, data.pricePrecision), \"\\n        \").concat(this.$t('futures.order.memoText7')); // 触发计划委托，因该合约已被暂停交易，无法提交委托，执行失败`;\n      }\n\n      return null;\n    },\n    // 获取历史成交\n    getHisDealData: function getHisDealData() {\n      var _this6 = this;\n\n      this.axios({\n        url: 'order/his_trade_list',\n        hostType: 'co',\n        method: 'post',\n        params: {\n          type: this.axiosType,\n          limit: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          contractId: this.contract,\n          beginTime: new Date(this.start).getTime(),\n          endTime: new Date(this.end).getTime()\n        }\n      }).then(function (data) {\n        if (_this6.nowType !== 5) return;\n        _this6.tabelLoading = false;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var _data$data5 = data.data,\n              tradeHisList = _data$data5.tradeHisList,\n              count = _data$data5.count;\n\n          if (tradeHisList && tradeHisList.length) {\n            tradeHisList.forEach(function (item) {\n              var open = item.open === 'OPEN' ? _this6.$t('futures.order.open') : _this6.$t('futures.order.close');\n\n              var side = _this6.$t('futures.order.sell');\n\n              if (item.open === 'OPEN' && item.side === 'BUY' || item.open === 'CLOSE' && item.side === 'SELL') {\n                side = _this6.$t('futures.order.buy');\n              }\n\n              list.push({\n                id: JSON.stringify(item),\n                data: [item.symbol, // 合约\n                formatTime(item.ctime), // 时间\n                open + side, item.role, item.volume, // 成交数量\n                fixD(item.price, item.pricePrecision), // 成交价格\n                \"\".concat(fixD(item.fee, item.feeCoinPrecision), \" \").concat(item.feeCoin) // 手续费\n                ]\n              });\n            });\n          }\n\n          _this6.tabelList = list;\n          _this6.paginationObj.total = count;\n        }\n      });\n    },\n    outExcela: function outExcela() {// outExcela(url, params, type) {\n      // return new Promise((resolve) => {\n      //   this.axios({\n      //     url,\n      //     params,\n      //     hostType: type,\n      //     responseType: 'arraybuffer',\n      //     mustAll: true,\n      //   }).then(({ data, headers }) => {\n      //     console.log(data, headers);\n      //     const content = data;\n      //     const blob = new Blob([content]);\n      //     if (decodeURI(headers['content-disposition']) !== 'undefined') {\n      //       const fileName = decodeURI(headers['content-disposition'].split('\"')[1]);\n      //       // const fileName = 'as.xlsx';\n      //       // 非IE下载\n      //       if ('download' in document.createElement('a')) {\n      //         const elink = document.createElement('a');\n      //         elink.download = fileName;\n      //         elink.style.display = 'none';\n      //         elink.href = URL.createObjectURL(blob);\n      //         document.body.appendChild(elink);\n      //         elink.click();\n      //         URL.revokeObjectURL(elink.href); // 释放URL 对象\n      //         document.body.removeChild(elink);\n      //       } else { // IE10+下载\n      //         navigator.msSaveBlob(blob, fileName);\n      //       }\n      //     }\n      //     const enc = new TextDecoder('utf-8');\n      //     const res = null;\n      //     if (decodeURI(headers['content-disposition']) !== 'undefined') {\n      //       res = { code: '0' }; // 转化成json对象\n      //     } else {\n      //       res = JSON.parse(enc.decode(new Uint8Array(data))); // 转化成json对象\n      //     }\n      //     resolve(res);\n      //   });\n      // });\n    },\n    // 导出CSV\n    exportCSV: function exportCSV() {// let exporturl = '';\n      // if (this.nowType === 3) {\n      //   exporturl = 'order/export/his_order_list_saas';\n      // } else if (this.nowType === 4) {\n      //   exporturl = 'order/export/trigger_order_list';\n      //   this.axiosType = '';\n      // }\n      // const data = {\n      //   type: this.axiosType,\n      //   limit: this.paginationObj.display, // 每页条数\n      //   page: this.paginationObj.currentPage, // 页码\n      //   contractId: this.contract,\n      //   beginTime: new Date(this.start).getTime(),\n      //   endTime: new Date(this.end).getTime(),\n      // };\n      // this.outExcela('order/export/his_order_list_saas', data, 'co').then((datas) => {\n      //   // this.outFlagImport = true;\n      //   if (datas.code === '0') {\n      //     this.$bus.$emit('alert', { type: 'success', message: '导出成功' }); // 导出成功\n      //   } else {\n      //     this.$bus.$emit('alert', { type: 'error', message: datas.msg }); // 导出失败\n      //   }\n      // });\n    },\n    // 切换tab\n    currentType: function currentType(item) {\n      if (this.nowType === item.index) {\n        return;\n      }\n\n      this.resetTime();\n      this.nowType = item.index;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.getData();\n    },\n    // 切换交割类型\n    sideChange: function sideChange(item) {\n      if (this.side === item.code) {\n        return;\n      }\n\n      this.side = item.code;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.getContractList();\n    },\n    // 切换合约类型\n    contractTypeChange: function contractTypeChange(item) {\n      if (this.contractType === item.code) {\n        return;\n      }\n\n      this.contractType = item.code;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.getContractList();\n    },\n    // 切换合约\n    contractChange: function contractChange(item) {\n      if (this.contract === item.code) {\n        return;\n      }\n\n      this.contract = item.code;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.getData();\n    },\n    // 切换订单类型\n    orderTypeChange: function orderTypeChange(item) {\n      if (this.orderType === item.code) {\n        return;\n      }\n\n      this.orderType = item.code;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.getData();\n    },\n    // 撤销订单\n    tableClick: function tableClick(type, v) {\n      var _this7 = this;\n\n      if (type === 'cancelOrder') {\n        var obj = JSON.parse(v);\n        this.revokeList.push(obj.id);\n        var isConditionOrder = this.nowType === 2;\n        this.axios({\n          url: 'order/order_cancel',\n          hostType: 'co',\n          method: 'post',\n          params: {\n            orderId: obj.id,\n            contractId: this.contract,\n            isConditionOrder: isConditionOrder\n          }\n        }).then(function (data) {\n          var ind = _this7.revokeList.indexOf(obj.id);\n\n          _this7.revokeList.splice(ind, 1);\n\n          if (data.code.toString() === '0') {\n            _this7.$bus.$emit('tip', {\n              text: _this7.$t('contract.cancel_success'),\n              type: 'success'\n            }); // let sId = 0;\n            // this.tabelList.forEach((item, i) => {\n            //   if (item.id === id) {\n            //     sId = i;\n            //   }\n            // });\n            // this.tabelList.splice(sId, 1);\n\n\n            _this7.getData();\n          } else {\n            _this7.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    },\n    // 撤销全部订单\n    cancelAll: function cancelAll() {\n      var _this8 = this;\n\n      if (this.tabelList.length) {\n        var isConditionOrder = this.nowType === 2;\n        this.axios({\n          url: 'order/order_cancel',\n          hostType: 'co',\n          method: 'post',\n          params: {\n            contractId: this.contract,\n            isConditionOrder: isConditionOrder\n          }\n        }).then(function (data) {\n          if (data.code.toString() === '0') {\n            _this8.$bus.$emit('tip', {\n              text: _this8.$t('contract.cancel_success'),\n              type: 'success'\n            });\n\n            _this8.getData();\n          } else {\n            _this8.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    },\n    search: function search() {\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.getData();\n    },\n    // 选择时间\n    startTimeSelect: function startTimeSelect(v) {\n      this.startTime = v;\n      this.start = \"\".concat(this.startTime, \" 00:00:00\");\n      this.end = \"\".concat(this.endTime, \" 23:59:59\"); // this.loading = true;\n      // this.listPage.page = 1;\n      // this.getData();\n    },\n    endTimeSelect: function endTimeSelect(v) {\n      this.endTime = v;\n      this.start = \"\".concat(this.startTime, \" 00:00:00\");\n      this.end = \"\".concat(this.endTime, \" 23:59:59\"); // this.loading = true;\n      // this.listPage.page = 1;\n      // this.getData();\n    },\n    pagechange: function pagechange(v) {\n      this.paginationObj.currentPage = v;\n      this.getData();\n    }\n  }\n};",null]}