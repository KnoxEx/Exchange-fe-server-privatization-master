{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/BlockChain-ui/PC/components/oldUploadFile/OldUploadFile.vue?vue&type=style&index=0&id=6e40177c&scoped=true&lang=stylus&","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/components/oldUploadFile/OldUploadFile.vue","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.input_upload_file{\n  opacity: 0;\n}\n.upload-div{\n  width:100%;\n  height:100%;\n  position: absolute;\n  top:0;\n  opacity: 0;\n  z-index: 3;\n  cursor: pointer;\n}\n",{"version":3,"sources":["OldUploadFile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OldUploadFile.vue","sourceRoot":"../BlockChain-ui/PC/components/oldUploadFile","sourcesContent":["// Created by 王晓波. // 上传图片 // *****************************\n<template>\n  <div>\n    <input\n      class='input_upload_file'\n      type='file'\n      :class='className'\n      :accept='formatValue'\n      ref='upload'\n      @change='tellFun'\n    />\n    <div class='upload-div' @click='uploadClick'></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'c-oldUploadFile',\n  props: {\n    // 最大尺寸\n    maxSize: {\n      type: String,\n      default: '5',\n    },\n    imageType: {\n      type: String,\n      default: '2',\n    },\n    // 上传数据类型\n    formatValue: {\n      type: String,\n      default: 'image/jpeg, image/jpg, image/png',\n    },\n    // 接口名\n    url: {\n      type: String,\n      default: '',\n    },\n    // 外部传入name\n    name: {\n      type: String,\n      default: '',\n    },\n    // 外部传入请求类型\n    isOpenUploadImg: {\n      type: String,\n      default: '',\n    },\n    // 外部传入可拓展项\n    expand: {\n      type: Array,\n      default: () => [],\n    },\n    // className\n    className: {\n      type: String,\n      default: '',\n    },\n    // isWaterMark 添加水印\n    isWaterMark: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      // 真实文件尺寸\n      size: '',\n      // 真实文件格式\n      realFormatValue: '',\n    };\n  },\n  mounted() {},\n  computed: {},\n  watch: {},\n  methods: {\n    uploadClick() {\n      this.$refs.upload.click();\n    },\n    tellFun(e) {\n      const val = e.target.files[0];\n      if (val.size > this.maxSize * 1024 * 1024) {\n        this.$emit('tellMessage', {\n          error: '图片尺寸过大',\n          code: 'maxSize',\n        });\n        e.target.value = '';\n      } else {\n        this.$emit('tellMessage', {\n          name: this.name,\n        });\n        const formData = new FormData();\n        formData.append(this.name, val);\n        formData.append('name', this.name);\n        // 添加水印\n        if (this.isWaterMark) {\n          // formData.append('isWaterMark', 1);\n        }\n        if (this.expand.length > 0) {\n          this.expand.forEach((item) => {\n            formData.append(Object.keys(item)[0], item[Object.keys(item)[0]]);\n          });\n        }\n        this.axios({\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n          method: 'post',\n          url: this.url,\n          hostType: Number(this.isOpenUploadImg) === 1 ? 'upload' : null,\n          params: formData,\n        }).then((res) => {\n          if (!Number(res.code)) {\n            const { data } = res;\n            const fileName = data.filenameStr\n              ? data.filenameStr\n              : data.filename;\n            const name = data.name || this.name;\n            this.$emit('uploadFinish', {\n              url: data.base_image_url + fileName,\n              imgSrc: data.filename,\n              fileName,\n              name,\n            });\n            e.target.value = '';\n          }\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang='stylus'>\n.input_upload_file{\n  opacity: 0;\n}\n.upload-div{\n  width:100%;\n  height:100%;\n  position: absolute;\n  top:0;\n  opacity: 0;\n  z-index: 3;\n  cursor: pointer;\n}\n</style>\n"]}]}