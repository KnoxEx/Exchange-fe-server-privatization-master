{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/lever-tradeForm/lever-tradeForm.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/lever-tradeForm/lever-tradeForm.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport { myStorage, getCoinShowName, nul, fixRate, fixD, fixInput, imgMap, colorMap } from '@/utils';\nexport default {\n  name: 'tableList',\n  filters: {\n    rateFix: function rateFix(v) {\n      var data = v || 0;\n      return \"\".concat(fixD(data * 100, 2), \"%\");\n    }\n  },\n  data: function data() {\n    return {\n      formData_1: {\n        title: this.$t('trade.price'),\n        // 价格\n        units: myStorage.get('leverSymbolName') ? myStorage.get('leverSymbolName').split('/')[1] : 'USDT',\n        subText: '',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        value: ''\n      },\n      formData_2: {\n        title: this.$t('trade.number'),\n        // '数量',\n        units: myStorage.get('leverSymbolName') ? myStorage.get('leverSymbolName').split('/')[0] : 'USDT',\n        subText: '',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        value: null\n      },\n      formData_3: {\n        title: this.$t('trade.price'),\n        // '价格',\n        units: myStorage.get('leverSymbolName') ? myStorage.get('leverSymbolName').split('/')[1] : 'USDT',\n        subText: '',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        value: null\n      },\n      formData_4: {\n        title: this.$t('trade.number'),\n        // '数量',\n        units: myStorage.get('leverSymbolName') ? myStorage.get('leverSymbolName').split('/')[0] : 'USDT',\n        subText: '',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        value: null\n      },\n      imgMap: imgMap,\n      colorMap: colorMap,\n      // 交易类型 1限价 2 市价\n      transactionType: 1,\n      // 当前切换的货币对\n      symbolCurrent: myStorage.get('leverSymbolName'),\n      // 百分比\n      perArr: [25, 50, 75, 100],\n      perBuy: null,\n      perSell: null,\n      // 防止多次提交\n      fal: true,\n      assetsInter: null,\n      totalBalancesHide: false,\n      // 资产数据\n      financeData: null,\n      // 借贷弹框\n      isShowDialog: false,\n      confirmFormTitle: this.$t('lever.leverjd'),\n      // '借贷',\n      borrowType: 'Base',\n      // 借贷数量\n      borrowValue: '',\n      borrowPromptText: this.$t('lever.leverJdNumber'),\n      // '借贷数量',\n      borrowErrorText: null,\n      borrowErrorFlag: false,\n      borrowCoin: null,\n      confirmLoading: false,\n      // 提水框\n      alertFlag: false,\n      tradeSide: null,\n      notAuthShowDialog: false,\n      tsTexttype: 1\n    };\n  },\n  props: {},\n  computed: {\n    localText: function localText() {\n      return {\n        title1: this.$t('trade.price'),\n        // 价格\n        title2: this.$t('trade.number'),\n        // '数量',\n        title3: this.$t('trade.price'),\n        // '价格',\n        title4: this.$t('trade.number') // '数量',\n\n      };\n    },\n    coinSymbols: function coinSymbols() {\n      if (this.symbolCurrent) {\n        return this.symbolCurrent.replace('/', ',');\n      }\n\n      return '';\n    },\n    // 全部币种列表\n    coinList: function coinList() {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n\n      return null;\n    },\n    isLogin: function isLogin() {\n      if (this.$store.state.baseData.isLogin) {\n        return this.$store.state.baseData.isLogin;\n      }\n\n      return false;\n    },\n    // 按钮信息\n    buttosContent: function buttosContent() {\n      return {\n        buyButton: {\n          text: this.isLogin ? \"\".concat(this.$t('lever.buy'), \" \").concat(getCoinShowName(this.symbolUnit.symbol, this.coinList)) : this.$t('trade.loginReg'),\n          // '登录/注册',\n          class: this.isLogin ? 'u-1-bg buyBtn u-16-cl' : 'u-8-bg buyBtn u-16-cl'\n        },\n        sellButton: {\n          text: this.isLogin ? \"\".concat(this.$t('lever.sell'), \" \").concat(getCoinShowName(this.symbolUnit.symbol, this.coinList)) : this.$t('trade.loginReg'),\n          // '登录/注册',\n          class: this.isLogin ? 'u-4-bg sellBtn u-16-cl' : 'u-8-bg sellBtn u-16-cl'\n        }\n      };\n    },\n    // 账户资产\n    accountBalance: function accountBalance() {\n      if (this.$store.state.assets) {\n        return this.$store.state.assets.assetsCoinData;\n      }\n\n      return null;\n    },\n    // 当前币对的资产\n    currenTaccount: function currenTaccount() {\n      if (this.financeData) {\n        return {\n          symbolAccoubt: this.financeData.baseNormalBalance,\n          unitsAccoubt: this.financeData.quoteNormalBalance\n        };\n      }\n\n      return {\n        symbolAccoubt: '0',\n        unitsAccoubt: '0'\n      };\n    },\n    // 折合总资产\n    totalBalances: function totalBalances() {\n      if (this.accountBalance) {\n        var _this$accountBalance = this.accountBalance,\n            totalBalance = _this$accountBalance.totalBalance,\n            totalBalanceSymbol = _this$accountBalance.totalBalanceSymbol;\n        return {\n          totalBalance: totalBalance,\n          totalBalanceSymbol: totalBalanceSymbol,\n          totalRater: fixRate(totalBalance, this.rateData, totalBalanceSymbol)\n        };\n      }\n\n      return {\n        totalBalance: '0.0000',\n        totalBalanceSymbol: 'BTC',\n        totalRater: '0.00'\n      };\n    },\n    // 当前币对\n    symbolUnit: function symbolUnit() {\n      if (this.symbolCurrent) {\n        return {\n          symbol: this.symbolCurrent.split('/')[0],\n          units: this.symbolCurrent.split('/')[1]\n        };\n      }\n\n      return {\n        symbol: '',\n        units: ''\n      };\n    },\n    // 汇率单位4\n    rateData: function rateData() {\n      return this.$store.state.baseData.rate;\n    },\n    // 全部币对列表\n    symbolAll: function symbolAll() {\n      return this.$store.state.baseData.symbolAll;\n    },\n    // 当前币对精度计算的值\n    fixValue: function fixValue() {\n      if (this.symbolAll && this.symbolCurrent) {\n        var symbol = this.symbolAll[this.symbolCurrent];\n        return {\n          priceFix: symbol.price,\n          volumeFix: symbol.volume\n        };\n      }\n\n      return {\n        priceFix: 2,\n        volumeFix: 8\n      };\n    },\n    formData2Fix: function formData2Fix() {\n      if (this.transactionType === 2) {\n        return this.fixValue.priceFix;\n      }\n\n      return this.fixValue.volumeFix;\n    },\n    // 买入交易额\n    tradeVolumeBuy: function tradeVolumeBuy() {\n      var count = nul(fixD(this.formData_1.value, this.fixValue.priceFix), fixD(this.formData_2.value, this.fixValue.priceFix));\n      return fixD(count, this.fixValue.priceFix);\n    },\n    tradeVolumeSell: function tradeVolumeSell() {\n      var count = nul(fixD(this.formData_3.value, this.fixValue.priceFix), fixD(this.formData_4.value, this.fixValue.priceFix));\n      return fixD(count, this.fixValue.priceFix);\n    },\n    // 修改保证金是否可以提交\n    confirmDisabled: function confirmDisabled() {\n      if (this.confirmLoading) {\n        return false;\n      }\n\n      if (this.borrowValue && this.borrowValue > 0) {\n        return false;\n      }\n\n      return true;\n    },\n    baseData: function baseData() {\n      return this.$store.state.baseData.publicInfo;\n    },\n    // 交易是否开启了必须实名认证\n    leverTradeKycOpen: function leverTradeKycOpen() {\n      var isOpen = 0;\n\n      if (this.baseData && this.baseData.kycLimitConfig) {\n        isOpen = this.baseData.kycLimitConfig.lever_trade_kyc_open;\n      }\n\n      return Number(isOpen);\n    },\n    // 用户信息\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    // 认证信息\n    idAuth: function idAuth() {\n      var idAuth = 0;\n\n      if (this.userInfo) {\n        idAuth = Number(this.userInfo.authLevel);\n      }\n\n      return idAuth;\n    }\n  },\n  watch: {\n    localText: function localText(_localText) {\n      this.formData_1.title = _localText.title1;\n      this.formData_2.title = _localText.title2;\n      this.formData_3.title = _localText.title3;\n      this.formData_4.title = _localText.title4;\n    },\n    isLogin: function isLogin(val) {\n      if (val) {\n        this.$store.dispatch('assetsExchangeData', {\n          auto: false,\n          coinSymbols: this.coinSymbols\n        });\n        this.getLeverageFinance(); // clearInterval(this.assetsInter);\n        // this.assetsInter = setInterval(() => {\n        //   this.$store.dispatch('assetsExchangeData', {\n        //     auto: false,\n        //     coinSymbols: this.symbolUnit.symbol,\n        //   });\n        //   this.getLeverageFinance();\n        // }, 10000);\n      }\n    },\n    // 切换 限价交易 和 市价交易\n    transactionType: function transactionType(val) {\n      // 2 市价交易\n      if (val === 2) {\n        this.formData_1.disabled = true;\n        this.formData_1.disabledText = this.$t('trade.mPriceBuy'); // 以市场最优价买入\n\n        this.formData_2.title = this.$t('trade.dealMoney'); // '交易额';\n\n        this.formData_2.units = this.symbolUnit.units;\n        this.formData_3.disabled = true;\n        this.formData_3.disabledText = this.$t('trade.mPriceSell'); // 以市场最优价卖出\n      } else {\n        this.formData_1.disabled = false;\n        this.formData_1.disabledText = '';\n        this.formData_2.title = this.$t('trade.number'); // '数量';\n\n        this.formData_2.units = this.symbolUnit.symbol;\n        this.formData_3.disabled = false;\n        this.formData_3.disabledText = '';\n      }\n    },\n    // 各个输入框的 单位\n    symbolUnit: function symbolUnit(val) {\n      this.formData_1.units = val.units;\n      this.formData_2.units = val.symbol;\n      this.formData_3.units = val.units;\n      this.formData_4.units = val.symbol;\n    },\n    borrowValue: function borrowValue(v) {\n      // this.borrowValue = fixInput(v, this.valuePrecision(this.borrowCoin));\n      this.borrowValue = fixInput(v, 3);\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      this.symbolCurrent = myStorage.get('leverSymbolName'); // 监听 当前货币对切换\n\n      this.$bus.$on('SYMBOL_CURRENT', function (val) {\n        _this.clearValue();\n\n        _this.symbolCurrent = val;\n\n        _this.getLeverageFinance();\n      });\n\n      if (this.isLogin) {\n        this.$store.dispatch('assetsExchangeData', {\n          auto: false,\n          coinSymbols: this.coinSymbols\n        });\n        this.getLeverageFinance(); // clearInterval(this.assetsInter);\n        // this.assetsInter = setInterval(() => {\n        //   this.$store.dispatch('assetsExchangeData', {\n        //     auto: false,\n        //     coinSymbols: this.symbolUnit.symbol,\n        //   });\n        //   this.getLeverageFinance();\n        // }, 10000);\n      } // 监听 价格点击\n\n\n      this.$bus.$on('HANDEL_PRICE', function (data) {\n        if (data) {\n          var arr = ['formData_1', 'formData_3'];\n          arr.forEach(function (item) {\n            _this.onChaneForm({\n              name: item,\n              value: data\n            });\n          });\n        }\n      });\n    },\n    setFex: function setFex(val) {\n      return fixInput(val, 3);\n    },\n    // 获取币种精度\n    valuePrecision: function valuePrecision(sy) {\n      if (this.coinList) {\n        return this.coinList[sy].showPrecision;\n      }\n\n      return 4;\n    },\n    // 切换 限价交易 和 市价交易\n    switchTradeType: function switchTradeType(type) {\n      this.clearValue();\n      this.transactionType = type;\n    },\n    // 显示隐藏折合资产\n    handelTotal: function handelTotal() {\n      this.totalBalancesHide = !this.totalBalancesHide;\n    },\n    // input 框 输入事件\n    onChaneForm: function onChaneForm(data) {\n      this[data.name].value = data.value;\n\n      if (data.value) {\n        this[data.name].isError = false;\n      }\n\n      if (data.name === 'formData_3' || data.name === 'formData_1') {\n        this[data.name].subText = fixRate(parseFloat(data.value), this.rateData, this.symbolUnit.units);\n      }\n\n      if (data.name === 'formData_2' || data.name === 'formData_1') {\n        var V1 = this.formData_1.value;\n        var V2 = this.formData_2.value;\n        var UA = this.currenTaccount.unitsAccoubt;\n        this.perBuy = V1 * V2 / UA * 100;\n      }\n\n      if (data.name === 'formData_4' || data.name === 'formData_3') {\n        var V3 = parseFloat(this.formData_3.value);\n        var V4 = parseFloat(this.formData_4.value);\n        var SA = this.currenTaccount.symbolAccoubt;\n        this.perSell = V3 * V4 / SA * 100;\n      }\n\n      if (!data.value) {\n        this[data.name].subText = null;\n      }\n    },\n    // 点击百分之 事件\n    setPerNumber: function setPerNumber(type, num) {\n      if (!this.isLogin) {\n        // 请先登录账号\n        this.$bus.$emit('tip', {\n          text: this.$t('trade.pleaseLogin'),\n          type: 'error'\n        });\n      } else if (type === 'buy') {\n        if (!this.formData_1.value && this.transactionType === 1) {\n          // 请输入价格\n          this.formData_1.errorText = this.$t('trade.pleasePrice');\n          this.formData_1.isError = true;\n        } else if (this.transactionType === 1) {\n          this.perBuy = num;\n          var data = this.currenTaccount.unitsAccoubt / this.formData_1.value * (num / 100);\n          this.formData_2.value = fixD(data, this.fixValue.volumeFix);\n        } else {\n          this.perBuy = num;\n\n          var _data = this.currenTaccount.unitsAccoubt * (num / 100);\n\n          this.formData_2.value = fixD(_data, this.fixValue.priceFix);\n        }\n      } else if (type === 'sell') {\n        this.perSell = num;\n\n        var _data2 = this.currenTaccount.symbolAccoubt * (num / 100);\n\n        this.formData_4.value = fixD(_data2, this.fixValue.volumeFix);\n      }\n    },\n    // 百分比按钮class\n    perSellClass: function perSellClass(num) {\n      if (this.perSell === num) {\n        return ['a-12-bd', 'b-4-cl'];\n      }\n\n      return 'a-3-bd';\n    },\n    perBuyClass: function perBuyClass(num) {\n      if (this.perBuy === num) {\n        return ['a-12-bd', 'b-4-cl'];\n      }\n\n      return 'a-3-bd';\n    },\n    // 交易额 文字颜色Class\n    volumeTradeClass: function volumeTradeClass(num, total) {\n      if (parseFloat(num) > parseFloat(total)) {\n        return 'u-4-cl';\n      }\n\n      return 'b-1-cl';\n    },\n    submitFormKey: function submitFormKey(type) {\n      var formKey = [];\n      var price = null;\n      var volume = null;\n\n      if (this.transactionType === 1) {\n        if (type === 'BUY') {\n          formKey = ['formData_1', 'formData_2'];\n          price = fixD(this.formData_1.value, this.fixValue.priceFix);\n          volume = fixD(this.formData_2.value, this.fixValue.volumeFix);\n        } else {\n          formKey = ['formData_3', 'formData_4'];\n          price = fixD(this.formData_3.value, this.fixValue.priceFix);\n          volume = fixD(this.formData_4.value, this.fixValue.volumeFix);\n        }\n      } else if (type === 'BUY') {\n        formKey = ['formData_2'];\n        volume = fixD(this.formData_2.value, this.fixValue.priceFix);\n      } else {\n        formKey = ['formData_4'];\n        volume = fixD(this.formData_4.value, this.fixValue.volumeFix);\n      }\n\n      return {\n        formKey: formKey,\n        price: price,\n        volume: volume\n      };\n    },\n    // 清空 表单数据\n    clearValue: function clearValue() {\n      var _this2 = this;\n\n      var formKey = ['formData_1', 'formData_2', 'formData_3', 'formData_4'];\n      formKey.forEach(function (item) {\n        _this2[item].value = '';\n        _this2[item].isError = false;\n        _this2[item].subText = null;\n      });\n      this.perSell = 0;\n      this.perBuy = 0;\n    },\n    submit: function submit(side) {\n      var _this3 = this;\n\n      if (!this.isLogin) {\n        this.$router.push('/login');\n      } else if (this.leverTradeKycOpen && this.idAuth !== 1) {\n        this.tsTexttype = 1;\n        this.notAuthShowDialog = true;\n      } else {\n        var _this$submitFormKey = this.submitFormKey(side),\n            formKey = _this$submitFormKey.formKey,\n            price = _this$submitFormKey.price,\n            volume = _this$submitFormKey.volume;\n\n        var fal = true;\n\n        if (formKey.length) {\n          formKey.forEach(function (item) {\n            var value = _this3[item].value;\n\n            if (!value) {\n              _this3[item].errorText = \"\".concat(_this3.$t('trade.pleaseInput')).concat(_this3[item].title);\n              _this3[item].isError = true;\n              fal = false;\n            }\n\n            if (parseFloat(value) <= 0) {\n              _this3[item].errorText = \"\".concat(_this3[item].title).concat(_this3.$t('trade.inputError')); // 输入有误\n\n              _this3[item].isError = true;\n              fal = false;\n            }\n          });\n\n          if (this.fal && fal) {\n            var symbolArr = this.symbolCurrent.split('/');\n            var symbol = symbolArr[0].toLowerCase() + symbolArr[1].toLowerCase();\n            this.fal = false;\n            var submitData = {\n              side: side,\n              price: price,\n              volume: volume,\n              symbol: symbol,\n              type: this.transactionType\n            };\n            this.tradeSide = side;\n            this.axios({\n              url: this.$store.state.url.lever.create,\n              headers: {},\n              params: submitData,\n              method: 'post'\n            }).then(function (data) {\n              if (data.code === '0') {\n                // 清空表单\n                _this3.clearValue(); // 重新请求资产\n\n\n                _this3.$store.dispatch('assetsExchangeData', {\n                  auto: false,\n                  coinSymbols: _this3.coinSymbols\n                }); // 发送下单成功的事件\n\n\n                _this3.$bus.$emit('ORDER_CREATE', {\n                  type: 'success'\n                }); // 提示成功 下单成功\n\n\n                _this3.$bus.$emit('tip', {\n                  text: _this3.$t('trade.dealCussess'),\n                  type: 'success'\n                });\n\n                _this3.fal = true;\n              } else {\n                _this3.clearValue();\n\n                _this3.$bus.$emit('tip', {\n                  text: data.msg,\n                  type: 'error'\n                }); // if (data.code === '10036') {\n                //   this.alertFlag = true;\n                // } else {\n                // }\n\n\n                _this3.fal = true;\n              }\n            });\n          }\n        }\n      }\n    },\n    // 请求资产数据\n    getLeverageFinance: function getLeverageFinance() {\n      var _this4 = this;\n\n      if (this.isLogin && this.symbolCurrent) {\n        var symbolArr = this.symbolCurrent.split('/');\n        var symbol = symbolArr[0] + symbolArr[1];\n        this.axios({\n          url: 'lever/finance/symbol/balance',\n          headers: {},\n          params: {\n            symbol: symbol\n          },\n          method: 'post'\n        }).then(function (data) {\n          if (data.code === '0') {\n            var ndata = data.data; // const basePrecision = this.valuePrecision(ndata.baseCoin);\n\n            var quotePrecision = _this4.valuePrecision(ndata.quoteCoin);\n\n            if (_this4.symbolAll) {\n              quotePrecision = _this4.symbolAll[ndata.name] ? _this4.symbolAll[ndata.name].price : 8;\n            }\n\n            if (!_this4.isShowDialog) {\n              _this4.borrowCoin = ndata.baseCoin;\n              _this4.borrowType = 'Base';\n            }\n\n            _this4.financeData = ndata; // 可用\n\n            _this4.financeData.baseNormalBalance = fixD(ndata.baseNormalBalance, 8);\n            _this4.financeData.quoteNormalBalance = fixD(ndata.quoteNormalBalance, 8); // 可借\n\n            _this4.financeData.baseCanBorrow = fixD(ndata.baseCanBorrow, 8);\n            _this4.financeData.quoteCanBorrow = fixD(ndata.quoteCanBorrow, 8); // 已借\n\n            _this4.financeData.baseBorrowBalance = fixD(ndata.baseBorrowBalance, 8);\n            _this4.financeData.quoteBorrowBalance = fixD(ndata.quoteBorrowBalance, 8); // 总额度\n\n            _this4.financeData.baseTotalBorrow = fixD(ndata.baseTotalBorrow, 8);\n            _this4.financeData.quoteTotalBorrow = fixD(ndata.quoteTotalBorrow, 8); // 爆仓价\n\n            _this4.financeData.burstPrice = fixD(ndata.burstPrice, quotePrecision);\n          }\n        });\n      }\n    },\n    // 划转 借贷 借贷数量全部 按钮点击事件\n    buttonsEvent: function buttonsEvent(type, side) {\n      if (type === 'All') {\n        if (this.borrowType === 'Base') {\n          this.borrowValue = this.financeData.baseCanBorrow;\n        } else {\n          this.borrowValue = this.financeData.quoteCanBorrow;\n        }\n      }\n\n      if (type === '1') {\n        if (this.symbolCurrent) {\n          var arr = this.symbolCurrent.split('/');\n          var symbol = (arr[0] + arr[1]).toLowerCase();\n          var currentSymbil = side === 'BUY' ? arr[1] : arr[0];\n          this.$bus.$emit('coTransfer', symbol, currentSymbil);\n        }\n      }\n\n      if (type === '2') {\n        this.isShowDialog = true;\n      }\n    },\n    // 确认借贷\n    dialogConfirm: function dialogConfirm() {\n      var _this5 = this;\n\n      this.confirmLoading = true;\n\n      if (this.isLogin && this.symbolCurrent) {\n        var symbolArr = this.symbolCurrent.split('/');\n        var symbol = symbolArr[0] + symbolArr[1];\n        this.axios({\n          url: 'lever/finance/borrow',\n          headers: {},\n          params: {\n            symbol: symbol,\n            coin: this.borrowCoin,\n            amount: this.borrowValue\n          },\n          method: 'post'\n        }).then(function (data) {\n          _this5.confirmLoading = false;\n\n          if (data.code === '0') {\n            _this5.getLeverageFinance(); // 借贷成功\n\n\n            _this5.$bus.$emit('tip', {\n              text: _this5.$t('lever.leverJdcc'),\n              type: 'success'\n            });\n\n            _this5.isShowDialog = false;\n            _this5.borrowValue = '';\n          } else {\n            _this5.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    },\n    // 切换 借贷币对\n    setReviseType: function setReviseType(type, data) {\n      this.borrowValue = '';\n      this.borrowType = type;\n      this.borrowCoin = data;\n    },\n    // 借贷输入框 输入事件\n    inputChanges: function inputChanges(value, name) {\n      this[name] = value;\n    },\n    // 弹框取消\n    dialogClose: function dialogClose() {\n      this.notAuthShowDialog = false;\n      this.isShowDialog = false;\n      this.borrowValue = '';\n      this.confirmLoading = false;\n    },\n    // 划转回调方法\n    transferSuccess: function transferSuccess() {\n      this.getLeverageFinance();\n    },\n    confirmFun: function confirmFun() {\n      this.buttonsEvent('1', this.tradeSide);\n      this.alertClone();\n    },\n    alertClone: function alertClone() {\n      this.alertFlag = false;\n    },\n    // 去认证\n    gotoAuth: function gotoAuth() {\n      this.$router.push('/personal/userManagement');\n    }\n  }\n};",null]}