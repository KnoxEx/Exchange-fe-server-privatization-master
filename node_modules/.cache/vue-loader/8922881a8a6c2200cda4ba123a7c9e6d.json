{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/components/pagination/Pagination.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/components/pagination/Pagination.vue","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'c-pagination',\r\n  data() {\r\n    return {\r\n      pages: this.currentPage,\r\n    };\r\n  },\r\n  props: {\r\n    total: { // 数据总条数\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    display: { // 每页显示条数\r\n      type: Number,\r\n      default: 10,\r\n    },\r\n    currentPage: { // 当前页码\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    classes: {\r\n      type: String,\r\n    },\r\n  },\r\n  computed: {\r\n    totalPage() {\r\n      return Math.ceil(parseFloat(this.total) / parseFloat(this.display)); // 总页数\r\n    },\r\n    startNumber() {\r\n      return (parseFloat(this.currentPage) - 1) * parseFloat(this.display) + 1;\r\n    },\r\n    endNumber() {\r\n      const num = parseFloat(this.currentPage) * parseFloat(this.display);\r\n      if (num > this.total) {\r\n        return this.total;\r\n      }\r\n      return num;\r\n    },\r\n  },\r\n  watch: {\r\n    currentPage(val) {\r\n      this.pages = val;\r\n    },\r\n  },\r\n  methods: {\r\n    pagination(num) {\r\n      if (num < 1) {\r\n        if (parseFloat(this.currentPage) > 1 && parseFloat(this.pages) > 1) {\r\n          this.pages -= 1;\r\n          this.$emit('pagechange', this.pages);\r\n        }\r\n      } else if (parseFloat(this.currentPage) < parseFloat(this.totalPage)\r\n        && parseFloat(this.pages) < parseFloat(this.totalPage)) {\r\n        this.pages += 1;\r\n        this.$emit('pagechange', this.pages);\r\n      }\r\n    },\r\n  },\r\n};\r\n",null]}