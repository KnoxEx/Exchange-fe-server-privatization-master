{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/personal/APImanagement/APImanagement.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/personal/APImanagement/APImanagement.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { imgMap, colorMap } from '@/utils';\nexport default {\n  name: 'apiManagement',\n  watch: {\n    userInfo: function userInfo(_userInfo) {\n      if (_userInfo !== null) {\n        this.googleCode = !!Number(_userInfo.googleStatus);\n        this.smsCode = !!Number(_userInfo.isOpenMobileCheck);\n      }\n    },\n    sendSmsCode: function sendSmsCode(_sendSmsCode) {\n      if (_sendSmsCode !== null) {\n        if (_sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('getCode-clear', 'phone');\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    createOpenApi: function createOpenApi(_createOpenApi) {\n      if (_createOpenApi !== null) {\n        this.loading2 = false;\n\n        if (_createOpenApi.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _createOpenApi.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n          this.dialogConfirm(); // 再次获取apilist\n\n          var info = {\n            page: this.page,\n            pageSize: this.pageSize\n          };\n          this.$store.dispatch('myApiList', info);\n        } else {\n          this.$bus.$emit('tip', {\n            text: _createOpenApi.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    myApiList: function myApiList(_myApiList) {\n      if (_myApiList !== null) {\n        this.loading = false;\n        this.processData(_myApiList.apiList);\n\n        if (_myApiList.count > 10) {\n          this.count = _myApiList.count;\n        } else if (_myApiList.count === 0) {\n          this.apiList = [];\n        }\n      }\n    },\n    deleteOpenApi: function deleteOpenApi(_deleteOpenApi) {\n      if (_deleteOpenApi !== null) {\n        this.delete = true;\n\n        if (_deleteOpenApi.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _deleteOpenApi.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType'); // 重新请求apilist\n\n          var info = {\n            page: this.page,\n            pageSize: this.pageSize\n          };\n          this.$store.dispatch('myApiList', info);\n        } else {\n          this.$bus.$emit('tip', {\n            text: _deleteOpenApi.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    }\n  },\n  computed: {\n    modifyApiShow: function modifyApiShow() {\n      return this.$store.state.personal.modifyApiShow;\n    },\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    sendSmsCode: function sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    createOpenApi: function createOpenApi() {\n      return this.$store.state.personal.createOpenApi;\n    },\n    myApiList: function myApiList() {\n      return this.$store.state.personal.myApiList;\n    },\n    deleteOpenApi: function deleteOpenApi() {\n      return this.$store.state.personal.deleteOpenApi;\n    },\n    api: function api() {\n      return imgMap.api;\n    },\n    apiUrl: function apiUrl() {\n      var data = {\n        2: '',\n        3: ''\n      };\n\n      try {\n        var url = this.$store.state.baseData.publicInfo.url.exUrl;\n        var nUrls = url.match(/(.+)\\/\\/(.+)?\\/?/i);\n        var protocol = nUrls[1];\n        var nUrl = nUrls[2];\n        data[2] = \"(\".concat(protocol.indexOf('s') > -1 ? 'wss' : 'ws', \"://\").concat(nUrl.replace(nUrl.substring(0, nUrl.indexOf('.')), 'ws'), \")\");\n        data[3] = \"(\".concat(protocol, \"//\").concat(nUrl.replace(nUrl.substring(0, nUrl.indexOf('.')), 'openapi'), \")\");\n      } catch (e) {// console.log(e)\n      }\n\n      return data;\n    }\n  },\n  data: function data() {\n    return {\n      titleText: this.$t('personal.APImanagement.titleText'),\n      loading: true,\n      loading2: false,\n      imgMap: imgMap,\n      colorMap: colorMap,\n      alertFlag: false,\n      // Table\n      columns: [{\n        title: this.$t('personal.APImanagement.columns')[0],\n        align: 'left',\n        width: '200px',\n        classes: ''\n      }, {\n        title: this.$t('personal.APImanagement.columns')[1],\n        align: 'left',\n        width: '200px'\n      }, {\n        title: this.$t('personal.APImanagement.columns')[2],\n        align: 'right',\n        width: ''\n      }, {\n        title: this.$t('personal.APImanagement.columns')[3],\n        align: 'right',\n        width: ''\n      }, {\n        title: this.$t('personal.APImanagement.columns')[4],\n        align: 'right',\n        width: ''\n      }],\n      columns2: [{\n        title: \"\".concat(this.$t('personal.APImanagement.columnsApi')[0], \" 111111\"),\n        align: 'left',\n        width: '470px',\n        classes: ''\n      }, {\n        title: this.$t('personal.APImanagement.columnsApi')[1],\n        align: 'left',\n        width: '470px'\n      }],\n      apiList: [],\n      apiList2: [{\n        data: ['/open/api/get_records', this.$t('personal.APImanagement.apiList')[0]]\n      }, {\n        data: ['/open/api/get_ticker', this.$t('personal.APImanagement.apiList')[1]]\n      }, {\n        data: ['/open/api/get_trades', this.$t('personal.APImanagement.apiList')[2]]\n      }, {\n        data: ['/open/api/market_dept', this.$t('personal.APImanagement.apiList')[3]]\n      }],\n      apiList3: [{\n        data: ['/open/api/all_order', this.$t('personal.APImanagement.apiList')[4]]\n      }, {\n        data: ['/open/api/all_trade', this.$t('personal.APImanagement.apiList')[5]]\n      }, {\n        data: ['/open/api/cancel_order', this.$t('personal.APImanagement.apiList')[6]]\n      }, {\n        data: ['/open/api/common/symbols', this.$t('personal.APImanagement.apiList')[7]]\n      }, {\n        data: ['/open/api/create_order', this.$t('personal.APImanagement.apiList')[8]]\n      }, {\n        data: ['/open/api/market', this.$t('personal.APImanagement.apiList')[9]]\n      }, {\n        data: ['/open/api/new_order', this.$t('personal.APImanagement.apiList')[10]]\n      }, {\n        data: ['/open/api/order_info', this.$t('personal.APImanagement.apiList')[11]]\n      }, {\n        data: ['/open/api/user/account', this.$t('personal.APImanagement.apiList')[12]]\n      }],\n      cellHeight: 55,\n      headHeight: 30,\n      lineNumber: 10,\n      classes: '',\n      headClasses: '',\n      bodyClasses: '',\n      lineClass: '',\n      count: 0,\n      page: 1,\n      pageSize: 10,\n      secretKey: '',\n      apiKey: '',\n      // 弹框相关\n      dialogFlag: false,\n      dialogConfirmLoading: false,\n      dialogConfirmDisabled: false,\n      // input相关参数\n      promptText1: this.$t('personal.APImanagement.ip'),\n      errorText1: this.$t('personal.prompt.ipCode'),\n      checkErrorFlag1: false,\n      checkValue1: '',\n      promptText2: this.$t('personal.APImanagement.note'),\n      errorText2: this.$t('personal.prompt.noteCode'),\n      checkErrorFlag2: false,\n      checkValue2: '',\n      promptText3: this.$t('personal.label.smsCodeText'),\n      errorText3: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag3: false,\n      checkValue3: '',\n      promptText4: this.$t('personal.label.googleCodeText'),\n      errorText4: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag4: false,\n      checkValue4: '',\n      // 发送验证码\n      autoStart: false,\n      // button\n      disabled: true,\n      // 横向导航参数\n      currentTab: 1,\n      navTab: [{\n        name: this.$t('personal.APImanagement.navTab')[0],\n        index: 1\n      }, {\n        name: this.$t('personal.APImanagement.navTab')[1],\n        index: 2\n      }, {\n        name: this.$t('personal.APImanagement.navTab')[2],\n        index: 3\n      }],\n      lineHeight: '55',\n      marginRight: 48,\n      // 距离右边的距离\n      smsCode: false,\n      // false对应0 关闭 true对应1 开启(手机短信认证)\n      googleCode: false,\n      // false对应0 关闭 true对应1 开启(google认证)\n      delete: true,\n      // 删除按钮的可点击状态\n      secretKeyShow: true,\n      apiKeyShow: true\n    };\n  },\n  methods: {\n    init: function init() {\n      var userInfo = this.$store.state.baseData.userInfo;\n\n      if (userInfo !== null) {\n        this.googleCode = !!Number(userInfo.googleStatus);\n        this.smsCode = !!Number(userInfo.isOpenMobileCheck);\n\n        if (!this.smsCode && !this.googleCode) {\n          this.alertFlag = true;\n        } else {\n          this.alertFlag = false;\n        }\n      }\n\n      this.getApiList();\n    },\n    getApiList: function getApiList() {\n      var info = {\n        page: this.page,\n        pageSize: this.pageSize\n      };\n      this.$store.dispatch('myApiList', info);\n    },\n    handMouseenters: function handMouseenters(name) {\n      if (name === 'secretKey') {\n        this.secretKeyShow = false;\n      } else {\n        this.apiKeyShow = false;\n      }\n    },\n    handMouseleaves: function handMouseleaves(name) {\n      if (name === 'secretKey') {\n        this.secretKeyShow = true;\n      } else {\n        this.apiKeyShow = true;\n      }\n    },\n    handMouseenter: function handMouseenter(e) {\n      e.target.classList.add('b-4-cl');\n      e.target.classList.remove('b-2-cl');\n    },\n    handMouseleave: function handMouseleave(e) {\n      e.target.classList.add('b-2-cl');\n      e.target.classList.remove('b-4-cl');\n    },\n    alertClose: function alertClose() {\n      this.$router.push('/personal/UserManagement');\n    },\n    alertGo: function alertGo() {\n      this.$router.push('/personal/UserManagement');\n    },\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    ipFlag: function ipFlag(val) {\n      return new RegExp(this.$store.state.regExp.ip, 'g').test(val);\n    },\n    numbers: function numbers(val) {\n      return this.$store.state.regExp.numbers.test(val);\n    },\n    pagechange: function pagechange(page) {\n      this.page = page;\n      var info = {\n        page: page,\n        pageSize: this.pageSize\n      };\n      this.$store.dispatch('myApiList', info);\n    },\n    processData: function processData(list) {\n      var _this = this;\n\n      // 处理数据\n      if (list !== null) {\n        this.apiList = list.map(function (obj) {\n          return {\n            id: {\n              token: obj.token,\n              ip: obj.believeIps,\n              label: obj.label\n            },\n            data: [obj.label, obj.believeIps, obj.token, [{\n              type: 'button',\n              // 'link' ' button' ,'html', 'label', 'icon' ‘str’\n              text: _this.$t('personal.tool.view'),\n              iconClass: [''],\n              eventType: 'check',\n              classes: ['']\n            }], [{\n              type: 'button',\n              // 'link' ' button' ,'html', 'label', 'icon' ‘str’\n              text: _this.$t('personal.tool.modify'),\n              iconClass: [''],\n              eventType: 'modify',\n              classes: ['']\n            }, {\n              type: 'button',\n              // 'link' ' button' ,'html', 'label', 'icon' ‘str’\n              text: _this.$t('personal.tool.delete'),\n              iconClass: [''],\n              eventType: 'delete',\n              classes: ['']\n            }]]\n          };\n        });\n      }\n    },\n    deleteData: function deleteData(type, obj) {\n      // const info = obj.token;\n      switch (type) {\n        case 'delete':\n          if (this.delete) {\n            this.$store.dispatch('deleteOpenApi', {\n              token: obj.token\n            });\n            this.delete = false;\n          }\n\n          break;\n\n        case 'check':\n          this.$store.dispatch('setApiToken', obj.token);\n          this.$router.push('/personal/checkApi');\n          break;\n\n        case 'modify':\n          this.$store.dispatch('setApiToken', obj.token);\n          this.$store.dispatch('setIp', obj.ip);\n          this.$store.dispatch('setLabel', obj.label);\n          this.$store.dispatch('setModifyApiShow', true);\n          break;\n\n        default:\n      }\n    },\n    copyClick: function copyClick(name) {\n      // 粘贴\n      if (name === 'apiKey') {\n        this.copy(this.apiKey);\n      } else {\n        this.copy(this.secretKey);\n      }\n    },\n    copy: function copy(str) {\n      // this.$bus.$emit('tip', { text: this.$t('personal.prompt.copySucces'), type: 'success' });\n      function save(e) {\n        e.clipboardData.setData('text/plain', str); // 下面会说到clipboardData对象\n\n        e.preventDefault(); // 阻止默认行为\n      }\n\n      document.addEventListener('copy', save);\n      document.execCommand('copy'); // 使文档处于可编辑状态，否则无效\n\n      document.removeEventListener('copy', save);\n    },\n    dialogClose: function dialogClose() {\n      // 关闭或取消时\n      this.dialogConfirmFlag = false;\n      this.dialogFlag = false;\n      this.checkValue = this.oldName; // 重置所有项\n\n      this.checkValue1 = '';\n      this.checkValue2 = '';\n      this.checkValue3 = '';\n      this.checkValue4 = '';\n      this.disabled = true;\n      this.$bus.$emit('getCode-clear', 'phone');\n    },\n    dialogConfirm: function dialogConfirm() {\n      this.dialogConfirmFlag = false;\n      this.dialogFlag = false;\n      this.checkValue = this.oldName; // 重置所有项\n\n      this.checkValue1 = '';\n      this.checkValue2 = '';\n      this.checkValue3 = '';\n      this.checkValue4 = '';\n      this.disabled = true;\n      this.$bus.$emit('getCode-clear', 'phone');\n    },\n    currentType: function currentType(data) {\n      this.columns2 = [{\n        title: \"\".concat(this.$t('personal.APImanagement.columnsApi')[0], \" \").concat(this.apiUrl[data.index]),\n        align: 'left',\n        width: '470px',\n        classes: ''\n      }, {\n        title: this.$t('personal.APImanagement.columnsApi')[1],\n        align: 'left',\n        width: '470px'\n      }];\n      this.currentTab = data.index;\n    },\n    dealIp: function dealIp(value) {\n      var _this2 = this;\n\n      var a = true;\n\n      if (value.indexOf(',') !== -1) {\n        if (value.charAt(value.length - 1) === ',') {\n          // 如果最后一位是,删除最后一位再进行处理\n          var attr = value.substring(0, value.length - 1).split(',');\n          var len = attr.length;\n\n          if (len <= 5) {\n            attr.forEach(function (obj) {\n              if (_this2.ipFlag(obj)) {\n                a = true;\n              } else {\n                a = false;\n              }\n            });\n          } else {\n            a = false;\n          }\n        } else {\n          // 否则正常处理\n          var _attr = value.split(',');\n\n          var _len = _attr.length;\n\n          if (_len <= 5) {\n            _attr.forEach(function (obj) {\n              if (_this2.ipFlag(obj)) {\n                a = true;\n              } else {\n                a = false;\n              }\n            });\n          } else {\n            a = false;\n          }\n        }\n      } else {\n        a = this.ipFlag(value);\n      }\n\n      return a;\n    },\n    inputChanges: function inputChanges(val, name) {\n      switch (name) {\n        case 'ip':\n          this.checkValue1 = val;\n\n          if (val) {\n            if (this.dealIp(val)) {\n              this.checkErrorFlag1 = false;\n            } else {\n              this.checkErrorFlag1 = true;\n            }\n          } else {\n            this.checkErrorFlag1 = false;\n          }\n\n          break;\n\n        case 'note':\n          this.checkValue2 = val;\n\n          if (this.checkValue2) {\n            this.checkErrorFlag2 = false;\n          } else {\n            this.checkErrorFlag2 = true;\n          }\n\n          break;\n\n        case 'phoneCode':\n          this.checkValue3 = val;\n\n          if (this.codeFlag(val)) {\n            this.checkErrorFlag3 = false;\n          } else {\n            this.checkErrorFlag3 = true;\n          }\n\n          break;\n\n        default:\n          this.checkValue4 = val;\n\n          if (this.codeFlag(val)) {\n            this.checkErrorFlag4 = false;\n          } else {\n            this.checkErrorFlag4 = true;\n          }\n\n      }\n\n      if (this.checkValue2 && !this.checkErrorFlag3 && !this.checkErrorFlag4 && !this.checkErrorFlag1 && !this.checkErrorFlag2) {\n        if (this.smsCode) {\n          this.disabled = !this.checkValue3;\n        }\n\n        if (this.googleCode) {\n          this.disabled = !this.checkValue4;\n        }\n\n        if (this.smsCode && this.googleCode) {\n          this.disabled = !(this.checkValue3 && this.checkValue4);\n        }\n      } else {\n        this.disabled = true;\n      }\n    },\n    getCodeClick: function getCodeClick() {\n      this.$bus.$emit('getCode-start', 'phone');\n      var info = {\n        operationType: 16\n      };\n      this.$store.dispatch('sendSmsCode', info);\n    },\n    btnLink: function btnLink() {\n      this.loading2 = true;\n      var info = {\n        believeIps: this.checkValue1,\n        label: this.checkValue2,\n        smsValidCode: this.checkValue3,\n        googleCode: this.checkValue4\n      };\n      this.$store.dispatch('createOpenApi', info);\n    }\n  }\n};",null]}