{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/ChangePassword/ChangePassword.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/ChangePassword/ChangePassword.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nexport default {\n  name: 'changePassword',\n  watch: {\n    userInfo: function userInfo(userinfo) {\n      this.googleCode = !!Number(userinfo.googleStatus);\n      this.smsCode = !!Number(userinfo.isOpenMobileCheck);\n    },\n    resetPassword: function resetPassword(_resetPassword) {\n      if (_resetPassword !== null) {\n        this.loading = false;\n\n        if (_resetPassword.text === 'success') {\n          // this.$bus.$emit('tip', { text: resetPassword.msg, type: 'success' });\n          this.$store.dispatch('resetType');\n          this.out();\n        } else {\n          this.$bus.$emit('tip', {\n            text: _resetPassword.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n\n          if (_resetPassword.code !== '10009') {\n            this.$bus.$emit('getCode-clear', 'loginGetcode');\n          }\n        }\n      }\n    },\n    sendSmsCode: function sendSmsCode(_sendSmsCode) {\n      if (_sendSmsCode !== null) {\n        if (_sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    }\n  },\n  computed: {\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    resetPassword: function resetPassword() {\n      return this.$store.state.personal.resetPassword;\n    },\n    sendSmsCode: function sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    }\n  },\n  data: function data() {\n    return {\n      checkValue1: '',\n      checkValue2: '',\n      checkValue3: '',\n      checkValue4: '',\n      checkValue5: '',\n      promptText1: this.$t('personal.label.oldPassword'),\n      promptText2: this.$t('personal.label.newPassword'),\n      promptText3: this.$t('personal.label.newPasswordAgain'),\n      promptText4: this.$t('personal.label.smsCodeText'),\n      promptText5: this.$t('personal.label.googleCodeText'),\n      errorText1: this.$t('personal.prompt.errorPasswordText'),\n      errorText2: this.$t('personal.prompt.errorPasswordText'),\n      errorText3: this.$t('personal.prompt.errorPasswordTwo'),\n      errorText4: this.$t('personal.prompt.errorCode'),\n      errorText5: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag1: false,\n      checkErrorFlag2: false,\n      checkErrorFlag3: false,\n      checkErrorFlag4: false,\n      checkErrorFlag5: false,\n      disabled: true,\n      oldNew: false,\n      smsCode: false,\n      googleCode: false,\n      loading: false\n    };\n  },\n  methods: {\n    init: function init() {\n      if (this.userInfo) {\n        this.googleCode = !!Number(this.userInfo.googleStatus);\n        this.smsCode = !!Number(this.userInfo.isOpenMobileCheck);\n      }\n    },\n    out: function out() {\n      var _this = this;\n\n      this.axios({\n        url: '/user/login_out'\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          _this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this.$bus.$emit('outUserIsLogin');\n        } else {\n          _this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    getCodeClick: function getCodeClick() {\n      var info = {\n        operationType: 5\n      };\n      this.$store.dispatch('sendSmsCode', info);\n    },\n    // 密码正则\n    passFlag: function passFlag(val) {\n      return this.$store.state.regExp.passWord.test(val);\n    },\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    inputChanges: function inputChanges(value, name) {\n      switch (name) {\n        case 'oldPassword':\n          {\n            // oldpassword\n            this.checkValue1 = value;\n\n            if (this.passFlag(value)) {\n              this.checkErrorFlag1 = false;\n            } else {\n              this.checkErrorFlag1 = true;\n            }\n\n            break;\n          }\n\n        case 'newPassword':\n          {\n            // newpassword\n            this.checkValue2 = value;\n\n            if (this.passFlag(value)) {\n              this.checkErrorFlag2 = false;\n            } else {\n              this.checkErrorFlag2 = true;\n            }\n\n            break;\n          }\n\n        case 'newPasswordAgain':\n          {\n            // newpassword again\n            this.checkValue3 = value;\n\n            if (this.checkValue3 === this.checkValue2) {\n              this.checkErrorFlag3 = false;\n            } else {\n              this.checkErrorFlag3 = true;\n            }\n\n            break;\n          }\n\n        case 'smsCode':\n          {\n            // 短信验证码\n            this.checkValue4 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag4 = false;\n            } else {\n              this.checkErrorFlag4 = true;\n            }\n\n            break;\n          }\n\n        default:\n          {\n            // google验证码\n            this.checkValue5 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag5 = false;\n            } else {\n              this.checkErrorFlag5 = true;\n            }\n          }\n      }\n\n      if (this.checkValue1 && this.checkValue2 && this.checkValue3 && this.checkValue2 === this.checkValue3 && !this.checkErrorFlag1 && !this.checkErrorFlag2 && !this.checkErrorFlag3 && !this.checkErrorFlag4 && !this.checkErrorFlag5) {\n        if (this.smsCode) {\n          this.disabled = !this.checkValue4;\n        }\n\n        if (this.googleCode) {\n          this.disabled = !this.checkValue5;\n        }\n\n        if (this.smsCode && this.googleCode) {\n          this.disabled = !(this.checkValue5 && this.checkValue4);\n        }\n      } else {\n        this.disabled = true;\n      }\n    },\n    checkFocus: function checkFocus(num) {\n      switch (num) {\n        case '1':\n          {\n            // oldpassword\n            break;\n          }\n\n        case '2':\n          {\n            // newpassword\n            break;\n          }\n\n        default:\n          {// newpassword again\n            // console.log(1);\n          }\n      }\n    },\n    btnLink: function btnLink() {\n      var info = {\n        loginPword: this.checkValue1,\n        newLoginPword: this.checkValue2,\n        smsAuthCode: this.checkValue4,\n        googleCode: this.checkValue5\n      };\n      this.loading = true;\n      this.$store.dispatch('resetPassword', info);\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/ChangePassword/ChangePassword.js"],"names":["name","watch","userInfo","userinfo","googleCode","Number","googleStatus","smsCode","isOpenMobileCheck","resetPassword","loading","text","$store","dispatch","out","$bus","$emit","msg","type","code","sendSmsCode","computed","state","baseData","personal","data","checkValue1","checkValue2","checkValue3","checkValue4","checkValue5","promptText1","$t","promptText2","promptText3","promptText4","promptText5","errorText1","errorText2","errorText3","errorText4","errorText5","checkErrorFlag1","checkErrorFlag2","checkErrorFlag3","checkErrorFlag4","checkErrorFlag5","disabled","oldNew","methods","init","axios","url","then","toString","getCodeClick","info","operationType","passFlag","val","regExp","passWord","test","codeFlag","verification","inputChanges","value","checkFocus","num","btnLink","loginPword","newLoginPword","smsAuthCode"],"mappings":"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","sourcesContent":["export default {\r\n  name: 'changePassword',\r\n  watch: {\r\n    userInfo(userinfo) {\r\n      this.googleCode = !!Number(userinfo.googleStatus);\r\n      this.smsCode = !!Number(userinfo.isOpenMobileCheck);\r\n    },\r\n    resetPassword(resetPassword) {\r\n      if (resetPassword !== null) {\r\n        this.loading = false;\r\n        if (resetPassword.text === 'success') {\r\n          // this.$bus.$emit('tip', { text: resetPassword.msg, type: 'success' });\r\n          this.$store.dispatch('resetType');\r\n          this.out();\r\n        } else {\r\n          this.$bus.$emit('tip', { text: resetPassword.msg, type: 'error' });\r\n          this.$store.dispatch('resetType');\r\n          if (resetPassword.code !== '10009') {\r\n            this.$bus.$emit('getCode-clear', 'loginGetcode');\r\n          }\r\n        }\r\n      }\r\n    },\r\n    sendSmsCode(sendSmsCode) {\r\n      if (sendSmsCode !== null) {\r\n        if (sendSmsCode.text === 'success') {\r\n          this.$bus.$emit('tip', { text: sendSmsCode.msg, type: 'success' });\r\n          this.$store.dispatch('resetType');\r\n        } else {\r\n          this.$bus.$emit('tip', { text: sendSmsCode.msg, type: 'error' });\r\n          this.$store.dispatch('resetType');\r\n        }\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    userInfo() {\r\n      return this.$store.state.baseData.userInfo;\r\n    },\r\n    resetPassword() {\r\n      return this.$store.state.personal.resetPassword;\r\n    },\r\n    sendSmsCode() {\r\n      return this.$store.state.personal.sendSmsCode;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      checkValue1: '',\r\n      checkValue2: '',\r\n      checkValue3: '',\r\n      checkValue4: '',\r\n      checkValue5: '',\r\n      promptText1: this.$t('personal.label.oldPassword'),\r\n      promptText2: this.$t('personal.label.newPassword'),\r\n      promptText3: this.$t('personal.label.newPasswordAgain'),\r\n      promptText4: this.$t('personal.label.smsCodeText'),\r\n      promptText5: this.$t('personal.label.googleCodeText'),\r\n      errorText1: this.$t('personal.prompt.errorPasswordText'),\r\n      errorText2: this.$t('personal.prompt.errorPasswordText'),\r\n      errorText3: this.$t('personal.prompt.errorPasswordTwo'),\r\n      errorText4: this.$t('personal.prompt.errorCode'),\r\n      errorText5: this.$t('personal.prompt.errorCode'),\r\n      checkErrorFlag1: false,\r\n      checkErrorFlag2: false,\r\n      checkErrorFlag3: false,\r\n      checkErrorFlag4: false,\r\n      checkErrorFlag5: false,\r\n      disabled: true,\r\n      oldNew: false,\r\n      smsCode: false,\r\n      googleCode: false,\r\n      loading: false,\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      if (this.userInfo) {\r\n        this.googleCode = !!Number(this.userInfo.googleStatus);\r\n        this.smsCode = !!Number(this.userInfo.isOpenMobileCheck);\r\n      }\r\n    },\r\n    out() {\r\n      this.axios({\r\n        url: '/user/login_out',\r\n      }).then((data) => {\r\n        if (data.code.toString() === '0') {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'success' });\r\n          this.$bus.$emit('outUserIsLogin');\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    getCodeClick() {\r\n      const info = { operationType: 5 };\r\n      this.$store.dispatch('sendSmsCode', info);\r\n    },\r\n    // 密码正则\r\n    passFlag(val) {\r\n      return this.$store.state.regExp.passWord.test(val);\r\n    },\r\n    codeFlag(val) {\r\n      return this.$store.state.regExp.verification.test(val);\r\n    },\r\n    inputChanges(value, name) {\r\n      switch (name) {\r\n        case 'oldPassword': { // oldpassword\r\n          this.checkValue1 = value;\r\n          if (this.passFlag(value)) {\r\n            this.checkErrorFlag1 = false;\r\n          } else {\r\n            this.checkErrorFlag1 = true;\r\n          }\r\n          break;\r\n        }\r\n        case 'newPassword': { // newpassword\r\n          this.checkValue2 = value;\r\n          if (this.passFlag(value)) {\r\n            this.checkErrorFlag2 = false;\r\n          } else {\r\n            this.checkErrorFlag2 = true;\r\n          }\r\n          break;\r\n        }\r\n        case 'newPasswordAgain': { // newpassword again\r\n          this.checkValue3 = value;\r\n          if (this.checkValue3 === this.checkValue2) {\r\n            this.checkErrorFlag3 = false;\r\n          } else {\r\n            this.checkErrorFlag3 = true;\r\n          }\r\n          break;\r\n        }\r\n        case 'smsCode': { // 短信验证码\r\n          this.checkValue4 = value;\r\n          if (this.codeFlag(value)) {\r\n            this.checkErrorFlag4 = false;\r\n          } else {\r\n            this.checkErrorFlag4 = true;\r\n          }\r\n          break;\r\n        }\r\n        default: { // google验证码\r\n          this.checkValue5 = value;\r\n          if (this.codeFlag(value)) {\r\n            this.checkErrorFlag5 = false;\r\n          } else {\r\n            this.checkErrorFlag5 = true;\r\n          }\r\n        }\r\n      }\r\n      if (this.checkValue1 && this.checkValue2 && this.checkValue3\r\n        && this.checkValue2 === this.checkValue3 && !this.checkErrorFlag1\r\n        && !this.checkErrorFlag2 && !this.checkErrorFlag3\r\n        && !this.checkErrorFlag4 && !this.checkErrorFlag5) {\r\n        if (this.smsCode) {\r\n          this.disabled = !this.checkValue4;\r\n        }\r\n        if (this.googleCode) {\r\n          this.disabled = !this.checkValue5;\r\n        }\r\n        if (this.smsCode && this.googleCode) {\r\n          this.disabled = !(this.checkValue5 && this.checkValue4);\r\n        }\r\n      } else {\r\n        this.disabled = true;\r\n      }\r\n    },\r\n    checkFocus(num) {\r\n      switch (num) {\r\n        case '1': { // oldpassword\r\n          break;\r\n        }\r\n        case '2': { // newpassword\r\n          break;\r\n        }\r\n        default: { // newpassword again\r\n          // console.log(1);\r\n        }\r\n      }\r\n    },\r\n    btnLink() {\r\n      const info = {\r\n        loginPword: this.checkValue1,\r\n        newLoginPword: this.checkValue2,\r\n        smsAuthCode: this.checkValue4,\r\n        googleCode: this.checkValue5,\r\n      };\r\n      this.loading = true;\r\n      this.$store.dispatch('resetPassword', info);\r\n    },\r\n  },\r\n};\r\n"]}]}