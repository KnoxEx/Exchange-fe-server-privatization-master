{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/noticeInfo/noticeInfo.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/noticeInfo/noticeInfo.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { myStorage, formatTime } from '@/utils';\nexport default {\n  name: 'noticeInfo',\n  data: function data() {\n    return {\n      contentId: parseFloat(myStorage.get('ntId')) || null,\n      sideList: [],\n      notieContent: {},\n      menuBarHeight: null,\n      isshowLoading: true,\n      pagination: {\n        // 翻页数据\n        count: 0,\n        // 总数量\n        pageSize: 9,\n        // 每页显示条数\n        page: 1 // 当前页数\n\n      },\n      noticeSearchVal: '',\n      cacheData: {\n        sideList: [],\n        pagination: []\n      },\n      timer: null,\n      searchLoaded: false,\n      openSearch: false\n    };\n  },\n  computed: {\n    menuBoxHeight: function menuBoxHeight() {\n      if (this.menuBarHeight > 860) {\n        return '860px';\n      }\n\n      return 'auto';\n    },\n    contentMinHeight: function contentMinHeight() {\n      if (this.menuBarHeight > 860) {\n        return '760px';\n      }\n\n      return '';\n    }\n  },\n  filters: {\n    cutTextLength: function cutTextLength(value) {\n      return value.slice(0, 20);\n    }\n  },\n  methods: {\n    init: function init() {\n      this.menuBarHeight = this.$refs.menuBar.offsetHeight;\n\n      if (this.$route.params.ntId) {\n        this.contentId = parseFloat(this.$route.params.ntId);\n      } // 获取列表书数据\n\n\n      this.getListData(); // 获取 内容\n\n      this.getContentData();\n    },\n    clearSearchVal: function clearSearchVal() {\n      this.noticeSearchVal = '';\n      this.setCacheToData();\n    },\n    setDataToCache: function setDataToCache() {\n      var sideList = this.sideList,\n          pagination = this.pagination;\n      this.cacheData = {\n        cache: true,\n        sideList: sideList,\n        pagination: pagination\n      };\n      this.sideList = [];\n      this.pagination = {\n        count: 0,\n        pageSize: 10,\n        page: 1\n      };\n    },\n    setCacheToData: function setCacheToData() {\n      var _this$cacheData = this.cacheData,\n          sideList = _this$cacheData.sideList,\n          pagination = _this$cacheData.pagination;\n      this.sideList = sideList;\n      this.pagination = pagination;\n      this.cacheData = {\n        sideList: [],\n        pagination: [],\n        cache: false\n      };\n    },\n    postValToSearch: function postValToSearch() {\n      var _this = this;\n\n      this.searchLoaded = false;\n\n      if (this.timer) {\n        clearTimeout(this.timer);\n        this.timer = null;\n      }\n\n      this.timer = setTimeout(function () {\n        if (_this.noticeSearchVal !== '') {\n          _this.isshowLoading = true;\n\n          _this.searchNoticeToKey(_this.noticeSearchVal);\n        }\n      }, 300);\n    },\n    searchNoticeToKey: function searchNoticeToKey() {\n      // this.searchLoaded = true;\n      //   this.isshowLoading = false;\n      //   if (data.code === '0' && this.noticeSearchVal !== '') {\n      //     this.sideList = [];\n      //   }\n      if (this.noticeSearchVal !== '') {\n        this.getListData(true);\n      }\n    },\n    setNoticeSearchVal: function setNoticeSearchVal() {\n      if (this.noticeSearchVal) {\n        if (!this.cacheData.cache) {\n          this.setDataToCache();\n        }\n\n        this.postValToSearch();\n      }\n\n      if (this.noticeSearchVal === '' && this.cacheData.cache) {\n        this.setCacheToData();\n      }\n    },\n    // 翻页事件\n    pagechange: function pagechange(num) {\n      var isSearch = this.noticeSearchVal !== '';\n      this.pagination.page = num;\n      this.getListData(isSearch);\n    },\n    // 获取列表书数据\n    getListData: function getListData() {\n      var _this2 = this;\n\n      var isSearch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var keyword = isSearch ? this.noticeSearchVal : '';\n      this.getData({\n        url: this.$store.state.url.notice.notice_list,\n        params: {\n          keyword: keyword,\n          page: this.pagination.page,\n          pageSize: this.pagination.pageSize\n        },\n        callback: function callback(data) {\n          _this2.isshowLoading = false;\n          _this2.searchLoaded = true;\n          _this2.openSearch = data.data.openSearch; // 如果路由没有参数 默认显示第一条数据\n\n          if (!isSearch || isSearch && _this2.noticeSearchVal !== '') {\n            _this2.sideList = data.data.noticeInfoList;\n            _this2.pagination.count = data.data.count;\n          }\n\n          if (!parseFloat(_this2.$route.params.ntId)) {\n            _this2.writing(data.data.noticeInfoList[0].id);\n\n            _this2.$router.push(\"/noticeInfo/\".concat(data.data.noticeInfoList[0].id));\n          }\n        }\n      });\n    },\n    // 获取 内容\n    getContentData: function getContentData() {\n      var _this3 = this;\n\n      this.getData({\n        url: this.$store.state.url.notice.notice_info,\n        params: {\n          id: this.contentId\n        },\n        callback: function callback(data) {\n          _this3.notieContent = data.data.noticeInfo;\n          _this3.notieContent.ctime = formatTime(data.data.noticeInfo.ctime);\n        }\n      });\n    },\n    writing: function writing(i) {\n      if (i !== this.contentId) {\n        myStorage.set('ntId', i);\n        this.contentId = i; // this.$router.push({ path: 'noticeInfo', params: { ntId: i } });\n\n        this.$router.push(\"\".concat(i));\n        this.getContentData();\n      }\n    },\n    getData: function getData(datas) {\n      var _this4 = this;\n\n      this.isshowLoading = true;\n      var url = datas.url,\n          params = datas.params,\n          callback = datas.callback;\n      this.axios({\n        url: url,\n        params: params,\n        method: 'post'\n      }).then(function (data) {\n        _this4.isshowLoading = false;\n\n        if (data.code === '0') {\n          callback(data);\n        }\n      });\n    }\n  }\n};",null]}