{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/freeStaking/detail/detail.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/freeStaking/detail/detail.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { fixD, colorMap, imgMap } from '@/utils';\nexport default {\n  data: function data() {\n    return {\n      imgMap: imgMap,\n      colorMap: colorMap,\n      projectDetail: null,\n      lockNumber: '0',\n      userAgress: false,\n      tableList: [],\n      projectId: null,\n      currencyModalState: false,\n      verifyObj: {},\n      dialogFlag: false,\n      googleVlaue: '',\n      phoneCode: '',\n      headerBackground: {\n        'background-image': \"url(\".concat(imgMap.free_staking_banner, \")\")\n      },\n      timer: null\n    };\n  },\n  filters: {\n    userInputLockFix: function userInputLockFix(val) {\n      return (parseFloat(val) || 0).toString();\n    }\n  },\n  computed: {\n    totalAmount: function totalAmount() {\n      var totalAmount = this.projectDetail.totalAmount;\n      return !this.isLogin || !this.projectDetail ? '- - -' : fixD(totalAmount, this.currentSymbol);\n    },\n    totalGainAmount: function totalGainAmount() {\n      var totalGainAmount = this.projectDetail.totalGainAmount;\n      return !this.isLogin || !this.projectDetail ? '- - -' : fixD(totalGainAmount, this.currentSymbol);\n    },\n    totalUserGainAmount: function totalUserGainAmount() {\n      var totalUserGainAmount = this.projectDetail.totalUserGainAmount;\n      return !this.isLogin || !this.projectDetail ? '- - -' : fixD(totalUserGainAmount, this.currentSymbol);\n    },\n    raiseAmount: function raiseAmount() {\n      var raiseAmount = this.projectDetail.raiseAmount;\n      return !this.projectDetail ? '- - -' : fixD(raiseAmount, this.currentSymbol);\n    },\n    userBalance: function userBalance() {\n      var balance = this.projectDetail.balance;\n      return !this.projectDetail ? '- - -' : fixD(balance, this.currentSymbol);\n    },\n    lockMinNumText: function lockMinNumText() {\n      if (!this.projectDetail) return '';\n      var _this$projectDetail = this.projectDetail,\n          buyAmountMin = _this$projectDetail.buyAmountMin,\n          shortName = _this$projectDetail.shortName,\n          buyAmountMax = _this$projectDetail.buyAmountMax;\n      var text = this.$t('freeStaking.detail.lockNum');\n      var text1 = this.$t('freeStaking.detail.lockMinNum');\n      var text2 = this.$t('freeStaking.detail.lockMaxNum');\n      return \"\".concat(text, \" (\").concat(text1).concat(buyAmountMin, \" \").concat(shortName, \"\\uFF1B\").concat(text2).concat(buyAmountMax, \" \").concat(shortName, \" )\");\n    },\n    symbolAll: function symbolAll() {\n      var market = this.$store.state.baseData.market;\n      return market && market.coinList ? market.coinList : null;\n    },\n    currentSymbol: function currentSymbol() {\n      var fix = 0;\n\n      if (this.projectDetail && this.projectDetail.gainCoin && this.symbolAll) {\n        var showPrecision = this.symbolAll[this.projectDetail.gainCoin].showPrecision;\n        fix = showPrecision;\n      }\n\n      return fix;\n    },\n    enforceGoogleAuth: function enforceGoogleAuth() {\n      return this.$store.state.baseData.is_enforce_google_auth || 0;\n    },\n    userFeatureIncome: function userFeatureIncome() {\n      if (!this.isLogin) return '- - -';\n      var _this$projectDetail2 = this.projectDetail,\n          totalAmount = _this$projectDetail2.totalAmount,\n          gainRate = _this$projectDetail2.gainRate,\n          lockDay = _this$projectDetail2.lockDay,\n          currencyExchangeRate = _this$projectDetail2.currencyExchangeRate;\n      var all = totalAmount + Number(this.lockNumber);\n      return fixD(all * gainRate / 100 / 365 * lockDay * currencyExchangeRate, this.currentSymbol);\n    },\n    verificationType: function verificationType() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var type = '0';\n\n      if (publicInfo && publicInfo.switch && publicInfo.switch.verificationType) {\n        type = publicInfo.switch.verificationType;\n      }\n\n      return type;\n    },\n    showActivityTable: function showActivityTable() {\n      var _this$projectDetail3 = this.projectDetail,\n          status = _this$projectDetail3.status,\n          projectType = _this$projectDetail3.projectType;\n      var lockPosStatus = projectType === 3 && this.isShowBlock([3, 4, 5]); // 判断是否是协议Pos和状态\n\n      var unLockPosStatus = projectType === 1 && status !== 1; // 判断是否是持仓Pos和状态\n\n      return (unLockPosStatus || lockPosStatus) && this.isLogin;\n    },\n    isLogin: function isLogin() {\n      if (this.$store.state.baseData.isLogin) {\n        return this.$store.state.baseData.isLogin;\n      }\n\n      return false;\n    },\n    projectStatus: function projectStatus() {\n      var _this = this;\n\n      var _this$projectDetail$a = this.projectDetail.activeStatus,\n          activeStatus = _this$projectDetail$a === void 0 ? null : _this$projectDetail$a;\n      var projectStatus = [{\n        title: this.$t('freeStaking.detail.activityStatus[0]'),\n        datetime: '',\n        active: false\n      }, {\n        title: this.$t('freeStaking.detail.activityStatus[1]'),\n        datetime: '',\n        active: false\n      }, {\n        title: this.$t('freeStaking.detail.activityStatus[2]'),\n        datetime: '',\n        active: false\n      }, {\n        title: this.$t('freeStaking.detail.activityStatus[3]'),\n        datetime: '',\n        active: false\n      }, {\n        title: this.$t('freeStaking.detail.activityStatus[4]'),\n        datetime: '',\n        active: false\n      }];\n      return projectStatus.map(function (item, index) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          datetime: _this.countStateTime(index),\n          active: activeStatus !== null && activeStatus > index\n        });\n      });\n    },\n    columns: function columns() {\n      return [{\n        title: this.$t('freeStaking.detail.incomeTime'),\n        width: '50%'\n      }, // 币种\n      {\n        title: this.$t('freeStaking.detail.incomeNum'),\n        width: '50%',\n        align: 'left'\n      } // 地址\n      ];\n    },\n    // 二次确认按钮是否开启\n    confirmBtnFlag: function confirmBtnFlag() {\n      if (this.googleStatus === 1) {\n        if (this.googleErrorFlag || this.googleVlaue.length === 0) {\n          return true;\n        }\n      }\n\n      if (this.isOpenMobileCheck === 1) {\n        if (this.phoneCode.length === 0 || this.checkErrorFlag) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    checkPhione: function checkPhione() {\n      return {\n        text: this.$t('login.phoneCode'),\n        haveCode: true\n      };\n    },\n    googleVlaueForm: function googleVlaueForm() {\n      return {\n        text: this.$t('login.googleCode'),\n        haveCode: false\n      };\n    },\n    // 验证框是否为错误\n    googleErrorFlag: function googleErrorFlag() {\n      return this.googleVlaue.length !== 0 && !this.authInputRight(this.googleVlaue);\n    },\n    // 验证框是否为错误\n    phoneErrorFlag: function phoneErrorFlag() {\n      return this.phoneCode.length !== 0 && !this.authInputRight(this.phoneCode);\n    },\n    userInfo: function userInfo() {\n      if (this.$store.state.baseData.userInfo) {\n        return this.$store.state.baseData.userInfo;\n      }\n\n      return {};\n    },\n    googleStatus: function googleStatus() {\n      return this.userInfo ? this.userInfo.googleStatus : null;\n    },\n    isOpenMobileCheck: function isOpenMobileCheck() {\n      return this.userInfo ? this.userInfo.isOpenMobileCheck : null;\n    },\n    userIncomeTitle: function userIncomeTitle() {\n      var _this$projectDetail$l = this.projectDetail.lockDay,\n          lockDay = _this$projectDetail$l === void 0 ? 0 : _this$projectDetail$l;\n      var day = this.$t('freeStaking.detail.twoDayIncome[0]');\n      var text = this.$t('freeStaking.detail.twoDayIncome[1]');\n      return \"\".concat(lockDay).concat(day).concat(text);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  },\n  methods: {\n    init: function init() {\n      this.projectId = this.$route.params.id;\n      document.getElementsByTagName('html')[0].scrollTop = 0;\n      this.getProjectDetail();\n    },\n    initData: function initData() {\n      this.lockNumber = 0;\n      this.googleVlaue = '';\n      this.phoneCode = '';\n    },\n    tableClick: function tableClick() {},\n    timerBegin: function timerBegin(t) {\n      var _this2 = this;\n\n      var time = t;\n      this.timer = setInterval(function () {\n        if (time > 0) {\n          time -= 1;\n        } else {\n          clearInterval(_this2.timer);\n          window.location.reload();\n        }\n      }, 1000);\n    },\n    countStateTime: function countStateTime(index) {\n      if (!this.projectDetail) return '';\n      var time = '';\n\n      switch (index) {\n        case 0:\n          time = this.projectDetail.stime;\n          break;\n\n        case 1:\n          time = this.projectDetail.etime;\n          break;\n\n        case 2:\n          time = this.projectDetail.ltime;\n          break;\n\n        case 3:\n          time = this.projectDetail.iasDate;\n          break;\n\n        default:\n          break;\n      }\n\n      return time;\n    },\n    checkoutHandle: function checkoutHandle(val) {\n      this.userAgress = val;\n    },\n    changeUserAgreeState: function changeUserAgreeState() {\n      this.userAgress = !this.userAgress;\n    },\n    isShowBlock: function isShowBlock() {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      return state.includes(this.projectDetail.activeStatus);\n    },\n    getProjectDetail: function getProjectDetail() {\n      var _this3 = this;\n\n      this.axios({\n        url: this.$store.state.url.freeStaking.project_detail,\n        headers: {},\n        params: {\n          id: this.projectId\n        },\n        method: 'post'\n      }).then(function (data) {\n        if (data.code === '0') {\n          var projectDetail = data.data; // 判断项目关闭或者删除\n\n          if (projectDetail.status === -1 || projectDetail.status === 5) {\n            _this3.$router.push('/freeStaking');\n\n            return;\n          }\n\n          if (projectDetail.status === 1 && projectDetail.projectType === 3) {\n            _this3.timerBegin(projectDetail.remainingTimeSeconds);\n          } // 如果是已满仓状态 按产品逻辑强行设置成募集开始\n\n\n          if (projectDetail.activeStatus === 6) projectDetail.activeStatus = 1;\n          projectDetail.details = projectDetail.details.replace(/\\n/g, '<br/>');\n          projectDetail.info = projectDetail.info.replace(/\\n/g, '<br/>');\n          _this3.projectDetail = projectDetail;\n          _this3.tableList = _this3.countTableList(projectDetail.userGainList);\n        }\n      });\n    },\n    countTableList: function countTableList(userGainList) {\n      if (!userGainList || !Array.isArray(userGainList)) return [];\n      return userGainList.map(function (item) {\n        return {\n          id: item.id,\n          data: [item.gainTime, item.gainAmount]\n        };\n      });\n    },\n    lineStatusStyle: function lineStatusStyle(index) {\n      var activeStatus = this.projectDetail.activeStatus;\n      return \"width:\".concat(activeStatus - 1 > index ? '100%' : '50%');\n    },\n    goBackHome: function goBackHome() {\n      window.location.href = this.projectDetail.url;\n    },\n    navMyPos: function navMyPos() {\n      this.$router.push('/myPos');\n    },\n    showCurrencyModal: function showCurrencyModal() {\n      this.currencyModalState = true;\n    },\n    hideCurrencyModal: function hideCurrencyModal() {\n      this.currencyModalState = false;\n    },\n    submitUserPos: function submitUserPos() {\n      var _this$projectDetail4 = this.projectDetail,\n          buyAmountMin = _this$projectDetail4.buyAmountMin,\n          buyAmountMax = _this$projectDetail4.buyAmountMax,\n          balance = _this$projectDetail4.balance,\n          shortName = _this$projectDetail4.shortName,\n          totalAmount = _this$projectDetail4.totalAmount;\n      var errText = '';\n\n      if (!this.isLogin) {\n        this.$router.push('/login');\n        return;\n      } // 兑换金额不能大于账户数量\n\n\n      if (parseFloat(this.lockNumber) > parseFloat(balance)) {\n        errText = \"\".concat(this.$t('freeStaking.detail.balanceError[0]'), \"\\n        \").concat(this.userBalance).concat(shortName).concat(this.$t('freeStaking.detail.balanceError[1]'));\n        this.showToast(errText);\n        return;\n      }\n\n      if (parseFloat(this.lockNumber) < parseFloat(buyAmountMin)) {\n        errText = \"\".concat(this.$t('freeStaking.detail.buyAmountMinError')).concat(buyAmountMin).concat(shortName);\n        this.showToast(errText);\n        return;\n      }\n\n      if (parseFloat(this.lockNumber) + parseFloat(totalAmount) > parseFloat(buyAmountMax)) {\n        errText = \"\".concat(this.$t('freeStaking.detail.buyAmountMaxError')).concat(buyAmountMax).concat(shortName);\n        this.showToast(errText);\n        return;\n      } // 判断如果没有谷歌验证 使用谷歌验证\n\n\n      if (this.googleStatus !== 1 && this.isOpenMobileCheck !== 1) {\n        errText = this.$t('innov.binding');\n        this.showToast(errText);\n        return;\n      } // 谷歌强制认证开启的时候 判断有没有谷歌没有的话 提示去绑定\n\n\n      if (this.googleStatus !== 1 && this.enforceGoogleAuth) {\n        errText = this.$t('assets.withdraw.bindGoogle');\n        this.showToast(errText);\n        return;\n      }\n\n      if (this.verificationType === '2') {\n        this.captchaObj.verify();\n      } else {\n        this.dialogFlag = true;\n      }\n    },\n    getCaptchaObj: function getCaptchaObj(captchaObj) {\n      this.captchaObj = captchaObj;\n    },\n    verifyCallBack: function verifyCallBack(parameter) {\n      this.verifyObj = {\n        geetest_challenge: parameter.geetest_challenge,\n        geetest_seccode: parameter.geetest_seccode,\n        geetest_validate: parameter.geetest_validate\n      };\n      this.dialogFlag = true;\n    },\n    // 关闭弹窗\n    dialogClose: function dialogClose() {\n      this.dialogFlag = false;\n      this.phoneCode = '';\n      this.googleVlaue = '';\n      this.emailCheckValue = '';\n    },\n    getCodeClick: function getCodeClick() {\n      var _this4 = this;\n\n      this.axios({\n        url: 'v4/common/smsValidCode',\n        method: 'post',\n        header: {},\n        params: {\n          operationType: 28\n        }\n      }).then(function (data) {\n        if (data.code.toString() !== '0') {\n          // 倒计时重置\n          _this4.$bus.$emit('getCode-clear', 'loginGetcode'); // tip框提示错误\n\n\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        } else {\n          // 邮件已发送，请注意查收\n          _this4.$bus.$emit('tip', {\n            text: '验证码已发送，请注意查收',\n            type: 'success'\n          });\n        }\n      }).catch(function () {});\n    },\n    inputChanges: function inputChanges(value, name) {\n      this[name] = value;\n    },\n    dialogConfirm: function dialogConfirm() {\n      var _this5 = this;\n\n      var params = {\n        amount: this.lockNumber,\n        projectId: this.projectId,\n        googleCode: this.googleVlaue,\n        smsValidCode: this.phoneCode,\n        verificationType: this.verificationType\n      };\n\n      if (this.verificationType === '2') {\n        params = Object.assign(params, this.verifyObj);\n      }\n\n      this.axios({\n        url: this.$store.state.url.freeStaking.project_apply,\n        headers: {},\n        params: params,\n        method: 'post'\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          _this5.$bus.$emit('tip', {\n            text: _this5.$t('购买成功'),\n            type: 'success'\n          });\n\n          _this5.dialogFlag = false;\n\n          _this5.initData();\n\n          _this5.init();\n        } else {\n          _this5.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    authInputRight: function authInputRight(value) {\n      return this.$store.state.regExp.verification.test(value);\n    },\n    autoFillCoin: function autoFillCoin() {\n      this.lockNumber = String(this.projectDetail.balance);\n    },\n    showToast: function showToast(errText) {\n      if (!errText) return;\n      this.$bus.$emit('tip', {\n        text: errText,\n        type: 'error'\n      });\n    }\n  }\n};",null]}