{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/Downloads/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/components/forcedReminder/forcedReminder.js","dependencies":[{"path":"/Users/h/Downloads/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/components/forcedReminder/forcedReminder.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { colorMap, getHex } from '@/utils';\nexport default {\n  name: 'set-forcedReminder',\n  data: function data() {\n    return {\n      // 是否可以提交\n      dialogConfirmLoading: false,\n      // 是否禁止提交\n      dialogConfirmDisabled: false,\n      // 是否不在显示弹框\n      isNotReConfirm: false,\n      // 时间\n      time: null,\n      timer: null // dataInfo: {\n      //   symbol: 'BTCUSDTX',\n      //   orderType: '限价单',\n      //   sideText: '买入做多',\n      //   sideClass: 'u-4-bg',\n      //   isOpenAndIsMarket: true,\n      //   price: '10000 USDTX',\n      //   vol: '12333 ETHX',\n      //   marginCoin: 'BTCX',\n      //   currentCategory: 3,\n      // },\n\n    };\n  },\n  props: {\n    isShow: {\n      default: false,\n      type: Boolean\n    },\n    close: {\n      default: function _default() {},\n      type: Function\n    },\n    dataInfo: {\n      default: function _default() {\n        return {};\n      },\n      type: Object\n    }\n  },\n  computed: {\n    lanText: function lanText() {\n      return {\n        text1: this.$t('futures.reminder.text1'),\n        // 触发价格\n        text2: this.$t('futures.reminder.text2'),\n        // 价格\n        text3: this.$t('futures.reminder.text3'),\n        // 下次不要提示，您可在【交易偏好设置】中重新设置\n        text4: this.$t('futures.reminder.text4'),\n        // 金额\n        text5: this.$t('futures.reminder.text5'),\n        // 数量\n        text6: this.$t('futures.reminder.text6'),\n        // 占用保证金\n        text7: this.$t('futures.reminder.text7'),\n        // 委托保证金\n        text8: this.$t('futures.reminder.text8'),\n        // 限价单\n        text9: this.$t('futures.reminder.text9'),\n        // 市价单\n        text10: this.$t('futures.reminder.text10') // 条件单\n\n      };\n    },\n    // 弹框标题文案\n    titleText: function titleText() {\n      if (this.dataInfo) {\n        return \"\".concat(this.dataInfo.sideText).concat(this.dataInfo.symbol);\n      }\n\n      return null;\n    },\n    // 确认按钮文案\n    confirmText: function confirmText() {\n      return this.dataInfo.sideText;\n    },\n    // 数量 || 金额\n    volPrice: function volPrice() {\n      if (this.dataInfo.isOpenAndIsMarket) {\n        return this.lanText.text4; // '金额';\n      }\n\n      return this.lanText.text5; // '数量';\n    },\n    // 保证金标题\n    marginTitle: function marginTitle() {\n      if (this.dataInfo && this.dataInfo.currentCategory === 3) {\n        return this.lanText.text6; // '占用保证金';\n      }\n\n      return this.lanText.text7; // '委托保证金';\n    },\n    // 订单类型\n    orderType: function orderType() {\n      var text = this.lanText.text8; // '限价单';\n\n      if (this.dataInfo.currentCategory === 2) {\n        text = this.lanText.text9; // '市价单';\n      }\n\n      if (this.dataInfo.currentCategory === 3) {\n        text = this.lanText.text10; // '条件单';\n      }\n\n      return text;\n    }\n  },\n  watch: {\n    dataInfo: function dataInfo(val) {\n      setTimeout(function () {\n        var box = document.getElementsByClassName('toConfirmBtn')[0];\n\n        if (box) {\n          box.style.setProperty('background-color', getHex(colorMap[val.sideClass]), 'important');\n        }\n      });\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      clearInterval(this.timer);\n      this.fnCreatClock();\n      this.timer = setInterval(function () {\n        _this.fnCreatClock();\n      }, 1000);\n    },\n    // 二次确认提交\n    submitConfirm: function submitConfirm() {\n      // this.close();\n      this.$emit('submitOrder', this.isNotReConfirm);\n    },\n    isReConfirmFun: function isReConfirmFun() {\n      this.isNotReConfirm = !this.isNotReConfirm;\n    },\n    fnToDouble: function fnToDouble(num) {\n      // 声明一个返回结果\n      var sResult = '';\n\n      if (num < 10) {\n        // 判断数字小于10则是单数字，需要在前面添加字符串0\n        sResult = \"0\".concat(num);\n      } else {\n        // 数字为10以上转换为字符串\n        sResult = \"\".concat(num);\n      } // 返回格式化后的字符串\n\n\n      return sResult;\n    },\n    fnCreatClock: function fnCreatClock() {\n      var dLocal = new Date();\n      var nYear = dLocal.getFullYear();\n      var nMonth = dLocal.getMonth() + 1;\n      var nDate = dLocal.getDate();\n      var nHours = dLocal.getHours();\n      var nMinutes = dLocal.getMinutes();\n      var nSeconds = dLocal.getSeconds();\n      this.time = \"\".concat(nYear, \"-\").concat(this.fnToDouble(nMonth), \"-\").concat(this.fnToDouble(nDate), \" \").concat(this.fnToDouble(nHours), \":\").concat(this.fnToDouble(nMinutes), \":\").concat(this.fnToDouble(nSeconds));\n    }\n  }\n};",{"version":3,"sources":["/Users/h/Downloads/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/components/forcedReminder/forcedReminder.js"],"names":["colorMap","getHex","name","data","dialogConfirmLoading","dialogConfirmDisabled","isNotReConfirm","time","timer","props","isShow","default","type","Boolean","close","Function","dataInfo","Object","computed","lanText","text1","$t","text2","text3","text4","text5","text6","text7","text8","text9","text10","titleText","sideText","symbol","confirmText","volPrice","isOpenAndIsMarket","marginTitle","currentCategory","orderType","text","watch","val","setTimeout","box","document","getElementsByClassName","style","setProperty","sideClass","methods","init","clearInterval","fnCreatClock","setInterval","submitConfirm","$emit","isReConfirmFun","fnToDouble","num","sResult","dLocal","Date","nYear","getFullYear","nMonth","getMonth","nDate","getDate","nHours","getHours","nMinutes","getMinutes","nSeconds","getSeconds"],"mappings":"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","sourcesContent":["import {\r\n  colorMap,\r\n  getHex,\r\n} from '@/utils';\r\n\r\nexport default {\r\n  name: 'set-forcedReminder',\r\n  data() {\r\n    return {\r\n      // 是否可以提交\r\n      dialogConfirmLoading: false,\r\n      // 是否禁止提交\r\n      dialogConfirmDisabled: false,\r\n      // 是否不在显示弹框\r\n      isNotReConfirm: false,\r\n      // 时间\r\n      time: null,\r\n      timer: null,\r\n      // dataInfo: {\r\n      //   symbol: 'BTCUSDTX',\r\n      //   orderType: '限价单',\r\n      //   sideText: '买入做多',\r\n      //   sideClass: 'u-4-bg',\r\n      //   isOpenAndIsMarket: true,\r\n      //   price: '10000 USDTX',\r\n      //   vol: '12333 ETHX',\r\n      //   marginCoin: 'BTCX',\r\n      //   currentCategory: 3,\r\n      // },\r\n    };\r\n  },\r\n  props: {\r\n    isShow: {\r\n      default: false,\r\n      type: Boolean,\r\n    },\r\n    close: {\r\n      default() {},\r\n      type: Function,\r\n    },\r\n    dataInfo: {\r\n      default() {\r\n        return {};\r\n      },\r\n      type: Object,\r\n    },\r\n  },\r\n  computed: {\r\n    lanText() {\r\n      return {\r\n        text1: this.$t('futures.reminder.text1'), // 触发价格\r\n        text2: this.$t('futures.reminder.text2'), // 价格\r\n        text3: this.$t('futures.reminder.text3'), // 下次不要提示，您可在【交易偏好设置】中重新设置\r\n        text4: this.$t('futures.reminder.text4'), // 金额\r\n        text5: this.$t('futures.reminder.text5'), // 数量\r\n        text6: this.$t('futures.reminder.text6'), // 占用保证金\r\n        text7: this.$t('futures.reminder.text7'), // 委托保证金\r\n        text8: this.$t('futures.reminder.text8'), // 限价单\r\n        text9: this.$t('futures.reminder.text9'), // 市价单\r\n        text10: this.$t('futures.reminder.text10'), // 条件单\r\n      };\r\n    },\r\n    // 弹框标题文案\r\n    titleText() {\r\n      if (this.dataInfo) {\r\n        return `${this.dataInfo.sideText}${this.dataInfo.symbol}`;\r\n      }\r\n      return null;\r\n    },\r\n    // 确认按钮文案\r\n    confirmText() {\r\n      return this.dataInfo.sideText;\r\n    },\r\n    // 数量 || 金额\r\n    volPrice() {\r\n      if (this.dataInfo.isOpenAndIsMarket) {\r\n        return this.lanText.text4; // '金额';\r\n      }\r\n      return this.lanText.text5; // '数量';\r\n    },\r\n    // 保证金标题\r\n    marginTitle() {\r\n      if (this.dataInfo && this.dataInfo.currentCategory === 3) {\r\n        return this.lanText.text6; // '占用保证金';\r\n      }\r\n      return this.lanText.text7; // '委托保证金';\r\n    },\r\n    // 订单类型\r\n    orderType() {\r\n      let text = this.lanText.text8; // '限价单';\r\n      if (this.dataInfo.currentCategory === 2) {\r\n        text = this.lanText.text9; // '市价单';\r\n      }\r\n      if (this.dataInfo.currentCategory === 3) {\r\n        text = this.lanText.text10; // '条件单';\r\n      }\r\n      return text;\r\n    },\r\n  },\r\n  watch: {\r\n    dataInfo(val) {\r\n      setTimeout(() => {\r\n        const box = document.getElementsByClassName('toConfirmBtn')[0];\r\n        if (box) {\r\n          box.style.setProperty('background-color', getHex(colorMap[val.sideClass]), 'important');\r\n        }\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    init() {\r\n      clearInterval(this.timer);\r\n      this.fnCreatClock();\r\n      this.timer = setInterval(() => {\r\n        this.fnCreatClock();\r\n      }, 1000);\r\n    },\r\n    // 二次确认提交\r\n    submitConfirm() {\r\n      // this.close();\r\n      this.$emit('submitOrder', this.isNotReConfirm);\r\n    },\r\n    isReConfirmFun() {\r\n      this.isNotReConfirm = !this.isNotReConfirm;\r\n    },\r\n    fnToDouble(num) {\r\n      // 声明一个返回结果\r\n      let sResult = '';\r\n      if (num < 10) {\r\n        // 判断数字小于10则是单数字，需要在前面添加字符串0\r\n        sResult = `0${num}`;\r\n      } else {\r\n        // 数字为10以上转换为字符串\r\n        sResult = `${num}`;\r\n      }\r\n      // 返回格式化后的字符串\r\n      return sResult;\r\n    },\r\n    fnCreatClock() {\r\n      const dLocal = new Date();\r\n      const nYear = dLocal.getFullYear();\r\n      const nMonth = dLocal.getMonth() + 1;\r\n      const nDate = dLocal.getDate();\r\n      const nHours = dLocal.getHours();\r\n      const nMinutes = dLocal.getMinutes();\r\n      const nSeconds = dLocal.getSeconds();\r\n\r\n      this.time = `${nYear}-${this.fnToDouble(nMonth)}-${this.fnToDouble(nDate)\r\n      } ${this.fnToDouble(nHours)}:${this.fnToDouble(nMinutes)}:${this.fnToDouble(nSeconds)}`;\r\n    },\r\n\r\n  },\r\n};\r\n"]}]}