{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/trade/market/market.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/trade/market/market.js","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { getCoinShowName, myStorage } from '@/utils';\nexport default {\n  name: 'market',\n  data: function data() {\n    return {\n      marketDataList: [],\n      dataList: [],\n      dataList_bar: [],\n      symbolList: [],\n      // 当前选中的市场\n      marketCurrent: myStorage.get('markTitle'),\n      // 获取当前币对\n      symbolCurrent: myStorage.get('sSymbolName'),\n      // 排序\n      sortName: null,\n      sortType: null,\n      // 筛选\n      listfilterVal: null,\n      // 自选币对\n      mySymbolList: myStorage.get('mySymbol') || [],\n      setMyMarketSwitch: true,\n      // 市场横向滚动参数\n      slidePosition: 0,\n      maxPosition: 0,\n      // 是否有主区\n      maincoinFlag: false,\n      // 是否有创新区\n      newcoinFlag: false,\n      // 是否有观察区\n      seecoinFlag: false,\n      // 是否有解封区\n      unsealcoinFlag: false,\n      // 是否有减半区\n      halvecoinFlag: false,\n      // 在自选币对已经取消的\n      cancelStoreSymbol: []\n    };\n  },\n  props: {\n    moduleType: {\n      type: String,\n      default: 'ex'\n    }\n  },\n  computed: {\n    marketClass: function marketClass() {\n      if (this.moduleType === 'lever') {\n        return 'lever-market';\n      }\n\n      return '';\n    },\n    marketList: function marketList() {\n      if (this.$store.state.baseData.market) {\n        if (this.moduleType === 'ex') {\n          return this.$store.state.baseData.market.marketSort;\n        }\n\n        if (this.moduleType === 'lever') {\n          var keysArr = this.$store.state.baseData.market.marketSort;\n          var marketDataObj = this.$store.state.baseData.market.market;\n          var newSort = [];\n\n          if (keysArr && marketDataObj) {\n            keysArr.forEach(function (item) {\n              var syArrkeyArr = Object.keys(marketDataObj[item]);\n\n              if (syArrkeyArr.length) {\n                syArrkeyArr.forEach(function (symbolName) {\n                  if (marketDataObj[item][symbolName].is_open_lever && newSort.indexOf(item) < 0) {\n                    newSort.push(item);\n                  }\n                });\n              }\n            });\n          }\n\n          return newSort;\n        }\n      }\n\n      return [];\n    },\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    optionalSymbolServerOpen: function optionalSymbolServerOpen() {\n      return this.$store.state.baseData.optional_symbol_server_open;\n    },\n    // 全部币种列表\n    coinList: function coinList() {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n\n      return null;\n    }\n  },\n  watch: {\n    marketList: function marketList() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.maxPosition = _this.$refs.marketUl.offsetWidth - _this.$refs.marketBar.offsetWidth;\n      });\n    },\n    // 搜索\n    listfilterVal: function listfilterVal(val) {\n      this.setData();\n\n      if (val) {\n        var reg = new RegExp(val, 'gim');\n        this.dataList = this.dataList_bar.filter(function (item) {\n          if (item.showSymbol) {\n            return item.showSymbol.symbol.match(reg);\n          }\n\n          return item.symbol.symbol.match(reg);\n        });\n      } else {\n        this.dataList = this.dataList_bar;\n      }\n    },\n    isLogin: function isLogin(val) {\n      if (val) {\n        this.mySymbolList = myStorage.get('mySymbol') || [];\n      }\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this2 = this;\n\n      if (this.moduleType === 'lever') {\n        this.marketCurrent = myStorage.get('leverMarkTitle');\n        this.symbolCurrent = myStorage.get('leverSymbolName');\n      }\n\n      this.$bus.$on('extend', function () {\n        _this2.shrinkBlock();\n      });\n      setTimeout(function () {\n        if (_this2.$refs.marketUl && _this2.$refs.marketBar) {\n          _this2.maxPosition = _this2.$refs.marketUl.offsetWidth - _this2.$refs.marketBar.offsetWidth;\n        }\n\n        _this2.$nextTick(function () {\n          var step = _this2.marketList.indexOf(_this2.marketCurrent);\n\n          if (step > 3) {\n            _this2.slideMarket('right', step - 3);\n          }\n        });\n      }, 0);\n      this.$bus.$on('SYMBOL_LIST', function (data) {\n        if (data) {\n          _this2.symbolList = data;\n          _this2.maincoinFlag = false;\n          _this2.newcoinFlag = false;\n          _this2.seecoinFlag = false;\n          _this2.unsealcoinFlag = false;\n          _this2.halvecoinFlag = false;\n          _this2.sortName = null;\n          _this2.sortType = null; // this.listfilterVal = '';\n\n          _this2.setData();\n        }\n      }); // 接收24小时行情数据\n\n      this.$bus.$on('MARKET_DATA', function (data) {\n        _this2.marketDataList = data;\n\n        _this2.setData();\n      });\n    },\n    symbolTitle: function symbolTitle(data) {\n      return [\"\".concat(getCoinShowName(data.symbol, this.coinList), \"/\").concat(getCoinShowName(data.unit, this.coinList))];\n    },\n    countSymbolItemState: function countSymbolItemState(item, v) {\n      var i = item.newcoinFlag === v;\n      var state = v === 0 ? !item.newcoinFlag || i : i;\n      return state;\n    },\n    unsealCountSymbolItemState: function unsealCountSymbolItemState(item) {\n      var symbol = item.symbol.symbol;\n      var state = false;\n\n      if (this.coinList[symbol] && this.coinList[symbol].isOvercharge && this.coinList[symbol].isOvercharge.toString() === '1') {\n        state = true;\n      }\n\n      return state;\n    },\n    setData: function setData() {\n      var _this3 = this;\n\n      var dataList = [];\n      var keyarr = Object.keys(this.symbolList);\n      this.maincoinFlag = false;\n      this.newcoinFlag = false;\n      this.seecoinFlag = false;\n      this.unsealcoinFlag = false;\n      this.halvecoinFlag = false;\n      keyarr.forEach(function (item) {\n        var _this3$symbolList$ite = _this3.symbolList[item],\n            isShow = _this3$symbolList$ite.isShow,\n            newcoinFlag = _this3$symbolList$ite.newcoinFlag;\n\n        if (_this3.marketDataList[item]) {\n          if (isShow || _this3.listfilterVal || _this3.marketCurrent === 'myMarket') {\n            var symbol = _this3.marketDataList[item].symbol.symbol; // 解封区\n\n            if (_this3.coinList[symbol] && _this3.coinList[symbol].isOvercharge && _this3.coinList[symbol].isOvercharge.toString() === '1') {\n              _this3.unsealcoinFlag = true;\n            }\n\n            if (newcoinFlag === 0) {\n              _this3.maincoinFlag = true;\n            }\n\n            if (newcoinFlag === 1) {\n              _this3.newcoinFlag = true;\n            }\n\n            if (newcoinFlag === 2) {\n              _this3.seecoinFlag = true;\n            }\n\n            if (newcoinFlag === 3 && _this3.coinList[symbol] && !_this3.coinList[symbol].isOvercharge) {\n              _this3.halvecoinFlag = true;\n            }\n\n            _this3.marketDataList[item].isShow = isShow;\n            dataList.push(_this3.marketDataList[item]);\n          }\n        }\n      });\n\n      if (this.sortType === 'down') {\n        dataList.sort(function (a, b) {\n          return parseFloat(b[_this3.sortName]) - parseFloat(a[_this3.sortName]);\n        });\n      }\n\n      if (this.sortType === 'up') {\n        dataList.sort(function (a, b) {\n          return parseFloat(a[_this3.sortName]) - parseFloat(b[_this3.sortName]);\n        });\n      }\n\n      if (!this.sortType) {\n        dataList.sort(function (a, b) {\n          return a.sort - b.sort;\n        });\n      }\n\n      if (this.listfilterVal) {\n        var reg = new RegExp(this.listfilterVal, 'gim');\n        this.dataList = this.dataList_bar.filter(function (item) {\n          if (item.showSymbol) {\n            return item.showSymbol.symbol.match(reg);\n          }\n\n          return item.symbol.symbol.match(reg);\n        });\n      } else {\n        this.dataList = dataList;\n      }\n\n      this.dataList_bar = dataList;\n    },\n    shrinkBlock: function shrinkBlock() {\n      var _this4 = this;\n\n      this.$emit('shrinkBlock');\n      this.$bus.$emit('shrinkBlock');\n      this.$nextTick(function () {\n        if (_this4.$refs.marketUl && _this4.$refs.marketBar) {\n          _this4.maxPosition = _this4.$refs.marketUl.offsetWidth - _this4.$refs.marketBar.offsetWidth;\n        }\n      });\n    },\n    serachShrinkBlock: function serachShrinkBlock() {\n      // this.$refs.serachInp.focus();\n      this.$emit('serachShrinkBlock');\n      this.$refs.tradeFind.focusFn();\n    },\n    inputchanges: function inputchanges(v) {\n      this.listfilterVal = v;\n    },\n    // 切换市场\n    switchMarket: function switchMarket(data) {\n      this.cancelStoreSymbol = [];\n      this.marketCurrent = data;\n      this.$bus.$emit('ON_MARKET_SWITCH', data);\n    },\n    // 切换币对\n    switchSymbol: function switchSymbol(data) {\n      // 判断 tradingview 已经初始化完成\n      // if (window.tvWidget) {\n      this.symbolCurrent = data;\n      this.$bus.$emit('ON_SYMBOL_SWITCH', data); // }\n    },\n    // 币对排序\n    sorteEvent: function sorteEvent(key) {\n      var _this5 = this;\n\n      this.$nextTick(function () {\n        if (!_this5.sortName) {\n          _this5.sortName = key;\n          _this5.sortType = 'down';\n\n          _this5.setData();\n        } else if (_this5.sortType === 'down') {\n          _this5.sortName = key;\n          _this5.sortType = 'up';\n\n          _this5.setData();\n        } else if (_this5.sortType === 'up') {\n          _this5.sortName = null;\n          _this5.sortType = null;\n\n          _this5.setData();\n        }\n\n        _this5.dataList_bar = _this5.dataList;\n      });\n    },\n    // 设置 自选币对\n    setMyMarket: function setMyMarket(symbol) {\n      var _this6 = this;\n\n      var url = this.$store.state.url.common.optional_symbol;\n\n      if (this.optionalSymbolServerOpen === 1) {\n        url = this.$store.state.url.common.optional_symbols;\n      } // 防止重复点击\n\n\n      if (!this.setMyMarketSwitch) return;\n      this.setMyMarketSwitch = false;\n\n      if (this.marketCurrent === 'myMarket') {\n        this.cancelStoreSymbol.push(symbol);\n      } else {\n        this.cancelStoreSymbol = [];\n      }\n\n      var mySymbol = myStorage.get('mySymbol') || [];\n      var addOrDelete = true;\n\n      if (mySymbol.length && mySymbol.indexOf(symbol) > -1) {\n        mySymbol = mySymbol.filter(function (item) {\n          return item !== symbol;\n        });\n        addOrDelete = false;\n      } else {\n        mySymbol.push(symbol);\n        addOrDelete = true;\n      }\n\n      if (this.optionalSymbolServerOpen === 1 && this.isLogin) {\n        this.axios({\n          url: url,\n          headers: {},\n          params: {\n            operationType: addOrDelete === true ? '1' : '2',\n            // 0批量添加 1单个添加 2单个删除\n            symbols: symbol\n          },\n          method: 'post'\n        }).then(function (data) {\n          if (data.code === '0') {\n            _this6.setMyMarketSwitch = true;\n            _this6.mySymbolList = mySymbol;\n            myStorage.set('mySymbol', mySymbol);\n          } else {\n            _this6.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      } else {\n        this.setMyMarketSwitch = true;\n        this.mySymbolList = mySymbol;\n        myStorage.set('mySymbol', mySymbol);\n      }\n    },\n    slideMarket: function slideMarket(type) {\n      var step = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var position = parseFloat(this.slidePosition);\n      var width = this.$refs.marketBar.offsetWidth * step / 2;\n\n      if (type === 'left') {\n        position += width;\n\n        if (position > 0) {\n          position = 0;\n        }\n      } else {\n        position -= width;\n\n        if (position < -this.maxPosition) {\n          position = -this.maxPosition;\n        }\n      }\n\n      this.slidePosition = \"\".concat(position, \"px\");\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/trade/market/market.js"],"names":["getCoinShowName","myStorage","name","data","marketDataList","dataList","dataList_bar","symbolList","marketCurrent","get","symbolCurrent","sortName","sortType","listfilterVal","mySymbolList","setMyMarketSwitch","slidePosition","maxPosition","maincoinFlag","newcoinFlag","seecoinFlag","unsealcoinFlag","halvecoinFlag","cancelStoreSymbol","props","moduleType","type","String","default","computed","marketClass","marketList","$store","state","baseData","market","marketSort","keysArr","marketDataObj","newSort","forEach","item","syArrkeyArr","Object","keys","length","symbolName","is_open_lever","indexOf","push","isLogin","optionalSymbolServerOpen","optional_symbol_server_open","coinList","watch","$nextTick","$refs","marketUl","offsetWidth","marketBar","val","setData","reg","RegExp","filter","showSymbol","symbol","match","methods","init","$bus","$on","shrinkBlock","setTimeout","step","slideMarket","symbolTitle","unit","countSymbolItemState","v","i","unsealCountSymbolItemState","isOvercharge","toString","keyarr","isShow","sort","a","b","parseFloat","$emit","serachShrinkBlock","tradeFind","focusFn","inputchanges","switchMarket","switchSymbol","sorteEvent","key","setMyMarket","url","common","optional_symbol","optional_symbols","mySymbol","addOrDelete","axios","headers","params","operationType","symbols","method","then","code","set","text","msg","position","width"],"mappings":"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","sourcesContent":["import { getCoinShowName, myStorage } from '@/utils';\n\nexport default {\n  name: 'market',\n  data() {\n    return {\n      marketDataList: [],\n      dataList: [],\n      dataList_bar: [],\n      symbolList: [],\n      // 当前选中的市场\n      marketCurrent: myStorage.get('markTitle'),\n      // 获取当前币对\n      symbolCurrent: myStorage.get('sSymbolName'),\n      // 排序\n      sortName: null,\n      sortType: null,\n      // 筛选\n      listfilterVal: null,\n      // 自选币对\n      mySymbolList: myStorage.get('mySymbol') || [],\n      setMyMarketSwitch: true,\n      // 市场横向滚动参数\n      slidePosition: 0,\n      maxPosition: 0,\n      // 是否有主区\n      maincoinFlag: false,\n      // 是否有创新区\n      newcoinFlag: false,\n      // 是否有观察区\n      seecoinFlag: false,\n      // 是否有解封区\n      unsealcoinFlag: false,\n      // 是否有减半区\n      halvecoinFlag: false,\n      // 在自选币对已经取消的\n      cancelStoreSymbol: [],\n    };\n  },\n  props: {\n    moduleType: {\n      type: String,\n      default: 'ex',\n    },\n  },\n  computed: {\n    marketClass() {\n      if (this.moduleType === 'lever') {\n        return 'lever-market';\n      }\n      return '';\n    },\n    marketList() {\n      if (this.$store.state.baseData.market) {\n        if (this.moduleType === 'ex') {\n          return this.$store.state.baseData.market.marketSort;\n        }\n        if (this.moduleType === 'lever') {\n          const keysArr = this.$store.state.baseData.market.marketSort;\n          const marketDataObj = this.$store.state.baseData.market.market;\n          const newSort = [];\n          if (keysArr && marketDataObj) {\n            keysArr.forEach((item) => {\n              const syArrkeyArr = Object.keys(marketDataObj[item]);\n              if (syArrkeyArr.length) {\n                syArrkeyArr.forEach((symbolName) => {\n                  if (marketDataObj[item][symbolName].is_open_lever && newSort.indexOf(item) < 0) {\n                    newSort.push(item);\n                  }\n                });\n              }\n            });\n          }\n          return newSort;\n        }\n      }\n      return [];\n    },\n    isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    optionalSymbolServerOpen() {\n      return this.$store.state.baseData.optional_symbol_server_open;\n    },\n    // 全部币种列表\n    coinList() {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n      return null;\n    },\n  },\n  watch: {\n    marketList() {\n      this.$nextTick(() => {\n        this.maxPosition = this.$refs.marketUl.offsetWidth - this.$refs.marketBar.offsetWidth;\n      });\n    },\n    // 搜索\n    listfilterVal(val) {\n      this.setData();\n      if (val) {\n        const reg = new RegExp(val, 'gim');\n        this.dataList = this.dataList_bar.filter((item) => {\n          if (item.showSymbol) {\n            return item.showSymbol.symbol.match(reg);\n          }\n          return item.symbol.symbol.match(reg);\n        });\n      } else {\n        this.dataList = this.dataList_bar;\n      }\n    },\n    isLogin(val) {\n      if (val) {\n        this.mySymbolList = myStorage.get('mySymbol') || [];\n      }\n    },\n  },\n  methods: {\n    init() {\n      if (this.moduleType === 'lever') {\n        this.marketCurrent = myStorage.get('leverMarkTitle');\n        this.symbolCurrent = myStorage.get('leverSymbolName');\n      }\n      this.$bus.$on('extend', () => {\n        this.shrinkBlock();\n      });\n      setTimeout(() => {\n        if (this.$refs.marketUl && this.$refs.marketBar) {\n          this.maxPosition = this.$refs.marketUl.offsetWidth - this.$refs.marketBar.offsetWidth;\n        }\n        this.$nextTick(() => {\n          const step = this.marketList.indexOf(this.marketCurrent);\n          if (step > 3) {\n            this.slideMarket('right', step - 3);\n          }\n        });\n      }, 0);\n      this.$bus.$on('SYMBOL_LIST', (data) => {\n        if (data) {\n          this.symbolList = data;\n          this.maincoinFlag = false;\n          this.newcoinFlag = false;\n          this.seecoinFlag = false;\n          this.unsealcoinFlag = false;\n          this.halvecoinFlag = false;\n          this.sortName = null;\n          this.sortType = null;\n          // this.listfilterVal = '';\n          this.setData();\n        }\n      });\n      // 接收24小时行情数据\n      this.$bus.$on('MARKET_DATA', (data) => {\n        this.marketDataList = data;\n        this.setData();\n      });\n    },\n    symbolTitle(data) {\n      return [`${getCoinShowName(data.symbol, this.coinList)}/${getCoinShowName(data.unit, this.coinList)}`];\n    },\n    countSymbolItemState(item, v) {\n      const i = item.newcoinFlag === v;\n      const state = v === 0 ? !item.newcoinFlag || i : i;\n      return state;\n    },\n    unsealCountSymbolItemState(item) {\n      const { symbol } = item.symbol;\n      let state = false;\n      if (this.coinList[symbol]\n        && this.coinList[symbol].isOvercharge\n        && this.coinList[symbol].isOvercharge.toString() === '1') {\n        state = true;\n      }\n      return state;\n    },\n    setData() {\n      const dataList = [];\n      const keyarr = Object.keys(this.symbolList);\n      this.maincoinFlag = false;\n      this.newcoinFlag = false;\n      this.seecoinFlag = false;\n      this.unsealcoinFlag = false;\n      this.halvecoinFlag = false;\n      keyarr.forEach((item) => {\n        const { isShow, newcoinFlag } = this.symbolList[item];\n\n        if (this.marketDataList[item]) {\n          if (isShow || this.listfilterVal || this.marketCurrent === 'myMarket') {\n            const { symbol } = this.marketDataList[item].symbol;\n            // 解封区\n            if (this.coinList[symbol]\n                && this.coinList[symbol].isOvercharge\n                && this.coinList[symbol].isOvercharge.toString() === '1') {\n              this.unsealcoinFlag = true;\n            }\n            if (newcoinFlag === 0) {\n              this.maincoinFlag = true;\n            }\n            if (newcoinFlag === 1) {\n              this.newcoinFlag = true;\n            }\n            if (newcoinFlag === 2) {\n              this.seecoinFlag = true;\n            }\n            if (newcoinFlag === 3 && this.coinList[symbol]\n              && !this.coinList[symbol].isOvercharge) {\n              this.halvecoinFlag = true;\n            }\n            this.marketDataList[item].isShow = isShow;\n            dataList.push(this.marketDataList[item]);\n          }\n        }\n      });\n      if (this.sortType === 'down') {\n        dataList.sort((a, b) => parseFloat(b[this.sortName]) - parseFloat(a[this.sortName]));\n      }\n      if (this.sortType === 'up') {\n        dataList.sort((a, b) => parseFloat(a[this.sortName]) - parseFloat(b[this.sortName]));\n      }\n      if (!this.sortType) {\n        dataList.sort((a, b) => a.sort - b.sort);\n      }\n      if (this.listfilterVal) {\n        const reg = new RegExp(this.listfilterVal, 'gim');\n        this.dataList = this.dataList_bar.filter((item) => {\n          if (item.showSymbol) {\n            return item.showSymbol.symbol.match(reg);\n          }\n          return item.symbol.symbol.match(reg);\n        });\n      } else {\n        this.dataList = dataList;\n      }\n      this.dataList_bar = dataList;\n    },\n    shrinkBlock() {\n      this.$emit('shrinkBlock');\n      this.$bus.$emit('shrinkBlock');\n      this.$nextTick(() => {\n        if (this.$refs.marketUl && this.$refs.marketBar) {\n          this.maxPosition = this.$refs.marketUl.offsetWidth - this.$refs.marketBar.offsetWidth;\n        }\n      });\n    },\n    serachShrinkBlock() {\n      // this.$refs.serachInp.focus();\n      this.$emit('serachShrinkBlock');\n      this.$refs.tradeFind.focusFn();\n    },\n    inputchanges(v) {\n      this.listfilterVal = v;\n    },\n    // 切换市场\n    switchMarket(data) {\n      this.cancelStoreSymbol = [];\n      this.marketCurrent = data;\n      this.$bus.$emit('ON_MARKET_SWITCH', data);\n    },\n    // 切换币对\n    switchSymbol(data) {\n      // 判断 tradingview 已经初始化完成\n      // if (window.tvWidget) {\n      this.symbolCurrent = data;\n      this.$bus.$emit('ON_SYMBOL_SWITCH', data);\n      // }\n    },\n    // 币对排序\n    sorteEvent(key) {\n      this.$nextTick(() => {\n        if (!this.sortName) {\n          this.sortName = key;\n          this.sortType = 'down';\n          this.setData();\n        } else if (this.sortType === 'down') {\n          this.sortName = key;\n          this.sortType = 'up';\n          this.setData();\n        } else if (this.sortType === 'up') {\n          this.sortName = null;\n          this.sortType = null;\n          this.setData();\n        }\n        this.dataList_bar = this.dataList;\n      });\n    },\n    // 设置 自选币对\n    setMyMarket(symbol) {\n      let url = this.$store.state.url.common.optional_symbol;\n      if (this.optionalSymbolServerOpen === 1) {\n        url = this.$store.state.url.common.optional_symbols;\n      }\n      // 防止重复点击\n      if (!this.setMyMarketSwitch) return;\n      this.setMyMarketSwitch = false;\n\n      if (this.marketCurrent === 'myMarket') {\n        this.cancelStoreSymbol.push(symbol);\n      } else {\n        this.cancelStoreSymbol = [];\n      }\n      let mySymbol = myStorage.get('mySymbol') || [];\n      let addOrDelete = true;\n      if (mySymbol.length && mySymbol.indexOf(symbol) > -1) {\n        mySymbol = mySymbol.filter((item) => item !== symbol);\n        addOrDelete = false;\n      } else {\n        mySymbol.push(symbol);\n        addOrDelete = true;\n      }\n      if (this.optionalSymbolServerOpen === 1 && this.isLogin) {\n        this.axios({\n          url,\n          headers: {},\n          params: {\n            operationType: addOrDelete === true ? '1' : '2', // 0批量添加 1单个添加 2单个删除\n            symbols: symbol,\n          },\n          method: 'post',\n        }).then((data) => {\n          if (data.code === '0') {\n            this.setMyMarketSwitch = true;\n            this.mySymbolList = mySymbol;\n            myStorage.set('mySymbol', mySymbol);\n          } else {\n            this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n          }\n        });\n      } else {\n        this.setMyMarketSwitch = true;\n        this.mySymbolList = mySymbol;\n        myStorage.set('mySymbol', mySymbol);\n      }\n    },\n    slideMarket(type, step = 1) {\n      let position = parseFloat(this.slidePosition);\n      const width = (this.$refs.marketBar.offsetWidth * step) / 2;\n      if (type === 'left') {\n        position += width;\n        if (position > 0) {\n          position = 0;\n        }\n      } else {\n        position -= width;\n        if (position < -this.maxPosition) {\n          position = -this.maxPosition;\n        }\n      }\n      this.slidePosition = `${position}px`;\n    },\n  },\n};\n"]}]}