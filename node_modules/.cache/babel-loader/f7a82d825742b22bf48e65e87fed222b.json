{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/singpassLogin/singpassLogin.js","dependencies":[{"path":"/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/singpassLogin/singpassLogin.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport { imgMap, setCookie, getScript } from '@/utils';\nexport default {\n  name: 'singPassLogin',\n  data: function data() {\n    return {\n      ko64: imgMap.ko6_4,\n      dialogFlag: false,\n      dialogConfirmLoading: false,\n      dialogConfirmDisabled: false,\n      dialoghaveOption: false,\n      assDialogFlag: false,\n      assDialogConfirmLoading: false,\n      assDialogConfirmDisabled: false,\n      isShowRefresh: false,\n      sTime: 0,\n      setInterval: null,\n      clientId: 'ECXX',\n      clientCodeRequestUrl: null,\n      redirectUri: null\n    };\n  },\n  props: {\n    isShow: {\n      default: true,\n      type: Boolean\n    }\n  },\n  watch: {\n    // isShow() {\n    //   // this.dialogFlag = val;\n    //   // if (val) {\n    //   //   this.initSingPass();\n    //   // }\n    // },\n    thirdPartyLoginData: function thirdPartyLoginData(data) {\n      if (data !== null) {\n        if (data.text === 'success') {\n          this.dialogFlag = true;\n          this.clientId = data.data.client_id;\n          this.clientCodeRequestUrl = data.data.client_code_request_url;\n          this.redirectUri = data.data.redirect_uri;\n          this.initSingPass();\n        }\n      }\n    }\n  },\n  computed: {\n    titleText: function titleText() {\n      return this.$t('singPassLogin.mainText2'); // 'SingPass第三方登录';\n    },\n    singPassCode: function singPassCode() {\n      return this.$route.query.code;\n    },\n    singpassState: function singpassState() {\n      return this.$route.query.state;\n    },\n    singpassSource: function singpassSource() {\n      return this.$route.query.source;\n    },\n    // 获取二维码的信息\n    thirdPartyLoginData: function thirdPartyLoginData() {\n      return this.$store.state.baseData.thirdPartyLoginData;\n    },\n    // 当前域名\n    domainName: function domainName() {\n      return window.location.origin;\n    }\n  },\n  methods: {\n    init: function init() {\n      getScript('../../static/js/jquery-3.3.1.min.js').then(function () {\n        getScript('https://saml.singpass.gov.sg/spcpextrest/resources/js/spcp-pvt-qr-v1.0.0.js').then(function () {});\n      });\n\n      if (this.singPassCode && this.singpassState && !this.singpassSource) {\n        this.singPassRelation();\n      }\n    },\n    // 查询 授权用户与平台用户是都关联\n    singPassRelation: function singPassRelation() {\n      var _this = this;\n\n      this.axios({\n        url: 'thirdPartLogin/singPassRelation',\n        method: 'post',\n        header: {},\n        params: {\n          singPassCode: this.singPassCode\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          // 已存在关联 登录成功\n          if (data.data.exitSingPass === 1) {\n            setCookie('token', data.data.token); // 存储cookie\n            // 登录成功\n\n            _this.$bus.$emit('tip', {\n              text: _this.$t('login.loginSuccess'),\n              type: 'success'\n            }); // 获取 userinfo\n\n\n            _this.$store.dispatch('getUserInfo');\n\n            _this.getMySymbol();\n\n            _this.$router.push('/');\n          } else {\n            // 不存在关联\n            _this.singPassCode = data.data.singPassCode;\n            _this.assDialogFlag = true;\n          }\n        } else {\n          _this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      }).catch(function () {});\n    },\n    refreshHandler: function refreshHandler() {\n      window.SPCPQR.refresh();\n      this.isShowRefresh = false;\n      this.setsTime();\n    },\n    initSingPass: function initSingPass() {\n      var _this2 = this;\n\n      this.sTime = 0;\n      this.isShowRefresh = false;\n      setTimeout(function () {\n        window.SPCPQR.init('qr_wrapper', {\n          state: new Date().getTime(),\n          nonce: new Date().getTime(),\n          clientId: _this2.clientId,\n          responseType: 'code',\n          redirectUri: \"\".concat(_this2.redirectUri),\n          scope: 'openid'\n        }, _this2.refreshHandler);\n\n        _this2.setsTime();\n      });\n    },\n    accountLogin: function accountLogin() {\n      var state = new Date().getTime();\n      var nonce = new Date().getTime();\n      var clientId = this.clientId;\n      var responseType = 'code'; // const redirectUri = `${this.domainName}/${this.redirectUri}`;\n      // const redirectUri = 'http://rd3www.chaindown.com/zh_CN/login';\n\n      var scope = 'openid';\n      var url = \"\".concat(this.clientCodeRequestUrl, \"?response_type=\").concat(responseType, \"&scope=\").concat(scope, \"&client_id=\").concat(clientId, \"&nonce=\").concat(nonce, \"&state=\").concat(state, \"&redirect_uri=\").concat(this.redirectUri);\n      window.open(url);\n    },\n    goDow: function goDow() {\n      window.open('https://singpassmobile.sg/');\n    },\n    dialogClose: function dialogClose() {\n      this.dialogFlag = false;\n    },\n    dialogClosetwo: function dialogClosetwo() {\n      this.assDialogFlag = false;\n      this.$router.push('login');\n    },\n    dialogConfirm: function dialogConfirm() {},\n    assDialogConfirm: function assDialogConfirm() {},\n    setsTime: function setsTime() {\n      var _this3 = this;\n\n      clearInterval(this.setInterval);\n      this.sTime = 0;\n      this.setInterval = setInterval(function () {\n        _this3.sTime += 1;\n\n        if (_this3.sTime >= 120) {\n          _this3.isShowRefresh = true;\n          clearInterval(_this3.setInterval);\n        }\n      }, 1000);\n    },\n    singPassLogin: function singPassLogin(val) {\n      this.assDialogFlag = false; // 跳转注册\n\n      if (val === 1) {\n        this.$router.push(\"register?singPassCode=\".concat(this.singPassCode, \"&singPassState=\").concat(this.singpassState));\n      } else {\n        this.$bus.$emit('setLoginMode', 'SingPass');\n      }\n    }\n  }\n};",{"version":3,"sources":["/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/singpassLogin/singpassLogin.js"],"names":["imgMap","setCookie","getScript","name","data","ko64","ko6_4","dialogFlag","dialogConfirmLoading","dialogConfirmDisabled","dialoghaveOption","assDialogFlag","assDialogConfirmLoading","assDialogConfirmDisabled","isShowRefresh","sTime","setInterval","clientId","clientCodeRequestUrl","redirectUri","props","isShow","default","type","Boolean","watch","thirdPartyLoginData","text","client_id","client_code_request_url","redirect_uri","initSingPass","computed","titleText","$t","singPassCode","$route","query","code","singpassState","state","singpassSource","source","$store","baseData","domainName","window","location","origin","methods","init","then","singPassRelation","axios","url","method","header","params","toString","exitSingPass","token","$bus","$emit","dispatch","getMySymbol","$router","push","msg","catch","refreshHandler","SPCPQR","refresh","setsTime","setTimeout","Date","getTime","nonce","responseType","scope","accountLogin","open","goDow","dialogClose","dialogClosetwo","dialogConfirm","assDialogConfirm","clearInterval","singPassLogin","val"],"mappings":";AAAA,SACEA,MADF,EAEEC,SAFF,EAGEC,SAHF,QAIO,SAJP;AAMA,eAAe;AACbC,EAAAA,IAAI,EAAE,eADO;AAEbC,EAAAA,IAFa,kBAEN;AACL,WAAO;AACLC,MAAAA,IAAI,EAAEL,MAAM,CAACM,KADR;AAELC,MAAAA,UAAU,EAAE,KAFP;AAGLC,MAAAA,oBAAoB,EAAE,KAHjB;AAILC,MAAAA,qBAAqB,EAAE,KAJlB;AAKLC,MAAAA,gBAAgB,EAAE,KALb;AAMLC,MAAAA,aAAa,EAAE,KANV;AAOLC,MAAAA,uBAAuB,EAAE,KAPpB;AAQLC,MAAAA,wBAAwB,EAAE,KARrB;AASLC,MAAAA,aAAa,EAAE,KATV;AAULC,MAAAA,KAAK,EAAE,CAVF;AAWLC,MAAAA,WAAW,EAAE,IAXR;AAYLC,MAAAA,QAAQ,EAAE,MAZL;AAaLC,MAAAA,oBAAoB,EAAE,IAbjB;AAcLC,MAAAA,WAAW,EAAE;AAdR,KAAP;AAgBD,GAnBY;AAoBbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,IAAI,EAAEC;AAFA;AADH,GApBM;AA0BbC,EAAAA,KAAK,EAAE;AACL;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,mBAPK,+BAOetB,IAPf,EAOqB;AACxB,UAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,YAAIA,IAAI,CAACuB,IAAL,KAAc,SAAlB,EAA6B;AAC3B,eAAKpB,UAAL,GAAkB,IAAlB;AACA,eAAKU,QAAL,GAAgBb,IAAI,CAACA,IAAL,CAAUwB,SAA1B;AACA,eAAKV,oBAAL,GAA4Bd,IAAI,CAACA,IAAL,CAAUyB,uBAAtC;AACA,eAAKV,WAAL,GAAmBf,IAAI,CAACA,IAAL,CAAU0B,YAA7B;AACA,eAAKC,YAAL;AACD;AACF;AACF;AAjBI,GA1BM;AA6CbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SADQ,uBACI;AACV,aAAO,KAAKC,EAAL,CAAQ,yBAAR,CAAP,CADU,CACiC;AAC5C,KAHO;AAIRC,IAAAA,YAJQ,0BAIO;AACb,aAAO,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,IAAzB;AACD,KANO;AAORC,IAAAA,aAPQ,2BAOQ;AACd,aAAO,KAAKH,MAAL,CAAYC,KAAZ,CAAkBG,KAAzB;AACD,KATO;AAURC,IAAAA,cAVQ,4BAUS;AACf,aAAO,KAAKL,MAAL,CAAYC,KAAZ,CAAkBK,MAAzB;AACD,KAZO;AAaR;AACAhB,IAAAA,mBAdQ,iCAcc;AACpB,aAAO,KAAKiB,MAAL,CAAYH,KAAZ,CAAkBI,QAAlB,CAA2BlB,mBAAlC;AACD,KAhBO;AAiBR;AACAmB,IAAAA,UAlBQ,wBAkBK;AACX,aAAOC,MAAM,CAACC,QAAP,CAAgBC,MAAvB;AACD;AApBO,GA7CG;AAmEbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IADO,kBACA;AACLhD,MAAAA,SAAS,CAAC,qCAAD,CAAT,CAAiDiD,IAAjD,CAAsD,YAAM;AAC1DjD,QAAAA,SAAS,CAAC,6EAAD,CAAT,CAAyFiD,IAAzF,CAA8F,YAAM,CAEnG,CAFD;AAGD,OAJD;;AAKA,UAAI,KAAKhB,YAAL,IAAqB,KAAKI,aAA1B,IAA2C,CAAC,KAAKE,cAArD,EAAqE;AACnE,aAAKW,gBAAL;AACD;AACF,KAVM;AAWP;AACAA,IAAAA,gBAZO,8BAYY;AAAA;;AACjB,WAAKC,KAAL,CAAW;AACTC,QAAAA,GAAG,EAAE,iCADI;AAETC,QAAAA,MAAM,EAAE,MAFC;AAGTC,QAAAA,MAAM,EAAE,EAHC;AAITC,QAAAA,MAAM,EAAE;AACNtB,UAAAA,YAAY,EAAE,KAAKA;AADb;AAJC,OAAX,EAOGgB,IAPH,CAOQ,UAAC/C,IAAD,EAAU;AAChB,YAAIA,IAAI,CAACkC,IAAL,CAAUoB,QAAV,OAAyB,GAA7B,EAAkC;AAChC;AACA,cAAItD,IAAI,CAACA,IAAL,CAAUuD,YAAV,KAA2B,CAA/B,EAAkC;AAChC1D,YAAAA,SAAS,CAAC,OAAD,EAAUG,IAAI,CAACA,IAAL,CAAUwD,KAApB,CAAT,CADgC,CACK;AACrC;;AACA,YAAA,KAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEnC,cAAAA,IAAI,EAAE,KAAI,CAACO,EAAL,CAAQ,oBAAR,CAAR;AAAuCX,cAAAA,IAAI,EAAE;AAA7C,aAAvB,EAHgC,CAIhC;;;AACA,YAAA,KAAI,CAACoB,MAAL,CAAYoB,QAAZ,CAAqB,aAArB;;AACA,YAAA,KAAI,CAACC,WAAL;;AACA,YAAA,KAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB,GAAlB;AACD,WARD,MAQO;AACL;AACA,YAAA,KAAI,CAAC/B,YAAL,GAAoB/B,IAAI,CAACA,IAAL,CAAU+B,YAA9B;AACA,YAAA,KAAI,CAACxB,aAAL,GAAqB,IAArB;AACD;AACF,SAfD,MAeO;AACL,UAAA,KAAI,CAACkD,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEnC,YAAAA,IAAI,EAAEvB,IAAI,CAAC+D,GAAb;AAAkB5C,YAAAA,IAAI,EAAE;AAAxB,WAAvB;AACD;AACF,OA1BD,EA0BG6C,KA1BH,CA0BS,YAAM,CACd,CA3BD;AA4BD,KAzCM;AA0CPC,IAAAA,cA1CO,4BA0CU;AACfvB,MAAAA,MAAM,CAACwB,MAAP,CAAcC,OAAd;AACA,WAAKzD,aAAL,GAAqB,KAArB;AACA,WAAK0D,QAAL;AACD,KA9CM;AA+CPzC,IAAAA,YA/CO,0BA+CQ;AAAA;;AACb,WAAKhB,KAAL,GAAa,CAAb;AACA,WAAKD,aAAL,GAAqB,KAArB;AACA2D,MAAAA,UAAU,CAAC,YAAM;AACf3B,QAAAA,MAAM,CAACwB,MAAP,CAAcpB,IAAd,CAAmB,YAAnB,EAAiC;AAC/BV,UAAAA,KAAK,EAAE,IAAIkC,IAAJ,GAAWC,OAAX,EADwB;AAE/BC,UAAAA,KAAK,EAAE,IAAIF,IAAJ,GAAWC,OAAX,EAFwB;AAG/B1D,UAAAA,QAAQ,EAAE,MAAI,CAACA,QAHgB;AAI/B4D,UAAAA,YAAY,EAAE,MAJiB;AAK/B1D,UAAAA,WAAW,YAAK,MAAI,CAACA,WAAV,CALoB;AAM/B2D,UAAAA,KAAK,EAAE;AANwB,SAAjC,EAOG,MAAI,CAACT,cAPR;;AAQA,QAAA,MAAI,CAACG,QAAL;AACD,OAVS,CAAV;AAWD,KA7DM;AA8DPO,IAAAA,YA9DO,0BA8DQ;AACb,UAAMvC,KAAK,GAAG,IAAIkC,IAAJ,GAAWC,OAAX,EAAd;AACA,UAAMC,KAAK,GAAG,IAAIF,IAAJ,GAAWC,OAAX,EAAd;AACA,UAAQ1D,QAAR,GAAqB,IAArB,CAAQA,QAAR;AACA,UAAM4D,YAAY,GAAG,MAArB,CAJa,CAKb;AACA;;AACA,UAAMC,KAAK,GAAG,QAAd;AACA,UAAMxB,GAAG,aAAM,KAAKpC,oBAAX,4BAAiD2D,YAAjD,oBAAuEC,KAAvE,wBAA0F7D,QAA1F,oBAA4G2D,KAA5G,oBAA2HpC,KAA3H,2BAAiJ,KAAKrB,WAAtJ,CAAT;AACA2B,MAAAA,MAAM,CAACkC,IAAP,CAAY1B,GAAZ;AACD,KAxEM;AAyEP2B,IAAAA,KAzEO,mBAyEC;AACNnC,MAAAA,MAAM,CAACkC,IAAP,CAAY,4BAAZ;AACD,KA3EM;AA4EPE,IAAAA,WA5EO,yBA4EO;AACZ,WAAK3E,UAAL,GAAkB,KAAlB;AACD,KA9EM;AA+EP4E,IAAAA,cA/EO,4BA+EU;AACf,WAAKxE,aAAL,GAAqB,KAArB;AACA,WAAKsD,OAAL,CAAaC,IAAb,CAAkB,OAAlB;AACD,KAlFM;AAmFPkB,IAAAA,aAnFO,2BAmFS,CACf,CApFM;AAqFPC,IAAAA,gBArFO,8BAqFY,CAClB,CAtFM;AAuFPb,IAAAA,QAvFO,sBAuFI;AAAA;;AACTc,MAAAA,aAAa,CAAC,KAAKtE,WAAN,CAAb;AACA,WAAKD,KAAL,GAAa,CAAb;AACA,WAAKC,WAAL,GAAmBA,WAAW,CAAC,YAAM;AACnC,QAAA,MAAI,CAACD,KAAL,IAAc,CAAd;;AACA,YAAI,MAAI,CAACA,KAAL,IAAc,GAAlB,EAAuB;AACrB,UAAA,MAAI,CAACD,aAAL,GAAqB,IAArB;AACAwE,UAAAA,aAAa,CAAC,MAAI,CAACtE,WAAN,CAAb;AACD;AACF,OAN6B,EAM3B,IAN2B,CAA9B;AAOD,KAjGM;AAkGPuE,IAAAA,aAlGO,yBAkGOC,GAlGP,EAkGY;AACjB,WAAK7E,aAAL,GAAqB,KAArB,CADiB,CAEjB;;AACA,UAAI6E,GAAG,KAAK,CAAZ,EAAe;AACb,aAAKvB,OAAL,CAAaC,IAAb,iCAA2C,KAAK/B,YAAhD,4BAA8E,KAAKI,aAAnF;AACD,OAFD,MAEO;AACL,aAAKsB,IAAL,CAAUC,KAAV,CAAgB,cAAhB,EAAgC,UAAhC;AACD;AACF;AA1GM;AAnEI,CAAf","sourcesContent":["import {\r\n  imgMap,\r\n  setCookie,\r\n  getScript,\r\n} from '@/utils';\r\n\r\nexport default {\r\n  name: 'singPassLogin',\r\n  data() {\r\n    return {\r\n      ko64: imgMap.ko6_4,\r\n      dialogFlag: false,\r\n      dialogConfirmLoading: false,\r\n      dialogConfirmDisabled: false,\r\n      dialoghaveOption: false,\r\n      assDialogFlag: false,\r\n      assDialogConfirmLoading: false,\r\n      assDialogConfirmDisabled: false,\r\n      isShowRefresh: false,\r\n      sTime: 0,\r\n      setInterval: null,\r\n      clientId: 'ECXX',\r\n      clientCodeRequestUrl: null,\r\n      redirectUri: null,\r\n    };\r\n  },\r\n  props: {\r\n    isShow: {\r\n      default: true,\r\n      type: Boolean,\r\n    },\r\n  },\r\n  watch: {\r\n    // isShow() {\r\n    //   // this.dialogFlag = val;\r\n    //   // if (val) {\r\n    //   //   this.initSingPass();\r\n    //   // }\r\n    // },\r\n    thirdPartyLoginData(data) {\r\n      if (data !== null) {\r\n        if (data.text === 'success') {\r\n          this.dialogFlag = true;\r\n          this.clientId = data.data.client_id;\r\n          this.clientCodeRequestUrl = data.data.client_code_request_url;\r\n          this.redirectUri = data.data.redirect_uri;\r\n          this.initSingPass();\r\n        }\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    titleText() {\r\n      return this.$t('singPassLogin.mainText2'); // 'SingPass第三方登录';\r\n    },\r\n    singPassCode() {\r\n      return this.$route.query.code;\r\n    },\r\n    singpassState() {\r\n      return this.$route.query.state;\r\n    },\r\n    singpassSource() {\r\n      return this.$route.query.source;\r\n    },\r\n    // 获取二维码的信息\r\n    thirdPartyLoginData() {\r\n      return this.$store.state.baseData.thirdPartyLoginData;\r\n    },\r\n    // 当前域名\r\n    domainName() {\r\n      return window.location.origin;\r\n    },\r\n  },\r\n  methods: {\r\n    init() {\r\n      getScript('../../static/js/jquery-3.3.1.min.js').then(() => {\r\n        getScript('https://saml.singpass.gov.sg/spcpextrest/resources/js/spcp-pvt-qr-v1.0.0.js').then(() => {\r\n\r\n        });\r\n      });\r\n      if (this.singPassCode && this.singpassState && !this.singpassSource) {\r\n        this.singPassRelation();\r\n      }\r\n    },\r\n    // 查询 授权用户与平台用户是都关联\r\n    singPassRelation() {\r\n      this.axios({\r\n        url: 'thirdPartLogin/singPassRelation',\r\n        method: 'post',\r\n        header: {},\r\n        params: {\r\n          singPassCode: this.singPassCode,\r\n        },\r\n      }).then((data) => {\r\n        if (data.code.toString() === '0') {\r\n          // 已存在关联 登录成功\r\n          if (data.data.exitSingPass === 1) {\r\n            setCookie('token', data.data.token); // 存储cookie\r\n            // 登录成功\r\n            this.$bus.$emit('tip', { text: this.$t('login.loginSuccess'), type: 'success' });\r\n            // 获取 userinfo\r\n            this.$store.dispatch('getUserInfo');\r\n            this.getMySymbol();\r\n            this.$router.push('/');\r\n          } else {\r\n            // 不存在关联\r\n            this.singPassCode = data.data.singPassCode;\r\n            this.assDialogFlag = true;\r\n          }\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      }).catch(() => {\r\n      });\r\n    },\r\n    refreshHandler() {\r\n      window.SPCPQR.refresh();\r\n      this.isShowRefresh = false;\r\n      this.setsTime();\r\n    },\r\n    initSingPass() {\r\n      this.sTime = 0;\r\n      this.isShowRefresh = false;\r\n      setTimeout(() => {\r\n        window.SPCPQR.init('qr_wrapper', {\r\n          state: new Date().getTime(),\r\n          nonce: new Date().getTime(),\r\n          clientId: this.clientId,\r\n          responseType: 'code',\r\n          redirectUri: `${this.redirectUri}`,\r\n          scope: 'openid',\r\n        }, this.refreshHandler);\r\n        this.setsTime();\r\n      });\r\n    },\r\n    accountLogin() {\r\n      const state = new Date().getTime();\r\n      const nonce = new Date().getTime();\r\n      const { clientId } = this;\r\n      const responseType = 'code';\r\n      // const redirectUri = `${this.domainName}/${this.redirectUri}`;\r\n      // const redirectUri = 'http://rd3www.chaindown.com/zh_CN/login';\r\n      const scope = 'openid';\r\n      const url = `${this.clientCodeRequestUrl}?response_type=${responseType}&scope=${scope}&client_id=${clientId}&nonce=${nonce}&state=${state}&redirect_uri=${this.redirectUri}`;\r\n      window.open(url);\r\n    },\r\n    goDow() {\r\n      window.open('https://singpassmobile.sg/');\r\n    },\r\n    dialogClose() {\r\n      this.dialogFlag = false;\r\n    },\r\n    dialogClosetwo() {\r\n      this.assDialogFlag = false;\r\n      this.$router.push('login');\r\n    },\r\n    dialogConfirm() {\r\n    },\r\n    assDialogConfirm() {\r\n    },\r\n    setsTime() {\r\n      clearInterval(this.setInterval);\r\n      this.sTime = 0;\r\n      this.setInterval = setInterval(() => {\r\n        this.sTime += 1;\r\n        if (this.sTime >= 120) {\r\n          this.isShowRefresh = true;\r\n          clearInterval(this.setInterval);\r\n        }\r\n      }, 1000);\r\n    },\r\n    singPassLogin(val) {\r\n      this.assDialogFlag = false;\r\n      // 跳转注册\r\n      if (val === 1) {\r\n        this.$router.push(`register?singPassCode=${this.singPassCode}&singPassState=${this.singpassState}`);\r\n      } else {\r\n        this.$bus.$emit('setLoginMode', 'SingPass');\r\n      }\r\n    },\r\n  },\r\n};\r\n"]}]}