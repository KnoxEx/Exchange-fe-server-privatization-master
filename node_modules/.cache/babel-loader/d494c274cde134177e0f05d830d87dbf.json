{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/problemCenter/initQuestions/initQuestions.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/problemCenter/initQuestions/initQuestions.js","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nexport default {\n  name: 'initQuestions',\n  data: function data() {\n    return {\n      typeList: [],\n      type: '',\n      leavingText: '',\n      imageType: '2',\n      imgUrl: '',\n      // 上传图片 url\n      imgLoading: false,\n      imageDataStr: '',\n      buttonLoading: false\n    };\n  },\n  computed: {\n    buttonDisabled: function buttonDisabled() {\n      var flag = true;\n\n      if (this.type.length && this.leavingText.length || this.buttonLoading) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    isOpenUploadImg: function isOpenUploadImg() {\n      var data = this.$store.state.baseData.publicInfo;\n      var flag = '0';\n\n      if (data && data.switch && data.switch.is_open_upload_img && data.switch.is_open_upload_img.toString === '1') {\n        flag = '1';\n      }\n\n      return flag;\n    }\n  },\n  methods: {\n    init: function init() {\n      this.initTypeList();\n    },\n    onChangeFileFun: function onChangeFileFun() {\n      this.imgLoading = true;\n    },\n    uploadFinish: function uploadFinish(obj) {\n      if (obj.error) {\n        this.$bus.$emit('tip', {\n          text: obj.error,\n          type: 'error'\n        });\n        return;\n      }\n\n      this.imgUrl = obj.url;\n      this.imgLoading = false;\n      this.imageDataStr = obj.fileName;\n    },\n    // 初始化申诉类型\n    initTypeList: function initTypeList() {\n      var _this = this;\n\n      this.axios({\n        url: 'question/problem_tip_list'\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          var arr = [];\n          data.data.rqTypeList.forEach(function (item) {\n            arr.push({\n              value: item.value,\n              code: item.code.toString()\n            });\n          });\n          _this.typeList = arr; // if(arr.length) {\n          //   this.$nextTick(() => {\n          //     this.type = arr[0].code\n          //   })\n          // }\n        } else {\n          _this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    inputLineChange: function inputLineChange(v) {\n      this.leavingText = v;\n    },\n    changeType: function changeType(v) {\n      this.type = v.code;\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      this.buttonLoading = true;\n      this.axios({\n        url: 'question/create_problem',\n        params: {\n          imageDataStr: this.imageDataStr.length ? this.imageDataStr : undefined,\n          rqDescribe: this.leavingText,\n          rqType: this.type\n        }\n      }).then(function (data) {\n        _this2.buttonLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this2.$router.push('/questions/list');\n        } else {\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/problemCenter/initQuestions/initQuestions.js"],"names":["name","data","typeList","type","leavingText","imageType","imgUrl","imgLoading","imageDataStr","buttonLoading","computed","buttonDisabled","flag","length","isOpenUploadImg","$store","state","baseData","publicInfo","switch","is_open_upload_img","toString","methods","init","initTypeList","onChangeFileFun","uploadFinish","obj","error","$bus","$emit","text","url","fileName","axios","then","code","arr","rqTypeList","forEach","item","push","value","msg","inputLineChange","v","changeType","submit","params","undefined","rqDescribe","rqType","$router"],"mappings":"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","sourcesContent":["export default {\n  name: 'initQuestions',\n  data() {\n    return {\n      typeList: [],\n      type: '',\n      leavingText: '',\n      imageType: '2',\n      imgUrl: '', // 上传图片 url\n      imgLoading: false,\n      imageDataStr: '',\n      buttonLoading: false,\n    };\n  },\n  computed: {\n    buttonDisabled() {\n      let flag = true;\n      if ((this.type.length && this.leavingText.length) || this.buttonLoading) {\n        flag = false;\n      }\n      return flag;\n    },\n    isOpenUploadImg() {\n      const data = this.$store.state.baseData.publicInfo;\n      let flag = '0';\n      if (data && data.switch && data.switch.is_open_upload_img\n         && data.switch.is_open_upload_img.toString === '1') {\n        flag = '1';\n      }\n      return flag;\n    },\n  },\n  methods: {\n    init() {\n      this.initTypeList();\n    },\n    onChangeFileFun() {\n      this.imgLoading = true;\n    },\n    uploadFinish(obj) {\n      if (obj.error) {\n        this.$bus.$emit('tip', { text: obj.error, type: 'error' });\n        return;\n      }\n      this.imgUrl = obj.url;\n      this.imgLoading = false;\n      this.imageDataStr = obj.fileName;\n    },\n    // 初始化申诉类型\n    initTypeList() {\n      this.axios({\n        url: 'question/problem_tip_list',\n      }).then((data) => {\n        if (data.code.toString() === '0') {\n          const arr = [];\n          data.data.rqTypeList.forEach((item) => {\n            arr.push({ value: item.value, code: item.code.toString() });\n          });\n          this.typeList = arr;\n          // if(arr.length) {\n          //   this.$nextTick(() => {\n          //     this.type = arr[0].code\n          //   })\n          // }\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n        }\n      });\n    },\n    inputLineChange(v) {\n      this.leavingText = v;\n    },\n    changeType(v) {\n      this.type = v.code;\n    },\n    submit() {\n      this.buttonLoading = true;\n      this.axios({\n        url: 'question/create_problem',\n        params: {\n          imageDataStr: this.imageDataStr.length ? this.imageDataStr : undefined,\n          rqDescribe: this.leavingText,\n          rqType: this.type,\n        },\n      }).then((data) => {\n        this.buttonLoading = false;\n        if (data.code.toString() === '0') {\n          this.$bus.$emit('tip', { text: data.msg, type: 'success' });\n          this.$router.push('/questions/list');\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n        }\n      });\n    },\n  },\n};\n"]}]}