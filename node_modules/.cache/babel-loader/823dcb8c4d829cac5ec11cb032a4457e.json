{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/vuex/baseData.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/vuex/baseData.js","mtime":1642344731771},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\n\nvar _mutations;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport cloneDeep from 'lodash/cloneDeep';\nimport axios from '@/api/http/axios';\nimport { getComplexType, getCountryList, fixUrl, removeCookie, setCookie, getCookie, myStorage, setDefaultMarket, setLeverDefaultMarket } from '@/utils';\nvar SETISAPP = 'SETISAPP';\nvar GETPUBLICINFO = 'GETPUBLICINFO'; // 公共数据 public_info\n\nvar GETAPPDOWNLOAD = 'GETAPPDOWNLOAD'; // app下载\n\nvar GETMARKET = 'GETMARKET'; // 公共 币对 数据\n\nvar USERINFO = 'USERINFO'; // userinfo数据\n\nvar USERINFOISREADY = 'USERINFOISREADY'; // 修改userInfoIsReady\n\nvar SYMBOLALL = 'SYMBOLALL'; // 全部币对列表对象 {}\n\nvar RATE = 'RATE'; // 设置汇率单位\n\nvar DELETEISLOGIN = 'DELETEISLOGIN'; // 清理登录状态\n\nvar GETFOOTERHEADERINFO = 'GETFOOTERHEADERINFO'; // 自定义footer和header模板\n\nvar MESSAGECOUNT = 'MESSAGECOUNT';\nvar GETOTCPUBLICINFO = 'GETOTCPUBLICINFO';\nvar SETLAN = 'SETLAN';\nvar GETCOPUBLICINFO = 'GETCOPUBLICINFO'; // 合约公共数据 public_info\n\nvar IMGTOKEN = 'IMGTOKEN';\nvar CLIENTUPLOAD = 'CLIENTUPLOAD';\nvar IS_OPEN_BIGDEAL = 'IS_OPEN_BIGDEAL';\nvar SETKRWFLAG = 'SETKRWFLAG';\nvar TEMPLATELAYOUTTYPE = 'TEMPLATELAYOUTTYPE'; // 模板类型 国际版 or 中国版\n\nvar SETLEVERMARKET = 'SETLEVERMARKET';\nvar INDEXHEADERTITLE = 'INDEXHEADERTITLE';\nvar COINSYMBOLINTRODUCE = 'COINSYMBOLINTRODUCE';\nvar SYMBOLPROFILE = 'SYMBOLPROFILE'; // trade页面 币种弹窗开关\n\nvar ENFORCE_GOOGLE_AUTH = 'ENFORCE_GOOGLE_AUTH';\nvar ISMOREPOSITION = 'ISMOREPOSITION'; // 合约分仓开关\n\nvar NEW_COIN_OPEN = 'NEW_COIN_OPEN';\nvar IS_INVITE_OPEN = 'IS_INVITE_OPEN';\nvar IS_DEPOSIT_OPEN = 'IS_DEPOSIT_OPEN';\nvar TRADE_BOARD_IS_FOLD = 'TRADE_BOARD_IS_FOLD';\nvar TRADE_DEPTH_IS_FLASH = 'TRADE_DEPTH_IS_FLASH';\nvar INDEX_LAYER_OPEN = 'INDEX_LAYER_OPEN';\nvar OPTIONAL_SYMBOL_SERVER_OPEN = 'OPTIONAL_SYMBOL_SERVER_OPEN'; // 自选币对开关\n\nvar FIAT_OPEN = 'FIAT_OPEN';\nvar LEVER_OPEN = 'LEVER_OPEN';\nvar HAS_TRADE_LIMIT_OPEN = 'HAS_TRADE_LIMIT_OPEN';\nvar IS_NEWCOIN_PROJECT_ENTRANCE = 'IS_NEWCOIN_PROJECT_ENTRANCE';\nvar LIMIT_COUNTRY_LIST = 'LIMIT_COUNTRY_LIST';\nvar SET_DEFAULT_COUNTRYCODE = 'SET_DEFAULT_COUNTRY_CODE';\nvar SET_INTERFACES_WITCH = 'SET_INTERFACES_WITCH';\nvar SET_COUNTRY_OBJ = 'SET_COUNTRY_OBJ';\nvar SET_IS_OPEN_UPLOAD_IMG = 'SET_IS_OPEN_UPLOAD_IMG';\nvar INCREMENT_CONFIG_STATUS = 'INCREMENT_CONFIG_STATUS';\nvar SWIPERFLAG = 'SWIPERFLAG';\nvar EXCHIEFPROJECTSWITCH = 'EXCHIEFPROJECTSWITCH'; // 首页模板类型\n\nvar SET_EXCHIEF_REDIRECT = 'SET_EXCHIEF_REDIRECT';\nvar HOMEbOARDtYPE = 'HOMEbOARDtYPE';\nvar COIN_TAG_OPEN = 'COIN_TAG_OPEN';\nvar COIN_TAG_LANGS = 'COIN_TAG_LANGS';\nvar AGENT_USER_OPEN = 'AGENT_USER_OPEN'; // 经纪人开关\n\nvar THIRD_PARTY_LOGIN_DATA = 'THIRD_PARTY_LOGIN_DATA'; // 第三方登录请求数据\n\nvar APP_AUTH_OPEN = 'APP_AUTH_OPEN'; // 比交所实名验证开关\n\nvar IS_INNER_TRANSFER_OPEN = 'IS_INNER_TRANSFER_OPEN'; // 站内直转开关\n\nvar KYC_TYPE = 'KYC_TYPE'; // 实名验证类型\n\nvar previewIndexInternationalOpen = null;\nvar IS_HIDEN = fixUrl('is_hiden');\n\nif (fixUrl('homeBoard') && fixUrl('preview')) {\n  // previewIndexInternationalOpen = fixUrl('homeBoard') > 8 ? 1 : fixUrl('homeBoard');\n  previewIndexInternationalOpen = fixUrl('homeBoard');\n} else {}\n\nvar lanMap = {\n  zh_CN: 'cny',\n  en_US: 'usd',\n  el_GR: 'cny',\n  ko_KR: 'krw',\n  mn_MN: 'mnt',\n  ru_RU: 'rub',\n  ja_JP: 'jpy'\n};\nexport default {\n  state: {\n    isApp: false,\n    // 当前承载端是否为app\n    // 公共 public Info 数据\n    publicInfo: null,\n    // 公共 public Info 数据\n    otcPublicInfo: null,\n    // 合约 公共 public Info 数据\n    coPublicInfo: null,\n    // 公共 市场币对数据\n    market: null,\n    // 全部 货币对\n    symbolAll: null,\n    // 公共 用户数据\n    userInfo: null,\n    // 公共 是否登录 userInfo请求成功 且返回code为0 会把该值变为true\n    isLogin: false,\n    // userInfo请求成功 不辨别code 会把该值变为true\n    userInfoIsReady: false,\n    // 汇率计算单位\n    rate: null,\n    // 自选比对\n    worker: null,\n    defaultFiatPrecision: '4',\n    // 自定义四footer 模板\n    footerTemplate: null,\n    // 自定义hander 模板\n    headerTemplate: null,\n    // 未读消息数量\n    messageCount: null,\n    // 未读消息前4条\n    userMessageList: null,\n    // krw首页弹窗flag\n    krwFlag: false,\n    lan: '',\n    app_download: null,\n    storageClean: false,\n    imgToken: {},\n    client_img_upload_open: '0',\n    // 杠杆market\n    leverMarket: {},\n    is_open_bigDeal: 0,\n    // 首页模板\n    // 0: china, 1:international, 2:biki, 3:momo,\n    // 4:japanese, 5:korea, 6:europe, 7:bidesk, 8:bitWind,\n    index_international_open: 0,\n    templateLayoutType: '1',\n    indexHeaderTitle: {},\n    coinSymbolIntroduce: [],\n    // trade页面 币种弹窗数据\n    symbol_profile: 0,\n    // trade页面 币种弹窗开关\n    is_more_position: 0,\n    // 合约分仓开关\n    index_layer_open: 0,\n    is_open_upload_img: 0,\n    newcoinOpen: null,\n    is_deposit_open: 0,\n    trade_depth_is_flash: 0,\n    fiat_open: 0,\n    lever_open: 0,\n    is_newcoin_project_entrance: 0,\n    is_enforce_google_auth: 0,\n    // 是否开启强制谷歌验证模式\n    has_trade_limit_open: 0,\n    // 是否开启买入卖出限制交易\n    limitCountryList: [],\n    // 限制不可注册 不可实名认证的国家\n    phoneCodeGlobal: {},\n    footerTemplateReceived: false,\n    interfaceSwitch: false,\n    defaultCountryCode: '',\n    countryObj: {},\n    defaultCountryCodeReal: '',\n    trade_board_is_fold: 0,\n    // 侧边栏不根据屏幕大小显示\n    incrementConfigStatus: 0,\n    // 新理财相关配置 0.关 1.开\n    swiperFlag: false,\n    exchief_project_switch: 0,\n    // 是否显示全部支付方式\n    exchief_arr_filter: [],\n    coin_tag_open: 0,\n    // 币种标签开关\n    outSideIntertMethodscoinTagLangs: {},\n    // 币种标签名称\n    is_invite_open: 0,\n    agentUserOpen: null,\n    // 经纪人开关\n    thirdPartyLoginData: null,\n    app_auth_open: 0,\n    // 比交所实名验证开关\n    is_inner_transfer_open: 0,\n    // 站内划转开关\n    nameVerifiedType: 10 // 比交所实名验证开关\n\n  },\n  actions: {\n    setIsApp: function setIsApp(_ref, flag) {\n      var commit = _ref.commit;\n      commit('SETISAPP', flag);\n    },\n    getUserInfo: function getUserInfo(_ref2) {\n      var commit = _ref2.commit;\n      axios({\n        url: this.state.url.common.user_info,\n        method: 'post'\n      }).then(function (data) {\n        commit('USERINFOISREADY');\n\n        if (data.code === '0') {\n          // data.data.googleStatus = 0;\n          // data.data.isOpenMobileCheck = 0;\n          commit('USERINFO', data.data);\n        }\n      });\n    },\n    // 获取app下载\n    getAppDownload: function getAppDownload(_ref3) {\n      var commit = _ref3.commit;\n      axios({\n        url: this.state.url.common.app_download,\n        method: 'post'\n      }).then(function (data) {\n        if (!Number(data.code)) {\n          commit('GETAPPDOWNLOAD', data.data);\n        }\n      });\n    },\n    // 获取 public_info 数据\n    getPublicInfo: function getPublicInfo(_ref4) {\n      var _this = this;\n\n      var commit = _ref4.commit,\n          state = _ref4.state,\n          dispatch = _ref4.dispatch;\n\n      // 只需要Market的数据\n      var setMarketInforData = function setMarketInforData(data) {\n        // 前market中的代码\n        if (data.market) {\n          var setSymbolAll = function setSymbolAll(result) {\n            var symbolAll = {};\n            var marketKey = Object.keys(result.market);\n            marketKey.forEach(function (item) {\n              var symbolKey = Object.keys(result.market[item]);\n              symbolKey.forEach(function (symbol) {\n                symbolAll[symbol] = result.market[item][symbol]; // 判断隐藏区开没开启 没有isShow默认都显示\n\n                var isShow = result.market[item][symbol].isShow;\n\n                if (typeof isShow === 'undefined' || getComplexType(isShow) === 'Null') {\n                  symbolAll[symbol].isShow = 1;\n                }\n              });\n            });\n            return symbolAll;\n          };\n\n          var myCoinList = {};\n          var coinList = data.market.coinList;\n          var website = _this.state.website;\n          Object.keys(coinList).forEach(function (item) {\n            if (!coinList[item].fiatPrecision) {\n              myCoinList[item] = _objectSpread(_objectSpread({}, data.data.market.coinList[item]), {}, {\n                fiatPrecision: {\n                  cny: '2',\n                  usd: '2',\n                  krw: '2'\n                }\n              });\n            } else {\n              var coin = cloneDeep(coinList[item]);\n\n              if (website === 'ex' && coin.symbolPrecision) {\n                coin.fiatPrecision = coin.symbolPrecision;\n              }\n\n              myCoinList[item] = _objectSpread({}, coin);\n            }\n          });\n\n          var myMarket = _objectSpread(_objectSpread({}, data.market), {}, {\n            coinList: myCoinList\n          });\n\n          setDefaultMarket(myMarket);\n          commit('GETMARKET', myMarket);\n          commit('RATE', myMarket.rate);\n          commit('SYMBOLALL', setSymbolAll(myMarket));\n        }\n      }; // Market 和 Public 的数据都需要\n\n\n      var setBaseDate = function setBaseDate(data) {\n        var lanList = data.lan.lanList;\n        var lan = {};\n        lan.lanList = [];\n        lan.defLan = data.lan.defLan;\n        lanList.forEach(function (item) {\n          if (item.defaultFiat) {\n            lan.lanList.push(_objectSpread({}, item));\n          } else {\n            lan.lanList.push(_objectSpread(_objectSpread({}, item), {}, {\n              defaultFiat: lanMap[item.id]\n            }));\n          }\n        });\n\n        var myData = _objectSpread(_objectSpread({}, data), {}, {\n          lan: lan\n        });\n\n        if (window.clientUrl) {\n          var urls = {};\n          var urlKeys = Object.keys(window.clientUrl);\n          urlKeys.forEach(function (item) {\n            if (item) {\n              urls[item] = window.clientUrl[item];\n            }\n          });\n          myData.url = _objectSpread(_objectSpread({}, myData.url), urls);\n          myData.market.wsUrl = urls.wsUrl;\n        }\n\n        var leverMarket = {};\n\n        if (data.switch && data.market) {\n          if (data.switch.lever_open && data.switch.lever_open.toString() === '1') {\n            var market = data.market.market;\n            Object.keys(market).forEach(function (item) {\n              var obj = {};\n              Object.keys(market[item]).forEach(function (citem) {\n                if (market[item][citem].is_open_lever) {\n                  obj[citem] = market[item][citem];\n                }\n              });\n\n              if (Object.keys(obj).length) {\n                leverMarket[item] = obj;\n              }\n            });\n          }\n\n          if (data.switch.lever_open && data.switch.lever_open.toString() === '1') {\n            setLeverDefaultMarket(leverMarket);\n          }\n        }\n\n        commit('SETLEVERMARKET', leverMarket);\n        commit('GETPUBLICINFO', myData);\n      }; // 只需要 Public 的数据\n\n\n      var sloveData = function sloveData(data) {\n        // data.switch.fiat_trade_open = '1';\n        commit('GETPUBLICINFO', data); // 临时添加-结束 后续由服务器添加配置\n\n        if (data.sKinData) {\n          myStorage.set('skin', data.sKinData);\n          myStorage.set('skinTyp', data.skinType);\n        } else if (data.skin) {\n          myStorage.set('skin', data.skin);\n        }\n\n        if (data.skin) {\n          var defSkin = getCookie('defSkin');\n          var cusSkin = getCookie('cusSkin');\n\n          if (!cusSkin || cusSkin === 'none') {\n            setCookie('changeSkin', data.skin.changeSkin);\n            setCookie('defSkin', data.skin.default);\n            setCookie('cusSkin', data.skin.default);\n\n            if (defSkin) {\n              if (defSkin !== data.skin.default) {\n                if (!window.name) {\n                  window.location.reload();\n                }\n              }\n            }\n          }\n        } else {\n          myStorage.set('skin', '');\n          myStorage.set('colorMap', '');\n          myStorage.set('imgMap', '');\n        }\n\n        var cookieLan = getCookie('lan');\n        var _data$lan = data.lan,\n            defLan = _data$lan.defLan,\n            lanList = _data$lan.lanList;\n        var language = '';\n\n        if (cookieLan && defLan && lanList) {\n          lanList.forEach(function (item) {\n            if (item.id === cookieLan) {\n              language = cookieLan;\n            }\n          });\n        }\n\n        if (!language) {\n          language = defLan;\n          setCookie('lan', language);\n        }\n\n        commit('SETLAN', language);\n        commit('SWIPERFLAG', true);\n        commit(LIMIT_COUNTRY_LIST, data.limitCountryList || []);\n        commit(ENFORCE_GOOGLE_AUTH, Number(data.switch.is_enforce_google_auth) || 0);\n        commit(LEVER_OPEN, Number(data.switch.lever_open));\n        commit('NEW_COIN_OPEN', data.switch.newcoinOpen);\n        commit('AGENT_USER_OPEN', data.switch.agentUserOpen);\n        commit('IS_DEPOSIT_OPEN', Number(data.switch.is_deposit_open));\n        commit('TRADE_BOARD_IS_FOLD', Number(data.switch.trade_board_is_fold));\n        commit('TRADE_DEPTH_IS_FLASH', data.switch.trade_depth_is_flash);\n        commit(APP_AUTH_OPEN, Number(data.switch.yskyc_is_open) || 0);\n        commit(IS_INNER_TRANSFER_OPEN, Number(data.switch.is_inner_transfer_open) || 0);\n        commit('IS_OPEN_BIGDEAL', data.switch.is_open_bigDeal);\n        commit(INCREMENT_CONFIG_STATUS, Number(data.switch.incrementConfigStatus) || 0);\n\n        if (data.switch.client_img_upload_open) {\n          commit('CLIENTUPLOAD', data.switch.client_img_upload_open);\n        }\n\n        if (data.switch.is_open_upload_img) {\n          commit(SET_IS_OPEN_UPLOAD_IMG, data.switch.is_open_upload_img);\n        }\n\n        if (data.indexHeaderTitle) {\n          commit('INDEXHEADERTITLE', data.indexHeaderTitle);\n        }\n\n        if (data.switch.interfaceSwitch) {\n          commit(SET_INTERFACES_WITCH, Number(data.switch.interfaceSwitch));\n        }\n\n        if (data.switch.index_layer_open) {\n          commit(INDEX_LAYER_OPEN, Number(data.switch.index_layer_open));\n        }\n\n        if (data.switch.is_invite_open) {\n          commit(IS_INVITE_OPEN, Number(data.switch.is_invite_open));\n        }\n\n        if (data.switch.optional_symbol_server_open) {\n          commit(OPTIONAL_SYMBOL_SERVER_OPEN, Number(data.switch.optional_symbol_server_open));\n        }\n\n        if (data.switch.is_newcoin_project_entrance) {\n          commit(IS_NEWCOIN_PROJECT_ENTRANCE, Number(data.switch.is_newcoin_project_entrance));\n        }\n\n        if (data.switch.index_international_open) {\n          commit('TEMPLATELAYOUTTYPE', Number(data.switch.index_international_open));\n        } // 设置首页模板\n\n\n        if (previewIndexInternationalOpen && Number(previewIndexInternationalOpen)) {\n          commit('HOMEbOARDtYPE', Number(previewIndexInternationalOpen));\n        } else if (data.switch.index_temp_type) {\n          commit('HOMEbOARDtYPE', Number(data.switch.index_temp_type));\n        }\n\n        if (data.switch.fiat_open) {\n          commit(FIAT_OPEN, Number(data.switch.fiat_open));\n        }\n\n        if (data.switch.has_trade_limit_open) {\n          commit(HAS_TRADE_LIMIT_OPEN, Number(data.switch.has_trade_limit_open));\n        } // kyc类型\n        // ”00“ face++\n        // ”01“羽山kyc\n        // “02”简版自动\n        // ”10“ 人工\n\n\n        if (data.switch.nameVerifiedType) {\n          commit(KYC_TYPE, data.switch.nameVerifiedType);\n        }\n\n        if (data.msg.default_country_code || data.msg.default_country_code_real) {\n          commit(SET_DEFAULT_COUNTRYCODE, {\n            default_country_code: data.msg.default_country_code,\n            default_country_code_real: data.msg.default_country_code_real ? \"+\".concat(data.msg.default_country_code_real) : ''\n          });\n        } // 如果是exchief商户检查otc/publicinfo接口是否比v4接口快一步加载；如果快则进行数据处理；\n\n\n        if (Number(data.switch.Exchief_project_switch)) {\n          commit(EXCHIEFPROJECTSWITCH, data.switch.Exchief_project_switch);\n\n          if (state.otcPublicInfo && state.otcPublicInfo.payments.length === 3 && state.exchief_arr_filter.length) {\n            var exchiefObj = [];\n            state.exchief_arr_filter.forEach(function (obj) {\n              if (obj.key === 'otc.payment.paypal' || obj.key === 'otc.payment.MTNmobile' || obj.key === 'otc.payment.VodafoneCash' || obj.key === 'otc.payment.AirtelTigo') {\n                exchiefObj.push(obj);\n              }\n            });\n            commit('SET_EXCHIEF_REDIRECT', exchiefObj);\n          }\n        }\n\n        var symbolProfile = Number(data.switch.symbol_profile);\n        commit('SYMBOLPROFILE', symbolProfile);\n\n        if (symbolProfile === 1) {\n          dispatch('getCoinSymbolIntroduce');\n        }\n\n        if (state.storageClean) {\n          if (!window.name) {\n            window.location.reload();\n          }\n        } // 动态添加 js 比如 客服  和 统计的js\n\n\n        var newScript = document.createElement('script');\n        newScript.type = 'text/javascript';\n        newScript.innerHTML = data.msg.config_footer_js;\n        document.getElementsByTagName('head')[0].appendChild(newScript); // 这个是给外部保留一个接口 外部可传入方法\n        // eslint-disable-next-line\n\n        if (_this['_actions'].outSideIntertMethods) {\n          dispatch('outSideIntertMethods', data);\n        }\n\n        var _data$market$coinTagL = data.market.coinTagLangs,\n            coinTagLangs = _data$market$coinTagL === void 0 ? {} : _data$market$coinTagL;\n        var currentLan = getCookie('lan');\n        commit(COIN_TAG_OPEN, Number(data.switch.coin_tag_open) || 0);\n        commit(COIN_TAG_LANGS, coinTagLangs[currentLan] || {});\n      }; // 获取 public-info数据\n\n\n      var getInfo = function getInfo() {\n        return new Promise(function (resolve) {\n          var params = {};\n\n          if (IS_HIDEN) {\n            params.is_hiden = IS_HIDEN;\n          }\n\n          axios({\n            url: _this.state.url.common.public_info,\n            method: 'post',\n            params: params\n          }).then(function (data) {\n            if (data.code === '0') {\n              var a = '11';\n              var localClear = myStorage.get('localClear');\n\n              if (a !== localClear) {\n                myStorage.clear();\n                myStorage.set('localClear', a);\n                state.storageClean = true;\n              }\n\n              sloveData(data.data);\n              setMarketInforData(data.data);\n              setBaseDate(data.data);\n              resolve(data.data);\n            }\n          });\n        });\n      };\n\n      if (!window.publicInfo || IS_HIDEN) {\n        Promise.all([getInfo()]).then(function () {});\n      } else {\n        sloveData(window.publicInfo);\n        setMarketInforData(window.publicInfo);\n        setBaseDate(window.publicInfo);\n      }\n    },\n    // 获取汇率计算单位\n    getRateInfo: function getRateInfo(_ref5) {\n      var _this2 = this;\n\n      var commit = _ref5.commit;\n      clearInterval(this.thisInterval);\n      this.thisInterval = setInterval(function () {\n        axios({\n          url: _this2.state.url.common.rate,\n          method: 'post',\n          headers: {\n            'exchange-auto': '1'\n          }\n        }).then(function (data) {\n          if (data.code === '0') {\n            commit('RATE', data.rate);\n          }\n        });\n      }, 30000);\n    },\n    // 取消登录状态\n    deleteIsLogin: function deleteIsLogin(_ref6) {\n      var commit = _ref6.commit;\n      removeCookie('token'); // 清理cookie\n\n      commit('DELETEISLOGIN');\n    },\n    // 获取自定义你Footer 和 自定义 hander 的模板数据\n    getFooterHeander_info: function getFooterHeander_info(_ref7) {\n      var commit = _ref7.commit,\n          state = _ref7.state;\n      axios({\n        url: this.state.url.common.footerAndHeader,\n        method: 'post'\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          commit('GETFOOTERHEADERINFO', data.data);\n        }\n\n        state.footerTemplateReceived = true;\n      });\n    },\n    getMessage_count: function getMessage_count(_ref8) {\n      var commit = _ref8.commit;\n      axios({\n        url: this.state.url.mesage.message_count,\n        headers: {\n          'exchange-auto': '1'\n        },\n        method: 'post'\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          commit('MESSAGECOUNT', data.data);\n        }\n      });\n    },\n    // 获取 otcpublic_info 数据\n    getOtcPublicInfo: function getOtcPublicInfo(_ref9) {\n      var commit = _ref9.commit,\n          state = _ref9.state;\n      axios({\n        url: 'otc/public_info',\n        method: 'post',\n        hostType: 'otc'\n      }).then(function (data) {\n        if (Number(data.code) === 0) {\n          var paymentsObj = [];\n          var ExchiefObj = [];\n          var paymentsArr = data.data.payments;\n          paymentsArr.forEach(function (obj) {\n            if (obj.key === 'otc.payment.alipay' || obj.key === 'otc.payment.wxpay' || obj.key === 'otc.payment.domestic.bank.transfer') {\n              paymentsObj.push(obj);\n              ExchiefObj.push(obj);\n            }\n\n            if (obj.key === 'otc.payment.paypal' || obj.key === 'otc.payment.MTNmobile' || obj.key === 'otc.payment.VodafoneCash' || obj.key === 'otc.payment.AirtelTigo') {\n              ExchiefObj.push(obj);\n            }\n          });\n\n          var payments = _objectSpread(_objectSpread({}, data.data), {}, {\n            payments: !Number(state.exchief_project_switch) ? paymentsObj : ExchiefObj\n          });\n\n          commit('GETOTCPUBLICINFO', {\n            payments: payments,\n            paymentsArr: paymentsArr\n          });\n        }\n      });\n    },\n    getImgToken: function getImgToken(_ref10, imageType) {\n      var commit = _ref10.commit;\n      axios({\n        method: 'post',\n        url: this.state.url.common.get_image_token,\n        hostType: 'ex',\n        params: {\n          operate_type: imageType\n        }\n      }).then(function (result) {\n        if (!Number(result.code)) {\n          var data = {};\n          data[imageType] = result.data;\n          commit('IMGTOKEN', data);\n        }\n      });\n    },\n    setKrwFlag: function setKrwFlag(_ref11) {\n      var commit = _ref11.commit;\n      commit('SETKRWFLAG');\n    },\n    setPhoneCodeGlobal: function setPhoneCodeGlobal(_ref12, phoneCode) {\n      var commit = _ref12.commit;\n      commit(SET_COUNTRY_OBJ, getCountryList(phoneCode));\n    },\n    getCoinSymbolIntroduce: function getCoinSymbolIntroduce(_ref13) {\n      var commit = _ref13.commit;\n      axios({\n        method: 'post',\n        url: 'common/coinSymbol_introduce',\n        hostType: 'ex',\n        params: {}\n      }).then(function (result) {\n        if (!Number(result.code)) {\n          commit('COINSYMBOLINTRODUCE', result.data);\n        }\n      });\n    },\n    thirdPartyLoginData: function thirdPartyLoginData(_ref14, param) {\n      var commit = _ref14.commit;\n      axios({\n        url: param.url,\n        method: 'post',\n        params: param.data\n      }).then(function (data) {\n        if (data.code === '0') {\n          var Info = {\n            msg: data.msg,\n            text: 'success',\n            data: data.data\n          };\n          commit('THIRD_PARTY_LOGIN_DATA', Info);\n        } else {\n          var _Info = {\n            code: data.code,\n            msg: data.msg,\n            text: 'error'\n          };\n          commit('THIRD_PARTY_LOGIN_DATA', _Info);\n        }\n      });\n    }\n  },\n  mutations: (_mutations = {}, _defineProperty(_mutations, COIN_TAG_OPEN, function (state, result) {\n    state.coin_tag_open = result;\n  }), _defineProperty(_mutations, COIN_TAG_LANGS, function (state, result) {\n    state.coinTagLangs = result;\n  }), _defineProperty(_mutations, IS_INVITE_OPEN, function (state, result) {\n    state.is_invite_open = result;\n  }), _defineProperty(_mutations, SETISAPP, function (state, flag) {\n    state.isApp = flag;\n  }), _defineProperty(_mutations, INCREMENT_CONFIG_STATUS, function (state, result) {\n    state.incrementConfigStatus = result;\n  }), _defineProperty(_mutations, SET_IS_OPEN_UPLOAD_IMG, function (state, result) {\n    state.is_open_upload_img = result;\n  }), _defineProperty(_mutations, SET_COUNTRY_OBJ, function (state, result) {\n    state.countryObj = result;\n  }), _defineProperty(_mutations, SET_INTERFACES_WITCH, function (state, result) {\n    state.interfaceSwitch = result;\n  }), _defineProperty(_mutations, SET_DEFAULT_COUNTRYCODE, function (state, result) {\n    state.defaultCountryCode = result.default_country_code || '';\n    state.defaultCountryCodeReal = result.default_country_code_real || '';\n  }), _defineProperty(_mutations, LIMIT_COUNTRY_LIST, function (state, result) {\n    state.limitCountryList = result;\n  }), _defineProperty(_mutations, IS_NEWCOIN_PROJECT_ENTRANCE, function (state, result) {\n    state.is_newcoin_project_entrance = result;\n  }), _defineProperty(_mutations, ENFORCE_GOOGLE_AUTH, function (state, result) {\n    state.is_enforce_google_auth = result;\n  }), _defineProperty(_mutations, APP_AUTH_OPEN, function (state, result) {\n    state.app_auth_open = result;\n  }), _defineProperty(_mutations, IS_INNER_TRANSFER_OPEN, function (state, result) {\n    state.is_inner_transfer_open = result;\n  }), _defineProperty(_mutations, LEVER_OPEN, function (state, result) {\n    state.lever_open = result;\n  }), _defineProperty(_mutations, FIAT_OPEN, function (state, result) {\n    state.fiat_open = result;\n  }), _defineProperty(_mutations, HAS_TRADE_LIMIT_OPEN, function (state, result) {\n    state.has_trade_limit_open = result;\n  }), _defineProperty(_mutations, INDEX_LAYER_OPEN, function (state, result) {\n    state.index_layer_open = result;\n  }), _defineProperty(_mutations, OPTIONAL_SYMBOL_SERVER_OPEN, function (state, result) {\n    state.optional_symbol_server_open = result;\n  }), _defineProperty(_mutations, NEW_COIN_OPEN, function (state, result) {\n    state.newcoinOpen = result;\n  }), _defineProperty(_mutations, AGENT_USER_OPEN, function (state, result) {\n    state.agentUserOpen = result;\n  }), _defineProperty(_mutations, IS_DEPOSIT_OPEN, function (state, result) {\n    state.is_deposit_open = result;\n  }), _defineProperty(_mutations, TRADE_BOARD_IS_FOLD, function (state, result) {\n    state.trade_board_is_fold = result;\n  }), _defineProperty(_mutations, TRADE_DEPTH_IS_FLASH, function (state, result) {\n    state.trade_depth_is_flash = result;\n  }), _defineProperty(_mutations, SYMBOLPROFILE, function (state, result) {\n    state.symbol_profile = result;\n  }), _defineProperty(_mutations, COINSYMBOLINTRODUCE, function (state, result) {\n    state.coinSymbolIntroduce = result;\n  }), _defineProperty(_mutations, INDEXHEADERTITLE, function (state, result) {\n    state.indexHeaderTitle = result;\n  }), _defineProperty(_mutations, SETLEVERMARKET, function (state, result) {\n    state.leverMarket = result;\n  }), _defineProperty(_mutations, IS_OPEN_BIGDEAL, function (state, result) {\n    var isOpenBigdeal = false;\n\n    if (typeof result === 'undefined') {\n      isOpenBigdeal = true;\n    } else {\n      isOpenBigdeal = result;\n    }\n\n    state.is_open_bigDeal = isOpenBigdeal;\n  }), _defineProperty(_mutations, ISMOREPOSITION, function (state, result) {\n    state.is_more_position = result;\n  }), _defineProperty(_mutations, SETKRWFLAG, function (state) {\n    state.krwFlag = false;\n  }), _defineProperty(_mutations, CLIENTUPLOAD, function (state, result) {\n    state.client_img_upload_open = result;\n  }), _defineProperty(_mutations, IMGTOKEN, function (state, result) {\n    state.imgToken = _objectSpread(_objectSpread({}, state.imgToken), result);\n  }), _defineProperty(_mutations, GETAPPDOWNLOAD, function (state, result) {\n    state.app_download = result;\n  }), _defineProperty(_mutations, GETPUBLICINFO, function (state, result) {\n    state.publicInfo = result; // state.publicInfo.url.otcUrl = '';\n  }), _defineProperty(_mutations, GETMARKET, function (state, result) {\n    // result.coinList.BTC.showName = 'BTC123';\n    state.market = result;\n  }), _defineProperty(_mutations, SYMBOLALL, function (state, result) {\n    state.symbolAll = result;\n  }), _defineProperty(_mutations, USERINFO, function (state, result) {\n    state.userInfo = result;\n    state.isLogin = true;\n  }), _defineProperty(_mutations, USERINFOISREADY, function (state) {\n    state.userInfoIsReady = true;\n  }), _defineProperty(_mutations, RATE, function (state, result) {\n    state.rate = result;\n  }), _defineProperty(_mutations, DELETEISLOGIN, function (state) {\n    state.isLogin = false;\n  }), _defineProperty(_mutations, GETFOOTERHEADERINFO, function (state, data) {\n    if (data.footer) {\n      state.footerTemplate = data.footer;\n    }\n\n    if (data.header) {\n      state.headerTemplate = data.header;\n    }\n  }), _defineProperty(_mutations, MESSAGECOUNT, function (state, data) {\n    state.messageCount = data.noReadMsgCount;\n    state.userMessageList = data.userMessageList;\n  }), _defineProperty(_mutations, GETOTCPUBLICINFO, function (state, result) {\n    state.otcPublicInfo = result.payments;\n    state.exchief_arr_filter = result.paymentsArr;\n  }), _defineProperty(_mutations, GETCOPUBLICINFO, function (state, result) {\n    state.coPublicInfo = result;\n  }), _defineProperty(_mutations, SETLAN, function (state, result) {\n    state.lan = result;\n  }), _defineProperty(_mutations, TEMPLATELAYOUTTYPE, function (state, result) {\n    state.index_international_open = result;\n    state.templateLayoutType = \"\".concat(result + 1); // state.templateLayoutType = '2';\n  }), _defineProperty(_mutations, HOMEbOARDtYPE, function (state, result) {\n    state.index_international_open = result;\n  }), _defineProperty(_mutations, SWIPERFLAG, function (state, result) {\n    state.swiperFlag = result;\n  }), _defineProperty(_mutations, EXCHIEFPROJECTSWITCH, function (state, result) {\n    state.exchief_project_switch = Number(result);\n  }), _defineProperty(_mutations, SET_EXCHIEF_REDIRECT, function (state, result) {\n    if (result.length) {\n      result.forEach(function (item) {\n        state.otcPublicInfo.payments.push(item);\n      });\n    }\n  }), _defineProperty(_mutations, THIRD_PARTY_LOGIN_DATA, function (state, result) {\n    state.thirdPartyLoginData = result;\n  }), _defineProperty(_mutations, KYC_TYPE, function (state, result) {\n    state.nameVerifiedType = result;\n  }), _mutations)\n};",null]}