{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/BindEmail/BindEmail.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/BindEmail/BindEmail.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nexport default {\n  name: 'bindEmail',\n  watch: {\n    userInfo: function userInfo(userinfo) {\n      this.googleCode = !!Number(userinfo.googleStatus);\n      this.smsCode = !!Number(userinfo.isOpenMobileCheck);\n    },\n    sendSmsCode: function sendSmsCode(_sendSmsCode) {\n      if (_sendSmsCode !== null) {\n        if (_sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    sendEmailCode: function sendEmailCode(_sendEmailCode) {\n      if (_sendEmailCode !== null) {\n        if (_sendEmailCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendEmailCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendEmailCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    bindEmail: function bindEmail(_bindEmail) {\n      this.loading = false;\n\n      if (_bindEmail.text === 'success') {\n        this.$bus.$emit('tip', {\n          text: _bindEmail.msg,\n          type: 'success'\n        });\n        this.$store.dispatch('resetType');\n        this.$router.push('/personal/userManagement');\n      } else {\n        this.$bus.$emit('tip', {\n          text: _bindEmail.msg,\n          type: 'error'\n        });\n        this.$store.dispatch('resetType');\n\n        if (_bindEmail.code !== '10009') {\n          this.$bus.$emit('getCode-clear', 'phone');\n        }\n      }\n    }\n  },\n  computed: {\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    sendSmsCode: function sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    sendEmailCode: function sendEmailCode() {\n      return this.$store.state.personal.sendEmailCode;\n    },\n    bindEmail: function bindEmail() {\n      return this.$store.state.personal.bindEmail;\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      checkValue1: '',\n      checkValue2: '',\n      checkValue4: '',\n      checkValue5: '',\n      promptText1: this.$t('personal.label.email'),\n      promptText2: this.$t('personal.label.emailCodeText'),\n      promptText4: this.$t('personal.label.smsCodeText'),\n      promptText5: this.$t('personal.label.googleCodeText'),\n      errorText1: this.$t('personal.prompt.errorEmailText'),\n      errorText2: this.$t('personal.prompt.errorCode'),\n      errorText4: this.$t('personal.prompt.errorCode'),\n      errorText5: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag1: false,\n      checkErrorFlag2: false,\n      checkErrorFlag4: false,\n      checkErrorFlag5: false,\n      disabled: true,\n      oldNew: false,\n      smsCode: false,\n      googleCode: false,\n      autoStart: false,\n      error: false\n    };\n  },\n  methods: {\n    init: function init() {\n      if (this.userInfo) {\n        this.googleCode = !!Number(this.userInfo.googleStatus);\n        this.smsCode = !!Number(this.userInfo.isOpenMobileCheck);\n      }\n    },\n    emailFlag: function emailFlag(val) {\n      return this.$store.state.regExp.email.test(val);\n    },\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick: function getCodeClick(name) {\n      if (name === 'phone') {\n        this.$bus.$emit('getCode-start', 'phone');\n        var info = {\n          operationType: 5\n        };\n        this.$store.dispatch('sendSmsCode', info);\n      } else if (this.emailFlag(this.checkValue1)) {\n        this.$bus.$emit('getCode-start', 'email');\n        var _info = {\n          email: this.checkValue1,\n          operationType: 2\n        };\n        this.$store.dispatch('sendEmailCode', _info);\n      } else {\n        this.checkErrorFlag1 = true;\n        this.errorText1 = this.$t('personal.prompt.errorEmail');\n      }\n    },\n    inputChanges: function inputChanges(value, name) {\n      switch (name) {\n        case 'email':\n          {\n            // email\n            this.checkValue1 = value;\n\n            if (this.emailFlag(value)) {\n              this.checkErrorFlag1 = false;\n            } else {\n              this.errorText1 = this.$t('personal.prompt.errorEmailText');\n              this.checkErrorFlag1 = true;\n            }\n\n            break;\n          }\n\n        case 'emailCode':\n          {\n            this.checkValue2 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag2 = false;\n            } else {\n              this.checkErrorFlag2 = true;\n            }\n\n            break;\n          }\n\n        case 'smsCode':\n          {\n            // 短信验证码\n            this.checkValue4 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag4 = false;\n            } else {\n              this.checkErrorFlag4 = true;\n            }\n\n            break;\n          }\n\n        default:\n          {\n            // google验证码\n            this.checkValue5 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag5 = false;\n            } else {\n              this.checkErrorFlag5 = true;\n            }\n          }\n      }\n\n      if (this.checkValue1 && this.checkValue2 && !this.checkErrorFlag1 && !this.checkErrorFlag2 && !this.checkErrorFlag4 && !this.checkErrorFlag5) {\n        /*\r\n        if (this.smsCode) {\r\n          this.disabled = !this.checkValue4;\r\n        }\r\n        if (this.google) {\r\n          this.disabled = !this.checkValue5;\r\n        }\r\n        */\n        this.disabled = false;\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink: function btnLink() {\n      this.loading = true;\n      var info = {\n        email: this.checkValue1,\n        emailValidCode: this.checkValue2,\n        smsValidCode: this.checkValue4,\n        googleCode: this.checkValue5\n      };\n      this.$store.dispatch('bindEmail', info);\n    }\n  }\n};",null]}