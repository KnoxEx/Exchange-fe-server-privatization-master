{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/personal/BindPhone/BindPhone.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/personal/BindPhone/BindPhone.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport { getCookie } from '@/utils';\nimport countryMinix from \"../../countryList/countryList\";\nexport default {\n  name: 'bindPhone',\n  mixins: [countryMinix],\n  watch: {\n    sendSmsCode: function sendSmsCode(_sendSmsCode) {\n      if (_sendSmsCode !== null) {\n        if (_sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    nowUserRegType: {\n      immediate: true,\n      handler: function handler() {\n        this.dialogSet();\n      }\n    },\n    userInfo: {\n      immediate: true,\n      handler: function handler(userinfo) {\n        if (userinfo) {\n          this.googleCode = !!Number(userinfo.googleStatus);\n          this.googleReady = true;\n          this.dialogSet();\n        }\n      }\n    },\n    mobileBindSave: function mobileBindSave(_mobileBindSave) {\n      if (_mobileBindSave !== null) {\n        this.loading = false;\n\n        if (_mobileBindSave.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _mobileBindSave.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n          this.$router.push('/personal/userManagement');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _mobileBindSave.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n\n          if (_mobileBindSave.code !== '10009') {\n            this.$bus.$emit('getCode-clear', 'phone');\n          }\n        }\n      }\n    }\n  },\n  computed: {\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    sendSmsCode: function sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    mobileBindSave: function mobileBindSave() {\n      return this.$store.state.personal.mobileBindSave;\n    },\n    userRegType: function userRegType() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var str = '{}';\n\n      if (publicInfo) {\n        if (publicInfo.switch && publicInfo.switch.user_reg_type) {\n          str = publicInfo.switch.user_reg_type;\n        }\n      }\n\n      return JSON.parse(str);\n    },\n    nowUserRegType: function nowUserRegType() {\n      var lan = getCookie('lan');\n      var arr = [1, 2];\n\n      if (this.userRegType[lan]) {\n        arr = this.userRegType[lan];\n      }\n\n      return arr;\n    }\n  },\n  data: function data() {\n    return {\n      promptText: this.$t('personal.label.promptText'),\n      errorText: this.$t('personal.label.errorText'),\n      loading: false,\n      checkValue1: '',\n      checkValue2: '',\n      checkValue3: '',\n      promptText1: this.$t('personal.label.phone'),\n      promptText2: this.$t('personal.label.smsCodeText'),\n      promptText3: this.$t('personal.label.googleCodeText'),\n      errorText1: this.$t('personal.prompt.errorPhone'),\n      errorText2: this.$t('personal.prompt.errorCode'),\n      errorText3: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag1: false,\n      checkErrorFlag2: false,\n      checkErrorFlag3: false,\n      disabled: true,\n      googleCode: false,\n      countryErrorFlag: false,\n      dialogFlag: false,\n      googleReady: false\n    };\n  },\n  methods: {\n    dialogSet: function dialogSet() {\n      if (this.nowUserRegType[0] === 2 && this.nowUserRegType.length === 1 && this.googleReady && !this.googleCode) {\n        this.dialogFlag = true;\n      }\n    },\n    dialogClose: function dialogClose() {\n      this.dialogFlag = false;\n    },\n    dialogConfirm: function dialogConfirm() {\n      this.$router.push('/personal/bindGoogle');\n    },\n    init: function init() {\n      if (this.userInfo) {\n        this.googleCode = !!Number(this.userInfo.googleStatus);\n      }\n    },\n    // 手机正则\n    phoneFlag: function phoneFlag(val) {\n      return this.$store.state.regExp.phone.test(val);\n    },\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick: function getCodeClick() {\n      if (this.checkValue1 && !this.checkErrorFlag1) {\n        this.$bus.$emit('getCode-start', 'phone');\n        var info = {\n          countryCode: this.countryKeyCode,\n          mobile: this.checkValue1,\n          operationType: 2\n        };\n        this.$store.dispatch('sendSmsCode', info);\n      } else {\n        this.checkErrorFlag1 = true;\n        this.errorText1 = this.$t('personal.prompt.errorPhoneText');\n      }\n    },\n    inputChanges: function inputChanges(value, name) {\n      switch (name) {\n        case 'phone':\n          {\n            // phone\n            this.checkValue1 = value;\n\n            if (this.phoneFlag(value)) {\n              this.checkErrorFlag1 = false;\n            } else {\n              this.checkErrorFlag1 = true;\n              this.errorText1 = this.$t('personal.prompt.errorPhone');\n            }\n\n            break;\n          }\n\n        case 'phoneCode':\n          {\n            this.checkValue2 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag2 = false;\n            } else {\n              this.checkErrorFlag2 = true;\n            }\n\n            break;\n          }\n\n        default:\n          {\n            // google验证码\n            this.checkValue3 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag3 = false;\n            } else {\n              this.checkErrorFlag3 = true;\n            }\n          }\n      }\n\n      if (this.checkValue1 && this.checkValue2 && !this.checkErrorFlag1 && !this.checkErrorFlag2 && !this.checkErrorFlag3) {\n        if (this.googleCode) {\n          if (this.checkValue3) {\n            this.disabled = !this.checkValue3;\n          }\n        } else {\n          this.disabled = false;\n        }\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink: function btnLink() {\n      this.loading = true;\n      var info = {\n        countryCode: this.countryKeyCode,\n        mobileNumber: this.checkValue1,\n        smsAuthCode: this.checkValue2,\n        googleCode: this.checkValue3\n      };\n      this.$store.dispatch('mobileBindSave', info);\n    }\n  }\n};",null]}