{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/components/stopOrder/stopOrder.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/components/stopOrder/stopOrder.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { imgMap, colorMap, division, cut, nul, fixD, thousandsComma as _thousandsComma } from '@/utils';\nexport default {\n  name: 'stopOrderMode',\n  data: function data() {\n    return {\n      imgMap: imgMap,\n      colorMap: colorMap,\n      marginModel: 1,\n      tableLoading: false,\n      // 是否加载成功\n      dialogConfirmLoading: false,\n      //  表格数据\n      tableDataList: [],\n      // 表单\n      formData_1: {\n        title: '',\n        units: this.priceUnit,\n        fix: 8,\n        errorText: null,\n        value: null\n      },\n      formData_2: {\n        title: '',\n        units: this.priceUnit,\n        fix: 8,\n        errorText: null,\n        value: null\n      },\n      formData_3: {\n        title: '',\n        units: '',\n        fix: 8,\n        errorText: null,\n        value: null\n      },\n      formData_4: {\n        title: '',\n        units: this.priceUnit,\n        fix: 8,\n        errorText: null,\n        value: null\n      },\n      formData_5: {\n        title: '',\n        units: this.priceUnit,\n        fix: 8,\n        errorText: null,\n        value: null\n      },\n      formData_6: {\n        title: '',\n        units: '',\n        fix: 8,\n        errorText: null,\n        value: null\n      },\n      // 止盈是否是市价\n      isMarket_profit: true,\n      // 止损是否是市价\n      isMarket_loss: true,\n      // 止盈数量\n      takeProfitCount: null,\n      // 止损数量\n      stopLossCount: null,\n      // 止盈数量列表\n      takeProfitList: [],\n      // 止损数量列表\n      stopLossList: [],\n      // 防止重复提交\n      sumbitFla: true,\n      // 防止重复取消订单\n      cancelFla: true,\n      // 到期时间\n      expireTime: '14',\n      // 2小时行情数据WS\n      WsData: {}\n    };\n  },\n  props: {\n    isShow: {\n      default: false,\n      type: Boolean\n    },\n    close: {\n      default: function _default() {},\n      type: Function\n    },\n    dataInfo: {\n      default: function _default() {},\n      type: Object\n    }\n  },\n  computed: {\n    lanText: function lanText() {\n      return {\n        titleText: this.$t('futures.stopOrder.titleText'),\n        // '止盈止损',\n        text1: this.$t('futures.stopOrder.text1'),\n        // '止盈',\n        text2: this.$t('futures.stopOrder.text2'),\n        // '撤销所有止盈单',\n        text3: this.$t('futures.stopOrder.text3'),\n        // '止盈价需大于标记价格',\n        text4: this.$t('futures.stopOrder.text4'),\n        // '止盈价需小于标记价格',\n        text5: this.$t('futures.stopOrder.text5'),\n        // '预计盈亏',\n        text6: this.$t('futures.stopOrder.text6'),\n        // '预计收益率',\n        text7: this.$t('futures.stopOrder.text7'),\n        // '止损',\n        text8: this.$t('futures.stopOrder.text8'),\n        // '撤销所有止损单',\n        text9: this.$t('futures.stopOrder.text9'),\n        // '止损价需小于标记价格，大于强平价格',\n        text10: this.$t('futures.stopOrder.text10'),\n        // '止损价需大于标记价格，小于强平价格',\n        text11: this.$t('futures.stopOrder.text11'),\n        // '预计盈亏',\n        text12: this.$t('futures.stopOrder.text12'),\n        // '预计收益率',\n        text13: this.$t('futures.stopOrder.text13'),\n        // '止盈触发价',\n        text14: this.$t('futures.stopOrder.text14'),\n        // '委托价格',\n        text15: this.$t('futures.stopOrder.text15'),\n        // '委托数量',\n        text16: this.$t('futures.stopOrder.text16'),\n        // '张',\n        text17: this.$t('futures.stopOrder.text17'),\n        // '止损触发价',\n        text18: this.$t('futures.stopOrder.text18'),\n        // '委托价格',\n        text19: this.$t('futures.stopOrder.text19'),\n        // '量',\n        text20: this.$t('futures.stopOrder.text20'),\n        // '价格',\n        text21: this.$t('futures.stopOrder.text21'),\n        // '止盈价需大于标记价格！',\n        text22: this.$t('futures.stopOrder.text22'),\n        // '止盈价需小于标记价格！',\n        text23: this.$t('futures.stopOrder.text23'),\n        // '止损价需小于标记价格！',\n        text24: this.$t('futures.stopOrder.text24'),\n        // '止损价需大于强平价格！',\n        text25: this.$t('futures.stopOrder.text25'),\n        // '止损价需大于标记价格！',\n        text26: this.$t('futures.stopOrder.text26'),\n        // '止损价需小于强平价格！',\n        text27: this.$t('futures.stopOrder.text27'),\n        // '价格偏差太大！',\n        text28: this.$t('futures.stopOrder.text28'),\n        // '超出可平数量！',\n        text29: this.$t('futures.stopOrder.text29'),\n        // '有效期',\n        text30: this.$t('futures.stopOrder.text30'),\n        // '市价',\n        columns1: this.$t('futures.stopOrder.columns1'),\n        // '合约',\n        columns2: this.$t('futures.stopOrder.columns2'),\n        // '仓位/可平',\n        columns3: this.$t('futures.stopOrder.columns3'),\n        // '成本价',\n        columns4: this.$t('futures.stopOrder.columns4'),\n        // '标记价格',\n        columns5: this.$t('futures.stopOrder.columns5'),\n        // '强平价格',\n        columns6: this.$t('futures.stopOrder.columns6'),\n        // '止盈触发价',\n        columns7: this.$t('futures.stopOrder.columns7'),\n        // '委托价格',\n        columns8: this.$t('futures.stopOrder.columns8'),\n        // '委托数量',\n        columns9: this.$t('futures.stopOrder.columns9'),\n        // '止损触发价',\n        columns10: this.$t('futures.stopOrder.columns10'),\n        // '最新价格',\n        time1: this.$t('futures.stopOrder.time1'),\n        // '24H',\n        time2: this.$t('futures.stopOrder.time2'),\n        // '7天',\n        time3: this.$t('futures.stopOrder.time3'),\n        // '14天',\n        time4: this.$t('futures.stopOrder.time4') // '30天',\n\n      };\n    },\n    // 用户配置信息\n    userConfig: function userConfig() {\n      return this.$store.state.future.futureUserConfig;\n    },\n    // 数量单位类型Number(1标的货币 2张)\n    coUnitType: function coUnitType() {\n      return this.$store.state.future.coUnitType;\n    },\n    // 合约数量单位\n    volUnit: function volUnit() {\n      return this.$store.state.future.coUnit;\n    },\n    // 表头\n    columns: function columns() {\n      // '量 ' : '张'\n      var coUnittext = this.coUnitType === 1 ? this.lanText.text19 : this.lanText.text16;\n      return [{\n        title: this.lanText.columns1 // '合约',\n\n      }, {\n        title: \"\".concat(this.lanText.columns2, \"(\").concat(coUnittext, \")\") // 仓位/可平\n\n      }, {\n        title: this.lanText.columns3 // '成本价',\n\n      }, {\n        // title: this.lanText.columns4, // '标记价格',\n        title: this.lanText.columns10 // '最新价格',\n\n      }, {\n        title: this.lanText.columns5 // '强平价格',\n\n      }];\n    },\n    // 表头2\n    columns2: function columns2() {\n      return [{\n        title: this.lanText.columns6 //  '止盈触发价',\n\n      }, {\n        title: this.lanText.columns7 //  '委托价格',\n\n      }, {\n        title: this.lanText.columns8 //  '委托数量',\n\n      }];\n    },\n    // 表头3\n    columns3: function columns3() {\n      return [{\n        title: this.lanText.columns9 //  '止损触发价',\n\n      }, {\n        title: this.lanText.columns7 //  '委托价格',\n\n      }, {\n        title: this.lanText.columns8 //  '委托数量',\n\n      }];\n    },\n    // 是否禁止提交\n    dialogConfirmDisabled: function dialogConfirmDisabled() {\n      return !this.formVerify();\n    },\n    // 仓位张数\n    positionVolume: function positionVolume() {\n      // 直接取后台返回的张数\n      return this.dataInfo.positionVolumeOriginal;\n    },\n    // 止盈预计盈亏\n    takeAmount: function takeAmount() {\n      var value = '0'; // 委托数量\n\n      var volume = this.formData_3.value; // 成本价\n\n      var _this$dataInfo = this.dataInfo,\n          openAvgPrice = _this$dataInfo.openAvgPrice,\n          orderSide = _this$dataInfo.orderSide; // 基础价格 （市价：触发价、 限价：委托价和）\n\n      var price = this.isMarket_profit ? this.formData_1.value : this.formData_2.value;\n      if (!volume || !price) return value;\n      var V1;\n\n      if (orderSide === 'BUY') {\n        // 多仓 基础价格 - 成本价\n        V1 = cut(price, openAvgPrice);\n      } else {\n        // 空仓 成本价 - 基础价格\n        V1 = cut(openAvgPrice, price);\n      } // 市价止盈 = N1 * 委托数量\n\n\n      value = nul(V1, this.volumeNumber(volume));\n      return \"\".concat(value);\n    },\n    // 止损预计盈亏\n    lossAmount: function lossAmount() {\n      var value = '0';\n      var volume = this.formData_6.value; // 成本价\n\n      var _this$dataInfo2 = this.dataInfo,\n          openAvgPrice = _this$dataInfo2.openAvgPrice,\n          orderSide = _this$dataInfo2.orderSide; // 基础价格 （市价：触发价、 限价：委托价和）\n\n      var price = this.isMarket_loss ? this.formData_4.value : this.formData_5.value;\n      if (!volume || !price) return value;\n      var V1;\n\n      if (orderSide === 'BUY') {\n        // 多仓 基础价格 - 成本价\n        V1 = cut(price, openAvgPrice);\n      } else {\n        // 空仓 成本价 - 基础价格\n        V1 = cut(openAvgPrice, price);\n      } // 市价止盈 = N1 * 委托数量\n\n\n      value = nul(V1, this.volumeNumber(volume));\n      return \"\".concat(value);\n    },\n    // 止盈预计收益率\n    takeAmountRate: function takeAmountRate() {\n      return this.returnate(this.takeAmount, this.formData_3.value);\n    },\n    // 止损预计收益率\n    takelossAmount: function takelossAmount() {\n      return this.returnate(this.lossAmount, this.formData_6.value);\n    },\n    // 获取止盈单最大或者最小触发价\n    takeOutProfit: function takeOutProfit() {\n      var _this = this;\n\n      if (!this.takeProfitList.length) return null;\n      var orderSide = this.dataInfo.orderSide;\n      var value = this.takeProfitList[0];\n      this.takeProfitList.forEach(function (item, i) {\n        var next = _this.takeProfitList[i + 1] || {};\n\n        if (orderSide === 'SELL') {\n          // 空仓取最大触发价\n          value = value.triggerPrice < next.triggerPrice ? next : value;\n        } else {\n          // 多仓取最小触发价\n          value = value.triggerPrice > next.triggerPrice ? next : value;\n        }\n      });\n      return value;\n    },\n    // 获取止损单最大或者最小触发价\n    takeLoss: function takeLoss() {\n      var _this2 = this;\n\n      if (!this.stopLossList.length) return null;\n      var orderSide = this.dataInfo.orderSide;\n      var value = this.stopLossList[0];\n      this.stopLossList.forEach(function (item, i) {\n        var next = _this2.stopLossList[i + 1] || {};\n\n        if (orderSide === 'BUY') {\n          // 多仓取最大触发价\n          value = value.triggerPrice < next.triggerPrice ? next : value;\n        } else {\n          // 空仓取最小触发价\n          value = value.triggerPrice > next.triggerPrice ? next : value;\n        }\n      });\n      return value;\n    },\n    placeHolder_one: function placeHolder_one() {\n      if (this.dataInfo.orderSide === 'BUY') {\n        // 价格\n        return \"\".concat(this.lanText.text20, \" > \").concat(this.thousandsComma(this.dataInfo.indexPrice));\n      } // 价格\n\n\n      return \"\".concat(this.lanText.text20, \" < \").concat(this.thousandsComma(this.dataInfo.indexPrice));\n    },\n    placeHolder_two: function placeHolder_two() {\n      // <p v-if=\"dataInfo.orderSide === 'BUY'\">止损价需小于标记价格，大于强平价格</p>\n      //     <p v-else>止损价需大于标记价格，小于强平价格</p>\n      if (this.dataInfo.orderSide === 'BUY') {\n        // 价格\n        return \"\".concat(this.lanText.text20, \" < \").concat(this.thousandsComma(this.dataInfo.indexPrice));\n      } // 价格\n\n\n      return \"\".concat(this.lanText.text20, \" > \").concat(this.thousandsComma(this.dataInfo.indexPrice));\n    },\n    // 到期时间\n    planTypeList: function planTypeList() {\n      return [{\n        name: this.lanText.time1,\n        // '24H',\n        id: '1'\n      }, {\n        name: this.lanText.time2,\n        // '7天',\n        id: '7'\n      }, {\n        name: this.lanText.time3,\n        // '14天',\n        id: '14'\n      }, {\n        name: this.lanText.time4,\n        // '30天',\n        id: '30'\n      }];\n    },\n    // 最新价格\n    newPrice: function newPrice() {\n      if (this.WsData && this.dataInfo) {\n        var name = \"\".concat(this.dataInfo.contractType, \"_\").concat(this.dataInfo.symbol.replace('-', ''));\n        var kay = name.toLowerCase();\n\n        if (this.WsData && this.WsData[kay]) {\n          return this.WsData[kay].close;\n        }\n\n        return 0.00;\n      }\n\n      return 0.00;\n    }\n  },\n  watch: {\n    dataInfo: function dataInfo(val) {\n      if (val.brokerId) {\n        this.getStopList();\n        this.initForm();\n      }\n    },\n    isShow: function isShow() {\n      this.initForm();\n    },\n    'formData_1.value': function formData1(value) {\n      if (value && Number(value)) {\n        this.formData_1.errorText = null;\n      }\n    },\n    'formData_2.value': function formData2(value) {\n      if (value && Number(value)) {\n        this.formData_2.errorText = null;\n      }\n    },\n    'formData_3.value': function formData3(value) {\n      if (value && Number(value)) {\n        this.formData_3.errorText = null;\n      }\n    },\n    'formData_4.value': function formData1(value) {\n      if (value && Number(value)) {\n        this.formData_4.errorText = null;\n      }\n    },\n    'formData_5.value': function formData2(value) {\n      if (value && Number(value)) {\n        this.formData_5.errorText = null;\n      }\n    },\n    'formData_6.value': function formData3(value) {\n      if (value && Number(value)) {\n        this.formData_6.errorText = null;\n      }\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this3 = this;\n\n      // 接收24小时行情数据\n      this.$bus.$on('FUTURE_MARKET_DATA', function (data) {\n        _this3.WsData = JSON.parse(data);\n      });\n    },\n    // 设置精度\n    setAmountFix: function setAmountFix(data) {\n      var priceFix = this.dataInfo.priceFix;\n      var fix = priceFix + 2;\n\n      if (fix > 8) {\n        fix = 8;\n      }\n\n      return this.thousandsComma(fixD(data, fix));\n    },\n    // 收益率(预计盈亏, 委托张数)\n    returnate: function returnate(amount, volume) {\n      // 占用保证金\n      var holdAmount = this.dataInfo.holdAmount;\n\n      if (amount && holdAmount && volume) {\n        //  预计盈亏 / 占用保证金 / 委托张数  *  仓位张数\n        // const Nl = division(amount, holdAmount);\n        // const N2 = division(Nl, this.volumeSheet(volume));\n        // const N3 = nul(N2, this.positionVolume);\n        var N3 = amount / holdAmount / this.volumeSheet(volume) * this.positionVolume;\n        var value = N3 * 100;\n        return fixD(value, 2);\n      }\n\n      return 0.00;\n    },\n    // 设置数字的颜色\n    returnColor: function returnColor(vlaue) {\n      if (vlaue) {\n        if (Number(vlaue) < 0) return 'u-4-cl';\n        if (Number(vlaue) > 0) return 'u-1-cl';\n      }\n\n      return '';\n    },\n    // 委托数量 = 委托张数 * 合约面值\n    volumeNumber: function volumeNumber(volume) {\n      // 如果当前单位是张\n      if (this.coUnitType === 2) {\n        var multiplier = this.dataInfo.multiplier; // 转换成量\n\n        return multiplier ? nul(volume, multiplier) : 0;\n      }\n\n      return volume;\n    },\n    // 委托张数 = 委托数量 / 合约面值\n    volumeSheet: function volumeSheet(volume) {\n      // 如果当前单位是量\n      if (this.coUnitType === 1 && volume) {\n        var multiplier = this.dataInfo.multiplier; // 转换成张\n\n        return multiplier ? division(volume, multiplier) : 0;\n      }\n\n      return volume;\n    },\n    // 设置表单参数\n    initForm: function initForm() {\n      var volUnit = this.dataInfo.multiplierCoin;\n\n      if (this.coUnitType === 2) {\n        volUnit = this.lanText.text16; // '张';\n      }\n\n      this.formData_1.title = this.lanText.text13; // '止盈触发价';\n\n      this.formData_2.title = this.lanText.text14; // '委托价格';\n\n      this.formData_3.title = this.lanText.text15; // '委托数量';\n\n      this.formData_4.title = this.lanText.text17; // '止损触发价';\n\n      this.formData_5.title = this.lanText.text18; // '委托价格';\n\n      this.formData_6.title = this.lanText.text15; // '委托数量';\n\n      this.formData_1.value = null;\n      this.formData_2.value = null;\n      this.formData_3.value = null;\n      this.formData_4.value = null;\n      this.formData_5.value = null;\n      this.formData_6.value = null;\n      this.formData_1.errorText = null;\n      this.formData_2.errorText = null;\n      this.formData_3.errorText = null;\n      this.formData_4.errorText = null;\n      this.formData_5.errorText = null;\n      this.formData_6.errorText = null;\n      this.formData_1.units = this.dataInfo.quote;\n      this.formData_1.fix = this.dataInfo.priceFix;\n      this.formData_2.units = this.dataInfo.quote;\n      this.formData_2.fix = this.dataInfo.priceFix;\n      this.formData_4.units = this.dataInfo.quote;\n      this.formData_4.fix = this.dataInfo.priceFix;\n      this.formData_5.units = this.dataInfo.quote;\n      this.formData_5.fix = this.dataInfo.priceFix;\n      this.formData_3.units = volUnit;\n      this.formData_6.units = volUnit;\n\n      if (this.coUnitType === 2) {\n        this.formData_3.fix = 0;\n        this.formData_6.fix = 0;\n      } else {\n        this.formData_3.fix = this.dataInfo.volfix;\n        this.formData_6.fix = this.dataInfo.volfix;\n      }\n    },\n    // 条件单切换 市价 and 限价\n    selectMarket: function selectMarket(name) {\n      if (name === 'isMarket_profit') {\n        this.formData_2.value = '';\n      } else {\n        this.formData_5.value = '';\n      }\n\n      this[name] = !this[name];\n    },\n    // 表单输入事件\n    changeInput: function changeInput(type, value) {\n      this[type].value = value;\n    },\n    // 获取止盈止损类表\n    getStopList: function getStopList() {\n      var _this4 = this;\n\n      this.axios({\n        url: this.$store.state.url.futures.takeProfitStopLoss,\n        hostType: 'co',\n        params: {\n          contractId: this.dataInfo.contractId,\n          orderSide: this.dataInfo.orderSide\n        }\n      }).then(function (data) {\n        if (data.code === '0' && data.data) {\n          _this4.takeProfitCount = data.data.takeProfitCount;\n          _this4.stopLossCount = data.data.stopLossCount;\n          var _data$data = data.data,\n              takeProfitList = _data$data.takeProfitList,\n              stopLossList = _data$data.stopLossList; // 止盈列表\n\n          _this4.takeProfitList = _this4.setlist(takeProfitList); // 止损列表\n\n          _this4.stopLossList = _this4.setlist(stopLossList);\n        }\n      });\n    },\n    // 设置数据列表\n    setlist: function setlist(dataList) {\n      var _this5 = this;\n\n      var priceFix = this.dataInfo.priceFix;\n      var arr = [];\n\n      if (dataList && dataList.length) {\n        dataList.forEach(function (item) {\n          arr.push({\n            // id\n            id: item.id,\n            // 触发价格\n            triggerPrice: fixD(item.triggerPrice, priceFix),\n            // 委托价格  // 市价\n            price: item.price === 0 ? _this5.lanText.text30 : _this5.thousandsComma(fixD(item.price, priceFix)),\n            // 委托数量\n            volume: _this5.setNumber(item.volume)\n          });\n        });\n        return arr;\n      }\n\n      return arr;\n    },\n    // 设置数量（张数和数量的转换）\n    setNumber: function setNumber(volume, type) {\n      var _this$dataInfo3 = this.dataInfo,\n          multiplier = _this$dataInfo3.multiplier,\n          volfix = _this$dataInfo3.volfix;\n\n      if (this.coUnitType === 1 && volume && multiplier) {\n        // 把量换成张\n        if (type === 2) {\n          return fixD(division(volume, multiplier), 0);\n        } // 把张换成量\n\n\n        return fixD(nul(volume, multiplier), volfix);\n      }\n\n      return volume;\n    },\n    // 表单验证\n    formVerify: function formVerify() {\n      var flag = true; // 非空验证\n\n      if (this.formData_1.value || this.formData_3.value) {\n        if (!this.formData_1.value || !this.formData_3.value || !this.formData_2.value && !this.isMarket_profit) {\n          flag = false;\n        }\n      }\n\n      if (this.formData_4.value || this.formData_6.value) {\n        if (!this.formData_4.value || !this.formData_6.value || !this.formData_5.value && !this.isMarket_loss) {\n          flag = false;\n        }\n      }\n\n      if (!this.formData_1.value && !this.formData_4.value) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    formVerify_v2: function formVerify_v2() {\n      var flag = true; //  标记价格, 强平价格, 可平数量 , 方向（BUY多长 SELL空仓）\n\n      var _this$dataInfo4 = this.dataInfo,\n          indexPrice = _this$dataInfo4.indexPrice,\n          reducePrice = _this$dataInfo4.reducePrice,\n          canCloseVolume = _this$dataInfo4.canCloseVolume,\n          orderSide = _this$dataInfo4.orderSide; // 验证止盈触发价\n\n      if (this.formData_1.value && indexPrice) {\n        if (orderSide === 'BUY') {\n          if (Number(this.formData_1.value) <= Number(indexPrice)) {\n            // 止盈价需大于标记价格！\n            this.$bus.$emit('tip', {\n              text: this.lanText.text21,\n              type: 'error'\n            });\n            this.formData_1.errorText = 'true';\n            return false;\n          }\n        } else if (Number(this.formData_1.value) >= Number(indexPrice)) {\n          // 止盈价需小于标记价格！\n          this.$bus.$emit('tip', {\n            text: this.lanText.text22,\n            type: 'error'\n          });\n          this.formData_1.errorText = 'true';\n          return false;\n        }\n      } // 验证止损触发价\n\n\n      if (this.formData_4.value && indexPrice) {\n        // 多仓\n        if (orderSide === 'BUY') {\n          // 判断标记价格（多仓）\n          if (Number(this.formData_4.value) >= Number(indexPrice)) {\n            //  '止损价需小于标记价格\n            this.$bus.$emit('tip', {\n              text: this.lanText.text23,\n              type: 'error'\n            });\n            this.formData_4.errorText = 'true';\n            return false;\n          } // 判断强平价格（多仓）\n\n\n          if (Number(this.formData_4.value) <= Number(reducePrice)) {\n            // '止损价需大于强平价格！'\n            this.$bus.$emit('tip', {\n              text: this.lanText.text24,\n              type: 'error'\n            });\n            this.formData_4.errorText = 'true';\n            return false;\n          } // 判断标记价格（空仓）\n\n        } else if (Number(this.formData_4.value) <= Number(indexPrice)) {\n          // '止损价需大于标记价格！'\n          this.$bus.$emit('tip', {\n            text: this.lanText.text25,\n            type: 'error'\n          });\n          this.formData_4.errorText = 'true';\n          return false; // 判断强平价格（空仓）\n        } else if (Number(this.formData_4.value) >= Number(reducePrice)) {\n          // 止损价需小于强平价格！\n          this.$bus.$emit('tip', {\n            text: this.lanText.text26,\n            type: 'error'\n          });\n          this.formData_4.errorText = 'true';\n          return false;\n        }\n      } // 验证止盈委托价格\n\n\n      if (this.formData_2.value && this.formData_1.value) {\n        // 当前输入的价格和出发价的比例 (触发价格 - 输入的价格) / 触发价格\n        var priceRange = this.dataInfo.coinResultVo.priceRange;\n        var range = Math.abs(division(cut(this.formData_1.value, this.formData_2.value), this.formData_1.value));\n\n        if (range > priceRange) {\n          // '价格偏差太大！'\n          this.$bus.$emit('tip', {\n            text: this.lanText.text27,\n            type: 'error'\n          });\n          this.formData_2.errorText = 'true';\n          return false;\n        }\n      } // 验证止损委托价格\n\n\n      if (this.formData_3.value && canCloseVolume) {\n        if (Number(canCloseVolume) < Number(this.formData_3.value)) {\n          // 超出可平数量！\n          this.$bus.$emit('tip', {\n            text: this.lanText.text28,\n            type: 'error'\n          });\n          this.formData_3.errorText = 'true';\n          return false;\n        }\n      }\n\n      if (this.formData_6.value && canCloseVolume) {\n        if (Number(canCloseVolume) < Number(this.formData_6.value)) {\n          // 超出可平数量！\n          this.$bus.$emit('tip', {\n            text: this.lanText.text28,\n            type: 'error'\n          });\n          this.formData_6.errorText = 'true';\n          return false;\n        }\n      }\n\n      return flag;\n    },\n    // 提交订单\n    submit: function submit() {\n      var _this6 = this;\n\n      if (!this.formVerify()) return;\n      if (!this.formVerify_v2()) return;\n      if (!this.sumbitFla) return;\n      this.sumbitFla = false;\n      var orderList = [];\n\n      if (this.formData_1.value) {\n        orderList.push({\n          triggerType: 2,\n          type: this.isMarket_profit ? 2 : 1,\n          price: this.isMarket_profit ? 0 : this.formData_2.value,\n          volume: this.setNumber(this.formData_3.value, 2),\n          triggerPrice: this.formData_1.value // expiredTime: this.expireTime,\n\n        });\n      }\n\n      if (this.formData_4.value) {\n        orderList.push({\n          triggerType: 1,\n          type: this.isMarket_loss ? 2 : 1,\n          price: this.isMarket_loss ? 0 : this.formData_5.value,\n          volume: this.setNumber(this.formData_6.value, 2),\n          triggerPrice: this.formData_4.value,\n          expiredTime: this.expireTime\n        });\n      }\n\n      var paramsData = {\n        contractId: this.dataInfo.contractId,\n        positionType: this.dataInfo.positionType,\n        leverageLevel: this.dataInfo.leverageLevel,\n        side: this.dataInfo.orderSide === 'BUY' ? 'SELL' : 'BUY',\n        orderList: orderList\n      };\n      this.axios({\n        url: this.$store.state.url.futures.createTpslOrder,\n        hostType: 'co',\n        params: paramsData\n      }).then(function (data) {\n        if (data.code === '0') {\n          _this6.close();\n\n          _this6.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n        } else {\n          var respList = data.data.respList;\n\n          if (respList && respList.length) {\n            respList.forEach(function (item) {\n              if (item.code === '0') {\n                _this6.close();\n\n                _this6.$bus.$emit('tip', {\n                  text: item.msg,\n                  type: 'success'\n                });\n              } else {\n                _this6.$bus.$emit('tip', {\n                  text: item.msg,\n                  type: 'error'\n                });\n              }\n            });\n          }\n        }\n\n        _this6.sumbitFla = true;\n      }).catch(function () {\n        _this6.sumbitFla = true;\n      });\n    },\n    // 取消全部订单\n    cancelOrder: function cancelOrder(type) {\n      var _this7 = this;\n\n      if (!this.cancelFla) return;\n      this.cancelFla = false;\n      var idArr = [];\n\n      if (type === 1) {\n        this.takeProfitList.forEach(function (item) {\n          idArr.push(item.id);\n        });\n      } else {\n        this.stopLossList.forEach(function (item) {\n          idArr.push(item.id);\n        });\n      }\n\n      this.axios({\n        url: this.$store.state.url.futures.orderTpslCancel,\n        hostType: 'co',\n        params: {\n          contractId: this.dataInfo.contractId,\n          orderIds: idArr.join(',')\n        }\n      }).then(function (data) {\n        if (data.code === '0') {\n          _this7.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this7.getStopList();\n        } else {\n          _this7.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n\n        _this7.cancelFla = true;\n      }).catch(function () {\n        _this7.cancelFla = true;\n      });\n    },\n    thousandsComma: function thousandsComma(num) {\n      if (num) {\n        return _thousandsComma(num);\n      }\n\n      return num;\n    },\n    // 选择 到期时间\n    selectPlanType: function selectPlanType(val) {\n      this.expireTime = val;\n    }\n  }\n};",null]}