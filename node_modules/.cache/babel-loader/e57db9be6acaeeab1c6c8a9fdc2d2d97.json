{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/ClosePhone/ClosePhone.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/ClosePhone/ClosePhone.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  name: 'bindEmail',\n  watch: {\n    sendSmsCode: function sendSmsCode(_sendSmsCode) {\n      if (_sendSmsCode !== null) {\n        if (_sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    closeMobileVerify: function closeMobileVerify(_closeMobileVerify) {\n      if (_closeMobileVerify !== null) {\n        this.loading = false;\n\n        if (_closeMobileVerify.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _closeMobileVerify.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n          this.$router.push('/personal/userManagement');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _closeMobileVerify.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n\n          if (_closeMobileVerify.code !== '10009') {\n            this.$bus.$emit('getCode-clear', 'smsCode');\n          }\n        }\n      }\n    }\n  },\n  computed: {\n    sendSmsCode: function sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    closeMobileVerify: function closeMobileVerify() {\n      return this.$store.state.personal.closeMobileVerify;\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      checkValue1: '',\n      checkValue2: '',\n      promptText1: this.$t('personal.label.googleCodeText'),\n      promptText2: this.$t('personal.label.smsCodeText'),\n      errorText1: this.$t('personal.prompt.errorCode'),\n      errorText2: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag1: false,\n      checkErrorFlag2: false,\n      disabled: true\n    };\n  },\n  methods: {\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick: function getCodeClick(name) {\n      if (name === 'smsCode') {\n        this.$bus.$emit('getCode-start', 'smsCode');\n        var info = {\n          operationType: 14\n        };\n        this.$store.dispatch('sendSmsCode', info);\n      }\n    },\n    inputChanges: function inputChanges(value, name) {\n      if (name === 'googleCode') {\n        this.checkValue1 = value;\n\n        if (this.codeFlag(value)) {\n          this.checkErrorFlag1 = false;\n        } else {\n          this.checkErrorFlag1 = true;\n        }\n      } else {\n        this.checkValue2 = value;\n\n        if (this.codeFlag(value)) {\n          this.checkErrorFlag2 = false;\n        } else {\n          this.checkErrorFlag2 = true;\n        }\n      }\n\n      if (this.checkValue1 && this.checkValue2 && !this.checkErrorFlag1 && !this.checkErrorFlag2) {\n        this.disabled = false;\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink: function btnLink() {\n      this.loading = true;\n      var info = {\n        googleCode: this.checkValue1,\n        smsValidCode: this.checkValue2\n      };\n      this.$store.dispatch('closeMobileVerify', info);\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/ClosePhone/ClosePhone.js"],"names":["name","watch","sendSmsCode","text","$bus","$emit","msg","type","$store","dispatch","closeMobileVerify","loading","$router","push","code","computed","state","personal","data","checkValue1","checkValue2","promptText1","$t","promptText2","errorText1","errorText2","checkErrorFlag1","checkErrorFlag2","disabled","methods","codeFlag","val","regExp","verification","test","getCodeClick","info","operationType","inputChanges","value","btnLink","googleCode","smsValidCode"],"mappings":"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","sourcesContent":["export default {\r\n  name: 'bindEmail',\r\n  watch: {\r\n    sendSmsCode(sendSmsCode) {\r\n      if (sendSmsCode !== null) {\r\n        if (sendSmsCode.text === 'success') {\r\n          this.$bus.$emit('tip', { text: sendSmsCode.msg, type: 'success' });\r\n          this.$store.dispatch('resetType');\r\n        } else {\r\n          this.$bus.$emit('tip', { text: sendSmsCode.msg, type: 'error' });\r\n          this.$store.dispatch('resetType');\r\n        }\r\n      }\r\n    },\r\n    closeMobileVerify(closeMobileVerify) {\r\n      if (closeMobileVerify !== null) {\r\n        this.loading = false;\r\n        if (closeMobileVerify.text === 'success') {\r\n          this.$bus.$emit('tip', { text: closeMobileVerify.msg, type: 'success' });\r\n          this.$store.dispatch('resetType');\r\n          this.$router.push('/personal/userManagement');\r\n        } else {\r\n          this.$bus.$emit('tip', { text: closeMobileVerify.msg, type: 'error' });\r\n          this.$store.dispatch('resetType');\r\n          if (closeMobileVerify.code !== '10009') {\r\n            this.$bus.$emit('getCode-clear', 'smsCode');\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    sendSmsCode() {\r\n      return this.$store.state.personal.sendSmsCode;\r\n    },\r\n    closeMobileVerify() {\r\n      return this.$store.state.personal.closeMobileVerify;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      checkValue1: '',\r\n      checkValue2: '',\r\n      promptText1: this.$t('personal.label.googleCodeText'),\r\n      promptText2: this.$t('personal.label.smsCodeText'),\r\n      errorText1: this.$t('personal.prompt.errorCode'),\r\n      errorText2: this.$t('personal.prompt.errorCode'),\r\n      checkErrorFlag1: false,\r\n      checkErrorFlag2: false,\r\n      disabled: true,\r\n    };\r\n  },\r\n  methods: {\r\n    codeFlag(val) {\r\n      return this.$store.state.regExp.verification.test(val);\r\n    },\r\n    getCodeClick(name) {\r\n      if (name === 'smsCode') {\r\n        this.$bus.$emit('getCode-start', 'smsCode');\r\n        const info = { operationType: 14 };\r\n        this.$store.dispatch('sendSmsCode', info);\r\n      }\r\n    },\r\n    inputChanges(value, name) {\r\n      if (name === 'googleCode') {\r\n        this.checkValue1 = value;\r\n        if (this.codeFlag(value)) {\r\n          this.checkErrorFlag1 = false;\r\n        } else {\r\n          this.checkErrorFlag1 = true;\r\n        }\r\n      } else {\r\n        this.checkValue2 = value;\r\n        if (this.codeFlag(value)) {\r\n          this.checkErrorFlag2 = false;\r\n        } else {\r\n          this.checkErrorFlag2 = true;\r\n        }\r\n      }\r\n      if (this.checkValue1 && this.checkValue2\r\n          && !this.checkErrorFlag1 && !this.checkErrorFlag2) {\r\n        this.disabled = false;\r\n      } else {\r\n        this.disabled = true;\r\n      }\r\n    },\r\n    btnLink() {\r\n      this.loading = true;\r\n      const info = {\r\n        googleCode: this.checkValue1,\r\n        smsValidCode: this.checkValue2,\r\n      };\r\n      this.$store.dispatch('closeMobileVerify', info);\r\n    },\r\n  },\r\n};\r\n"]}]}