{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/blockchain-ui-privatization/PC/components/swiper/Swiper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/components/swiper/Swiper.vue","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'c-swiper',\r\n  props: {\r\n    slideList: {\r\n      default: () => [],\r\n      type: Array,\r\n    },\r\n    interval: {\r\n      default: 4000,\r\n      type: Number,\r\n    },\r\n    height: {\r\n      default: '736',\r\n      type: [Number, String],\r\n    },\r\n    lineWidths: {\r\n      default: '300',\r\n      type: [Number, String],\r\n    },\r\n    liStyle: {\r\n      default: '',\r\n      type: String,\r\n    },\r\n    itemStyle: {\r\n      default: '',\r\n      type: String,\r\n    },\r\n    activeClass: {\r\n      default: '',\r\n      type: String,\r\n    },\r\n  },\r\n  computed: {\r\n    boxStyle() {\r\n      return {\r\n        height: `${this.height}px`,\r\n      };\r\n    },\r\n    lineWidth() {\r\n      return {\r\n        width: `${this.lineWidths}px`,\r\n      };\r\n    },\r\n    itemWidth() {\r\n      let width = `width:${this.lineWidths / this.slideList.length}px`;\r\n      if (this.liStyle) {\r\n        width = this.liStyle;\r\n      }\r\n      return width;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      currentIndex: 0,\r\n      timer: '',\r\n    };\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    activeCl(active) {\r\n      let cl = 'a-12-bg';\r\n      if (this.activeClass) {\r\n        cl = this.activeClass;\r\n      }\r\n      if (!active) {\r\n        return '';\r\n      }\r\n      return `active ${cl}`;\r\n    },\r\n    itemClass(index) {\r\n      const arr = [];\r\n      if (index === this.currentIndex) {\r\n        arr.push('show');\r\n      }\r\n      if (index > this.currentIndex) {\r\n        arr.push('left');\r\n      }\r\n      if (index < this.currentIndex) {\r\n        arr.push('right');\r\n      }\r\n      return arr;\r\n    },\r\n    go() {\r\n      this.timer = setInterval(() => {\r\n        this.autoPlay();\r\n      }, this.interval);\r\n    },\r\n    stop() {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    },\r\n    change(index) {\r\n      this.currentIndex = index;\r\n    },\r\n    autoPlay() {\r\n      if (this.slideList.length > 0) {\r\n        this.currentIndex += 1;\r\n        if (this.currentIndex > this.slideList.length - 1) {\r\n          this.currentIndex = 0;\r\n        }\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.$nextTick(() => {\r\n      this.timer = setInterval(() => {\r\n        this.autoPlay();\r\n      }, this.interval);\r\n    });\r\n  },\r\n};\r\n",null]}