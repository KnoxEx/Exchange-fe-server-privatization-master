{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/register/register.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/register/register.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getCookie, setCookie, imgMap, colorMap } from '@/utils';\nimport countryMinix from \"../countryList/countryList\";\nexport default {\n  name: 'page-register',\n  mixins: [countryMinix],\n  data: function data() {\n    return {\n      imgMap: imgMap,\n      colorMap: colorMap,\n      nowType: 'phone',\n      // phone--手机注册  email--邮箱注册\n      userValue: '',\n      // user框 (手机号/邮箱）\n      checkValue: '',\n      // 验证码框\n      passValue: '',\n      // 密码框\n      comfirmValue: '',\n      // 确认密码框\n      invitedValue: '',\n      // 邀请码\n      verifyObj: {},\n      // 滑动返回对象\n      verifyFlag: false,\n      // 滑动是否通过\n      textFlag: false,\n      // 服务条款是否通过\n      textFlag2: false,\n      // 服务条款是否通过\n      textFlag3: false,\n      // 服务条款是否通过\n      submitLoading: false,\n      // 提交按钮loading\n      getCodeHaving: false,\n      // 验证码倒计时中（true为倒计时中）\n      getCodeMustCountry: false,\n      // 用于获取验证码时 打开所在地的错误\n      getCodeMustUser: false,\n      // 用于获取验证码时 user的错误\n      error10003: false,\n      dialogFlag: false,\n      // 弹窗\n      haveOption: false,\n      // 弹窗 极验/发送验证码\n      dialogConfirmLoading: false,\n      token: null,\n      urlHasinvitedCode: false,\n      lan: getCookie('lan')\n    };\n  },\n  watch: {\n    checkValue: function checkValue(newV) {\n      var _this = this;\n\n      if (newV.length === 6) {\n        this.$nextTick(function () {\n          _this.$bus.$emit('button-click', 'dialogConfirm');\n        });\n      }\n    },\n    loginFlag: function loginFlag(v) {\n      if (v) {\n        this.goHome();\n      }\n    },\n    loginRegistType: function loginRegistType(v) {\n      if (v) {\n        this.initNowType();\n      }\n    } // nowUserRegType: {\n    //   immediate: true,\n    //   handler(v) {\n    //     if (v[0] === 1) {\n    //       this.nowType = 'phone';\n    //     } else {\n    //       this.nowType = 'email';\n    //     }\n    //   },\n    // },\n\n  },\n  beforeMount: function beforeMount() {\n    if (this.$route.query.inviteCode) {\n      this.invitedValue = this.$route.query.inviteCode;\n      this.urlHasinvitedCode = true;\n    }\n\n    if (this.$route.query.email) {\n      this.userValue = this.$route.query.email;\n      this.nowType = 'email';\n    }\n\n    if (this.$route.query.phone) {\n      this.userValue = this.$route.query.phone;\n      this.nowType = 'phone';\n    }\n  },\n  computed: {\n    // userRegType() {\n    //   const { publicInfo } = this.$store.state.baseData;\n    //   let str = '{}';\n    //   if (publicInfo) {\n    //     if (publicInfo.switch && publicInfo.switch.user_reg_type) {\n    //       str = publicInfo.switch.user_reg_type;\n    //     }\n    //   }\n    //   return JSON.parse(str);\n    // },\n    // nowUserRegType() {\n    //   const lan = getCookie('lan');\n    //   let arr = [1, 2];\n    //   if (this.userRegType[lan]) {\n    //     arr = this.userRegType[lan];\n    //   }\n    //   return arr;\n    // },\n    templateType: function templateType() {\n      return this.$store.state.baseData.templateLayoutType;\n    },\n    isInternationTem: function isInternationTem() {\n      return this.$store.state.baseData.templateLayoutType === '2';\n    },\n    dialogConfirmDisabled: function dialogConfirmDisabled() {\n      if (!this.checkFlag && !this.dialogConfirmLoading) return true;\n      return false;\n    },\n    coinsKrwOpen: function coinsKrwOpen() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var str = '';\n\n      if (publicInfo) {\n        if (publicInfo.switch && publicInfo.switch.register_cms_style) {\n          str = publicInfo.switch.register_cms_style.toString();\n        } else {\n          str = '0';\n        }\n      }\n\n      return str;\n    },\n    // 是否展示tab切换\n    tabFlag: function tabFlag() {\n      var flag = false; // if (this.nowUserRegType.length !== 1) {\n\n      if (this.loginRegistType === '1') {\n        flag = true;\n      }\n\n      return flag;\n    },\n    // 开启验证方式\n    loginRegistType: function loginRegistType() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var str = '1'; // 1 手机/邮箱， 2 仅手机， 3 仅邮箱\n\n      if (publicInfo && publicInfo.switch && publicInfo.switch.login_regist_type) {\n        str = publicInfo.switch.login_regist_type.toString();\n      }\n\n      return str;\n    },\n    publicInfo: function publicInfo() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      return publicInfo;\n    },\n    tabList: function tabList() {\n      var list = [// 手机号注册\n      {\n        name: this.$t('register.phoneRegister'),\n        key: 'phone'\n      }, // 邮箱注册\n      {\n        name: this.$t('register.emailRegister'),\n        key: 'email'\n      }];\n\n      if (this.lan === 'zh_CN' || this.lan === 'el_GR') {\n        // }\n        // if (this.nowUserRegType[0] === 2) {\n        list = [// 邮箱注册\n        {\n          name: this.$t('register.emailRegister'),\n          key: 'email'\n        }, // 手机号注册\n        {\n          name: this.$t('register.phoneRegister'),\n          key: 'phone'\n        }];\n      }\n\n      return list;\n    },\n    loginFlag: function loginFlag() {\n      var _this$$store$state$ba = this.$store.state.baseData,\n          isLogin = _this$$store$state$ba.isLogin,\n          userInfoIsReady = _this$$store$state$ba.userInfoIsReady;\n\n      if (isLogin && userInfoIsReady) {\n        return true;\n      }\n\n      return false;\n    },\n    maxLength: function maxLength() {\n      var maxLength = '100';\n\n      if (this.nowType === 'phone') {\n        maxLength = '30';\n      }\n\n      return maxLength;\n    },\n    // 运营商名称\n    serverName: function serverName() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var code = '';\n\n      if (publicInfo && publicInfo.msg && publicInfo.msg.company_name) {\n        code = publicInfo.msg.company_name;\n      }\n\n      return code;\n    },\n    // 邀请码必填\n    mustInvited: function mustInvited() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var must = '0';\n\n      if (publicInfo && publicInfo.switch && publicInfo.switch.is_invitationCode_required === '1') {\n        must = '1';\n      }\n\n      return must;\n    },\n    // 是否开启滑动验证\n    mustVerify: function mustVerify() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n\n      if (this.error10003) {\n        return true;\n      }\n\n      if (publicInfo && publicInfo.switch && publicInfo.switch.regist_must_check_open === '1') {\n        return true;\n      }\n\n      return false;\n    },\n    // 所在地验证框\n    countryFlag: function countryFlag() {\n      if (this.nowType === 'phone') {\n        return this.country.length;\n      }\n\n      return true;\n    },\n    regExps: function regExps() {\n      return this.$store.state.regExp;\n    },\n    // userValue 是否复合正则验证\n    userFlag: function userFlag() {\n      var reg = this.nowType === 'phone' ? this.regExps.phone : this.regExps.email;\n      return reg.test(this.userValue);\n    },\n    // checkValue 是否复合正则验证\n    checkFlag: function checkFlag() {\n      return this.regExps.verification.test(this.checkValue);\n    },\n    // passValue 是否复合正则验证\n    passFlag: function passFlag() {\n      return this.regExps.passWord.test(this.passValue);\n    },\n    // comfirmValue 是否两次密码输入一致\n    comfirmFlag: function comfirmFlag() {\n      return this.passValue === this.comfirmValue;\n    },\n    // invitedValue 是否复合正则验证\n    invitedFlag: function invitedFlag() {\n      if (this.mustInvited === '0') {\n        return true;\n      }\n\n      return this.regExps.nonEmpty.test(this.invitedValue);\n    },\n    //\n    countryErrorFlag: function countryErrorFlag() {\n      if (this.getCodeMustCountry) {\n        if (!this.countryFlag) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    // user框是否为错误状态\n    userErrorFlag: function userErrorFlag() {\n      if (this.getCodeMustUser) {\n        if (!this.userFlag) return true;\n      } else if (this.userValue.length !== 0 && !this.userFlag) return true;\n\n      return false;\n    },\n    // 验证框是否为错误\n    checkErrorFlag: function checkErrorFlag() {\n      if (this.checkValue.length !== 0 && !this.checkFlag) return true;\n      return false;\n    },\n    // pass框是否为错误状态\n    passErrorFlag: function passErrorFlag() {\n      if (this.passValue.length !== 0 && !this.passFlag) return true;\n      return false;\n    },\n    // comfirm框是否为错误状态\n    comfirmErrorFlag: function comfirmErrorFlag() {\n      if (this.comfirmValue.length !== 0 && !this.comfirmFlag) return true;\n      return false;\n    },\n    // 验证码框是否为错误状态\n    invitedErrorFlag: function invitedErrorFlag() {\n      if (this.invitedValue.length !== 0 && !this.invitedFlag) return true;\n      return false;\n    },\n    // 是否展示获取验证码\n    isShowGetCode: function isShowGetCode() {\n      // 如果强制开启滑动验证\n      if (this.mustVerify) {\n        // 滑动验证通过 或者 正在倒计时中\n        if (this.verifyFlag || this.getCodeHaving) {\n          return true;\n        }\n\n        return false;\n      }\n\n      return true;\n    },\n    // 登录button 禁用状态\n    submitDisabled: function submitDisabled() {\n      var countryFlag = this.countryFlag,\n          userFlag = this.userFlag,\n          passFlag = this.passFlag,\n          comfirmFlag = this.comfirmFlag,\n          invitedFlag = this.invitedFlag,\n          textFlag = this.textFlag,\n          textFlag2 = this.textFlag2,\n          submitLoading = this.submitLoading;\n      var cms = textFlag;\n\n      if (this.coinsKrwOpen === '1') {\n        cms = textFlag && textFlag2;\n      }\n\n      if (countryFlag && userFlag // && checkFlag\n      && passFlag && comfirmFlag && invitedFlag && cms || submitLoading) {\n        return false;\n      }\n\n      return true;\n    },\n    domKeys: function domKeys() {\n      if (this.nowType === 'phone') {\n        return {\n          userKey: 'phone-user',\n          verifyKey: 'phone-verify',\n          checkKey: 'phone-check',\n          passKey: 'phone-pass',\n          comfirmKey: 'phone-comfirm',\n          invitedKey: 'phone-invited'\n        };\n      }\n\n      return {\n        userKey: 'email-user',\n        verifyKey: 'email-verify',\n        checkKey: 'email-check',\n        passKey: 'email-pass',\n        comfirmKey: 'email-comfirm',\n        invitedKey: 'email-invited'\n      };\n    },\n    // 用户框和验证码框 文案和错误文案\n    domTexts: function domTexts() {\n      if (this.nowType === 'phone') {\n        return {\n          userText: this.$t('register.phone'),\n          // 手机号\n          userError: this.$t('register.phoneError'),\n          // 手机号输入格式不正确\n          codeText: this.$t('register.phoneCode'),\n          // 短信验证码\n          codeError: this.$t('register.phoneCodeError') // 请输入6位数字短信验证码\n\n        };\n      }\n\n      return {\n        userText: this.$t('register.email'),\n        // 邮箱\n        userError: this.$t('register.emailError'),\n        // 邮箱输入格式不正确\n        codeText: this.$t('register.emailCode'),\n        // 邮箱验证码\n        codeError: this.$t('register.emailCodeError') // 请输入6位数字邮箱验证码\n\n      };\n    },\n    // 邀请码\n    invitedText: function invitedText() {\n      if (this.mustInvited === '0') {\n        return this.$t('register.InvitationCodeOptional'); // '邀请码(选填)\n      }\n\n      return this.$t('register.InvitationCodeIsRequired'); // 邀请码\n    },\n    companyName: function companyName() {\n      if (this.publicInfo && this.publicInfo.msg) {\n        return this.publicInfo.msg.company_name;\n      }\n\n      return '';\n    },\n    singPassCode: function singPassCode() {\n      return this.$route.query.singPassCode;\n    },\n    singpassState: function singpassState() {\n      return this.$route.query.singPassState;\n    },\n    submitButtonText: function submitButtonText() {\n      if (this.singPassCode && this.singpassState) {\n        return this.$t('singPassLogin.mainText14');\n      }\n\n      return this.$t('register.register');\n    },\n    registerPageTitle: function registerPageTitle() {\n      if (this.singPassCode && this.singpassState) {\n        return this.$t('singPassLogin.mainText15');\n      }\n\n      return this.$t('register.WelcomeToRegister');\n    },\n    // 默认手机号\n    defaultCountryCode: function defaultCountryCode() {\n      var defaultCountryCode = this.$store.state.baseData.defaultCountryCode;\n      var defaultCountryCodeReal = this.$store.state.baseData.defaultCountryCodeReal;\n      var limitCountryList = this.limitCountryList;\n\n      if (limitCountryList.length > 0 && defaultCountryCode) {\n        var countryList = limitCountryList; // const countryCode = defaultCountryCode.replace('+', '');\n\n        var countryCodeReal = defaultCountryCodeReal.replace('+', '');\n\n        if (countryList.indexOf(countryCodeReal) > -1) {\n          defaultCountryCode = this.registerCountryList[0].keyCode;\n        }\n      }\n\n      return defaultCountryCode;\n    },\n    // 默认国家码\n    defaultCountryCodeReal: function defaultCountryCodeReal() {\n      var defaultCountryCodeReal = this.$store.state.baseData.defaultCountryCodeReal;\n      var limitCountryList = this.limitCountryList;\n\n      if (limitCountryList.length > 0) {\n        var countryList = limitCountryList;\n        var countryCode = defaultCountryCodeReal.replace(/\\+/g, '');\n\n        if (countryList.indexOf(countryCode) > -1) {\n          defaultCountryCodeReal = '';\n        }\n      }\n\n      return defaultCountryCodeReal;\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this2 = this;\n\n      if (this.loginFlag) {\n        this.goHome();\n      }\n\n      this.$bus.$off('emailCode');\n      this.$bus.$on('emailCode', function (data) {\n        var newData = JSON.parse(JSON.stringify(data));\n        newData.callback = undefined;\n\n        _this2.axios({\n          url: 'v4/common/emailValidCode',\n          method: 'post',\n          header: {},\n          params: newData\n        }).then(function (info) {\n          data.callback(info);\n        }).catch(function () {});\n      });\n      this.$bus.$off('phoneCode');\n      this.$bus.$on('phoneCode', function (data) {\n        var newData = JSON.parse(JSON.stringify(data));\n        newData.callback = undefined;\n\n        _this2.axios({\n          url: 'v4/common/smsValidCode',\n          method: 'post',\n          header: {},\n          params: newData\n        }).then(function (info) {\n          data.callback(info);\n        }).catch(function () {// console.log(info);\n        });\n      });\n\n      if (this.loginRegistType) {\n        this.initNowType();\n      }\n    },\n    dialogClose: function dialogClose() {\n      this.dialogFlag = false;\n      this.checkValue = '';\n      this.haveOption = false;\n    },\n    dialogConfirm: function dialogConfirm() {\n      var _this3 = this;\n\n      this.dialogConfirmLoading = true;\n\n      if (this.nowType === 'phone') {\n        var params = {\n          smsCode: this.checkValue,\n          // 验证码\n          token: this.token\n        }; // 判断是否关联第三方登录账号\n\n        if (this.singPassCode && this.singpassState) {\n          params.singPassCode = this.singPassCode;\n        }\n\n        this.axios({\n          // url: 'v4/user/reg_mobile',\n          url: '/user/reg_mobile_confirm',\n          params: params,\n          headers: {},\n          method: 'post'\n        }).then(function (data) {\n          _this3.dialogConfirmLoading = false;\n\n          if (data.code.toString() === '0') {\n            if (window.location.search.indexOf('return') !== -1) {\n              var returnURL = window.location.search.substring(8);\n              window.location.href = unescape(returnURL);\n            } else if (data.data) {\n              var token = data.data.token;\n\n              if (token) {\n                // this.$router.push('/login');\n                // 登录成功，已登录\n                _this3.$bus.$emit('tip', {\n                  text: _this3.$t('register.registerSuccessQLogin'),\n                  type: 'success'\n                });\n\n                setCookie('token', token); // 存储cookie\n                // 获取 userinfo\n\n                _this3.$store.dispatch('getUserInfo');\n\n                _this3.$router.push('/');\n              } else {\n                // 注册成功, 请登录\n                _this3.$bus.$emit('tip', {\n                  text: _this3.$t('register.registerSuccess'),\n                  type: 'success'\n                });\n\n                _this3.$router.push('/login');\n              }\n            } else {\n              // 注册成功, 请登录\n              _this3.$bus.$emit('tip', {\n                text: _this3.$t('register.registerSuccess'),\n                type: 'success'\n              });\n\n              _this3.$router.push('/login');\n            }\n          } else {\n            _this3.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      } else {\n        var _params = {\n          emailCode: this.checkValue,\n          // 验证码\n          token: this.token\n        }; // 判断是否关联第三方登录账号\n\n        if (this.singPassCode && this.singpassState) {\n          _params.singPassCode = this.singPassCode;\n        }\n\n        this.axios({\n          // url: 'v4/user/reg_mobile',\n          url: '/user/reg_email_confirm',\n          params: _params,\n          headers: {},\n          method: 'post'\n        }).then(function (data) {\n          _this3.dialogConfirmLoading = false;\n\n          if (data.code.toString() === '0') {\n            // 注册成功, 已登录\n            if (window.location.search.indexOf('return') !== -1) {\n              var returnURL = window.location.search.substring(8);\n              window.location.href = unescape(returnURL);\n            } else if (data.data) {\n              var token = data.data.token;\n\n              if (token) {\n                _this3.$bus.$emit('tip', {\n                  text: _this3.$t('register.registerSuccessQLogin'),\n                  type: 'success'\n                });\n\n                setCookie('token', token);\n\n                _this3.$store.dispatch('getUserInfo');\n\n                _this3.$router.push('/');\n              } else {\n                _this3.$bus.$emit('tip', {\n                  text: _this3.$t('register.registerSuccess'),\n                  type: 'success'\n                });\n\n                _this3.$router.push('/login');\n              }\n            } else {\n              _this3.$bus.$emit('tip', {\n                text: _this3.$t('register.registerSuccess'),\n                type: 'success'\n              });\n\n              _this3.$router.push('/login');\n            }\n          } else {\n            _this3.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    },\n    buttonClick: function buttonClick() {\n      this.dialogFlag = true;\n    },\n    initNowType: function initNowType() {\n      if (this.loginRegistType === '3') {\n        this.nowType = 'email';\n      } else {\n        this.nowType = 'phone';\n      } // if (this.lan === 'zh_CN' || this.lan === 'el_GR') {\n      //   this.nowType = 'phone';\n      // } else {\n      //   this.nowType = 'email';\n      // }\n\n    },\n    goUrl: function goUrl(url) {\n      // 如果是第三方注册 跳转到登录也是第三方登录\n      if (url === '/login' && this.singPassCode && this.singpassState) {\n        this.$router.push(\"\".concat(url, \"?code=\").concat(this.singPassCode, \"&state=\").concat(this.singpassState, \"&source=reg\"));\n      } else {\n        this.$router.push(url);\n      }\n    },\n    goHome: function goHome() {\n      this.$router.push('/');\n    },\n    // tab切换\n    setNowType: function setNowType(type) {\n      if (this.submitLoading) {\n        return;\n      } // 如果正在提交禁止切换\n\n\n      if (type === this.nowType) {\n        return;\n      }\n\n      if (this.verifyObj.nc) {\n        this.verifyObj.nc.reset();\n      }\n\n      this.country = this.defaultCountryCodeReal ? this.defaultCountryCodeReal : this.countryMap[this.defaultCountryCode].code; // 所在地\n\n      this.countryKeyCode = this.defaultCountryCode ? this.defaultCountryCode : ''; // 所在地\n\n      this.userValue = ''; // user框 (手机号/邮箱）\n\n      this.checkValue = ''; // 验证码框\n\n      this.passValue = ''; // 密码框\n\n      this.comfirmValue = ''; // 确认密码框\n\n      this.invitedValue = ''; // 清楚邀请码\n\n      this.verifyObj = {}; // 滑动返回对象\n\n      this.verifyFlag = false; // 滑动是否通过\n\n      this.textFlag = false; // 清服务条款\n\n      this.nowType = type;\n      this.getCodeHaving = false;\n      this.getCodeMustCountry = false; // 获取验证码时 关闭所在地的错误\n\n      this.getCodeMustUser = false; // 获取验证码时 关闭user框的错误\n\n      this.error10003 = false;\n\n      if (this.$route.query.inviteCode) {\n        this.invitedValue = this.$route.query.inviteCode;\n      }\n\n      if (this.$route.query.email && this.nowType === 'email') {\n        this.userValue = this.$route.query.email;\n      }\n    },\n    // input onchanges事件\n    inputChanges: function inputChanges(value, name) {\n      this[name] = value;\n    },\n    // user框获取焦点\n    userFocus: function userFocus() {\n      this.getCodeMustUser = false;\n    },\n    // 手机号所在地框获取焦点\n    countryFocus: function countryFocus(v) {\n      if (v) {\n        this.getCodeMustCountry = false;\n      }\n    },\n    // 提交\n    submit: function submit() {\n      var _this4 = this;\n\n      // this.submitLoading = true;\n      var ajaxUrl = '/user/reg_email_chk_info';\n\n      var objData = _objectSpread(_objectSpread({}, this.verifyObj), {}, {\n        // 滑动验证\n        nc: undefined,\n        loginPword: this.passValue,\n        // 密码\n        newPassword: this.comfirmValue,\n        // 新密码\n        invitedCode: this.invitedValue // 邀请码\n\n      });\n\n      if (this.nowType === 'phone') {\n        ajaxUrl = '/user/reg_mobile_chk_info';\n        objData.countryCode = this.countryKeyCode; // 国家编号\n\n        objData.mobileNumber = this.userValue; // 手机号\n      } else {\n        objData.email = this.userValue; // 邮箱\n      }\n\n      this.axios({\n        // url: 'v4/user/reg_mobile',\n        url: ajaxUrl,\n        params: objData,\n        headers: {},\n        method: 'post'\n      }).then(function (data) {\n        // this.submitLoading = false;\n        if (data.code.toString() === '0') {\n          _this4.token = data.data.token;\n          _this4.haveOption = true;\n\n          _this4.$nextTick(function () {\n            _this4.getCodeClick();\n          });\n        } else {\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n\n          _this4.dialogFlag = false;\n        }\n      });\n    },\n    // 点击获取验证码\n    getCodeClick: function getCodeClick() {\n      // 发送验证码\n      this.sendCode(); // this.verifyObj = {};\n      // this.verifyFlag = false;\n      // 倒计时开始\n\n      this.$bus.$emit('getCode-start', 'registerGetcode'); // 获取验证码计时开始\n\n      this.getCodeHaving = true;\n    },\n    // 倒计时重置\n    getCodeClear: function getCodeClear() {\n      // 获取验证码计时结束\n      this.getCodeHaving = false;\n    },\n    // 发送短信/邮箱\n    sendCode: function sendCode() {\n      var _this5 = this;\n\n      if (this.nowType === 'phone') {\n        var countryCode = this.countryKeyCode; // 区号\n\n        this.$bus.$emit('phoneCode', {\n          token: this.token,\n          countryCode: countryCode,\n          // 区号\n          // mobile: this.userValue, // 手机号\n          operationType: '1',\n          // 模版\n          callback: function callback(data) {\n            if (data.code.toString() === '0') {\n              // 短信已发送，请注意查收\n              _this5.$bus.$emit('tip', {\n                text: _this5.$t('register.phoneSendSuccess'),\n                type: 'success'\n              });\n            } else if (data.code.toString() === '10003') {\n              if (_this5.error10003) {\n                _this5.$bus.$emit('tip', {\n                  text: data.msg,\n                  type: 'error'\n                });\n              } else {\n                _this5.error10003 = true; // 请滑动安全验证后再获取验证码\n\n                _this5.$bus.$emit('tip', {\n                  text: _this5.$t('register.scrollCode'),\n                  type: 'warning'\n                });\n              } // 倒计时重置\n\n\n              _this5.$bus.$emit('getCode-clear', 'registerGetcode');\n            } else {\n              // 倒计时重置\n              _this5.$bus.$emit('getCode-clear', 'registerGetcode'); // tip框提示错误\n\n\n              _this5.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'error'\n              });\n            }\n          }\n        });\n      } else if (this.nowType === 'email') {\n        this.$bus.$emit('emailCode', {\n          token: this.token,\n          // ...this.verifyObj, // 滑动验证\n          // nc: undefined,\n          // email: this.userValue, // 邮箱\n          operationType: '1',\n          callback: function callback(data) {\n            if (data.code.toString() === '0') {\n              // 邮件已发送，请注意查收\n              _this5.$bus.$emit('tip', {\n                text: _this5.$t('register.emailSendSuccess'),\n                type: 'success'\n              });\n            } else if (data.code.toString() === '10003') {\n              if (_this5.error10003) {\n                // tip框提示错误\n                _this5.$bus.$emit('tip', {\n                  text: data.msg,\n                  type: 'error'\n                });\n              } else {\n                _this5.error10003 = true; // 请滑动安全验证后再获取验证码\n\n                _this5.$bus.$emit('tip', {\n                  text: _this5.$t('register.scrollCode'),\n                  type: 'warning'\n                });\n              } // 倒计时重置\n\n\n              _this5.$bus.$emit('getCode-clear', 'registerGetcode');\n            } else {\n              // 倒计时重置\n              _this5.$bus.$emit('getCode-clear', 'registerGetcode'); // tip框提示错误\n\n\n              _this5.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'error'\n              });\n            }\n          }\n        });\n      }\n    },\n    // 滑动验证回调\n    verifyCallBack: function verifyCallBack(parameter) {\n      this.verifyObj = parameter;\n      this.verifyFlag = true;\n      this.submit();\n    },\n    // 同意服务条款\n    checkoutClick: function checkoutClick(flag) {\n      this.textFlag = flag;\n    },\n    // 同意服务条款\n    checkoutClick2: function checkoutClick2(flag) {\n      this.textFlag2 = flag;\n    },\n    // 同意服务条款\n    checkoutClick3: function checkoutClick3(flag) {\n      this.textFlag3 = flag;\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/register/register.js"],"names":["getCookie","setCookie","imgMap","colorMap","countryMinix","name","mixins","data","nowType","userValue","checkValue","passValue","comfirmValue","invitedValue","verifyObj","verifyFlag","textFlag","textFlag2","textFlag3","submitLoading","getCodeHaving","getCodeMustCountry","getCodeMustUser","error10003","dialogFlag","haveOption","dialogConfirmLoading","token","urlHasinvitedCode","lan","watch","newV","length","$nextTick","$bus","$emit","loginFlag","v","goHome","loginRegistType","initNowType","beforeMount","$route","query","inviteCode","email","phone","computed","templateType","$store","state","baseData","templateLayoutType","isInternationTem","dialogConfirmDisabled","checkFlag","coinsKrwOpen","publicInfo","str","switch","register_cms_style","toString","tabFlag","flag","login_regist_type","tabList","list","$t","key","isLogin","userInfoIsReady","maxLength","serverName","code","msg","company_name","mustInvited","must","is_invitationCode_required","mustVerify","regist_must_check_open","countryFlag","country","regExps","regExp","userFlag","reg","test","verification","passFlag","passWord","comfirmFlag","invitedFlag","nonEmpty","countryErrorFlag","userErrorFlag","checkErrorFlag","passErrorFlag","comfirmErrorFlag","invitedErrorFlag","isShowGetCode","submitDisabled","cms","domKeys","userKey","verifyKey","checkKey","passKey","comfirmKey","invitedKey","domTexts","userText","userError","codeText","codeError","invitedText","companyName","singPassCode","singpassState","singPassState","submitButtonText","registerPageTitle","defaultCountryCode","defaultCountryCodeReal","limitCountryList","countryList","countryCodeReal","replace","indexOf","registerCountryList","keyCode","countryCode","methods","init","$off","$on","newData","JSON","parse","stringify","callback","undefined","axios","url","method","header","params","then","info","catch","dialogClose","dialogConfirm","smsCode","headers","window","location","search","returnURL","substring","href","unescape","text","type","dispatch","$router","push","emailCode","buttonClick","goUrl","setNowType","nc","reset","countryMap","countryKeyCode","inputChanges","value","userFocus","countryFocus","submit","ajaxUrl","objData","loginPword","newPassword","invitedCode","mobileNumber","getCodeClick","sendCode","getCodeClear","operationType","verifyCallBack","parameter","checkoutClick","checkoutClick2","checkoutClick3"],"mappings":"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","sourcesContent":["import {\r\n  getCookie, setCookie, imgMap, colorMap,\r\n} from '@/utils';\r\nimport countryMinix from '../countryList/countryList';\r\n\r\nexport default {\r\n  name: 'page-register',\r\n  mixins: [countryMinix],\r\n  data() {\r\n    return {\r\n      imgMap,\r\n      colorMap,\r\n      nowType: 'phone', // phone--手机注册  email--邮箱注册\r\n      userValue: '', // user框 (手机号/邮箱）\r\n      checkValue: '', // 验证码框\r\n      passValue: '', // 密码框\r\n      comfirmValue: '', // 确认密码框\r\n      invitedValue: '', // 邀请码\r\n      verifyObj: {}, // 滑动返回对象\r\n      verifyFlag: false, // 滑动是否通过\r\n      textFlag: false, // 服务条款是否通过\r\n      textFlag2: false, // 服务条款是否通过\r\n      textFlag3: false, // 服务条款是否通过\r\n      submitLoading: false, // 提交按钮loading\r\n      getCodeHaving: false, // 验证码倒计时中（true为倒计时中）\r\n      getCodeMustCountry: false, // 用于获取验证码时 打开所在地的错误\r\n      getCodeMustUser: false, // 用于获取验证码时 user的错误\r\n      error10003: false,\r\n      dialogFlag: false, // 弹窗\r\n      haveOption: false, // 弹窗 极验/发送验证码\r\n      dialogConfirmLoading: false,\r\n      token: null,\r\n      urlHasinvitedCode: false,\r\n      lan: getCookie('lan'),\r\n    };\r\n  },\r\n  watch: {\r\n    checkValue(newV) {\r\n      if (newV.length === 6) {\r\n        this.$nextTick(() => {\r\n          this.$bus.$emit('button-click', 'dialogConfirm');\r\n        });\r\n      }\r\n    },\r\n    loginFlag(v) {\r\n      if (v) {\r\n        this.goHome();\r\n      }\r\n    },\r\n    loginRegistType(v) {\r\n      if (v) {\r\n        this.initNowType();\r\n      }\r\n    },\r\n    // nowUserRegType: {\r\n    //   immediate: true,\r\n    //   handler(v) {\r\n    //     if (v[0] === 1) {\r\n    //       this.nowType = 'phone';\r\n    //     } else {\r\n    //       this.nowType = 'email';\r\n    //     }\r\n    //   },\r\n    // },\r\n  },\r\n  beforeMount() {\r\n    if (this.$route.query.inviteCode) {\r\n      this.invitedValue = this.$route.query.inviteCode;\r\n      this.urlHasinvitedCode = true;\r\n    }\r\n\r\n    if (this.$route.query.email) {\r\n      this.userValue = this.$route.query.email;\r\n      this.nowType = 'email';\r\n    }\r\n    if (this.$route.query.phone) {\r\n      this.userValue = this.$route.query.phone;\r\n      this.nowType = 'phone';\r\n    }\r\n  },\r\n  computed: {\r\n    // userRegType() {\r\n    //   const { publicInfo } = this.$store.state.baseData;\r\n    //   let str = '{}';\r\n    //   if (publicInfo) {\r\n    //     if (publicInfo.switch && publicInfo.switch.user_reg_type) {\r\n    //       str = publicInfo.switch.user_reg_type;\r\n    //     }\r\n    //   }\r\n    //   return JSON.parse(str);\r\n    // },\r\n    // nowUserRegType() {\r\n    //   const lan = getCookie('lan');\r\n    //   let arr = [1, 2];\r\n    //   if (this.userRegType[lan]) {\r\n    //     arr = this.userRegType[lan];\r\n    //   }\r\n    //   return arr;\r\n    // },\r\n    templateType() {\r\n      return this.$store.state.baseData.templateLayoutType;\r\n    },\r\n    isInternationTem() {\r\n      return this.$store.state.baseData.templateLayoutType === '2';\r\n    },\r\n    dialogConfirmDisabled() {\r\n      if (!this.checkFlag && !this.dialogConfirmLoading) return true;\r\n      return false;\r\n    },\r\n    coinsKrwOpen() {\r\n      const { publicInfo } = this.$store.state.baseData;\r\n      let str = '';\r\n      if (publicInfo) {\r\n        if (publicInfo.switch && publicInfo.switch.register_cms_style) {\r\n          str = publicInfo.switch.register_cms_style.toString();\r\n        } else {\r\n          str = '0';\r\n        }\r\n      }\r\n      return str;\r\n    },\r\n    // 是否展示tab切换\r\n    tabFlag() {\r\n      let flag = false;\r\n      // if (this.nowUserRegType.length !== 1) {\r\n      if (this.loginRegistType === '1') {\r\n        flag = true;\r\n      }\r\n      return flag;\r\n    },\r\n    // 开启验证方式\r\n    loginRegistType() {\r\n      const { publicInfo } = this.$store.state.baseData;\r\n      let str = '1'; // 1 手机/邮箱， 2 仅手机， 3 仅邮箱\r\n      if (\r\n        publicInfo\r\n        && publicInfo.switch\r\n        && publicInfo.switch.login_regist_type\r\n      ) {\r\n        str = publicInfo.switch.login_regist_type.toString();\r\n      }\r\n      return str;\r\n    },\r\n    publicInfo() {\r\n      const { publicInfo } = this.$store.state.baseData;\r\n      return publicInfo;\r\n    },\r\n    tabList() {\r\n      let list = [\r\n        // 手机号注册\r\n        { name: this.$t('register.phoneRegister'), key: 'phone' },\r\n        // 邮箱注册\r\n        { name: this.$t('register.emailRegister'), key: 'email' },\r\n      ];\r\n      if (this.lan === 'zh_CN' || this.lan === 'el_GR') {\r\n        // }\r\n        // if (this.nowUserRegType[0] === 2) {\r\n        list = [\r\n          // 邮箱注册\r\n          { name: this.$t('register.emailRegister'), key: 'email' },\r\n          // 手机号注册\r\n          { name: this.$t('register.phoneRegister'), key: 'phone' },\r\n        ];\r\n      }\r\n      return list;\r\n    },\r\n    loginFlag() {\r\n      const { isLogin, userInfoIsReady } = this.$store.state.baseData;\r\n      if (isLogin && userInfoIsReady) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    maxLength() {\r\n      let maxLength = '100';\r\n      if (this.nowType === 'phone') {\r\n        maxLength = '30';\r\n      }\r\n      return maxLength;\r\n    },\r\n    // 运营商名称\r\n    serverName() {\r\n      const { publicInfo } = this.$store.state.baseData;\r\n      let code = '';\r\n      if (publicInfo && publicInfo.msg && publicInfo.msg.company_name) {\r\n        code = publicInfo.msg.company_name;\r\n      }\r\n      return code;\r\n    },\r\n    // 邀请码必填\r\n    mustInvited() {\r\n      const { publicInfo } = this.$store.state.baseData;\r\n      let must = '0';\r\n      if (\r\n        publicInfo\r\n        && publicInfo.switch\r\n        && publicInfo.switch.is_invitationCode_required === '1'\r\n      ) {\r\n        must = '1';\r\n      }\r\n      return must;\r\n    },\r\n    // 是否开启滑动验证\r\n    mustVerify() {\r\n      const { publicInfo } = this.$store.state.baseData;\r\n      if (this.error10003) {\r\n        return true;\r\n      }\r\n      if (\r\n        publicInfo\r\n        && publicInfo.switch\r\n        && publicInfo.switch.regist_must_check_open === '1'\r\n      ) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 所在地验证框\r\n    countryFlag() {\r\n      if (this.nowType === 'phone') {\r\n        return this.country.length;\r\n      }\r\n      return true;\r\n    },\r\n    regExps() {\r\n      return this.$store.state.regExp;\r\n    },\r\n    // userValue 是否复合正则验证\r\n    userFlag() {\r\n      const reg = this.nowType === 'phone' ? this.regExps.phone : this.regExps.email;\r\n      return reg.test(this.userValue);\r\n    },\r\n    // checkValue 是否复合正则验证\r\n    checkFlag() {\r\n      return this.regExps.verification.test(this.checkValue);\r\n    },\r\n    // passValue 是否复合正则验证\r\n    passFlag() {\r\n      return this.regExps.passWord.test(this.passValue);\r\n    },\r\n    // comfirmValue 是否两次密码输入一致\r\n    comfirmFlag() {\r\n      return this.passValue === this.comfirmValue;\r\n    },\r\n    // invitedValue 是否复合正则验证\r\n    invitedFlag() {\r\n      if (this.mustInvited === '0') {\r\n        return true;\r\n      }\r\n      return this.regExps.nonEmpty.test(this.invitedValue);\r\n    },\r\n    //\r\n    countryErrorFlag() {\r\n      if (this.getCodeMustCountry) {\r\n        if (!this.countryFlag) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    // user框是否为错误状态\r\n    userErrorFlag() {\r\n      if (this.getCodeMustUser) {\r\n        if (!this.userFlag) return true;\r\n      } else if (this.userValue.length !== 0 && !this.userFlag) return true;\r\n      return false;\r\n    },\r\n    // 验证框是否为错误\r\n    checkErrorFlag() {\r\n      if (this.checkValue.length !== 0 && !this.checkFlag) return true;\r\n      return false;\r\n    },\r\n    // pass框是否为错误状态\r\n    passErrorFlag() {\r\n      if (this.passValue.length !== 0 && !this.passFlag) return true;\r\n      return false;\r\n    },\r\n    // comfirm框是否为错误状态\r\n    comfirmErrorFlag() {\r\n      if (this.comfirmValue.length !== 0 && !this.comfirmFlag) return true;\r\n      return false;\r\n    },\r\n    // 验证码框是否为错误状态\r\n    invitedErrorFlag() {\r\n      if (this.invitedValue.length !== 0 && !this.invitedFlag) return true;\r\n      return false;\r\n    },\r\n    // 是否展示获取验证码\r\n    isShowGetCode() {\r\n      // 如果强制开启滑动验证\r\n      if (this.mustVerify) {\r\n        // 滑动验证通过 或者 正在倒计时中\r\n        if (this.verifyFlag || this.getCodeHaving) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    // 登录button 禁用状态\r\n    submitDisabled() {\r\n      const {\r\n        countryFlag,\r\n        userFlag,\r\n        passFlag,\r\n        comfirmFlag,\r\n        invitedFlag,\r\n        textFlag,\r\n        textFlag2,\r\n        submitLoading,\r\n      } = this;\r\n      let cms = textFlag;\r\n      if (this.coinsKrwOpen === '1') {\r\n        cms = textFlag && textFlag2;\r\n      }\r\n      if (\r\n        (countryFlag\r\n          && userFlag\r\n          // && checkFlag\r\n          && passFlag\r\n          && comfirmFlag\r\n          && invitedFlag\r\n          && cms)\r\n        || submitLoading\r\n      ) {\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    domKeys() {\r\n      if (this.nowType === 'phone') {\r\n        return {\r\n          userKey: 'phone-user',\r\n          verifyKey: 'phone-verify',\r\n          checkKey: 'phone-check',\r\n          passKey: 'phone-pass',\r\n          comfirmKey: 'phone-comfirm',\r\n          invitedKey: 'phone-invited',\r\n        };\r\n      }\r\n      return {\r\n        userKey: 'email-user',\r\n        verifyKey: 'email-verify',\r\n        checkKey: 'email-check',\r\n        passKey: 'email-pass',\r\n        comfirmKey: 'email-comfirm',\r\n        invitedKey: 'email-invited',\r\n      };\r\n    },\r\n    // 用户框和验证码框 文案和错误文案\r\n    domTexts() {\r\n      if (this.nowType === 'phone') {\r\n        return {\r\n          userText: this.$t('register.phone'), // 手机号\r\n          userError: this.$t('register.phoneError'), // 手机号输入格式不正确\r\n          codeText: this.$t('register.phoneCode'), // 短信验证码\r\n          codeError: this.$t('register.phoneCodeError'), // 请输入6位数字短信验证码\r\n        };\r\n      }\r\n      return {\r\n        userText: this.$t('register.email'), // 邮箱\r\n        userError: this.$t('register.emailError'), // 邮箱输入格式不正确\r\n        codeText: this.$t('register.emailCode'), // 邮箱验证码\r\n        codeError: this.$t('register.emailCodeError'), // 请输入6位数字邮箱验证码\r\n      };\r\n    },\r\n    // 邀请码\r\n    invitedText() {\r\n      if (this.mustInvited === '0') {\r\n        return this.$t('register.InvitationCodeOptional'); // '邀请码(选填)\r\n      }\r\n      return this.$t('register.InvitationCodeIsRequired'); // 邀请码\r\n    },\r\n    companyName() {\r\n      if (this.publicInfo && this.publicInfo.msg) {\r\n        return this.publicInfo.msg.company_name;\r\n      }\r\n      return '';\r\n    },\r\n    singPassCode() {\r\n      return this.$route.query.singPassCode;\r\n    },\r\n    singpassState() {\r\n      return this.$route.query.singPassState;\r\n    },\r\n    submitButtonText() {\r\n      if (this.singPassCode && this.singpassState) {\r\n        return this.$t('singPassLogin.mainText14');\r\n      }\r\n      return this.$t('register.register');\r\n    },\r\n    registerPageTitle() {\r\n      if (this.singPassCode && this.singpassState) {\r\n        return this.$t('singPassLogin.mainText15');\r\n      }\r\n      return this.$t('register.WelcomeToRegister');\r\n    },\r\n    // 默认手机号\r\n    defaultCountryCode() {\r\n      let { defaultCountryCode } = this.$store.state.baseData;\r\n      const { defaultCountryCodeReal } = this.$store.state.baseData;\r\n      const { limitCountryList } = this;\r\n      if (limitCountryList.length > 0 && defaultCountryCode) {\r\n        const countryList = limitCountryList;\r\n        // const countryCode = defaultCountryCode.replace('+', '');\r\n        const countryCodeReal = defaultCountryCodeReal.replace('+', '');\r\n        if (countryList.indexOf(countryCodeReal) > -1) {\r\n          defaultCountryCode = this.registerCountryList[0].keyCode;\r\n        }\r\n      }\r\n      return defaultCountryCode;\r\n    },\r\n    // 默认国家码\r\n    defaultCountryCodeReal() {\r\n      let { defaultCountryCodeReal } = this.$store.state.baseData;\r\n      const { limitCountryList } = this;\r\n      if (limitCountryList.length > 0) {\r\n        const countryList = limitCountryList;\r\n        const countryCode = defaultCountryCodeReal.replace(/\\+/g, '');\r\n        if (countryList.indexOf(countryCode) > -1) {\r\n          defaultCountryCodeReal = '';\r\n        }\r\n      }\r\n      return defaultCountryCodeReal;\r\n    },\r\n  },\r\n  methods: {\r\n    init() {\r\n      if (this.loginFlag) {\r\n        this.goHome();\r\n      }\r\n      this.$bus.$off('emailCode');\r\n      this.$bus.$on('emailCode', (data) => {\r\n        const newData = JSON.parse(JSON.stringify(data));\r\n        newData.callback = undefined;\r\n        this.axios({\r\n          url: 'v4/common/emailValidCode',\r\n          method: 'post',\r\n          header: {},\r\n          params: newData,\r\n        })\r\n          .then((info) => {\r\n            data.callback(info);\r\n          })\r\n          .catch(() => {});\r\n      });\r\n      this.$bus.$off('phoneCode');\r\n      this.$bus.$on('phoneCode', (data) => {\r\n        const newData = JSON.parse(JSON.stringify(data));\r\n        newData.callback = undefined;\r\n        this.axios({\r\n          url: 'v4/common/smsValidCode',\r\n          method: 'post',\r\n          header: {},\r\n          params: newData,\r\n        })\r\n          .then((info) => {\r\n            data.callback(info);\r\n          })\r\n          .catch(() => {\r\n            // console.log(info);\r\n          });\r\n      });\r\n      if (this.loginRegistType) {\r\n        this.initNowType();\r\n      }\r\n    },\r\n    dialogClose() {\r\n      this.dialogFlag = false;\r\n      this.checkValue = '';\r\n      this.haveOption = false;\r\n    },\r\n    dialogConfirm() {\r\n      this.dialogConfirmLoading = true;\r\n      if (this.nowType === 'phone') {\r\n        const params = {\r\n          smsCode: this.checkValue, // 验证码\r\n          token: this.token,\r\n        };\r\n        // 判断是否关联第三方登录账号\r\n        if (this.singPassCode && this.singpassState) {\r\n          params.singPassCode = this.singPassCode;\r\n        }\r\n        this.axios({\r\n          // url: 'v4/user/reg_mobile',\r\n          url: '/user/reg_mobile_confirm',\r\n          params,\r\n          headers: {},\r\n          method: 'post',\r\n        }).then((data) => {\r\n          this.dialogConfirmLoading = false;\r\n          if (data.code.toString() === '0') {\r\n            if (window.location.search.indexOf('return') !== -1) {\r\n              const returnURL = window.location.search.substring(8);\r\n              window.location.href = unescape(returnURL);\r\n            } else if (data.data) {\r\n              const { token } = data.data;\r\n              if (token) {\r\n                // this.$router.push('/login');\r\n                // 登录成功，已登录\r\n                this.$bus.$emit('tip', {\r\n                  text: this.$t('register.registerSuccessQLogin'),\r\n                  type: 'success',\r\n                });\r\n                setCookie('token', token); // 存储cookie\r\n                // 获取 userinfo\r\n                this.$store.dispatch('getUserInfo');\r\n                this.$router.push('/');\r\n              } else {\r\n                // 注册成功, 请登录\r\n                this.$bus.$emit('tip', {\r\n                  text: this.$t('register.registerSuccess'),\r\n                  type: 'success',\r\n                });\r\n                this.$router.push('/login');\r\n              }\r\n            } else {\r\n              // 注册成功, 请登录\r\n              this.$bus.$emit('tip', {\r\n                text: this.$t('register.registerSuccess'),\r\n                type: 'success',\r\n              });\r\n              this.$router.push('/login');\r\n            }\r\n          } else {\r\n            this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n          }\r\n        });\r\n      } else {\r\n        const params = {\r\n          emailCode: this.checkValue, // 验证码\r\n          token: this.token,\r\n        };\r\n        // 判断是否关联第三方登录账号\r\n        if (this.singPassCode && this.singpassState) {\r\n          params.singPassCode = this.singPassCode;\r\n        }\r\n        this.axios({\r\n          // url: 'v4/user/reg_mobile',\r\n          url: '/user/reg_email_confirm',\r\n          params,\r\n          headers: {},\r\n          method: 'post',\r\n        }).then((data) => {\r\n          this.dialogConfirmLoading = false;\r\n          if (data.code.toString() === '0') {\r\n            // 注册成功, 已登录\r\n            if (window.location.search.indexOf('return') !== -1) {\r\n              const returnURL = window.location.search.substring(8);\r\n              window.location.href = unescape(returnURL);\r\n            } else if (data.data) {\r\n              const { token } = data.data;\r\n              if (token) {\r\n                this.$bus.$emit('tip', {\r\n                  text: this.$t('register.registerSuccessQLogin'),\r\n                  type: 'success',\r\n                });\r\n                setCookie('token', token);\r\n                this.$store.dispatch('getUserInfo');\r\n                this.$router.push('/');\r\n              } else {\r\n                this.$bus.$emit('tip', {\r\n                  text: this.$t('register.registerSuccess'),\r\n                  type: 'success',\r\n                });\r\n                this.$router.push('/login');\r\n              }\r\n            } else {\r\n              this.$bus.$emit('tip', {\r\n                text: this.$t('register.registerSuccess'),\r\n                type: 'success',\r\n              });\r\n              this.$router.push('/login');\r\n            }\r\n          } else {\r\n            this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n          }\r\n        });\r\n      }\r\n    },\r\n    buttonClick() {\r\n      this.dialogFlag = true;\r\n    },\r\n    initNowType() {\r\n      if (this.loginRegistType === '3') {\r\n        this.nowType = 'email';\r\n      } else {\r\n        this.nowType = 'phone';\r\n      }\r\n      // if (this.lan === 'zh_CN' || this.lan === 'el_GR') {\r\n      //   this.nowType = 'phone';\r\n      // } else {\r\n      //   this.nowType = 'email';\r\n      // }\r\n    },\r\n    goUrl(url) {\r\n      // 如果是第三方注册 跳转到登录也是第三方登录\r\n      if (url === '/login' && this.singPassCode && this.singpassState) {\r\n        this.$router.push(\r\n          `${url}?code=${this.singPassCode}&state=${this.singpassState}&source=reg`,\r\n        );\r\n      } else {\r\n        this.$router.push(url);\r\n      }\r\n    },\r\n    goHome() {\r\n      this.$router.push('/');\r\n    },\r\n    // tab切换\r\n    setNowType(type) {\r\n      if (this.submitLoading) {\r\n        return;\r\n      } // 如果正在提交禁止切换\r\n      if (type === this.nowType) {\r\n        return;\r\n      }\r\n      if (this.verifyObj.nc) {\r\n        this.verifyObj.nc.reset();\r\n      }\r\n      this.country = this.defaultCountryCodeReal\r\n        ? this.defaultCountryCodeReal\r\n        : this.countryMap[this.defaultCountryCode].code; // 所在地\r\n      this.countryKeyCode = this.defaultCountryCode\r\n        ? this.defaultCountryCode\r\n        : ''; // 所在地\r\n      this.userValue = ''; // user框 (手机号/邮箱）\r\n      this.checkValue = ''; // 验证码框\r\n      this.passValue = ''; // 密码框\r\n      this.comfirmValue = ''; // 确认密码框\r\n      this.invitedValue = ''; // 清楚邀请码\r\n      this.verifyObj = {}; // 滑动返回对象\r\n      this.verifyFlag = false; // 滑动是否通过\r\n      this.textFlag = false; // 清服务条款\r\n      this.nowType = type;\r\n      this.getCodeHaving = false;\r\n      this.getCodeMustCountry = false; // 获取验证码时 关闭所在地的错误\r\n      this.getCodeMustUser = false; // 获取验证码时 关闭user框的错误\r\n      this.error10003 = false;\r\n      if (this.$route.query.inviteCode) {\r\n        this.invitedValue = this.$route.query.inviteCode;\r\n      }\r\n      if (this.$route.query.email && this.nowType === 'email') {\r\n        this.userValue = this.$route.query.email;\r\n      }\r\n    },\r\n    // input onchanges事件\r\n    inputChanges(value, name) {\r\n      this[name] = value;\r\n    },\r\n    // user框获取焦点\r\n    userFocus() {\r\n      this.getCodeMustUser = false;\r\n    },\r\n    // 手机号所在地框获取焦点\r\n    countryFocus(v) {\r\n      if (v) {\r\n        this.getCodeMustCountry = false;\r\n      }\r\n    },\r\n    // 提交\r\n    submit() {\r\n      // this.submitLoading = true;\r\n      let ajaxUrl = '/user/reg_email_chk_info';\r\n      const objData = {\r\n        ...this.verifyObj, // 滑动验证\r\n        nc: undefined,\r\n        loginPword: this.passValue, // 密码\r\n        newPassword: this.comfirmValue, // 新密码\r\n        invitedCode: this.invitedValue, // 邀请码\r\n      };\r\n      if (this.nowType === 'phone') {\r\n        ajaxUrl = '/user/reg_mobile_chk_info';\r\n        objData.countryCode = this.countryKeyCode; // 国家编号\r\n        objData.mobileNumber = this.userValue; // 手机号\r\n      } else {\r\n        objData.email = this.userValue; // 邮箱\r\n      }\r\n      this.axios({\r\n        // url: 'v4/user/reg_mobile',\r\n        url: ajaxUrl,\r\n        params: objData,\r\n        headers: {},\r\n        method: 'post',\r\n      }).then((data) => {\r\n        // this.submitLoading = false;\r\n        if (data.code.toString() === '0') {\r\n          this.token = data.data.token;\r\n          this.haveOption = true;\r\n          this.$nextTick(() => {\r\n            this.getCodeClick();\r\n          });\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n          this.dialogFlag = false;\r\n        }\r\n      });\r\n    },\r\n    // 点击获取验证码\r\n    getCodeClick() {\r\n      // 发送验证码\r\n      this.sendCode();\r\n      // this.verifyObj = {};\r\n      // this.verifyFlag = false;\r\n      // 倒计时开始\r\n      this.$bus.$emit('getCode-start', 'registerGetcode');\r\n      // 获取验证码计时开始\r\n      this.getCodeHaving = true;\r\n    },\r\n    // 倒计时重置\r\n    getCodeClear() {\r\n      // 获取验证码计时结束\r\n      this.getCodeHaving = false;\r\n    },\r\n    // 发送短信/邮箱\r\n    sendCode() {\r\n      if (this.nowType === 'phone') {\r\n        const countryCode = this.countryKeyCode; // 区号\r\n        this.$bus.$emit('phoneCode', {\r\n          token: this.token,\r\n          countryCode, // 区号\r\n          // mobile: this.userValue, // 手机号\r\n          operationType: '1', // 模版\r\n          callback: (data) => {\r\n            if (data.code.toString() === '0') {\r\n              // 短信已发送，请注意查收\r\n              this.$bus.$emit('tip', {\r\n                text: this.$t('register.phoneSendSuccess'),\r\n                type: 'success',\r\n              });\r\n            } else if (data.code.toString() === '10003') {\r\n              if (this.error10003) {\r\n                this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n              } else {\r\n                this.error10003 = true;\r\n                // 请滑动安全验证后再获取验证码\r\n                this.$bus.$emit('tip', {\r\n                  text: this.$t('register.scrollCode'),\r\n                  type: 'warning',\r\n                });\r\n              }\r\n              // 倒计时重置\r\n              this.$bus.$emit('getCode-clear', 'registerGetcode');\r\n            } else {\r\n              // 倒计时重置\r\n              this.$bus.$emit('getCode-clear', 'registerGetcode');\r\n              // tip框提示错误\r\n              this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n            }\r\n          },\r\n        });\r\n      } else if (this.nowType === 'email') {\r\n        this.$bus.$emit('emailCode', {\r\n          token: this.token,\r\n          // ...this.verifyObj, // 滑动验证\r\n          // nc: undefined,\r\n          // email: this.userValue, // 邮箱\r\n          operationType: '1',\r\n          callback: (data) => {\r\n            if (data.code.toString() === '0') {\r\n              // 邮件已发送，请注意查收\r\n              this.$bus.$emit('tip', {\r\n                text: this.$t('register.emailSendSuccess'),\r\n                type: 'success',\r\n              });\r\n            } else if (data.code.toString() === '10003') {\r\n              if (this.error10003) {\r\n                // tip框提示错误\r\n                this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n              } else {\r\n                this.error10003 = true;\r\n                // 请滑动安全验证后再获取验证码\r\n                this.$bus.$emit('tip', {\r\n                  text: this.$t('register.scrollCode'),\r\n                  type: 'warning',\r\n                });\r\n              }\r\n              // 倒计时重置\r\n              this.$bus.$emit('getCode-clear', 'registerGetcode');\r\n            } else {\r\n              // 倒计时重置\r\n              this.$bus.$emit('getCode-clear', 'registerGetcode');\r\n              // tip框提示错误\r\n              this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n            }\r\n          },\r\n        });\r\n      }\r\n    },\r\n    // 滑动验证回调\r\n    verifyCallBack(parameter) {\r\n      this.verifyObj = parameter;\r\n      this.verifyFlag = true;\r\n      this.submit();\r\n    },\r\n    // 同意服务条款\r\n    checkoutClick(flag) {\r\n      this.textFlag = flag;\r\n    },\r\n    // 同意服务条款\r\n    checkoutClick2(flag) {\r\n      this.textFlag2 = flag;\r\n    },\r\n    // 同意服务条款\r\n    checkoutClick3(flag) {\r\n      this.textFlag3 = flag;\r\n    },\r\n  },\r\n};\r\n"]}]}