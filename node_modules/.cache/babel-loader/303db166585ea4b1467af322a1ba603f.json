{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/components/set-futures/set-futures.js","dependencies":[{"path":"/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/components/set-futures/set-futures.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n\n/*\r\n@ 喜好设置\r\n@author HDD */\nimport { myStorage } from '@/utils';\nexport default {\n  name: 'forced-reminder',\n  data: function data() {\n    return {\n      // 持仓类型 1: 单向持仓 2： 双向持仓\n      positionModel: myStorage.get('positionModel') || 2,\n      // 下单二次确认\n      pcSecondConfirm: myStorage.get('pcSecondConfirm') || 1,\n      // 展示单位\n      coUnit: myStorage.get('coUnitType') || 2,\n      // 是否可以切换持仓类型\n      positionModelCanSwitch: true,\n      // 二次确认开关\n      switchFlag: true,\n      // 有效期\n      expireTime: 14\n    };\n  },\n  props: {\n    isShow: {\n      default: false,\n      type: Boolean\n    },\n    close: {\n      default: function _default() {},\n      type: Function\n    }\n  },\n  computed: {\n    lanText: function lanText() {\n      return {\n        titleText: this.$t('futures.setFutures.titleText'),\n        // '交易喜好设置',\n        text1: this.$t('futures.setFutures.text1'),\n        // '持仓类型',\n        text2: this.$t('futures.setFutures.text2'),\n        // '持有任何合约仓位/有挂单时不可更改持仓类型',\n        text3: this.$t('futures.setFutures.text3'),\n        // '单向持仓',\n        text4: this.$t('futures.setFutures.text4'),\n        // '单向持仓模式下，一个合约只允许持有一个方向的仓位',\n        text5: this.$t('futures.setFutures.text5'),\n        // '双向持仓',\n        text6: this.$t('futures.setFutures.text6'),\n        // '双向持仓模式下，一个合约可允许同时持有多空两个方向的仓位，并且同一合约下不同方向仓位风险对冲',\n        text7: this.$t('futures.setFutures.text7'),\n        // '下单前弹框确认',\n        text8: this.$t('futures.setFutures.text8'),\n        // '开启',\n        text9: this.$t('futures.setFutures.text9'),\n        // '关闭',\n        text10: this.$t('futures.setFutures.text10'),\n        // '合约单位',\n        text11: this.$t('futures.setFutures.text11'),\n        // '张',\n        text12: this.$t('futures.setFutures.text12') // '确定',\n\n      };\n    },\n    // 用户配置信息\n    userConfig: function userConfig() {\n      return this.$store.state.future.futureUserConfig;\n    },\n    // 当前合约信息\n    contractInfo: function contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 币种单位\n    multiplierCoin: function multiplierCoin() {\n      if (this.userConfig) {\n        return this.userConfig.multiplierCoin;\n      }\n\n      if (this.contractInfo) {\n        return this.contractInfo.base;\n      }\n\n      return 'BTC';\n    },\n    // 是否Login\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    // 当前合约ID\n    contractId: function contractId() {\n      return this.$store.state.future.contractId;\n    },\n    // 提交保证金按钮文案\n    confirmText: function confirmText() {\n      return this.lanText.text12; // '确定';\n    },\n    // 是否开通了合约交易\n    openContract: function openContract() {\n      return this.$store.state.future.openContract;\n    }\n  },\n  watch: {\n    userConfig: function userConfig(val) {\n      if (val) {\n        this.positionModel = this.userConfig.positionModel;\n        this.pcSecondConfirm = this.userConfig.pcSecondConfirm;\n        this.coUnit = this.userConfig.coUnit;\n        this.expireTime = this.userConfig.expireTime;\n        this.positionModelCanSwitch = !!this.userConfig.positionModelCanSwitch;\n        myStorage.set('pcSecondConfirm', this.pcSecondConfirm);\n      } else {\n        this.pcSecondConfirm = myStorage.get('pcSecondConfirm') || 1;\n      }\n\n      if (this.pcSecondConfirm) {\n        this.switchFlag = true;\n      } else {\n        this.switchFlag = false;\n      }\n    }\n  },\n  methods: {\n    init: function init() {\n      if (this.userConfig) {\n        this.positionModel = this.userConfig.positionModel;\n        this.pcSecondConfirm = this.userConfig.pcSecondConfirm;\n        this.coUnit = this.userConfig.coUnit;\n        this.expireTime = this.userConfig.expireTime;\n        this.positionModelCanSwitch = !!this.userConfig.positionModelCanSwitch;\n        myStorage.set('pcSecondConfirm', this.pcSecondConfirm);\n      } else {\n        this.pcSecondConfirm = myStorage.get('pcSecondConfirm') || 1;\n      }\n\n      if (this.pcSecondConfirm) {\n        this.switchFlag = true;\n      } else {\n        this.switchFlag = false;\n      }\n    },\n    // 切换事件\n    redioChange: function redioChange(type, vlaue) {\n      if (type === 'positionModel' && !this.positionModelCanSwitch && this.isLogin && this.openContract) {\n        this.$bus.$emit('tip', {\n          text: '持有任何合约仓位/有挂单时不可更改持仓类型',\n          type: 'error'\n        });\n      } else {\n        this[type] = vlaue;\n      }\n    },\n    switchChange: function switchChange() {\n      this.switchFlag = !this.switchFlag;\n    },\n    // 提交\n    submitConfirm: function submitConfirm() {\n      var _this = this;\n\n      // 判断未登录 或者 为开通合约的情况\n      if (!this.isLogin || !this.openContract) {\n        myStorage.set('coUnitType', this.coUnit);\n        myStorage.set('pcSecondConfirm', this.pcSecondConfirm);\n        myStorage.set('positionModel', this.positionModel);\n        this.$store.commit('SET_COUNIT_TYPE', this.coUnit);\n        this.$store.dispatch('setActivePublicInfo');\n        this.$bus.$emit('set-future', {\n          positionModel: this.positionModel,\n          coUnit: this.coUnit,\n          pcSecondConfirm: this.pcSecondConfirm\n        });\n        this.close();\n        return false;\n      }\n\n      if (this.userConfig) {\n        this.dialogConfirmLoading = true;\n        this.axios({\n          url: this.$store.state.url.futures.editUserPageConfig,\n          hostType: 'co',\n          method: 'post',\n          params: {\n            positionModel: this.positionModel,\n            pcSecondConfirm: this.switchFlag ? 1 : 0,\n            coUnit: this.coUnit,\n            contractId: this.contractId,\n            expireTime: this.expireTime\n          }\n        }).then(function (_ref) {\n          var code = _ref.code,\n              msg = _ref.msg;\n\n          if (code.toString() === '0') {\n            myStorage.set('pcSecondConfirm', _this.pcSecondConfirm);\n            myStorage.set('coUnitType', _this.coUnit);\n            myStorage.set('positionModel', _this.positionModel);\n\n            _this.$store.dispatch('getUserConfig');\n\n            _this.close();\n\n            _this.$bus.$emit('tip', {\n              text: msg,\n              type: 'success'\n            });\n          } else {\n            _this.$bus.$emit('tip', {\n              text: msg,\n              type: 'error'\n            });\n          }\n\n          _this.dialogConfirmLoading = false;\n        });\n      } else {\n        console.error('没有获取到userConfig');\n      }\n\n      return false;\n    }\n  }\n};",{"version":3,"sources":["/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/components/set-futures/set-futures.js"],"names":["myStorage","name","data","positionModel","get","pcSecondConfirm","coUnit","positionModelCanSwitch","switchFlag","expireTime","props","isShow","default","type","Boolean","close","Function","computed","lanText","titleText","$t","text1","text2","text3","text4","text5","text6","text7","text8","text9","text10","text11","text12","userConfig","$store","state","future","futureUserConfig","contractInfo","multiplierCoin","base","isLogin","baseData","contractId","confirmText","openContract","watch","val","set","methods","init","redioChange","vlaue","$bus","$emit","text","switchChange","submitConfirm","commit","dispatch","dialogConfirmLoading","axios","url","futures","editUserPageConfig","hostType","method","params","then","code","msg","toString","console","error"],"mappings":"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","sourcesContent":["/*\r\n@ 喜好设置\r\n@author HDD */\r\nimport { myStorage } from '@/utils';\r\n\r\nexport default {\r\n  name: 'forced-reminder',\r\n  data() {\r\n    return {\r\n      // 持仓类型 1: 单向持仓 2： 双向持仓\r\n      positionModel: myStorage.get('positionModel') || 2,\r\n      // 下单二次确认\r\n      pcSecondConfirm: myStorage.get('pcSecondConfirm') || 1,\r\n      // 展示单位\r\n      coUnit: myStorage.get('coUnitType') || 2,\r\n      // 是否可以切换持仓类型\r\n      positionModelCanSwitch: true,\r\n      // 二次确认开关\r\n      switchFlag: true,\r\n      // 有效期\r\n      expireTime: 14,\r\n    };\r\n  },\r\n  props: {\r\n    isShow: {\r\n      default: false,\r\n      type: Boolean,\r\n    },\r\n    close: {\r\n      default() {},\r\n      type: Function,\r\n    },\r\n  },\r\n  computed: {\r\n    lanText() {\r\n      return {\r\n        titleText: this.$t('futures.setFutures.titleText'), // '交易喜好设置',\r\n        text1: this.$t('futures.setFutures.text1'), // '持仓类型',\r\n        text2: this.$t('futures.setFutures.text2'), // '持有任何合约仓位/有挂单时不可更改持仓类型',\r\n        text3: this.$t('futures.setFutures.text3'), // '单向持仓',\r\n        text4: this.$t('futures.setFutures.text4'), // '单向持仓模式下，一个合约只允许持有一个方向的仓位',\r\n        text5: this.$t('futures.setFutures.text5'), // '双向持仓',\r\n        text6: this.$t('futures.setFutures.text6'), // '双向持仓模式下，一个合约可允许同时持有多空两个方向的仓位，并且同一合约下不同方向仓位风险对冲',\r\n        text7: this.$t('futures.setFutures.text7'), // '下单前弹框确认',\r\n        text8: this.$t('futures.setFutures.text8'), // '开启',\r\n        text9: this.$t('futures.setFutures.text9'), // '关闭',\r\n        text10: this.$t('futures.setFutures.text10'), // '合约单位',\r\n        text11: this.$t('futures.setFutures.text11'), // '张',\r\n        text12: this.$t('futures.setFutures.text12'), // '确定',\r\n      };\r\n    },\r\n    // 用户配置信息\r\n    userConfig() {\r\n      return this.$store.state.future.futureUserConfig;\r\n    },\r\n    // 当前合约信息\r\n    contractInfo() {\r\n      return this.$store.state.future.contractInfo;\r\n    },\r\n    // 币种单位\r\n    multiplierCoin() {\r\n      if (this.userConfig) {\r\n        return this.userConfig.multiplierCoin;\r\n      } if (this.contractInfo) {\r\n        return this.contractInfo.base;\r\n      }\r\n      return 'BTC';\r\n    },\r\n    // 是否Login\r\n    isLogin() {\r\n      return this.$store.state.baseData.isLogin;\r\n    },\r\n    // 当前合约ID\r\n    contractId() {\r\n      return this.$store.state.future.contractId;\r\n    },\r\n    // 提交保证金按钮文案\r\n    confirmText() {\r\n      return this.lanText.text12; // '确定';\r\n    },\r\n    // 是否开通了合约交易\r\n    openContract() {\r\n      return this.$store.state.future.openContract;\r\n    },\r\n  },\r\n  watch: {\r\n\r\n    userConfig(val) {\r\n      if (val) {\r\n        this.positionModel = this.userConfig.positionModel;\r\n        this.pcSecondConfirm = this.userConfig.pcSecondConfirm;\r\n        this.coUnit = this.userConfig.coUnit;\r\n        this.expireTime = this.userConfig.expireTime;\r\n        this.positionModelCanSwitch = !!this.userConfig.positionModelCanSwitch;\r\n        myStorage.set('pcSecondConfirm', this.pcSecondConfirm);\r\n      } else {\r\n        this.pcSecondConfirm = myStorage.get('pcSecondConfirm') || 1;\r\n      }\r\n      if (this.pcSecondConfirm) {\r\n        this.switchFlag = true;\r\n      } else {\r\n        this.switchFlag = false;\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    init() {\r\n      if (this.userConfig) {\r\n        this.positionModel = this.userConfig.positionModel;\r\n        this.pcSecondConfirm = this.userConfig.pcSecondConfirm;\r\n        this.coUnit = this.userConfig.coUnit;\r\n        this.expireTime = this.userConfig.expireTime;\r\n        this.positionModelCanSwitch = !!this.userConfig.positionModelCanSwitch;\r\n        myStorage.set('pcSecondConfirm', this.pcSecondConfirm);\r\n      } else {\r\n        this.pcSecondConfirm = myStorage.get('pcSecondConfirm') || 1;\r\n      }\r\n      if (this.pcSecondConfirm) {\r\n        this.switchFlag = true;\r\n      } else {\r\n        this.switchFlag = false;\r\n      }\r\n    },\r\n    // 切换事件\r\n    redioChange(type, vlaue) {\r\n      if (type === 'positionModel' && !this.positionModelCanSwitch && this.isLogin && this.openContract) {\r\n        this.$bus.$emit('tip', { text: '持有任何合约仓位/有挂单时不可更改持仓类型', type: 'error' });\r\n      } else {\r\n        this[type] = vlaue;\r\n      }\r\n    },\r\n    switchChange() {\r\n      this.switchFlag = !this.switchFlag;\r\n    },\r\n    // 提交\r\n    submitConfirm() {\r\n      // 判断未登录 或者 为开通合约的情况\r\n      if (!this.isLogin || !this.openContract) {\r\n        myStorage.set('coUnitType', this.coUnit);\r\n        myStorage.set('pcSecondConfirm', this.pcSecondConfirm);\r\n        myStorage.set('positionModel', this.positionModel);\r\n        this.$store.commit('SET_COUNIT_TYPE', this.coUnit);\r\n        this.$store.dispatch('setActivePublicInfo');\r\n        this.$bus.$emit('set-future', {\r\n          positionModel: this.positionModel,\r\n          coUnit: this.coUnit,\r\n          pcSecondConfirm: this.pcSecondConfirm,\r\n        });\r\n        this.close();\r\n        return false;\r\n      }\r\n      if (this.userConfig) {\r\n        this.dialogConfirmLoading = true;\r\n        this.axios({\r\n          url: this.$store.state.url.futures.editUserPageConfig,\r\n          hostType: 'co',\r\n          method: 'post',\r\n          params: {\r\n            positionModel: this.positionModel,\r\n            pcSecondConfirm: this.switchFlag ? 1 : 0,\r\n            coUnit: this.coUnit,\r\n            contractId: this.contractId,\r\n            expireTime: this.expireTime,\r\n          },\r\n        }).then(({ code, msg }) => {\r\n          if (code.toString() === '0') {\r\n            myStorage.set('pcSecondConfirm', this.pcSecondConfirm);\r\n            myStorage.set('coUnitType', this.coUnit);\r\n            myStorage.set('positionModel', this.positionModel);\r\n            this.$store.dispatch('getUserConfig');\r\n            this.close();\r\n            this.$bus.$emit('tip', { text: msg, type: 'success' });\r\n          } else {\r\n            this.$bus.$emit('tip', { text: msg, type: 'error' });\r\n          }\r\n          this.dialogConfirmLoading = false;\r\n        });\r\n      } else {\r\n        console.error('没有获取到userConfig');\r\n      }\r\n      return false;\r\n    },\r\n  },\r\n};\r\n"]}]}