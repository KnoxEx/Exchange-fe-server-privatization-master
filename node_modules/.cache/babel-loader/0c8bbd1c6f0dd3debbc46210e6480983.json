{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/order/exchangeOrder/exchangeOrder.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/order/exchangeOrder/exchangeOrder.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { fixD, getCoinShowName, imgMap, colorMap } from '@/utils';\nexport default {\n  data: function data() {\n    return {\n      imgMap: imgMap,\n      colorMap: colorMap,\n      deleteArr: [],\n      tabelLoading: true,\n      switchFlag: false,\n      // 显示已撤单\n      nowType: 1,\n      // 1为当前委托 2为历史委托\n      symbol: '',\n      // 当前币种\n      symbolList: [],\n      // 币种选择列表\n      side: 'all',\n      // 方向\n      paginationObj: {\n        total: 0,\n        // 数据总条数\n        display: 10,\n        // 每页显示条数\n        currentPage: 1 // 当前页码\n\n      },\n      symbolMarketList: [],\n      // 市场列表\n      symbolMarket: '',\n      // 当前市场\n      symbolCoinList: [],\n      // 币种列表\n      symbolCoin: '',\n      // 币种列表\n      subTableData: {},\n      tabelList: [],\n      revokeList: [],\n      // 撤销队列\n      subContent: [],\n      // 展开的数据\n      subColumns: [],\n      // 展开的表头\n      subContentId: 0,\n      // 展开的id\n      subLoading: false // 展开的loading\n\n    };\n  },\n  watch: {\n    market: function market(v) {\n      if (v) {\n        this.initSymbolMarketList();\n      }\n    }\n  },\n  computed: {\n    navTab: function navTab() {\n      return [// 当前委托\n      {\n        name: this.$t('order.exchangeOrder.nowOrder'),\n        index: 1\n      }, // 历史委托\n      {\n        name: this.$t('order.exchangeOrder.hisOrder'),\n        index: 2\n      }];\n    },\n    sideList: function sideList() {\n      return [// 方向选择列表\n      // 全部\n      {\n        code: 'all',\n        value: this.$t('order.exchangeOrder.all')\n      }, // 买入\n      {\n        code: 'buy',\n        value: this.$t('order.exchangeOrder.buy')\n      }, // 卖出\n      {\n        code: 'sell',\n        value: this.$t('order.exchangeOrder.sell')\n      }];\n    },\n    market: function market() {\n      return this.$store.state.baseData.market;\n    },\n    // 表格title\n    columns: function columns() {\n      var list = []; // let market = this.symbolMarket;\n      // let coin = this.symbolCoin;\n      // const { coinList } = this.market ? this.market.coinList : '';\n      // if (coinList) {\n      //   // market = market === 'all' ? '' : `(${getCoinShowName(market, coinList)})`;\n      //   // coin = coin === 'all' ? '' : `(${getCoinShowName(coin, coinList)})`;\n      // }\n\n      if (this.nowType === 1) {\n        list = [// 时间\n        {\n          title: this.$t('order.exchangeOrder.nowOrderTime'),\n          width: '70px'\n        }, // 币对\n        {\n          title: this.$t('order.exchangeOrder.coin'),\n          width: '70px'\n        }, // 类别\n        {\n          title: this.$t('order.exchangeOrder.nowOrderType'),\n          width: '70px'\n        }, // 价格\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.nowOrderPrice'))\n        }, // 数量\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.nowOrderVolume'))\n        }, // 交易额\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.nowOrderTotol'))\n        }, // 平均成交价\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.nowOrderAverage')) // width: '130px',\n\n        }, // 已成交/未成交\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.nowOrderTransaction')),\n          width: '140px'\n        }, // 操作\n        {\n          title: this.$t('order.exchangeOrder.nowOrderOptions'),\n          width: '100px'\n        }];\n      }\n\n      if (this.nowType === 2) {\n        list = [// 时间\n        {\n          title: this.$t('order.exchangeOrder.hisOrderTime'),\n          width: '70px'\n        }, // 币对\n        {\n          title: this.$t('order.exchangeOrder.coin'),\n          width: '70px'\n        }, // 类别\n        {\n          title: this.$t('order.exchangeOrder.hisOrderType'),\n          width: '70px'\n        }, // 价格\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.hisOrderPrice'))\n        }, // 数量\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.hisOrderVolume'))\n        }, // 成交均价\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.hisOrderAverage')) // width: '130px',\n\n        }, // 状态\n        {\n          title: this.$t('order.exchangeOrder.hisOrderStatus')\n        }, // 操作\n        {\n          title: this.$t('order.exchangeOrder.hisOrderOptions'),\n          width: '100px'\n        }];\n      }\n\n      return list;\n    },\n    axiosSide: function axiosSide() {\n      if (this.side === 'all') {\n        return '';\n      }\n\n      return this.side;\n    },\n    axiosSymbol: function axiosSymbol() {\n      return \"\".concat(this.symbolCoin).concat(this.symbolMarket).toLowerCase();\n    },\n    symbolAll: function symbolAll() {\n      return this.$store.state.baseData.symbolAll;\n    },\n    // 是否开启 查询全部币对\n    openOrderCollect: function openOrderCollect() {\n      if (this.$store.state.baseData.publicInfo) {\n        return this.$store.state.baseData.publicInfo.open_order_collect;\n      }\n\n      return null;\n    }\n  },\n  methods: {\n    init: function init() {\n      if (this.$route.query.nowType) {\n        this.nowType = Number(this.$route.query.nowType);\n      }\n\n      if (this.market) {\n        this.initSymbolMarketList();\n      }\n    },\n    // 市场发生改变\n    symbolMarketChange: function symbolMarketChange(item) {\n      if (this.symbolMarket === item.code) {\n        return;\n      }\n\n      this.symbolMarket = item.code; // 创建币种列表\n\n      var list = [];\n\n      if (this.openOrderCollect === '1' && this.symbolMarket === 'all') {\n        list.push({\n          value: this.$t('order.exchangeOrder.all'),\n          code: 'all'\n        });\n      }\n\n      var market = this.market.market;\n      var curList = market[this.symbolMarket];\n\n      if (this.symbolMarket === 'all') {\n        curList = this.symbolAll;\n      }\n\n      if (curList) {\n        Object.keys(curList).forEach(function (citem) {\n          var coinArr = citem.split('/');\n          var citemObj = curList[citem];\n          var showSymbol = citemObj.showName || citemObj.name;\n          list.push({\n            code: \"\".concat(coinArr[0]).concat(coinArr[1]),\n            value: showSymbol\n          });\n        });\n      }\n\n      this.symbolCoinList = list;\n\n      if (list.length) {\n        this.symbolCoinChange(list[0]);\n      }\n    },\n    // 币种发生改变\n    symbolCoinChange: function symbolCoinChange(item) {\n      if (this.symbolCoin === item.code) {\n        return;\n      }\n\n      this.symbolCoin = item.code;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.clearSub();\n      this.getData();\n    },\n    // 初始化市场\n    initSymbolMarketList: function initSymbolMarketList() {\n      var _this$market = this.market,\n          market = _this$market.market,\n          coinList = _this$market.coinList;\n      var list = [];\n\n      if (this.openOrderCollect === '1') {\n        list.push({\n          value: this.$t('order.exchangeOrder.all180'),\n          code: 'all'\n        });\n      }\n\n      Object.keys(market).forEach(function (item) {\n        list.push({\n          value: getCoinShowName(item, coinList),\n          code: item\n        });\n      });\n      this.symbolMarketList = list;\n\n      if (list.length) {\n        this.symbolMarketChange(list[0]);\n      }\n    },\n    switchChange: function switchChange() {\n      this.switchFlag = !this.switchFlag;\n      this.getData();\n    },\n    // 切换委托\n    currentType: function currentType(item) {\n      if (this.nowType === item.index) {\n        return;\n      }\n\n      this.nowType = item.index;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.clearSub();\n      this.getData();\n    },\n    getData: function getData() {\n      if (this.nowType === 1) {\n        this.getNowData();\n      } else if (this.nowType === 2) {\n        this.getHisData();\n      }\n    },\n    getFix: function getFix(market, coin) {\n      // 例如 btc/usdt\n      var marketFix = 0; // 市场精度 usdt\n\n      var coinFix = 0; // 交易币种精度 btc\n\n      var symbol = \"\".concat(coin, \"/\").concat(market);\n\n      if (this.symbolAll[symbol]) {\n        var _this$symbolAll$symbo = this.symbolAll[symbol],\n            price = _this$symbolAll$symbo.price,\n            volume = _this$symbolAll$symbo.volume;\n        marketFix = price;\n        coinFix = volume;\n      }\n\n      return {\n        marketFix: marketFix,\n        coinFix: coinFix\n      };\n    },\n    // 获取当前\n    getNowData: function getNowData() {\n      var _this = this;\n\n      var symbolCoin = this.symbolCoin === 'all' ? '' : this.symbolCoin; // const symbolMarket = this.symbolMarket === 'all' ? '' : this.symbolMarket;\n\n      var symbol = symbolCoin.toLowerCase();\n      var ajaxUrl = 'order/list/new';\n      var paramsData = {\n        side: this.axiosSide,\n        pageSize: this.paginationObj.display,\n        // 每页条数\n        page: this.paginationObj.currentPage,\n        // 页码\n        symbol: symbol\n      };\n\n      if (this.openOrderCollect === '1') {\n        paramsData.entrust = this.nowType;\n        paramsData.orderType = 1;\n        ajaxUrl = 'order/entrust_search';\n      }\n\n      this.axios({\n        url: ajaxUrl,\n        method: 'post',\n        params: paramsData\n      }).then(function (data) {\n        if (_this.nowType !== 1) return;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var orderList = data.data.orderList;\n\n          if (_this.openOrderCollect === '1') {\n            orderList = data.data.orders;\n          }\n\n          orderList.forEach(function (item) {\n            var quoteCoin = item.quoteCoin || item.countCoin;\n\n            var _this$getFix = _this.getFix(quoteCoin, item.baseCoin),\n                marketFix = _this$getFix.marketFix,\n                coinFix = _this$getFix.coinFix;\n\n            var showClose = true;\n\n            if (item.type === 2 || item.status === 5 || item.isCloseCancelOrder && item.isCloseCancelOrder.toString() === '1') {\n              showClose = false;\n            }\n\n            list.push({\n              id: item.id,\n              data: [item.created_at, // 时间\n              \"\".concat(item.baseCoin, \"/\").concat(quoteCoin), // 币对\n              [{\n                text: item.side_text,\n                classes: item.side === 'BUY' ? 'b-5-cl' : 'b-6-cl'\n              }], item.type.toString() === '1' ? \"\".concat(fixD(item.price, marketFix), \" \").concat(quoteCoin) // 价格\n              : _this.$t('order.exchangeOrder.marketPrice'), // 市价\n              \"\".concat(fixD(item.volume, coinFix), \" \").concat(item.baseCoin), // 数量\n              \"\".concat(fixD(item.total_price, marketFix), \" \").concat(quoteCoin), // 交易额\n              \"\".concat(fixD(item.avg_price, marketFix), \" \").concat(quoteCoin), // 平均成交价\n              [{\n                text: \"\".concat(fixD(item.deal_volume, coinFix), \" \").concat(item.baseCoin),\n                subContent: {\n                  text: \"\".concat(fixD(item.remain_volume, coinFix), \" \").concat(item.baseCoin)\n                }\n              }], [showClose ? {\n                type: 'button',\n                text: _this.$t('order.exchangeOrder.cancel'),\n                // 撤单\n                eventType: 'cancelOrder'\n              } : '']]\n            });\n          });\n          _this.tabelLoading = false;\n          _this.tabelList = list;\n          _this.paginationObj.total = data.data.count;\n        } else {\n          _this.tabelLoading = false;\n\n          _this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 分页器\n    pagechange: function pagechange(v) {\n      this.paginationObj.currentPage = v;\n      this.clearSub();\n      this.getData();\n    },\n    // 获取历史\n    getHisData: function getHisData() {\n      var _this2 = this;\n\n      var symbolCoin = this.symbolCoin === 'all' ? '' : this.symbolCoin; // const symbolMarket = this.symbolMarket === 'all' ? '' : this.symbolMarket;\n\n      var symbol = symbolCoin.toLowerCase();\n      var ajaxUrl = '/order/entrust_history';\n      var paramsData = {\n        side: this.axiosSide,\n        pageSize: this.paginationObj.display,\n        // 每页条数\n        page: this.paginationObj.currentPage,\n        // 页码\n        isShowCanceled: this.switchFlag ? 1 : 0,\n        // 是否展示已撤单\n        symbol: symbol\n      };\n\n      if (this.openOrderCollect === '1') {\n        paramsData.entrust = this.nowType;\n        paramsData.orderType = 1;\n        ajaxUrl = 'order/entrust_search';\n      }\n\n      this.axios({\n        url: ajaxUrl,\n        method: 'post',\n        params: paramsData\n      }).then(function (data) {\n        if (_this2.nowType !== 2) return;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var orderList = data.data.orderList;\n\n          if (_this2.openOrderCollect === '1') {\n            orderList = data.data.orders;\n          }\n\n          orderList.forEach(function (item) {\n            var quoteCoin = item.quoteCoin || item.countCoin;\n\n            var _this2$getFix = _this2.getFix(quoteCoin, item.baseCoin),\n                marketFix = _this2$getFix.marketFix,\n                coinFix = _this2$getFix.coinFix;\n\n            var subTableBtn = [];\n\n            if (item.status === 2 || item.status === 4 && parseFloat(item.deal_volume) !== 0) {\n              subTableBtn = [{\n                type: 'subTable',\n                text: _this2.$t('order.exchangeOrder.details'),\n                // 详情\n                eventType: 'view'\n              }];\n            } else {\n              subTableBtn = [];\n            }\n\n            list.push({\n              id: item.id,\n              data: [item.created_at, \"\".concat(item.baseCoin, \"/\").concat(quoteCoin), // 币对\n              [{\n                text: item.side_text,\n                classes: item.side === 'BUY' ? 'b-5-cl' : 'b-6-cl'\n              }], item.type.toString() === '1' ? \"\".concat(fixD(item.price, marketFix), \" \").concat(quoteCoin) // 价格\n              : _this2.$t('order.exchangeOrder.marketPrice'), // 市价\n              \"\".concat(fixD(item.volume, coinFix), \" \").concat(item.baseCoin), // 数量\n              \"\".concat(fixD(item.avg_price, marketFix), \" \").concat(quoteCoin), // 平均成交价\n              item.status_text, subTableBtn]\n            });\n          });\n          _this2.tabelLoading = false;\n          _this2.tabelList = list;\n          _this2.paginationObj.total = data.data.count;\n        } else {\n          _this2.tabelLoading = false;\n\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 切换方向\n    sideChange: function sideChange(item) {\n      if (this.side === item.code) {\n        return;\n      }\n\n      this.side = item.code;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.clearSub();\n      this.getData();\n    },\n    tableClick: function tableClick(type, id) {\n      if (type === 'cancelOrder') {\n        this.cancelOrder(id);\n      }\n\n      if (type === 'view') {\n        this.getSubTableData(id);\n      }\n    },\n    // 重置详情\n    clearSub: function clearSub() {\n      this.subContentId = null;\n      this.subColumns = [];\n      this.subContent = [];\n      this.subLoading = false;\n    },\n    // 查看详情\n    getSubTableData: function getSubTableData(v) {\n      var _this3 = this;\n\n      if (v.open) {\n        this.subContentId = v.id;\n        this.subColumns = [this.$t('order.exchangeOrder.detailsTime'), // 时间\n        this.$t('order.exchangeOrder.detailsPrice'), // 价格\n        this.$t('order.exchangeOrder.detailsVolume'), // 数量\n        this.$t('order.exchangeOrder.detailsTotol'), // 成交额\n        this.$t('order.exchangeOrder.detailsFee') // 手续费\n        ];\n        this.subContent = [];\n        this.subLoading = true;\n        var symbol = '';\n        this.tabelList.forEach(function (item) {\n          if (item.id === v.id) {\n            var _item$data = _slicedToArray(item.data, 2);\n\n            symbol = _item$data[1];\n          }\n        });\n        var symbolCoin = \"\".concat(symbol.split('/')[0]).concat(symbol.split('/')[1]);\n        this.axios({\n          url: 'trade/list_by_order',\n          method: 'post',\n          params: {\n            symbol: symbolCoin,\n            order_id: v.id // pageSize: this.pagination.pageSize,\n\n          }\n        }).then(function (data) {\n          if (v.id !== _this3.subContentId) {\n            return;\n          }\n\n          if (data.code.toString() === '0') {\n            var list = [];\n            data.data.trade_list.forEach(function (item) {\n              var _this3$getFix = _this3.getFix(symbol.split('/')[1], symbol.split('/')[0]),\n                  marketFix = _this3$getFix.marketFix,\n                  coinFix = _this3$getFix.coinFix;\n\n              list.push({\n                ctime: item.ctime,\n                price: fixD(item.price, marketFix),\n                volume: fixD(item.volume, coinFix),\n                dealPrice: fixD(item.deal_price, marketFix),\n                fee: item.fee\n              });\n            });\n            _this3.subLoading = false;\n            _this3.subContent = list;\n          } else {\n            _this3.subLoading = false;\n\n            _this3.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    },\n    // 撤单\n    cancelOrder: function cancelOrder(id) {\n      var _this4 = this;\n\n      if (this.revokeList.indexOf(id) === -1) {\n        this.revokeList.push(id);\n        var symbol = '';\n        this.tabelList.forEach(function (item) {\n          if (item.id === id) {\n            var _item$data2 = _slicedToArray(item.data, 2);\n\n            symbol = _item$data2[1];\n          }\n        });\n        symbol = \"\".concat(symbol.split('/')[0]).concat(symbol.split('/')[1]);\n        this.axios({\n          url: 'order/cancel',\n          method: 'post',\n          params: {\n            orderId: id,\n            symbol: symbol\n          }\n        }).then(function (data) {\n          var ind = _this4.revokeList.indexOf(id);\n\n          _this4.revokeList.splice(ind, 1);\n\n          if (data.code.toString() === '0') {\n            _this4.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'success'\n            });\n\n            var sId = 0;\n\n            _this4.tabelList.forEach(function (item, i) {\n              if (item.id === id) {\n                sId = i;\n              }\n            });\n\n            _this4.tabelList.splice(sId, 1); // this.getData();\n\n          } else {\n            _this4.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    }\n  }\n};",null]}