{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/BindEmail/BindEmail.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/BindEmail/BindEmail.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nexport default {\n  name: 'bindEmail',\n  watch: {\n    userInfo: function userInfo(userinfo) {\n      this.googleCode = !!Number(userinfo.googleStatus);\n      this.smsCode = !!Number(userinfo.isOpenMobileCheck);\n    },\n    sendSmsCode: function sendSmsCode(_sendSmsCode) {\n      if (_sendSmsCode !== null) {\n        if (_sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    sendEmailCode: function sendEmailCode(_sendEmailCode) {\n      if (_sendEmailCode !== null) {\n        if (_sendEmailCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendEmailCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendEmailCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    bindEmail: function bindEmail(_bindEmail) {\n      this.loading = false;\n\n      if (_bindEmail.text === 'success') {\n        this.$bus.$emit('tip', {\n          text: _bindEmail.msg,\n          type: 'success'\n        });\n        this.$store.dispatch('resetType');\n        this.$router.push('/personal/userManagement');\n      } else {\n        this.$bus.$emit('tip', {\n          text: _bindEmail.msg,\n          type: 'error'\n        });\n        this.$store.dispatch('resetType');\n\n        if (_bindEmail.code !== '10009') {\n          this.$bus.$emit('getCode-clear', 'phone');\n        }\n      }\n    }\n  },\n  computed: {\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    sendSmsCode: function sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    sendEmailCode: function sendEmailCode() {\n      return this.$store.state.personal.sendEmailCode;\n    },\n    bindEmail: function bindEmail() {\n      return this.$store.state.personal.bindEmail;\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      checkValue1: '',\n      checkValue2: '',\n      checkValue4: '',\n      checkValue5: '',\n      promptText1: this.$t('personal.label.email'),\n      promptText2: this.$t('personal.label.emailCodeText'),\n      promptText4: this.$t('personal.label.smsCodeText'),\n      promptText5: this.$t('personal.label.googleCodeText'),\n      errorText1: this.$t('personal.prompt.errorEmailText'),\n      errorText2: this.$t('personal.prompt.errorCode'),\n      errorText4: this.$t('personal.prompt.errorCode'),\n      errorText5: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag1: false,\n      checkErrorFlag2: false,\n      checkErrorFlag4: false,\n      checkErrorFlag5: false,\n      disabled: true,\n      oldNew: false,\n      smsCode: false,\n      googleCode: false,\n      autoStart: false,\n      error: false\n    };\n  },\n  methods: {\n    init: function init() {\n      if (this.userInfo) {\n        this.googleCode = !!Number(this.userInfo.googleStatus);\n        this.smsCode = !!Number(this.userInfo.isOpenMobileCheck);\n      }\n    },\n    emailFlag: function emailFlag(val) {\n      return this.$store.state.regExp.email.test(val);\n    },\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick: function getCodeClick(name) {\n      if (name === 'phone') {\n        this.$bus.$emit('getCode-start', 'phone');\n        var info = {\n          operationType: 5\n        };\n        this.$store.dispatch('sendSmsCode', info);\n      } else if (this.emailFlag(this.checkValue1)) {\n        this.$bus.$emit('getCode-start', 'email');\n        var _info = {\n          email: this.checkValue1,\n          operationType: 2\n        };\n        this.$store.dispatch('sendEmailCode', _info);\n      } else {\n        this.checkErrorFlag1 = true;\n        this.errorText1 = this.$t('personal.prompt.errorEmail');\n      }\n    },\n    inputChanges: function inputChanges(value, name) {\n      switch (name) {\n        case 'email':\n          {\n            // email\n            this.checkValue1 = value;\n\n            if (this.emailFlag(value)) {\n              this.checkErrorFlag1 = false;\n            } else {\n              this.errorText1 = this.$t('personal.prompt.errorEmailText');\n              this.checkErrorFlag1 = true;\n            }\n\n            break;\n          }\n\n        case 'emailCode':\n          {\n            this.checkValue2 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag2 = false;\n            } else {\n              this.checkErrorFlag2 = true;\n            }\n\n            break;\n          }\n\n        case 'smsCode':\n          {\n            // 短信验证码\n            this.checkValue4 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag4 = false;\n            } else {\n              this.checkErrorFlag4 = true;\n            }\n\n            break;\n          }\n\n        default:\n          {\n            // google验证码\n            this.checkValue5 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag5 = false;\n            } else {\n              this.checkErrorFlag5 = true;\n            }\n          }\n      }\n\n      if (this.checkValue1 && this.checkValue2 && !this.checkErrorFlag1 && !this.checkErrorFlag2 && !this.checkErrorFlag4 && !this.checkErrorFlag5) {\n        /*\r\n        if (this.smsCode) {\r\n          this.disabled = !this.checkValue4;\r\n        }\r\n        if (this.google) {\r\n          this.disabled = !this.checkValue5;\r\n        }\r\n        */\n        this.disabled = false;\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink: function btnLink() {\n      this.loading = true;\n      var info = {\n        email: this.checkValue1,\n        emailValidCode: this.checkValue2,\n        smsValidCode: this.checkValue4,\n        googleCode: this.checkValue5\n      };\n      this.$store.dispatch('bindEmail', info);\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/BindEmail/BindEmail.js"],"names":["name","watch","userInfo","userinfo","googleCode","Number","googleStatus","smsCode","isOpenMobileCheck","sendSmsCode","text","$bus","$emit","msg","type","$store","dispatch","sendEmailCode","bindEmail","loading","$router","push","code","computed","state","baseData","personal","data","checkValue1","checkValue2","checkValue4","checkValue5","promptText1","$t","promptText2","promptText4","promptText5","errorText1","errorText2","errorText4","errorText5","checkErrorFlag1","checkErrorFlag2","checkErrorFlag4","checkErrorFlag5","disabled","oldNew","autoStart","error","methods","init","emailFlag","val","regExp","email","test","codeFlag","verification","getCodeClick","info","operationType","inputChanges","value","btnLink","emailValidCode","smsValidCode"],"mappings":"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","sourcesContent":["export default {\r\n  name: 'bindEmail',\r\n  watch: {\r\n    userInfo(userinfo) {\r\n      this.googleCode = !!Number(userinfo.googleStatus);\r\n      this.smsCode = !!Number(userinfo.isOpenMobileCheck);\r\n    },\r\n    sendSmsCode(sendSmsCode) {\r\n      if (sendSmsCode !== null) {\r\n        if (sendSmsCode.text === 'success') {\r\n          this.$bus.$emit('tip', { text: sendSmsCode.msg, type: 'success' });\r\n          this.$store.dispatch('resetType');\r\n        } else {\r\n          this.$bus.$emit('tip', { text: sendSmsCode.msg, type: 'error' });\r\n          this.$store.dispatch('resetType');\r\n        }\r\n      }\r\n    },\r\n    sendEmailCode(sendEmailCode) {\r\n      if (sendEmailCode !== null) {\r\n        if (sendEmailCode.text === 'success') {\r\n          this.$bus.$emit('tip', { text: sendEmailCode.msg, type: 'success' });\r\n          this.$store.dispatch('resetType');\r\n        } else {\r\n          this.$bus.$emit('tip', { text: sendEmailCode.msg, type: 'error' });\r\n          this.$store.dispatch('resetType');\r\n        }\r\n      }\r\n    },\r\n    bindEmail(bindEmail) {\r\n      this.loading = false;\r\n      if (bindEmail.text === 'success') {\r\n        this.$bus.$emit('tip', { text: bindEmail.msg, type: 'success' });\r\n        this.$store.dispatch('resetType');\r\n        this.$router.push('/personal/userManagement');\r\n      } else {\r\n        this.$bus.$emit('tip', { text: bindEmail.msg, type: 'error' });\r\n        this.$store.dispatch('resetType');\r\n        if (bindEmail.code !== '10009') {\r\n          this.$bus.$emit('getCode-clear', 'phone');\r\n        }\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    userInfo() {\r\n      return this.$store.state.baseData.userInfo;\r\n    },\r\n    sendSmsCode() {\r\n      return this.$store.state.personal.sendSmsCode;\r\n    },\r\n    sendEmailCode() {\r\n      return this.$store.state.personal.sendEmailCode;\r\n    },\r\n    bindEmail() {\r\n      return this.$store.state.personal.bindEmail;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      checkValue1: '',\r\n      checkValue2: '',\r\n      checkValue4: '',\r\n      checkValue5: '',\r\n      promptText1: this.$t('personal.label.email'),\r\n      promptText2: this.$t('personal.label.emailCodeText'),\r\n      promptText4: this.$t('personal.label.smsCodeText'),\r\n      promptText5: this.$t('personal.label.googleCodeText'),\r\n      errorText1: this.$t('personal.prompt.errorEmailText'),\r\n      errorText2: this.$t('personal.prompt.errorCode'),\r\n      errorText4: this.$t('personal.prompt.errorCode'),\r\n      errorText5: this.$t('personal.prompt.errorCode'),\r\n      checkErrorFlag1: false,\r\n      checkErrorFlag2: false,\r\n      checkErrorFlag4: false,\r\n      checkErrorFlag5: false,\r\n      disabled: true,\r\n      oldNew: false,\r\n      smsCode: false,\r\n      googleCode: false,\r\n      autoStart: false,\r\n      error: false,\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      if (this.userInfo) {\r\n        this.googleCode = !!Number(this.userInfo.googleStatus);\r\n        this.smsCode = !!Number(this.userInfo.isOpenMobileCheck);\r\n      }\r\n    },\r\n    emailFlag(val) {\r\n      return this.$store.state.regExp.email.test(val);\r\n    },\r\n    codeFlag(val) {\r\n      return this.$store.state.regExp.verification.test(val);\r\n    },\r\n    getCodeClick(name) {\r\n      if (name === 'phone') {\r\n        this.$bus.$emit('getCode-start', 'phone');\r\n        const info = { operationType: 5 };\r\n        this.$store.dispatch('sendSmsCode', info);\r\n      } else if (this.emailFlag(this.checkValue1)) {\r\n        this.$bus.$emit('getCode-start', 'email');\r\n        const info = { email: this.checkValue1, operationType: 2 };\r\n        this.$store.dispatch('sendEmailCode', info);\r\n      } else {\r\n        this.checkErrorFlag1 = true;\r\n        this.errorText1 = this.$t('personal.prompt.errorEmail');\r\n      }\r\n    },\r\n    inputChanges(value, name) {\r\n      switch (name) {\r\n        case 'email': { // email\r\n          this.checkValue1 = value;\r\n          if (this.emailFlag(value)) {\r\n            this.checkErrorFlag1 = false;\r\n          } else {\r\n            this.errorText1 = this.$t('personal.prompt.errorEmailText');\r\n            this.checkErrorFlag1 = true;\r\n          }\r\n          break;\r\n        }\r\n        case 'emailCode': {\r\n          this.checkValue2 = value;\r\n          if (this.codeFlag(value)) {\r\n            this.checkErrorFlag2 = false;\r\n          } else {\r\n            this.checkErrorFlag2 = true;\r\n          }\r\n          break;\r\n        }\r\n        case 'smsCode': { // 短信验证码\r\n          this.checkValue4 = value;\r\n          if (this.codeFlag(value)) {\r\n            this.checkErrorFlag4 = false;\r\n          } else {\r\n            this.checkErrorFlag4 = true;\r\n          }\r\n          break;\r\n        }\r\n        default: { // google验证码\r\n          this.checkValue5 = value;\r\n          if (this.codeFlag(value)) {\r\n            this.checkErrorFlag5 = false;\r\n          } else {\r\n            this.checkErrorFlag5 = true;\r\n          }\r\n        }\r\n      }\r\n      if (this.checkValue1 && this.checkValue2 && !this.checkErrorFlag1\r\n        && !this.checkErrorFlag2 && !this.checkErrorFlag4 && !this.checkErrorFlag5) {\r\n        /*\r\n        if (this.smsCode) {\r\n          this.disabled = !this.checkValue4;\r\n        }\r\n        if (this.google) {\r\n          this.disabled = !this.checkValue5;\r\n        }\r\n        */\r\n        this.disabled = false;\r\n      } else {\r\n        this.disabled = true;\r\n      }\r\n    },\r\n    btnLink() {\r\n      this.loading = true;\r\n      const info = {\r\n        email: this.checkValue1,\r\n        emailValidCode: this.checkValue2,\r\n        smsValidCode: this.checkValue4,\r\n        googleCode: this.checkValue5,\r\n      };\r\n      this.$store.dispatch('bindEmail', info);\r\n    },\r\n  },\r\n};\r\n"]}]}