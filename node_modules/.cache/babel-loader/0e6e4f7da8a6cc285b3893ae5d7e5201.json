{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/components/setMarginCoin/setMarginCoin.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/components/setMarginCoin/setMarginCoin.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\n// 调节逐仓仓位保证金\nimport { nul, add, cut, division, fixD, fixInput, thousandsComma as _thousandsComma } from '@/utils';\nexport default {\n  name: 'setMarginCoin',\n  data: function data() {\n    return {\n      // 是否加载成功\n      dialogConfirmLoading: false,\n      // 修改保证金类型 1: 增加 2：减少\n      marginReviseType: 1,\n      // 修改保证金 数量\n      marginValue: '',\n      // 保证金错误提示语\n      marginErrorText: null,\n      // 保证金是否输入错误\n      marginErrorFlag: false,\n      // 确认修改保证金防止双击\n      sumbitFla: true\n    };\n  },\n  props: {\n    isShow: {\n      default: false,\n      type: Boolean\n    },\n    close: {\n      default: function _default() {},\n      type: Function\n    },\n    marginData: {\n      default: function _default() {},\n      type: Object\n    }\n  },\n  computed: {\n    lanText: function lanText() {\n      return {\n        titleText: this.$t('futures.setMarginCoin.titleText'),\n        // '调节逐仓仓位保证金',\n        text1: this.$t('futures.setMarginCoin.text1'),\n        // '当前',\n        text2: this.$t('futures.setMarginCoin.text2'),\n        // '变更后',\n        text3: this.$t('futures.setMarginCoin.text3'),\n        // '仓位',\n        text4: this.$t('futures.setMarginCoin.text4'),\n        // '仓位保证金',\n        text5: this.$t('futures.setMarginCoin.text5'),\n        // '实际杠杆',\n        text6: this.$t('futures.setMarginCoin.text6'),\n        // '强平价',\n        text7: this.$t('futures.setMarginCoin.text7'),\n        // '可用',\n        text8: this.$t('futures.setMarginCoin.text8'),\n        // '可减少保证金',\n        text9: this.$t('futures.setMarginCoin.text9'),\n        // '全部',\n        text10: this.$t('futures.setMarginCoin.text10'),\n        // '增加保证金',\n        text11: this.$t('futures.setMarginCoin.text11'),\n        // '减少保证金',\n        text12: this.$t('futures.setMarginCoin.text12'),\n        // '增加保证金数量',\n        text13: this.$t('futures.setMarginCoin.text13'),\n        // '减少保证金数量',\n        text14: this.$t('futures.setMarginCoin.text14'),\n        // '余额不足',\n        text15: this.$t('futures.setMarginCoin.text15') // '可减少保证金不足',\n\n      };\n    },\n    // 数量单位类型Number(1标的货币 2张)\n    coUnitType: function coUnitType() {\n      return this.$store.state.future.coUnitType;\n    },\n    // 保证金模式列表\n    categoryList: function categoryList() {\n      return [{\n        id: 1,\n        text: this.lanText.text10,\n        // '增加保证金',\n        classes: this.marginReviseType === 1 ? 'u-8-bg' : 'a-3-bg'\n      }, {\n        id: 2,\n        text: this.lanText.text11,\n        // '减少保证金',\n        classes: this.marginReviseType === 2 ? 'u-8-bg' : 'a-3-bg'\n      }];\n    },\n    // 增加&减少保证金 提示文案\n    marginPromptText: function marginPromptText() {\n      if (this.marginReviseType === 1) {\n        return this.lanText.text12; // '增加保证金数量';\n      }\n\n      return this.lanText.text13; // '减少保证金数量';\n    },\n    // 修改保证金是否可以提交\n    dialogConfirmDisabled: function dialogConfirmDisabled() {\n      if (this.marginValue && this.marginValue > 0 && !this.marginErrorText) {\n        return false;\n      }\n\n      return true;\n    },\n    // 保证金精度\n    mCionFix: function mCionFix() {\n      if (this.marginData.mCionFix) {\n        return this.marginData.mCionFix;\n      }\n\n      return 8;\n    },\n    // 修改后的保证金数量\n    modifiedMargin: function modifiedMargin() {\n      if (this.marginValue) {\n        var holdAmount = this.marginData.holdAmount || 0;\n        var value = 0; // 如果是减少保证金\n\n        if (this.marginReviseType === 2) {\n          value = fixD(cut(holdAmount, this.marginValue), this.mCionFix);\n          if (value < 0) value = 0;\n          return value;\n        }\n\n        value = fixD(add(holdAmount, this.marginValue), this.mCionFix);\n        if (value < 0) value = 0;\n        return value;\n      }\n\n      return this.marginData.holdAmount;\n    },\n    // 修改后的强平价格\n    modifiedReducePrice: function modifiedReducePrice() {\n      if (!this.marginValue) return this.marginData.reducePrice; // 保证金汇率 标记价格 维持保证金率 手续费率 合约方向(1正向 0反向)， 价格精度\n\n      var _this$marginData = this.marginData,\n          marginRate = _this$marginData.marginRate,\n          indexPrice = _this$marginData.indexPrice,\n          keepRate = _this$marginData.keepRate,\n          maxFeeRate = _this$marginData.maxFeeRate,\n          contractSide = _this$marginData.contractSide,\n          priceFix = _this$marginData.priceFix;\n      if (!marginRate.toString() || !indexPrice.toString() || !keepRate.toString() || !maxFeeRate.toString() || !contractSide.toString()) return ''; // 逐仓权益 / 保证金汇率\n\n      var N1 = division(this.interests, marginRate); // 仓位数量 * 仓位方向 * 标记价格\n\n      var N2 = nul(nul(this.positionNumber, this.sideNumber), indexPrice); // 逐仓权益 / 保证金汇率 - 仓位数量 * 仓位方向 * 标记价格\n\n      var N3 = cut(N1, N2); // 维持保证金率 + 手续费率\n\n      var X1 = add(keepRate, maxFeeRate); // (维持保证金率 + 手续费率)* 仓位数量\n\n      var X2 = nul(X1, this.positionNumber); // 仓位 * 仓位方向\n\n      var X3 = nul(this.positionNumber, this.sideNumber); // (维持保证金率 + 手续费率)* 仓位数量 - 仓位数量 * 仓位方向\n\n      var X4 = cut(X2, X3); // 正向合约 =(逐仓权益 / 保证金汇率 - 仓位数量 * 仓位方向 * 标记价格) / (维持保证金率 + 手续费率)* 仓位数量 - 仓位数量 * 仓位方向)\n\n      var value = division(N3, X4);\n\n      if (contractSide === 0) {\n        X4 = add(X2, X3); // 仓位数量 * 仓位方向 / 标记价格\n\n        var Y1 = division(nul(this.positionNumber, this.sideNumber), indexPrice);\n        var Y2 = add(N1, Y1); // 反向合约 =(维持保证金率 + 手续费率)* 仓位数量 + 仓位数量 * 仓位方向) / (逐仓权益 / 保证金汇率 + 仓位数量 * 仓位方向 / 标记价格)\n\n        value = division(X4, Y2);\n      }\n\n      if (value <= 0) {\n        return '--';\n      }\n\n      return fixD(value, priceFix);\n    },\n    // 仓位方向：多仓是1，空仓是-1\n    sideNumber: function sideNumber() {\n      return this.marginData.orderSide === 'BUY' ? 1 : -1;\n    },\n    // 仓位数量 = 仓位张数 * 面值\n    positionNumber: function positionNumber() {\n      var multiplier = this.marginData.multiplier;\n      var vol = this.marginData.positionVolumeOriginal; // 算出标的货币数量(数量 * 合约面值)\n\n      vol = multiplier ? nul(vol, multiplier) : 0;\n      return vol;\n    },\n    // 逐仓权益 = 仓位保证金 + 已实现盈亏 + 未实现盈亏\n    interests: function interests() {\n      var _this$marginData2 = this.marginData,\n          realizedAmount = _this$marginData2.realizedAmount,\n          unRealizedAmount = _this$marginData2.unRealizedAmount;\n      return add(add(this.modifiedMargin, realizedAmount), unRealizedAmount);\n    }\n  },\n  watch: {\n    marginValue: function marginValue(v) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.marginValue = fixInput(v, _this.mCionFix);\n      });\n      var _this$marginData3 = this.marginData,\n          canUseAmount = _this$marginData3.canUseAmount,\n          canSubMarginAmount = _this$marginData3.canSubMarginAmount;\n\n      if (this.marginReviseType === 1) {\n        if (Number(this.marginValue) > Number(canUseAmount)) {\n          this.$nextTick(function () {\n            _this.marginErrorText = _this.lanText.text14; // '余额不足';\n\n            _this.marginErrorFlag = true;\n          });\n        } else {\n          this.$nextTick(function () {\n            _this.marginErrorText = '';\n            _this.marginErrorFlag = false;\n          });\n        }\n      } else if (Number(this.marginValue) > Number(canSubMarginAmount)) {\n        this.$nextTick(function () {\n          _this.marginErrorText = _this.lanText.text15; // '可减少保证金不足';\n\n          _this.marginErrorFlag = true;\n        });\n      } else {\n        this.$nextTick(function () {\n          _this.marginErrorText = '';\n          _this.marginErrorFlag = false;\n        });\n      }\n    }\n  },\n  methods: {\n    // 实际杠杆\n    activeLeverage: function activeLeverage(type) {\n      //  标记价格, 保证金汇率, 合约方向(1正向 0反向)\n      var _this$marginData4 = this.marginData,\n          indexPrice = _this$marginData4.indexPrice,\n          marginRate = _this$marginData4.marginRate,\n          contractSide = _this$marginData4.contractSide; // 保证金\n\n      var holdAmount = this.marginData.holdAmount; // 如果要获取变更后的实际杠杆\n\n      if (type === 2) {\n        // 获取修改后的保证金\n        holdAmount = this.modifiedMargin;\n      }\n\n      var value = 0;\n\n      if (this.positionNumber && indexPrice && holdAmount && marginRate) {\n        if (contractSide === 1) {\n          // 正向合约 = 仓位数量 * 标记价格 / 仓位保证金 / 保证金汇率\n          value = division(division(nul(this.positionNumber, indexPrice), holdAmount), marginRate);\n        } else {\n          // (反向合约) = 仓位数量 / 标记价格 / 仓位保证金 / 保证金汇率\n          value = division(division(division(this.positionNumber, indexPrice), holdAmount), marginRate);\n        }\n      }\n\n      var data = fixD(value, 1);\n\n      if (Number(data) < 0.1) {\n        data = '<0.1';\n      }\n\n      return data;\n    },\n    // 切换 修改保证金类型\n    selectCategory: function selectCategory(id) {\n      this.marginReviseType = id;\n      this.marginValue = '';\n    },\n    // 保证金输入\n    inputChanges: function inputChanges(value, name) {\n      this[name] = value;\n    },\n    // 确认修改保证金\n    dialogConfirm: function dialogConfirm() {\n      var _this2 = this;\n\n      if (this.sumbitFla) {\n        this.sumbitFla = false;\n        var paramsData = {\n          type: this.marginReviseType,\n          contractId: this.marginData.contractId,\n          positionId: this.marginData.positionId,\n          amount: this.marginReviseType === 1 ? this.marginValue : \"-\".concat(this.marginValue)\n        };\n        this.axios({\n          url: this.$store.state.url.futures.changePositionMargin,\n          hostType: 'co',\n          params: paramsData\n        }).then(function (data) {\n          _this2.sumbitFla = true;\n\n          if (data.code === '0') {\n            _this2.marginValue = '';\n\n            _this2.close(); // 重新请仓位列表\n\n\n            _this2.$store.dispatch('getPositionList'); // 操作成功\n\n\n            _this2.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'success'\n            });\n          } else {\n            _this2.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        }).catch(function () {\n          _this2.sumbitFla = true; // 系统错误\n\n          _this2.$bus.$emit('tip', {\n            text: _this2.$t('contract.c_error'),\n            type: 'error'\n          });\n        });\n      }\n    },\n    // 点击全部\n    allevent: function allevent() {\n      if (this.marginReviseType === 1) {\n        this.marginValue = this.marginData.canUseAmount;\n      } else {\n        this.marginValue = this.marginData.canSubMarginAmount;\n      }\n    },\n    thousandsComma: function thousandsComma(num) {\n      if (num) {\n        return _thousandsComma(num);\n      }\n\n      return num;\n    }\n  }\n};",null]}