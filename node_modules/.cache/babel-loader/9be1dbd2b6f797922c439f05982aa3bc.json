{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/BlockChain-ui/PC/components/input_find/InputFind.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/components/input_find/InputFind.vue","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'c-inputFind',\n  data: function data() {\n    return {\n      nowValue: '',\n      // 内部双向数据绑定\n      maxLength: 100,\n      // 最长长度\n      isHover: false,\n      isFocus: false\n    };\n  },\n  props: {\n    name: {\n      default: '',\n      type: String\n    },\n    // 名称标识\n    className: {\n      default: '',\n      type: String\n    },\n    // class根容器\n    disabled: {\n      default: false,\n      type: Boolean\n    },\n    // 是否为只读\n    promptText: {\n      default: '',\n      type: String\n    },\n    // 提示文案\n    value: {\n      default: '',\n      type: String\n    },\n    // 外部 v-model 传入的植\n    lightColour: {\n      default: false,\n      type: Boolean\n    },\n    // 是否为浅色版\n    iconHide: {\n      default: false,\n      type: Boolean\n    },\n    inputStyle: {\n      default: '',\n      type: String\n    }\n  },\n  watch: {\n    nowValue: function nowValue(v) {\n      // 限制最长长度\n      if (v.length > this.maxLength) {\n        this.nowValue = v.substring(0, this.maxLength);\n      } // 限制空格\n\n\n      if (v.indexOf(' ') !== -1) {\n        var arr = this.nowValue.split(' ');\n        var str = '';\n        arr.forEach(function (item) {\n          str += item;\n        });\n        this.nowValue = str;\n      }\n\n      this.$emit('onchanges', v, this.name);\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$bus.$off('inputFind-focus');\n    this.$bus.$on('inputFind-focus', function (name) {\n      if (name === _this.name) {\n        _this.focusFn();\n      }\n    });\n  },\n  computed: {\n    curValue: {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(value) {\n        this.nowValue = value;\n      }\n    },\n    contentClass: function contentClass() {\n      if (this.isHover || this.isFocus) {\n        return 'a-12-bd';\n      }\n\n      return 'a-2-bd';\n    },\n    solidBcClass: function solidBcClass() {\n      var className = null;\n\n      if (this.isHover) {\n        className = 'solidBc-hover';\n      }\n\n      if (this.isFocus) {\n        className = 'solidBc-active';\n      }\n\n      return className;\n    }\n  },\n  methods: {\n    focusFn: function focusFn() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.$refs.inputFind.focus();\n      });\n    },\n    clones: function clones() {\n      this.$emit('onchanges', '', this.name);\n    },\n    // input 鼠标划入\n    handMouseenter: function handMouseenter() {\n      this.isHover = true;\n    },\n    // input 鼠标划出\n    handMouseleave: function handMouseleave() {\n      this.isHover = false;\n    },\n    // input 获取焦点\n    handFocus: function handFocus() {\n      this.$emit('focus');\n      this.isFocus = true;\n    },\n    // input 失去焦点\n    handBlur: function handBlur() {\n      this.$emit('blur');\n      this.isFocus = false;\n    }\n  }\n};",{"version":3,"sources":["InputFind.vue"],"names":[],"mappings":"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","sourcesContent":["// Created by 任泽阳 on 18/12/05. // 搜索输入框\n<template>\n  <section\n    class='input-find-content'\n    :class='`${contentClass} ${className}`'\n    @mouseenter='handMouseenter'\n    @mouseleave='handMouseleave'\n  >\n    <!-- <div v-if='solidBcClass' class='solidBc' :class='solidBcClass'></div> -->\n    <div class='content'>\n      <span class='iconbox' v-if='!iconHide'>\n        <svg class='icon icon-14' aria-hidden='true'>\n          <use xlink:href='#icon-a_12'></use>\n        </svg>\n      </span>\n      <input\n        v-model='curValue'\n        :disabled='disabled'\n        :style='inputStyle'\n        ref='inputFind'\n        autocomplete='off'\n        class='b-1-cl'\n        :placeholder='promptText'\n        @focus='handFocus'\n        @blur='handBlur'\n      />\n      <span\n        class='clones'\n        @click='clones'\n        v-if='curValue && curValue.length && !iconHide'\n        >x</span\n      >\n    </div>\n  </section>\n</template>\n<script>\nexport default {\n  name: 'c-inputFind',\n  data() {\n    return {\n      nowValue: '', // 内部双向数据绑定\n      maxLength: 100, // 最长长度\n      isHover: false,\n      isFocus: false,\n    };\n  },\n  props: {\n    name: { default: '', type: String }, // 名称标识\n    className: { default: '', type: String }, // class根容器\n    disabled: { default: false, type: Boolean }, // 是否为只读\n    promptText: { default: '', type: String }, // 提示文案\n    value: { default: '', type: String }, // 外部 v-model 传入的植\n    lightColour: { default: false, type: Boolean }, // 是否为浅色版\n    iconHide: { default: false, type: Boolean },\n    inputStyle: { default: '', type: String },\n  },\n  watch: {\n    nowValue(v) {\n      // 限制最长长度\n      if (v.length > this.maxLength) {\n        this.nowValue = v.substring(0, this.maxLength);\n      }\n      // 限制空格\n      if (v.indexOf(' ') !== -1) {\n        const arr = this.nowValue.split(' ');\n        let str = '';\n        arr.forEach((item) => {\n          str += item;\n        });\n        this.nowValue = str;\n      }\n      this.$emit('onchanges', v, this.name);\n    },\n  },\n  created() {\n    this.$bus.$off('inputFind-focus');\n    this.$bus.$on('inputFind-focus', (name) => {\n      if (name === this.name) {\n        this.focusFn();\n      }\n    });\n  },\n  computed: {\n    curValue: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        this.nowValue = value;\n      },\n    },\n    contentClass() {\n      if (this.isHover || this.isFocus) {\n        return 'a-12-bd';\n      }\n      return 'a-2-bd';\n    },\n    solidBcClass() {\n      let className = null;\n      if (this.isHover) {\n        className = 'solidBc-hover';\n      }\n      if (this.isFocus) {\n        className = 'solidBc-active';\n      }\n      return className;\n    },\n  },\n  methods: {\n    focusFn() {\n      this.$nextTick(() => {\n        this.$refs.inputFind.focus();\n      });\n    },\n    clones() {\n      this.$emit('onchanges', '', this.name);\n    },\n    // input 鼠标划入\n    handMouseenter() {\n      this.isHover = true;\n    },\n    // input 鼠标划出\n    handMouseleave() {\n      this.isHover = false;\n    },\n    // input 获取焦点\n    handFocus() {\n      this.$emit('focus');\n      this.isFocus = true;\n    },\n    // input 失去焦点\n    handBlur() {\n      this.$emit('blur');\n      this.isFocus = false;\n    },\n  },\n};\n</script>\n<style lang='stylus'>\n.input-find-content {\n  width: 200px;\n  height: 28px;\n  position: relative;\n  border-radius: 2px;\n  overflow: hidden;\n  border-width: 1px;\n  border-style: solid;\n  box-sizing: border-box;\n  transition: all 0.3s;\n  .clones {\n    position: absolute;\n    right: 10px;\n    line-height: 28px;\n    cursor: pointer;\n  }\n  .solidBc {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n  }\n  .content {\n    z-index: 2;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n  }\n  .solidBc-hover {\n    opacity: 0.05\n  }\n  .solidBc-active {\n    opacity: 0.05\n  }\n  .iconbox {\n    width: 30px;\n    height: 28px;\n    display: inline-block;\n    text-align: center;\n    line-height: 28px;\n    vertical-align: middle\n  }\n  input {\n    width: 168px;\n    height: 20px;\n    margin-top: -1px;\n    line-height: 20px;\n    vertical-align: middle\n  }\n}\n</style>\n"],"sourceRoot":"../BlockChain-ui/PC/components/input_find"}]}