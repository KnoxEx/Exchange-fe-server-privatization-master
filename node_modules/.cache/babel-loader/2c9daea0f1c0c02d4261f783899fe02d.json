{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/modifyApi/modifyApi.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/modifyApi/modifyApi.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\nexport default {\n  name: 'checkApi',\n  props: {\n    getApiList: {\n      default: function _default() {\n        return [];\n      },\n      type: Function\n    }\n  },\n  watch: {\n    sendSmsCode: function sendSmsCode(_sendSmsCode) {\n      if (_sendSmsCode !== null) {\n        if (_sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    updateOpenApi: function updateOpenApi(_updateOpenApi) {\n      if (_updateOpenApi !== null) {\n        this.loading = false;\n\n        if (_updateOpenApi.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _updateOpenApi.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n          this.$store.dispatch('setModifyApiShow', false);\n          this.getApiList();\n        } else {\n          this.$bus.$emit('tip', {\n            text: _updateOpenApi.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    }\n  },\n  computed: {\n    sendSmsCode: function sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    updateOpenApi: function updateOpenApi() {\n      return this.$store.state.personal.updateOpenApi;\n    }\n  },\n  data: function data() {\n    return {\n      // input\n      loading: false,\n      divShow: 1,\n      promptText1: this.$t('personal.label.ipText'),\n      errorText1: this.$t('personal.prompt.ipErrorText'),\n      checkErrorFlag1: false,\n      checkValue1: '',\n      promptText2: this.$t('personal.label.noteText'),\n      errorText2: '',\n      checkErrorFlag2: false,\n      checkValue2: '',\n      promptText3: this.$t('personal.label.smsCodeText'),\n      errorText3: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag3: false,\n      checkValue3: '',\n      promptText4: this.$t('personal.label.googleCodeText'),\n      errorText4: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag4: false,\n      checkValue4: '',\n      disabled: true,\n      googleCode: false,\n      smsCode: false\n    };\n  },\n  methods: {\n    init: function init() {\n      var userInfo = this.$store.state.baseData.userInfo;\n\n      if (userInfo !== null) {\n        this.googleCode = !!Number(userInfo.googleStatus);\n        this.smsCode = !!Number(userInfo.isOpenMobileCheck);\n      }\n\n      var apiIp = this.$store.state.personal.apiIp;\n      var apiLabel = this.$store.state.personal.apiLabel;\n\n      if (apiIp !== null) {\n        this.checkValue1 = apiIp;\n      }\n\n      if (apiLabel !== null) {\n        this.checkValue2 = apiLabel;\n      }\n    },\n    dealIp: function dealIp(value) {\n      var _this = this;\n\n      var a = true;\n\n      if (value.indexOf(',') !== -1) {\n        if (value.charAt(value.length - 1) === ',') {\n          // 如果最后一位是,删除最后一位再进行处理\n          var attr = value.substring(0, value.length - 1).split(',');\n          var len = attr.length;\n\n          if (len <= 5) {\n            attr.forEach(function (obj) {\n              if (_this.ipFlag(obj)) {\n                a = true;\n              } else {\n                a = false;\n              }\n            });\n          } else {\n            a = false;\n          }\n        } else {\n          // 否则正常处理\n          var _attr = value.split(',');\n\n          var _len = _attr.length;\n\n          if (_len <= 5) {\n            _attr.forEach(function (obj) {\n              if (_this.ipFlag(obj)) {\n                a = true;\n              } else {\n                a = false;\n              }\n            });\n          } else {\n            a = false;\n          }\n        }\n      } else {\n        a = this.ipFlag(value);\n      }\n\n      return a;\n    },\n    ipFlag: function ipFlag(val) {\n      var flag = false;\n\n      if (!val) {\n        flag = true;\n      } else {\n        flag = new RegExp(this.$store.state.regExp.ip, 'g').test(val);\n      }\n\n      return flag;\n    },\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick: function getCodeClick() {\n      this.$bus.$emit('getCode-start', 'phone');\n      var info = {\n        operationType: 16\n      };\n      this.$store.dispatch('sendSmsCode', info);\n    },\n    inputChanges: function inputChanges(val, name) {\n      switch (name) {\n        case 'ip':\n          this.checkValue1 = val;\n\n          if (this.dealIp(val)) {\n            this.checkErrorFlag1 = false;\n          } else {\n            this.checkErrorFlag1 = true;\n          }\n\n          break;\n\n        case 'note':\n          this.checkValue2 = val;\n          break;\n\n        case 'phoneCode':\n          this.checkValue3 = val;\n\n          if (this.codeFlag(val)) {\n            this.checkErrorFlag3 = false;\n          } else {\n            this.checkErrorFlag3 = true;\n          }\n\n          break;\n\n        default:\n          this.checkValue4 = val;\n\n          if (this.codeFlag(val)) {\n            this.checkErrorFlag4 = false;\n          } else {\n            this.checkErrorFlag4 = true;\n          }\n\n      }\n\n      if (this.checkValue2 && !this.checkErrorFlag1 && !this.checkErrorFlag3 && !this.checkErrorFlag4) {\n        if (this.smsCode) {\n          this.disabled = !this.checkValue3;\n        }\n\n        if (this.googleCode) {\n          this.disabled = !this.checkValue4;\n        }\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink: function btnLink() {\n      this.loading = true;\n      var token = this.$store.state.personal.apiToken;\n      var info = {\n        smsValidCode: this.checkValue3,\n        googleCode: this.checkValue4,\n        label: this.checkValue2,\n        believeIps: this.checkValue1,\n        token: token\n      };\n      this.$store.dispatch('updateOpenApi', info);\n    }\n  }\n};",null]}