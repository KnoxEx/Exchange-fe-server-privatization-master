{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/BlockChain-ui/PC/components/newSelect/newSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/components/newSelect/newSelect.vue","mtime":1635261681197},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'c-new-select',\n  props: {\n    selectList: {\n      type: Array,\n      default: () => [],\n    },\n    value: {\n      type: String,\n      default: () => '',\n    },\n  },\n  directives: {\n    clickOutSide: { // 指令的生命周期\n      bind(el, bindings, vnode) {\n        // 把事件绑定在document上\n        const handler = (e) => {\n          if (el.contains(e.target)) {\n            // 判断一下是否当前面板已经显示出来了\n            if (!vnode.context.isVisable) {\n              vnode.context.focus();\n            }\n          } else if (vnode.context.isVisable) {\n            vnode.context.blur();\n          }\n        };\n        // eslint-disable-next-line no-param-reassign\n        el.handler = handler;\n        document.addEventListener('click', handler);\n      },\n      unbind(el) {\n        document.removeEventListener('click', el.handler);\n      },\n    },\n  },\n  data() {\n    return {\n      isVisable: false,\n    };\n  },\n  methods: {\n    focus() {\n      this.isVisable = true;\n    },\n    blur() {\n      this.isVisable = false;\n    },\n    onSelectChange(val) {\n      this.$emit('input', val);\n      this.blur();\n    },\n  },\n};\n",{"version":3,"sources":["newSelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"newSelect.vue","sourceRoot":"../BlockChain-ui/PC/components/newSelect","sourcesContent":["<template>\n  <div class=\"new__select-contaienr\" v-click-out-side>\n    <div class=\"input__contaienr\">\n      <slot name=\"icon\">\n        <!-- <img class=\"icon\" src=\"@/assets/images/1/bizhong.png\" alt=\"\"> -->\n      </slot>\n      <input type=\"text\" :value=\"value\">\n      <!-- <img class=\"select\" src=\"@/assets/images/1/juxing.png\" alt=\"\"> -->\n    </div>\n    <ul class=\"list__container\" v-if=\"isVisable\">\n      <li\n        v-for=\"(item, ind) in selectList\"\n        :key=\"ind\"\n        @click=\"onSelectChange(item.value)\"\n        class=\"option__item\"\n        :class=\"item.value === value ? 'active' : ''\">\n        {{item.label}}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'c-new-select',\n  props: {\n    selectList: {\n      type: Array,\n      default: () => [],\n    },\n    value: {\n      type: String,\n      default: () => '',\n    },\n  },\n  directives: {\n    clickOutSide: { // 指令的生命周期\n      bind(el, bindings, vnode) {\n        // 把事件绑定在document上\n        const handler = (e) => {\n          if (el.contains(e.target)) {\n            // 判断一下是否当前面板已经显示出来了\n            if (!vnode.context.isVisable) {\n              vnode.context.focus();\n            }\n          } else if (vnode.context.isVisable) {\n            vnode.context.blur();\n          }\n        };\n        // eslint-disable-next-line no-param-reassign\n        el.handler = handler;\n        document.addEventListener('click', handler);\n      },\n      unbind(el) {\n        document.removeEventListener('click', el.handler);\n      },\n    },\n  },\n  data() {\n    return {\n      isVisable: false,\n    };\n  },\n  methods: {\n    focus() {\n      this.isVisable = true;\n    },\n    blur() {\n      this.isVisable = false;\n    },\n    onSelectChange(val) {\n      this.$emit('input', val);\n      this.blur();\n    },\n  },\n};\n</script>\n\n<style lang=\"stylus\" scoped>\n.new__select-contaienr {\n  width: 132px;\n  height: 26px;\n  position relative;\n}\n.input__contaienr {\n  width: 100%;\n  height: 100%;\n  border: 0.5px solid rgba(51, 51, 51, 0.3);\n  border-radius: 2px;\n  display: flex;\n  align-items: center;\n  padding: 0 5px;\n  box-sizing: border-box;\n  cursor: pointer;\n}\n.input__contaienr input {\n  width 100%;\n  height 100%;\n  padding: 0 8px;\n  box-sizing: border-box;\n  color: #737373;\n}\n.input__contaienr .icon{\n  width 16px;\n  height auto;\n  display block;\n}\n.input__contaienr .select{\n  width: 18px;\n  height: 7px;\n  display: block;\n}\n.list__container {\n  position absolute;\n  color: #000000d9;\n  font-size: 14px;\n  background: #fff;\n  border-radius: 2px;\n  box-shadow: 0 3px 6px -4px #0000001f, 0 6px 16px #00000014, 0 9px 28px 8px #0000000d;\n  transition: margin .3s;\n  border: 1px solid #f0f0f0;\n  z-index 1000;\n  width 100%;\n}\n.option__item {\n  height 32px;\n  line-height 32px;\n  padding 0 10px;\n  box-sizing border-box;\n}\n.option__item:hover {\n  background-color: #f5f5f5;\n}\n.option__item.active {\n  background-color: #e6f7ff;\n}\n</style>\n"]}]}