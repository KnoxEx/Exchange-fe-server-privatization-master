{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/assets/recharge/recharge.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/assets/recharge/recharge.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { fixD, getCoinShowName, colorMap, imgMap } from '@/utils';\nexport default {\n  name: 'page-recharge',\n  data: function data() {\n    return {\n      addressShow: true,\n      addressPageShow: true,\n      tabelLoading: true,\n      alertFlag: false,\n      imgMap: imgMap,\n      colorMap: colorMap,\n      detailsList: [{\n        key: 'sum',\n        value: '--'\n      }, {\n        key: 'normal',\n        value: '--'\n      }, {\n        key: 'lock',\n        value: '--'\n      }],\n      address: '',\n      // 地址\n      addressPage: '',\n      // 标签（xrp/eos）时\n      addressQRCode: '',\n      // 二维码地址\n      tabelList: [],\n      // 充值记录\n      symbol: '',\n      havePageArr: ['XRP', 'EOS'],\n      // 含有标签的币种\n      paginationObj: {\n        total: 0,\n        // 数据总条数\n        display: 10,\n        // 每页显示条数\n        currentPage: 1 // 当前页码\n\n      },\n      addressTime: null,\n      branchTip: ''\n    };\n  },\n  watch: {\n    exchangeData: function exchangeData(v) {\n      if (v) {\n        this.initDetails();\n      }\n    },\n    symbol: function symbol(v) {\n      if (v && this.market) {\n        this.branchInit(this.market);\n        this.initAddress();\n      }\n    },\n    market: {\n      immediate: true,\n      handler: function handler(v) {\n        if (v && this.symbol) {\n          this.branchInit(v);\n          this.initAddress();\n        }\n      }\n    },\n    paginationObjCurrentPage: function paginationObjCurrentPage() {\n      this.getTableList();\n    }\n  },\n  filters: {\n    fixDFn: function fixDFn(v, that) {\n      return fixD(v, that.showPrecision);\n    }\n  },\n  computed: {\n    isHavePage: function isHavePage() {\n      var flag = false; // 判断market是否请求下来\n\n      if (this.market && this.market.coinList) {\n        if (!this.haveBranch) {\n          // 判断market.coinList是否有当前币种\n          if (this.market.coinList[this.symbol]) {\n            var tagType = this.market.coinList[this.symbol].tagType;\n            flag = tagType;\n          }\n        } else if (this.market.followCoinList[this.symbol][this.activeBranch]) {\n          var _tagType = this.market.followCoinList[this.symbol][this.activeBranch].tagType;\n          flag = _tagType;\n        }\n      }\n\n      return flag;\n    },\n    showSymbol: function showSymbol() {\n      var str = this.symbol;\n\n      if (this.market && this.market.coinList && this.market.coinList[this.symbol]) {\n        str = getCoinShowName(this.symbol, this.market.coinList);\n      }\n\n      return str;\n    },\n    serverName: function serverName() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var code = '';\n\n      if (publicInfo && publicInfo.msg && publicInfo.msg.company_name) {\n        code = publicInfo.msg.company_name;\n      }\n\n      return code;\n    },\n    paginationObjCurrentPage: function paginationObjCurrentPage() {\n      return this.paginationObj.currentPage;\n    },\n    that: function that() {\n      return this;\n    },\n    // 当前币种精度\n    showPrecision: function showPrecision() {\n      var v = 0;\n      var market = this.$store.state.baseData.market;\n\n      if (market && market.coinList && market.coinList[this.symbol]) {\n        v = market.coinList[this.symbol].showPrecision;\n      }\n\n      return v;\n    },\n    // finance/account_balance 接口返回成功的数据\n    exchangeData: function exchangeData() {\n      return this.$store.state.assets.exchangeData;\n    },\n    // market 接口\n    market: function market() {\n      return this.$store.state.baseData.market;\n    },\n    // 表格title\n    columns: function columns() {\n      return [{\n        title: this.$t('assets.recharge.RechargeTime'),\n        width: '20%'\n      }, // 充值时间\n      {\n        title: this.$t('assets.recharge.RechargeCoin'),\n        width: '10%'\n      }, // 币种\n      {\n        title: this.$t('assets.recharge.RechargeVolume'),\n        width: '30%'\n      }, // 充值数量\n      {\n        title: this.$t('assets.recharge.RechargeNumber'),\n        width: '20%'\n      }, // 确认次数\n      {\n        title: this.$t('assets.recharge.RechargeStatus'),\n        width: '20%'\n      } // 状态\n      ];\n    }\n  },\n  methods: {\n    setActiveBranch: function setActiveBranch(v) {\n      this.activeBranch = v;\n      this.initAddress();\n    },\n    init: function init() {\n      // 如果不存在币种跳走\n      if (this.$route.query.symbol) {\n        this.symbol = this.$route.query.symbol.toUpperCase();\n      } else {\n        this.$router.push('/assets/exchangeAccount');\n      } // 如果没有 finance/account_balance 接口返回成功的数据\n\n\n      if (!this.exchangeData) {\n        this.$store.dispatch('assetsExchangeData');\n      } else {\n        this.initDetails();\n      } // 获取table表数据\n\n\n      this.getTableList();\n    },\n    handMouseenter: function handMouseenter(name) {\n      if (name === 'address') {\n        this.addressShow = false;\n      } else {\n        this.addressPageShow = false;\n      }\n    },\n    handMouseleave: function handMouseleave(name) {\n      if (name === 'address') {\n        this.addressShow = true;\n      } else {\n        this.addressPageShow = true;\n      }\n    },\n    alertClone: function alertClone() {\n      this.alertFlag = false;\n    },\n    initDetails: function initDetails() {\n      var obj = this.exchangeData.allCoinMap[this.symbol];\n      var normalBalance = Number(obj.normal_balance) || Number(obj.overcharge_balance);\n      this.detailsList = [{\n        key: 'sum',\n        value: obj.total_balance\n      }, {\n        key: 'normal',\n        value: normalBalance\n      }, {\n        key: 'lock',\n        value: obj.lock_balance\n      }];\n    },\n    getBranchAddress: function getBranchAddress() {\n      var _this = this;\n\n      this.axios({\n        url: 'cost/Getcost',\n        params: {\n          symbol: this.activeBranch\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          _this.branchTip = data.data.mainChainNameTip;\n        }\n      });\n    },\n    initAddress: function initAddress() {\n      var _this2 = this;\n\n      // const { tokenBase } = this.market.coinList[this.symbol];\n      var tagType = this.market.coinList[this.symbol].tagType;\n\n      if (tagType === 1 || tagType === 2) {\n        // this.isHavePage = tagType;\n        setTimeout(function () {\n          _this2.alertFlag = Boolean(tagType);\n        }, 100);\n      }\n\n      if (this.haveBranch) {\n        this.getBranchAddress();\n      } // 请求该数据详情\n\n\n      this.axios({\n        url: 'finance/get_charge_address',\n        params: {\n          symbol: !this.haveBranch ? this.symbol : this.activeBranch\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          // let { allCoinMap } = this.exchangeData\n          _this2.addressQRCode = data.data.addressQRCode;\n\n          if (_this2.isHavePage) {\n            var arr = data.data.addressStr.split('_');\n\n            var _arr = _slicedToArray(arr, 2),\n                address = _arr[0],\n                addressPage = _arr[1];\n\n            _this2.address = address;\n            _this2.addressPage = addressPage;\n          } else {\n            _this2.address = data.data.addressStr;\n          }\n        } else {\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    copy: function copy(item) {\n      if (item === 'address') {\n        this.copyAddress();\n      } else if (item === 'addressPage') {\n        this.copyAddressPage();\n      }\n    },\n    copyAddress: function copyAddress() {\n      var input = this.$refs.address;\n      input.select();\n      document.execCommand('copy'); // 地址复制成功\n\n      this.$bus.$emit('tip', {\n        text: this.$t('assets.recharge.copyAddress'),\n        type: 'success'\n      });\n    },\n    copyAddressPage: function copyAddressPage() {\n      var input = this.$refs.addressPage;\n      input.select();\n      input.setSelectionRange(0, input.value.length);\n      document.execCommand('copy'); // 地址标签成功\n\n      this.$bus.$emit('tip', {\n        text: this.$t('assets.recharge.copyLabel'),\n        type: 'success'\n      });\n    },\n    pagechange: function pagechange(v) {\n      this.paginationObj.currentPage = v;\n    },\n    getTableList: function getTableList() {\n      var _this3 = this;\n\n      this.axios({\n        url: 'record/deposit_list',\n        params: {\n          pageSize: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          coinSymbol: this.symbol\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          var list = [];\n          data.data.financeList.forEach(function (item, index) {\n            var coinList = _this3.market.coinList;\n            var coinName = getCoinShowName(item.symbol, coinList);\n            list.push({\n              id: index,\n              data: [item.createdAt, // 时间\n              coinName, // 币种\n              fixD(item.amount, _this3.showPrecision), // 充值数量\n              item.confirmDesc, // 确认次数\n              item.status_text // 状态\n              ]\n            });\n          });\n          _this3.tabelLoading = false;\n          _this3.tabelList = list;\n          _this3.paginationObj.total = data.data.count > 30 ? 30 : data.data.count;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/assets/recharge/recharge.js"],"names":["fixD","getCoinShowName","colorMap","imgMap","name","data","addressShow","addressPageShow","tabelLoading","alertFlag","detailsList","key","value","address","addressPage","addressQRCode","tabelList","symbol","havePageArr","paginationObj","total","display","currentPage","addressTime","branchTip","watch","exchangeData","v","initDetails","market","branchInit","initAddress","immediate","handler","paginationObjCurrentPage","getTableList","filters","fixDFn","that","showPrecision","computed","isHavePage","flag","coinList","haveBranch","tagType","followCoinList","activeBranch","showSymbol","str","serverName","publicInfo","$store","state","baseData","code","msg","company_name","assets","columns","title","$t","width","methods","setActiveBranch","init","$route","query","toUpperCase","$router","push","dispatch","handMouseenter","handMouseleave","alertClone","obj","allCoinMap","normalBalance","Number","normal_balance","overcharge_balance","total_balance","lock_balance","getBranchAddress","axios","url","params","then","toString","mainChainNameTip","setTimeout","Boolean","arr","addressStr","split","$bus","$emit","text","type","copy","item","copyAddress","copyAddressPage","input","$refs","select","document","execCommand","setSelectionRange","length","pagechange","pageSize","page","coinSymbol","list","financeList","forEach","index","coinName","id","createdAt","amount","confirmDesc","status_text","count"],"mappings":"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","sourcesContent":["import {\r\n  fixD, getCoinShowName, colorMap, imgMap,\r\n} from '@/utils';\r\n\r\n\r\nexport default {\r\n  name: 'page-recharge',\r\n  data() {\r\n    return {\r\n      addressShow: true,\r\n      addressPageShow: true,\r\n      tabelLoading: true,\r\n      alertFlag: false,\r\n      imgMap,\r\n      colorMap,\r\n      detailsList: [\r\n        { key: 'sum', value: '--' },\r\n        { key: 'normal', value: '--' },\r\n        { key: 'lock', value: '--' },\r\n      ],\r\n      address: '', // 地址\r\n      addressPage: '', // 标签（xrp/eos）时\r\n      addressQRCode: '', // 二维码地址\r\n      tabelList: [], // 充值记录\r\n      symbol: '',\r\n      havePageArr: ['XRP', 'EOS'], // 含有标签的币种\r\n      paginationObj: {\r\n        total: 0, // 数据总条数\r\n        display: 10, // 每页显示条数\r\n        currentPage: 1, // 当前页码\r\n      },\r\n      addressTime: null,\r\n      branchTip: '',\r\n    };\r\n  },\r\n  watch: {\r\n    exchangeData(v) {\r\n      if (v) {\r\n        this.initDetails();\r\n      }\r\n    },\r\n    symbol(v) {\r\n      if (v && this.market) {\r\n        this.branchInit(this.market);\r\n        this.initAddress();\r\n      }\r\n    },\r\n    market: {\r\n      immediate: true,\r\n      handler(v) {\r\n        if (v && this.symbol) {\r\n          this.branchInit(v);\r\n          this.initAddress();\r\n        }\r\n      },\r\n    },\r\n    paginationObjCurrentPage() {\r\n      this.getTableList();\r\n    },\r\n  },\r\n  filters: {\r\n    fixDFn(v, that) {\r\n      return fixD(v, that.showPrecision);\r\n    },\r\n  },\r\n  computed: {\r\n    isHavePage() {\r\n      let flag = false;\r\n      // 判断market是否请求下来\r\n      if (this.market && this.market.coinList) {\r\n        if (!this.haveBranch) {\r\n          // 判断market.coinList是否有当前币种\r\n          if (this.market.coinList[this.symbol]) {\r\n            const { tagType } = this.market.coinList[this.symbol];\r\n            flag = tagType;\r\n          }\r\n        } else if (this.market.followCoinList[this.symbol][this.activeBranch]) {\r\n          const { tagType } = this.market.followCoinList[this.symbol][this.activeBranch];\r\n          flag = tagType;\r\n        }\r\n      }\r\n      return flag;\r\n    },\r\n    showSymbol() {\r\n      let str = this.symbol;\r\n      if (this.market && this.market.coinList\r\n        && this.market.coinList[this.symbol]) {\r\n        str = getCoinShowName(this.symbol, this.market.coinList);\r\n      }\r\n      return str;\r\n    },\r\n    serverName() {\r\n      const { publicInfo } = this.$store.state.baseData;\r\n      let code = '';\r\n      if (publicInfo && publicInfo.msg && publicInfo.msg.company_name) {\r\n        code = publicInfo.msg.company_name;\r\n      }\r\n      return code;\r\n    },\r\n    paginationObjCurrentPage() { return this.paginationObj.currentPage; },\r\n    that() { return this; },\r\n    // 当前币种精度\r\n    showPrecision() {\r\n      let v = 0;\r\n      const { market } = this.$store.state.baseData;\r\n      if (market && market.coinList && market.coinList[this.symbol]) {\r\n        v = market.coinList[this.symbol].showPrecision;\r\n      }\r\n      return v;\r\n    },\r\n    // finance/account_balance 接口返回成功的数据\r\n    exchangeData() { return this.$store.state.assets.exchangeData; },\r\n    // market 接口\r\n    market() { return this.$store.state.baseData.market; },\r\n    // 表格title\r\n    columns() {\r\n      return [\r\n        { title: this.$t('assets.recharge.RechargeTime'), width: '20%' }, // 充值时间\r\n        { title: this.$t('assets.recharge.RechargeCoin'), width: '10%' }, // 币种\r\n        { title: this.$t('assets.recharge.RechargeVolume'), width: '30%' }, // 充值数量\r\n        { title: this.$t('assets.recharge.RechargeNumber'), width: '20%' }, // 确认次数\r\n        { title: this.$t('assets.recharge.RechargeStatus'), width: '20%' }, // 状态\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    setActiveBranch(v) {\r\n      this.activeBranch = v;\r\n      this.initAddress();\r\n    },\r\n    init() {\r\n      // 如果不存在币种跳走\r\n      if (this.$route.query.symbol) {\r\n        this.symbol = this.$route.query.symbol.toUpperCase();\r\n      } else {\r\n        this.$router.push('/assets/exchangeAccount');\r\n      }\r\n      // 如果没有 finance/account_balance 接口返回成功的数据\r\n      if (!this.exchangeData) {\r\n        this.$store.dispatch('assetsExchangeData');\r\n      } else {\r\n        this.initDetails();\r\n      }\r\n      // 获取table表数据\r\n      this.getTableList();\r\n    },\r\n    handMouseenter(name) {\r\n      if (name === 'address') {\r\n        this.addressShow = false;\r\n      } else {\r\n        this.addressPageShow = false;\r\n      }\r\n    },\r\n    handMouseleave(name) {\r\n      if (name === 'address') {\r\n        this.addressShow = true;\r\n      } else {\r\n        this.addressPageShow = true;\r\n      }\r\n    },\r\n    alertClone() { this.alertFlag = false; },\r\n    initDetails() {\r\n      const obj = this.exchangeData.allCoinMap[this.symbol];\r\n      const normalBalance = Number(obj.normal_balance) || Number(obj.overcharge_balance);\r\n      this.detailsList = [\r\n        { key: 'sum', value: obj.total_balance },\r\n        { key: 'normal', value: normalBalance },\r\n        { key: 'lock', value: obj.lock_balance },\r\n      ];\r\n    },\r\n    getBranchAddress() {\r\n      this.axios({\r\n        url: 'cost/Getcost',\r\n        params: {\r\n          symbol: this.activeBranch,\r\n        },\r\n      }).then((data) => {\r\n        if (data.code.toString() === '0') {\r\n          this.branchTip = data.data.mainChainNameTip;\r\n        }\r\n      });\r\n    },\r\n    initAddress() {\r\n      // const { tokenBase } = this.market.coinList[this.symbol];\r\n      const { tagType } = this.market.coinList[this.symbol];\r\n      if (tagType === 1 || tagType === 2) {\r\n        // this.isHavePage = tagType;\r\n        setTimeout(() => {\r\n          this.alertFlag = Boolean(tagType);\r\n        }, 100);\r\n      }\r\n      if (this.haveBranch) {\r\n        this.getBranchAddress();\r\n      }\r\n      // 请求该数据详情\r\n      this.axios({\r\n        url: 'finance/get_charge_address',\r\n        params: {\r\n          symbol: !this.haveBranch ? this.symbol : this.activeBranch,\r\n        },\r\n      }).then((data) => {\r\n        if (data.code.toString() === '0') {\r\n          // let { allCoinMap } = this.exchangeData\r\n          this.addressQRCode = data.data.addressQRCode;\r\n          if (this.isHavePage) {\r\n            const arr = data.data.addressStr.split('_');\r\n            const [address, addressPage] = arr;\r\n            this.address = address;\r\n            this.addressPage = addressPage;\r\n          } else {\r\n            this.address = data.data.addressStr;\r\n          }\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    copy(item) {\r\n      if (item === 'address') {\r\n        this.copyAddress();\r\n      } else if (item === 'addressPage') {\r\n        this.copyAddressPage();\r\n      }\r\n    },\r\n    copyAddress() {\r\n      const input = this.$refs.address;\r\n      input.select();\r\n      document.execCommand('copy');\r\n      // 地址复制成功\r\n      this.$bus.$emit('tip', { text: this.$t('assets.recharge.copyAddress'), type: 'success' });\r\n    },\r\n    copyAddressPage() {\r\n      const input = this.$refs.addressPage;\r\n      input.select();\r\n      input.setSelectionRange(0, input.value.length);\r\n      document.execCommand('copy');\r\n      // 地址标签成功\r\n      this.$bus.$emit('tip', { text: this.$t('assets.recharge.copyLabel'), type: 'success' });\r\n    },\r\n    pagechange(v) {\r\n      this.paginationObj.currentPage = v;\r\n    },\r\n    getTableList() {\r\n      this.axios({\r\n        url: 'record/deposit_list',\r\n        params: {\r\n          pageSize: this.paginationObj.display, // 每页条数\r\n          page: this.paginationObj.currentPage, // 页码\r\n          coinSymbol: this.symbol,\r\n        },\r\n      }).then((data) => {\r\n        if (data.code.toString() === '0') {\r\n          const list = [];\r\n          data.data.financeList.forEach((item, index) => {\r\n            const { coinList } = this.market;\r\n            const coinName = getCoinShowName(item.symbol, coinList);\r\n            list.push({\r\n              id: index,\r\n              data: [\r\n                item.createdAt, // 时间\r\n                coinName, // 币种\r\n                fixD(item.amount, this.showPrecision), // 充值数量\r\n                item.confirmDesc, // 确认次数\r\n                item.status_text, // 状态\r\n              ],\r\n            });\r\n          });\r\n          this.tabelLoading = false;\r\n          this.tabelList = list;\r\n          this.paginationObj.total = data.data.count > 30 ? 30 : data.data.count;\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n"]}]}