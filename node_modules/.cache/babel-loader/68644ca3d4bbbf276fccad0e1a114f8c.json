{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/otcTrade/otcTrade.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/otcTrade/otcTrade.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport { fixD, fixInput, getCoinShowName } from '@/utils';\nexport default {\n  data: function data() {\n    return {\n      orderId: null,\n      // 订单id\n      userId: null,\n      // 用户id\n      axiosObj: {},\n      axiosReady: false,\n      closeTradeConfirmLoading: false,\n      // 关闭广告弹窗 -- 确认按钮loading\n      closeTradeFlag: false,\n      // 关闭广告弹窗变量\n      leftInp: '',\n      // 左侧input\n      rightInp: '',\n      // 右侧input\n      passCode: '',\n      // 资金密码\n      btnLoading: false,\n      timer: null,\n      // 倒计时 计时器\n      time: 60 // 倒计时\n\n    };\n  },\n  watch: {\n    optionsFlag: function optionsFlag(v) {\n      if (v === 'even') {\n        this.startTime();\n      }\n    },\n    leftInp: function leftInp(v) {\n      var fix = 0; // 如果该订单为 卖单走法币精度, 买单走数字货币精度\n\n      if (this.axiosObj.side === 'SELL') {\n        fix = this.priceFix;\n      } else if (this.axiosObj.side === 'BUY') {\n        fix = this.volumeFix;\n      }\n\n      this.leftInp = fixInput(v, fix);\n    },\n    rightInp: function rightInp(v) {\n      var fix = 0; // 如果该订单为 卖单走数字货币币精度, 买单走法币精度\n\n      if (this.axiosObj.side === 'SELL') {\n        fix = this.volumeFix;\n      } else if (this.axiosObj.side === 'BUY') {\n        fix = this.priceFix;\n      }\n\n      this.rightInp = fixInput(v, fix);\n    }\n  },\n  filters: {\n    payFixD: function payFixD(v, that) {\n      return fixD(v, that.priceFix);\n    },\n    coinFixD: function coinFixD(v, that) {\n      return fixD(v, that.volumeFix);\n    },\n    BTCFixD: function BTCFixD(v, that) {\n      return fixD(v, that.btcFix);\n    }\n  },\n  computed: {\n    fiatTradeOpen: function fiatTradeOpen() {\n      var base = this.$store.state.baseData.publicInfo;\n\n      if (base && base.switch && base.switch.fiat_trade_open === '1') {\n        return true;\n      }\n\n      return false;\n    },\n    publicInfo: function publicInfo() {\n      return this.$store.state.baseData.publicInfo;\n    },\n    windFlag: function windFlag() {\n      var flag = false;\n\n      if (this.publicInfo && this.publicInfo.switch && this.publicInfo.switch.wind_control_switch && this.publicInfo.switch.wind_control_switch.toString() === '1') {\n        flag = true;\n      }\n\n      return flag;\n    },\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    userVip: function userVip() {\n      var str = '';\n\n      if (this.userInfo && this.userInfo.otcCompanyInfo) {\n        if (Number(this.userInfo.otcCompanyInfo.status)) {\n          if (this.axiosObj.companyLevel === 1) {\n            str = \"<svg class=\\\"icon icon-16\\\" aria-hidden=\\\"true\\\">\\n              <use xlink:href=\\\"#icon-c_16\\\"></use>\\n            </svg>\";\n          } else if (this.axiosObj.companyLevel === 2) {\n            str = \"<svg class=\\\"icon icon-16\\\" aria-hidden=\\\"true\\\">\\n              <use xlink:href=\\\"#icon-c_17\\\"></use>\\n            </svg>\";\n          }\n        }\n      }\n\n      return str;\n    },\n    // 信用度\n    credit: function credit() {\n      var str = '';\n\n      if (this.axiosObj.creditGrade) {\n        str = \"\".concat(this.axiosObj.creditGrade * 100, \"%\");\n      }\n\n      return str;\n    },\n    // 我要出售(立即出售) 按钮\n    mySellBtnDisabled: function mySellBtnDisabled() {\n      var flag = true;\n\n      if (this.leftInpObj.flag && this.rightInpObj.flag && this.passFlag || this.btnLoading) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    // 我要购买(立即购买) 按钮\n    myBuyBtnDisabled: function myBuyBtnDisabled() {\n      var flag = true;\n\n      if (this.leftInpObj.flag && this.rightInpObj.flag || this.btnLoading) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    leftInpObj: function leftInpObj() {\n      // 我要出售 当前该输入框为数字货币\n      if (this.axiosObj.side === 'BUY') {\n        // 当前框为0 或者没有数量时\n        if (parseFloat(this.leftInp) === 0 || this.leftInp.length === 0) {\n          return {\n            flag: false,\n            errorFlag: false,\n            errorText: ''\n          }; // 当前框的值 大于 剩余数量\n        }\n\n        if (parseFloat(this.leftInp) > parseFloat(this.axiosObj.volumeBalance)) {\n          return {\n            flag: false,\n            errorFlag: true,\n            // 下单金额大于该订单数量\n            errorText: this.$t('otcTrade.numberError')\n          };\n        }\n\n        return {\n          flag: true,\n          errorFlag: false,\n          errorText: ''\n        }; // 我要购买 当前该输入框为法币\n      }\n\n      if (this.axiosObj.side === 'SELL') {\n        // 当前框为0 或者没有数量时\n        if (parseFloat(this.leftInp) === 0 || this.leftInp.length === 0) {\n          return {\n            flag: false,\n            errorFlag: false,\n            errorText: ''\n          }; // 当前框的值 小于 最小交易限额\n        }\n\n        if (parseFloat(this.leftInp) < parseFloat(this.axiosObj.minTrade)) {\n          return {\n            flag: false,\n            errorFlag: true,\n            // 换取数量不得小于最小交易限额\n            errorText: this.$t('otcTrade.numberMinError')\n          }; // 当前框的值 大于 最大交易限额\n        }\n\n        if (parseFloat(this.leftInp) > parseFloat(this.axiosObj.maxTrade)) {\n          return {\n            flag: false,\n            errorFlag: true,\n            // 换取数量不得大于最大交易限额\n            errorText: this.$t('otcTrade.numberMaxError')\n          };\n        }\n\n        return {\n          flag: true,\n          errorFlag: false,\n          errorText: ''\n        };\n      }\n\n      return {\n        flag: false,\n        errorFlag: false,\n        errorText: ''\n      };\n    },\n    rightInpObj: function rightInpObj() {\n      // 我要出售 当前该输入框为法币框\n      if (this.axiosObj.side === 'BUY') {\n        // 当前框为0 或者没有数量时\n        if (parseFloat(this.rightInp) === 0 || this.rightInp.length === 0) {\n          return {\n            flag: false,\n            errorFlag: false,\n            errorText: ''\n          }; // 当前框的值 小于 最小交易限额\n        }\n\n        if (parseFloat(this.rightInp) < parseFloat(this.axiosObj.minTrade)) {\n          return {\n            flag: false,\n            errorFlag: true,\n            // 换取数量不得小于最小交易限额\n            errorText: this.$t('otcTrade.numberMinError')\n          }; // 当前框的值 大于 最大交易限额\n        }\n\n        if (parseFloat(this.rightInp) > parseFloat(this.axiosObj.maxTrade)) {\n          return {\n            flag: false,\n            errorFlag: true,\n            // 换取数量不得大于最大交易限额\n            errorText: this.$t('otcTrade.numberMaxError')\n          };\n        }\n\n        return {\n          flag: true,\n          errorFlag: false,\n          errorText: ''\n        }; // 我要购买\n      }\n\n      if (this.axiosObj.side === 'SELL') {\n        // 当前框为0 或者没有数量时\n        if (parseFloat(this.rightInp) === 0 || this.rightInp.length === 0) {\n          return {\n            flag: false,\n            errorFlag: false,\n            errorText: ''\n          }; // 当前框的值 大于 剩余数量\n        }\n\n        if (parseFloat(this.rightInp) > parseFloat(this.axiosObj.volumeBalance)) {\n          return {\n            flag: false,\n            errorFlag: true,\n            // 下单金额大于该订单数量\n            errorText: this.$t('otcTrade.numberError')\n          };\n        }\n\n        return {\n          flag: true,\n          errorFlag: false,\n          errorText: ''\n        };\n      }\n\n      return {\n        flag: false,\n        errorFlag: false,\n        errorText: ''\n      };\n    },\n    // passCode 是否复合正则验证\n    passFlag: function passFlag() {\n      return this.$store.state.regExp.passWord.test(this.passCode);\n    },\n    // pass框是否为错误状态\n    passErrorFlag: function passErrorFlag() {\n      if (this.passCode.length !== 0 && !this.passFlag) return true;\n      return false;\n    },\n    leftInputOptions: function leftInputOptions() {\n      // 下单金额\n      var promptText = this.$t('otcTrade.OrderAmount');\n      var warningText = '';\n      var _this$axiosObj = this.axiosObj,\n          side = _this$axiosObj.side,\n          payCoin = _this$axiosObj.payCoin,\n          coin = _this$axiosObj.coin,\n          minTrade = _this$axiosObj.minTrade,\n          maxTrade = _this$axiosObj.maxTrade;\n\n      if (side === 'SELL') {\n        // 用 法币 买 数字货币\n        promptText += \" (\".concat(payCoin, \")\"); // 下单金额范围\n\n        warningText = \"\".concat(this.$t('otcTrade.ScopeOrderAmount'), \"\\n         (\").concat(fixD(minTrade, this.priceFix), \" - \").concat(fixD(maxTrade, this.priceFix), \")\");\n      } else if (side === 'BUY') {\n        // 用 数字货币 换 法币\n        promptText += \"(\".concat(this.getShowCoin(coin), \")\");\n      }\n\n      return {\n        promptText: promptText,\n        warningText: warningText\n      };\n    },\n    rightInputOptions: function rightInputOptions() {\n      // 换取数量\n      var promptText = this.$t('otcTrade.QuantityInExchange');\n      var warningText = '';\n      var _this$axiosObj2 = this.axiosObj,\n          side = _this$axiosObj2.side,\n          payCoin = _this$axiosObj2.payCoin,\n          coin = _this$axiosObj2.coin,\n          minTrade = _this$axiosObj2.minTrade,\n          maxTrade = _this$axiosObj2.maxTrade;\n\n      if (side === 'SELL') {\n        // 用 法币 买 数字货币\n        promptText += \" (\".concat(this.getShowCoin(coin), \")\");\n      } else if (side === 'BUY') {\n        // 用 数字货币 换 法币\n        promptText += \"(\".concat(payCoin, \")\"); // 下单金额范围\n\n        warningText = \"\".concat(this.$t('otcTrade.ScopeOrderAmount'), \"\\n          (\").concat(fixD(minTrade, this.priceFix), \" - \").concat(fixD(maxTrade, this.priceFix), \")\");\n      }\n\n      return {\n        promptText: promptText,\n        warningText: warningText\n      };\n    },\n    // 操作区域展示的模块 非自己/自己\n    optionsFlag: function optionsFlag() {\n      var flag = '';\n\n      if (this.axiosReady) {\n        if (this.axiosObj.tip && this.axiosObj.tip.length) {\n          flag = 'myself';\n        } else {\n          flag = 'even';\n        }\n      }\n\n      return flag;\n    },\n    that: function that() {\n      return this;\n    },\n    volumeFix: function volumeFix() {\n      var fix = '';\n      var coin = this.axiosObj.coin;\n\n      if (this.market && coin && this.market.coinList[coin] && this.market.coinList[coin].showPrecision) {\n        fix = this.market.coinList[coin].showPrecision;\n      }\n\n      return Number(fix);\n    },\n    btcFix: function btcFix() {\n      var fix = '';\n\n      if (this.market && this.market.coinList.BTC && this.market.coinList.BTC.showPrecision) {\n        fix = this.market.coinList.BTC.showPrecision;\n      }\n\n      return Number(fix);\n    },\n    priceFix: function priceFix() {\n      var fix = this.$store.state.baseData.defaultFiatPrecision;\n      var _this$axiosObj3 = this.axiosObj,\n          payCoin = _this$axiosObj3.payCoin,\n          coin = _this$axiosObj3.coin;\n\n      if (this.market && coin && payCoin && this.market.coinList[coin] && this.market.coinList[coin].fiatPrecision && this.market.coinList[coin].fiatPrecision[payCoin.toLowerCase()]) {\n        fix = this.market.coinList[coin].fiatPrecision[payCoin.toLowerCase()];\n      }\n\n      return Number(fix);\n    },\n    market: function market() {\n      return this.$store.state.baseData.market;\n    },\n    otcPublicInfo: function otcPublicInfo() {\n      return this.$store.state.baseData.otcPublicInfo;\n    },\n    // 使用 xx 交易 xxx\n    messageTitle: function messageTitle() {\n      var str = '';\n      var _this$axiosObj4 = this.axiosObj,\n          side = _this$axiosObj4.side,\n          coin = _this$axiosObj4.coin,\n          payCoin = _this$axiosObj4.payCoin;\n\n      if (side && coin && payCoin) {\n        // 使用\n        str = \"\".concat(this.$t('otcTrade.use'), \"\\n          \").concat(payCoin, \"\\n          \").concat(side === 'BUY' ? this.$t('otcTrade.sell') : this.$t('otcTrade.buy'), \" \").concat(this.getShowCoin(coin));\n      }\n\n      return str;\n    },\n    // 收款方式 / 付款方式\n    sidePay: function sidePay() {\n      // 交易方式\n      var str = this.$t('otcTrade.TransactionMode');\n\n      if (this.axiosObj.side) {\n        str = this.axiosObj.side === 'BUY' ? this.$t('otcTrade.payment') : this.$t('otcTrade.Receivables');\n      }\n\n      return str;\n    },\n    // 是否展示商家备注\n    isShowEscription: function isShowEscription() {\n      if (this.axiosObj.description && this.axiosObj.description.length) {\n        return true;\n      }\n\n      return false;\n    },\n    // 支付方式\n    payments: function payments() {\n      if (this.axiosObj.payments) {\n        return this.axiosObj.payments;\n      }\n\n      return [];\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearInterval(this.timer);\n  },\n  methods: {\n    getShowCoin: function getShowCoin(v) {\n      var str = v;\n\n      if (this.market && this.market.coinList) {\n        str = getCoinShowName(v, this.market.coinList);\n      }\n\n      return str;\n    },\n    init: function init() {\n      var _this$$route$query = this.$route.query,\n          orderId = _this$$route$query.orderId,\n          userId = _this$$route$query.userId;\n\n      if (orderId) {\n        this.orderId = orderId;\n        this.userId = userId;\n        this.initOrder();\n      }\n    },\n    startTime: function startTime() {\n      var _this = this;\n\n      clearInterval(this.timer);\n      this.time = 60;\n      this.timer = setInterval(function () {\n        _this.time -= 1;\n\n        if (_this.time <= 0) {\n          clearInterval(_this.timer);\n\n          _this.$router.push('/');\n        }\n      }, 1000);\n    },\n    goUser: function goUser() {\n      if (this.userId) {\n        this.$router.push(\"/stranger?uid=\".concat(this.userId));\n      }\n    },\n    BtnClick: function BtnClick() {\n      var _this2 = this;\n\n      // 我要购买\n      if (this.axiosObj.side === 'SELL') {\n        this.btnLoading = true;\n        this.axios({\n          url: 'v4/otc/buy_order_save',\n          params: {\n            advertId: this.orderId,\n            price: this.axiosObj.price,\n            totalPrice: this.leftInp,\n            // 法币\n            type: 'price',\n            volume: this.rightInp // 数字货币\n\n          },\n          hostType: 'otc'\n        }).then(function (data) {\n          _this2.btnLoading = false;\n\n          if (data.code.toString() === '0') {\n            _this2.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'success'\n            });\n\n            _this2.$router.push(\"otcDetailOrder?orderId=\".concat(data.data.sequence));\n          } else {\n            _this2.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        }); // 我要出售\n      } else if (this.axiosObj.side === 'BUY') {\n        this.btnLoading = true;\n        this.axios({\n          url: 'v4/otc/sell_order_save',\n          params: {\n            advertId: this.orderId,\n            capitalPword: this.passCode,\n            price: String(this.axiosObj.price),\n            totalPrice: this.rightInp,\n            // 法币\n            type: 'volume',\n            volume: this.leftInp // 数字货币\n\n          },\n          hostType: 'otc'\n        }).then(function (data) {\n          _this2.btnLoading = false;\n\n          if (data.code.toString() === '0') {\n            _this2.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'success'\n            });\n\n            _this2.$router.push(\"otcDetailOrder?orderId=\".concat(data.data.sequence));\n          } else {\n            _this2.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    },\n    inputAll: function inputAll(type) {\n      if (this.axiosObj.volumeBalance) {\n        if (type === 'right') {\n          this.rightInp = fixD(this.axiosObj.volumeBalance, this.volumeFix);\n          this.rightServe();\n        } else if (type === 'left') {\n          this.leftInp = fixD(this.axiosObj.volumeBalance, this.volumeFix);\n          this.leftServe();\n        }\n      }\n    },\n    // 返回法币交易大厅\n    goHall: function goHall() {\n      this.$router.push('/');\n    },\n    // 关闭广告\n    closeTrade: function closeTrade() {\n      this.closeTradeFlag = true;\n    },\n    // 关闭广告弹窗 -- 确认\n    closeTradeConfirm: function closeTradeConfirm() {\n      var _this3 = this;\n\n      this.closeTradeConfirmLoading = true;\n      this.axios({\n        url: '/otc/close_wanted',\n        method: 'post',\n        hostType: 'otc',\n        params: {\n          advertId: this.orderId\n        }\n      }).then(function (data) {\n        _this3.closeTradeConfirmLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this3.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this3.initOrder(); // 重新请求该订单\n\n\n          _this3.closeTradeFlag = false; // 关闭弹窗\n        } else {\n          _this3.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 关闭广告弹窗 -- 取消\n    closeTradeClose: function closeTradeClose() {\n      this.closeTradeFlag = false;\n    },\n    inputLineChange: function inputLineChange(value, name) {\n      this[name] = value;\n\n      if (name === 'leftInp') {\n        this.leftServe();\n      } else if (name === 'rightInp') {\n        this.rightServe();\n      }\n    },\n    leftServe: function leftServe() {\n      // 联动rightinp\n      if (this.axiosObj.price) {\n        // 当前为法币\n        if (this.axiosObj.side === 'SELL') {\n          this.rightInp = String(this.leftInp / this.axiosObj.price); // 当前为数字货币\n        } else if (this.axiosObj.side === 'BUY') {\n          this.rightInp = String(this.leftInp * this.axiosObj.price);\n        }\n      }\n    },\n    rightServe: function rightServe() {\n      // 联动rightinp\n      if (this.axiosObj.price) {\n        // 当前为数字货币\n        if (this.axiosObj.side === 'SELL') {\n          this.leftInp = String(this.rightInp * this.axiosObj.price); // this.rightInp = fixD(v / this.axiosObj.price, this.priceFix)\n          // 当前为法币\n        } else if (this.axiosObj.side === 'BUY') {\n          this.leftInp = String(this.rightInp / this.axiosObj.price);\n        }\n      }\n    },\n    initOrder: function initOrder() {\n      var _this4 = this;\n\n      this.axios({\n        url: 'otc/v4/wanted_detail',\n        method: 'post',\n        hostType: 'otc',\n        params: {\n          advertId: this.orderId\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          _this4.axiosReady = true;\n          _this4.axiosObj = data.data;\n        } else {\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    }\n  }\n};",null]}