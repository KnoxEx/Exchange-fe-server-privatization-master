{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/trade/depath/index.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/trade/depath/index.js","mtime":1642317790653},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport { fixRate, myStorage, getCoinShowName } from '@/utils';\nexport default {\n  name: 'market',\n  data: function data() {\n    return {\n      dataList: {\n        asksData: [],\n        buyData: [],\n        depthMaxNumber: null\n      },\n      cellWidth: [100, 90, 95],\n      // 收起状态 盘口 和 实时成交显示哪个 ？\n      shrinksDdpthNewShow: 'D',\n      // 卖盘 高度\n      sellHeight: 300,\n      // 买盘 高度\n      buyHeight: 300,\n      // 显示条数\n      sellLineNumber: 22,\n      buyLineNumber: 22,\n      // 当前选中的深度级别\n      currentdepthClass: 0,\n      // 当前选中的货币对\n      symbolCurrent: myStorage.get('sSymbolName'),\n      // 市场数据\n      marketData: [],\n      symbolsData_bf: {},\n      maxHeeight: 600,\n      minHeight: 390,\n      totalBalancesHide: false,\n      depthType: ''\n    };\n  },\n  props: {\n    moduleType: {\n      type: String,\n      default: 'ex'\n    },\n    etfPrice: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    depthClass: function depthClass() {\n      if (this.moduleType === 'lever') {\n        return 'lever-depth-block';\n      }\n\n      return '';\n    },\n    totalBalances: function totalBalances() {\n      if (this.accountBalance) {\n        var _this$accountBalance = this.accountBalance,\n            totalBalance = _this$accountBalance.totalBalance,\n            totalBalanceSymbol = _this$accountBalance.totalBalanceSymbol;\n        return {\n          totalBalance: totalBalance,\n          totalBalanceSymbol: totalBalanceSymbol,\n          totalRater: fixRate(totalBalance, this.rateData, totalBalanceSymbol)\n        };\n      }\n\n      return {\n        totalBalance: '0.0000',\n        totalBalanceSymbol: 'BTC',\n        totalRater: '0.00'\n      };\n    },\n    rateData: function rateData() {\n      return this.$store.state.baseData.rate;\n    },\n    accountBalance: function accountBalance() {\n      if (this.$store.state.assets) {\n        return this.$store.state.assets.assetsCoinData;\n      }\n\n      return null;\n    },\n    templateLayoutType: function templateLayoutType() {\n      return this.$store.state.baseData.templateLayoutType;\n    },\n    symbolAll: function symbolAll() {\n      return this.$store.state.baseData.symbolAll;\n    },\n    // 全部币种列表\n    coinList: function coinList() {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n\n      return null;\n    },\n    theadList: function theadList() {\n      if (this.symbolCurrent) {\n        var symbolCurrent = getCoinShowName(this.symbolCurrent, this.symbolAll).split('/'); // 价格 数量 累计\n\n        return [\"\".concat(this.$t('trade.price'), \"(\").concat(symbolCurrent[1], \")\"), \"\".concat(this.$t('trade.number'), \"(\").concat(symbolCurrent[0], \")\"), \"\".concat(this.$t('trade.total'), \"(\").concat(symbolCurrent[0], \")\")];\n      }\n\n      return [\"\".concat(this.$t('trade.price'), \"()\"), \"\".concat(this.$t('trade.number'), \"()\"), \"\".concat(this.$t('trade.total'), \"()\")];\n    },\n    symbolsData: function symbolsData() {\n      if (this.marketData[this.symbolCurrent]) {\n        return this.marketData[this.symbolCurrent];\n      }\n\n      return {\n        name: '--',\n        symbol: {\n          symbol: '--',\n          unit: '--'\n        },\n        close: {\n          class: '',\n          data: '--',\n          price: '--'\n        },\n        amount: '--',\n        rose: {\n          class: '',\n          data: '--'\n        }\n      };\n    },\n    // 深度选项\n    depthOption: function depthOption() {\n      if (this.symbolAll && this.symbolCurrent) {\n        var option = [];\n        var arr = this.symbolAll[this.symbolCurrent].depth.split(',');\n        arr.forEach(function (item) {\n          var opt = item.split('.')[1] ? item.split('.')[1].length : '0';\n          option.push(opt);\n        });\n        return option;\n      }\n\n      return [];\n    },\n    deptValue: function deptValue() {\n      if (this.depthOption) {\n        var val = this.depthOption[this.currentdepthClass];\n        this.$bus.$emit('DEPTH_VALUE', val);\n        return val;\n      }\n\n      return null;\n    }\n  },\n  watch: {\n    deptValue: function deptValue(val) {\n      if (val) {\n        this.$bus.$emit('DEPTH_VALUE', val);\n      }\n    },\n    minHeight: function minHeight(val) {\n      if (this.sellHeight > 1 && this.buyHeight > 1 && this.templateLayoutType === '2') {\n        var number = Math.floor(val / 16);\n        this.sellLineNumber = number;\n        this.buyLineNumber = number;\n      }\n    }\n  },\n  methods: {\n    getShowEtf: function getShowEtf(v) {\n      var flag = false;\n      var symbol = v;\n\n      if (this.symbolAll && this.symbolAll[symbol] && this.symbolAll[symbol].etfOpen) {\n        flag = true;\n      }\n\n      return flag;\n    },\n    init: function init() {\n      var _this = this;\n\n      if (this.moduleType === 'lever') {\n        // 卖盘 高度\n        this.sellHeight = 416; // 买盘 高度\n\n        this.buyHeight = 416; // 显示条数\n\n        this.sellLineNumber = 26;\n        this.buyLineNumber = 26;\n        this.maxHeeight = 840; // 当前选中的货币对\n\n        this.symbolCurrent = myStorage.get('leverSymbolName');\n      }\n\n      this.setBoxHeight(); // 监听 深度数据\n\n      this.$bus.$on('DEPTH_DATA', function (data) {\n        if (data && _this.symbolCurrent === data.symbol) {\n          _this.dataList = data;\n        } else {\n          _this.dataList = {\n            asksData: [],\n            buyData: [],\n            depthMaxNumber: null\n          };\n        }\n      }); // 监听 市场（最新价格） 数据\n\n      this.$bus.$on('MARKET_DATA', function (data) {\n        _this.marketData = data;\n      }); // 获取 当前选中的货币对\n\n      this.$bus.$on('SYMBOL_CURRENT', function (val) {\n        _this.dataList = {\n          asksData: [],\n          buyData: [],\n          depthMaxNumber: null\n        };\n        _this.symbolCurrent = val;\n        _this.currentdepthClass = 0;\n      }); // 监听 浏览器窗口大小改变\n\n      this.$bus.$on('WINFOW_ON_RESIIZE', function () {\n        // 设置国际版TV的高度\n        _this.setBoxHeight(false);\n      });\n    },\n    handelTotal: function handelTotal() {\n      this.totalBalancesHide = !this.totalBalancesHide;\n    },\n    setBoxHeight: function setBoxHeight() {\n      var change = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this.templateLayoutType === '2') {\n        var depthBoxHeight = document.body.clientHeight;\n\n        if (depthBoxHeight < 800) {\n          depthBoxHeight = 800;\n        }\n\n        this.maxHeeight = depthBoxHeight - 524;\n        this.minHeight = (depthBoxHeight - 528) / 2;\n        this.switchDepthType('', change);\n      }\n    },\n    // 切换深度\n    switchDepth: function switchDepth(num) {\n      if (num === 1) {\n        if (this.currentdepthClass < this.depthOption.length - 1) {\n          this.currentdepthClass += num;\n          this.$bus.$emit('DEPTH_CLASSES', this.currentdepthClass.toString());\n        }\n      } else if (this.currentdepthClass > 0) {\n        this.currentdepthClass += num;\n        this.$bus.$emit('DEPTH_CLASSES', this.currentdepthClass.toString());\n      }\n    },\n    switchBlock: function switchBlock(type) {\n      this.shrinksDdpthNewShow = type;\n    },\n    // 盘口 切换 全买盘 或者 全卖盘\n    switchDepthType: function switchDepthType(type) {\n      var change = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (change) this.switchBlock('D');\n\n      switch (type) {\n        case 'sell':\n          this.sellHeight = this.maxHeeight;\n          this.buyHeight = 0;\n          this.sellLineNumber = 150;\n          this.buyLineNumber = 0;\n          this.depthType = 'sell';\n          break;\n\n        case 'buy':\n          this.sellHeight = 0;\n          this.buyHeight = this.maxHeeight;\n          this.sellLineNumber = 0;\n          this.buyLineNumber = 150;\n          this.depthType = 'buy';\n          break;\n\n        default:\n          this.sellHeight = this.minHeight;\n          this.buyHeight = this.minHeight;\n          this.depthType = 'center';\n\n          if (this.templateLayoutType === '2') {\n            var number = Math.floor(this.minHeight / 16);\n            this.sellLineNumber = number;\n            this.buyLineNumber = number;\n          } else {\n            this.sellLineNumber = 24;\n            this.buyLineNumber = 24;\n          }\n\n      }\n    }\n  }\n};",null]}