{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/components/echartsKline/echartsKline.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/components/echartsKline/echartsKline.js","mtime":1640793636952},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.reflect.construct\";\nimport _classCallCheck from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { myStorage, getCookie, colorMap, getHex, imgMap, getScript } from '@/utils';\nexport default {\n  name: 'tradingView',\n  data: function data() {\n    return {\n      TvBoxHeight: '472px',\n      // 颜色主题\n      theme: 'theme_default',\n      // 图标类型 TV：1 Echart: 2\n      chartType: 1,\n      MywebSocket: null,\n      lastTimeS: '1min',\n      // myStorage.get('lastTimeS'),\n      language: getCookie('lan') ? getCookie('lan').split('_')[0] : '',\n      lTime: null,\n      fTime: 0,\n      isCreateWidget: false,\n      isshowLoading: false,\n      maskBg: true,\n      chartTypeHove: null,\n      isfullTv: false,\n      isfullTvsd: null,\n      echartLoaded: false,\n      lanArry: ['ar', 'zh_TW', 'zh', 'cs', 'da_DK', 'nl_NL', 'en', 'et_EE', 'fr', 'de', 'el', 'he_IL', 'hu_HU', 'id_ID', 'it', 'ja', 'ko', 'ms_MY', 'no', 'fa', 'pl', 'pt', 'ro', 'ru', 'sk_SK', 'es', 'sv', 'th', 'tr', 'vi'],\n      // 合约全部币对\n      coSymbolAll: null,\n      // 是否是移动端\n      isMobile: window.isMobile,\n      // 隐藏K线工具选项\n      disabled_features_arr: ['header_symbol_search', 'timeframes_toolbar', // 'volume_force_overlay',\n      'header_saveload', 'header_resolutions', 'header_compare', 'header_screenshot', 'header_undo_redo', 'adaptive_logo', 'header_fullscreen_button', 'timezone_menu', 'scales_context_menu', 'legend_context_menu', 'symbol_search_hot_key' // 'header_settings',\n      // 'header_widget',\n      // 'use_localstorage_for_settings',\n      // 'show_chart_property_page',\n      // 'timeframes_toolbar',\n      // 'symbol_info',\n      // 'header_widget_dom_node',\n      // 'header_indicators',\n      // 'header_widget',\n      // 'pane_context_menu',\n      // 'header_fullscreen_button',\n      // 'display_market_status',\n      // 'header_chart_type',\n      ],\n      beginTime: null,\n      lastTime: 0,\n      newDateflag: 2,\n      timer: null,\n      getReqNumber: 0,\n      setTimeoutear: null,\n      getMinutes: null\n    };\n  },\n  props: {\n    contractId: {\n      type: Number,\n      default: 1\n    },\n    tableType: {\n      type: Number,\n      default: 1\n    },\n    contractName: {\n      type: String,\n      default: ''\n    },\n    acriveContract: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  computed: {\n    // 当前币对价格精度\n    pricefix: function pricefix() {\n      if (this.acriveContract) {\n        return this.acriveContract.priceFix || 8;\n      }\n\n      return 8;\n    },\n    klineLogo: function klineLogo() {\n      return imgMap.tradingViewLogo || '';\n    },\n    templateLayoutType: function templateLayoutType() {\n      return this.$store.state.baseData.templateLayoutType;\n    },\n    baseTimeArry: function baseTimeArry() {\n      return ['1min' // '5min',\n      // '15min',\n      // '30min',\n      // '60min',\n      // '4h',\n      // '1day',\n      // '1week',\n      // '1month',\n      ];\n    },\n    timeArry: function timeArry() {\n      var a = [];\n\n      if (this.baseTimeArry.length) {\n        this.baseTimeArry.forEach(function (it) {\n          var t = [];\n\n          if (it.indexOf('min') > -1) {\n            t.push(it, parseFloat(it));\n          } else if (it.toLowerCase().indexOf('h') > -1 && it.indexOf('month') < 0) {\n            t.push(it, parseFloat(it) * 60);\n          } else if (it.indexOf('day') > -1) {\n            t.push(it, parseFloat(it) * 24 * 60);\n          } else if (it.indexOf('week') > -1) {\n            t.push(it, parseFloat(it) * 7 * 24 * 60);\n          } else if (it.indexOf('month') > -1) {\n            t.push(it, parseFloat(it) * 30 * 24 * 60);\n          }\n\n          a.push(t);\n        });\n      }\n\n      return a;\n    },\n    // 币币and杠杆 全部货币对\n    symbolAll: function symbolAll() {\n      return this.$store.state.baseData.symbolAll;\n    },\n    themeTV: function themeTV() {\n      var theme = getCookie('cusSkin') || getCookie('defSkin') || '1';\n      var stheme = theme.toString() === '1' ? 'Dark' : 'Light';\n      return stheme;\n    }\n  },\n  watch: {\n    contractName: function contractName(val) {\n      var _this = this;\n\n      if (val) {\n        this.getReqNumber = 0;\n        this.beginTime = null;\n\n        if (this.chartType === 1) {\n          this.isshowLoading = true;\n        }\n\n        if (window.tvWidget) {\n          window.tvWidget.setSymbol(val, this.getTimeMin(true, this.lastTimeS), function () {\n            _this.widget.chart().executeActionById('chartReset');\n          });\n        }\n      }\n    },\n    tableType: function tableType(val, old) {\n      var _this2 = this;\n\n      if (val && old && val > 2) {\n        this.getReqNumber = 0;\n\n        if (this.chartType === 1) {\n          this.isshowLoading = true;\n        }\n\n        if (this.lastTimeS === 'Line') {\n          this.lastTimeS = '1min';\n        }\n\n        if (window.tvWidget) {\n          this.widget.setLanguage(this.language);\n          setTimeout(function () {\n            _this2.creatMA();\n          }, 1000);\n        }\n      }\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this3 = this;\n\n      // 监听TV 是否是全屏状态\n      document.removeEventListener('fullscreenchange', this.quitfullTv);\n      document.addEventListener('fullscreenchange', this.quitfullTv);\n\n      if (this.lanArry.indexOf(this.language) <= -1) {\n        this.language = 'en';\n      }\n\n      if (getCookie('lan') === 'el_GR') {\n        this.language = 'zh_TW';\n      }\n\n      if (!myStorage.get('lastTimeS')) {\n        myStorage.set('lastTimeS', '1day');\n        this.lastTimeS = '1day';\n      }\n\n      this.isCreateWidget = false;\n      this.initTradingView(); // 隐藏loading\n\n      this.$bus.$on('HIDE_LOADING', function () {\n        _this3.isshowLoading = false;\n      });\n    },\n    // tadingView 生命周期函数\n    udf_datafeed: function udf_datafeed() {\n      var self = this;\n      return {\n        onReady: function onReady(callback) {\n          var cnf = {\n            supported_resolutions: self.getTimeMin(false, 1),\n            // 数组\n            supports_group_request: false,\n            supports_marks: true,\n            supports_search: false,\n            supports_timescale_marks: false\n          };\n          setTimeout(function () {\n            callback(cnf);\n          }, 0);\n        },\n        // 切换币对后\n        resolveSymbol: function resolveSymbol(symbolName, onSymbolResolvedCallback) {\n          setTimeout(function () {\n            onSymbolResolvedCallback({\n              name: symbolName,\n              'exchange-traded': '',\n              'exchange-listed': '',\n              minmov: 1,\n              minmov2: 0,\n              pointvalue: 1,\n              session: '0000-2400:1234567',\n              has_intraday: true,\n              has_no_volume: false,\n              volume_precision: 1,\n              description: symbolName.toUpperCase(),\n              type: 'bitcoin',\n              supported_resolutions: self.getTimeMin(false, 1),\n              pricescale: self.fixDepthNumber(),\n              ticker: symbolName.toUpperCase(),\n              timezone: window.jstz.determine().name()\n            });\n          }, 0);\n        },\n        // 获取深度数据（k线无需请求深度）\n        calculateHistoryDepth: function calculateHistoryDepth() {\n          return undefined;\n        },\n        // tradingview 获取历史数据\n        getBars: function getBars(symbolInfo, resolution, from, to, onHistoryCallback) {\n          self.getReqNumber += 1;\n          self.getDatas(true, onHistoryCallback);\n        },\n        // tradingview 获取实时数据\n        subscribeBars: function subscribeBars(symbolInfo, resolution, onRealtimeCallback) {\n          self.intgGetDatas(onRealtimeCallback);\n        },\n        // tradingview 取消订阅上一 币对 / 刻度\n        unsubscribeBars: function unsubscribeBars(subscriberUID) {\n          var arr = subscriberUID.split('_');\n          var symbol = \"\".concat(arr[0], \"_\").concat(arr[1]);\n          self.$bus.$emit('WEBSOCKET_KLINE_SEND', {\n            type: 'unsub',\n            symbol: symbol.toLowerCase(),\n            lastTimeS: self.getTimeMin(true, parseFloat(arr[2]))\n          });\n        }\n      };\n    },\n    // 创建 TradingView\n    initTradingView: function initTradingView() {\n      var F = /*#__PURE__*/function (_window$TradingView$w) {\n        _inherits(F, _window$TradingView$w);\n\n        var _super = _createSuper(F);\n\n        function F() {\n          _classCallCheck(this, F);\n\n          return _super.apply(this, arguments);\n        }\n\n        return F;\n      }(window.TradingView.widget);\n\n      if (this.contractName) {\n        window.tvWidget = new F({\n          debug: false,\n          autosize: true,\n          timezone: window.jstz.determine().name(),\n          symbol: this.contractName,\n          interval: this.getTimeMin(true, this.lastTimeS),\n          container_id: 'tv_chart_container',\n          // DOM id\n          datafeed: this.udf_datafeed(),\n          // 配置 生命周期\n          library_path: '/static/charting_library/',\n          // 静态文件路径\n          locale: this.language,\n          // 语言\n          disabled_features: this.disabled_features_arr,\n          enabled_features: [// 'study_templates',\n          'hide_left_toolbar_by_default'],\n          charts_storage_url: \"\".concat(window.location.protocol, \"//saveload.tradingview.com\"),\n          charts_storage_api_version: '1.1',\n          client_id: 'tradingview.com',\n          user_id: 'public_user',\n          // toolbar_bg: getHex(colorMap['c-4-bg']), // 工具栏底色\n          theme: this.themeTV,\n          studies_overrides: {\n            'volume.volume.color.0': getHex(colorMap['u-4-bg']),\n            'volume.volume.color.1': getHex(colorMap['u-1-bg']),\n            'volume.volume.transparency': 50\n          },\n          overrides: {\n            // k线的颜色\n            volumePaneSize: 'small',\n            // 成交量大小\n            'scalesProperties.fontSize': 12,\n            // 图标区域xy轴 字体大小\n            'scalesProperties.textColor': getHex(colorMap['b-3-cl']),\n            // 图标区域xy轴 文字颜色\n            'scalesProperties.lineColor': getHex(colorMap['a-3-bd']),\n            // 图标区域xy轴颜色\n            'paneProperties.background': 'rgba(0,0,0,0)',\n            // 图标区域 背景色\n            'paneProperties.vertGridProperties.color': '#fff',\n            // 图标区域 表格纵轴颜色\n            'paneProperties.horzGridProperties.color': '#fff',\n            // 图标区域 表格橫轴颜色\n            'paneProperties.crossHairProperties.color': getHex(colorMap['b-2-bg']),\n            // 图标区域 鼠标十字线颜色\n            'paneProperties.legendProperties.showLegend': true,\n            // 折叠信息\n            // 柱状图颜色设置\n            'mainSeriesProperties.candleStyle.upColor': getHex(colorMap['u-1-cl']),\n            'mainSeriesProperties.candleStyle.downColor': getHex(colorMap['u-4-cl']),\n            'mainSeriesProperties.candleStyle.drawWick': true,\n            'mainSeriesProperties.candleStyle.drawBorder': true,\n            'mainSeriesProperties.candleStyle.borderColor': '',\n            'mainSeriesProperties.candleStyle.borderUpColor': getHex(colorMap['u-1-cl']),\n            'mainSeriesProperties.candleStyle.borderDownColor': getHex(colorMap['u-4-cl']),\n            'mainSeriesProperties.candleStyle.wickUpColor': getHex(colorMap['u-1-cl']),\n            'mainSeriesProperties.candleStyle.wickDownColor': getHex(colorMap['u-4-cl']),\n            'mainSeriesProperties.candleStyle.barColorsOnPrevClose': !1,\n            // 分时图颜色设置\n            // 分时背景色渐变 上半部分\n            'mainSeriesProperties.areaStyle.color1': colorMap['a-15-bg'],\n            // 分时背景色渐变 下半部分\n            'mainSeriesProperties.areaStyle.color2': colorMap['a-17-bg'],\n            'mainSeriesProperties.areaStyle.linecolor': getHex(colorMap['a-12-bd']),\n            'mainSeriesProperties.areaStyle.linestyle': 0,\n            'mainSeriesProperties.areaStyle.linewidth': 2,\n            'mainSeriesProperties.areaStyle.priceSource': 'close'\n          }\n        });\n        this.widget = window.tvWidget;\n      }\n    },\n    // 格式化时间刻度\n    getTimeMin: function getTimeMin(only, type) {\n      if (only) {\n        var _t = null;\n\n        if (this.timeArry.length) {\n          this.timeArry.forEach(function (item) {\n            var s = item.indexOf(type);\n\n            if (s > -1) {\n              _t = s === 0 ? item[1] : item[0];\n            }\n          });\n        }\n\n        return _t;\n      }\n\n      var t = [];\n      this.timeArry.forEach(function (item) {\n        t.push(item[type]);\n      });\n      return t;\n    },\n    // 精度计算\n    fixDepthNumber: function fixDepthNumber() {\n      var b = Math.pow(10, this.pricefix);\n      return parseFloat(b.toString());\n    },\n    widget_onChartReady: function widget_onChartReady() {\n      var _this4 = this;\n\n      this.isCreateWidget = true;\n      this.creatMA(); // ===== 默认样式皮肤修改 =====\n\n      var style = document.createElement('style');\n      /* eslint-disable */\n\n      var clas = document.createTextNode(\".apply-common-tooltip,.wrap-1GG7GnNO- svg{fill:\" + colorMap[\"b-3-cl\"] + \"!important;color:\" + colorMap[\"b-3-cl\"] + \"!important;cursor: pointer;}.textColor .wrap-18oKCBRc- div,.wrap-18oKCBRc- .apply-common-tooltip:hover,.wrap-1GG7GnNO- svg:hover,.button-263WXsg--.isActive-2mI1-NUL- .icon-1Y-3MM9F-,.button-263WXsg-- .icon-1Y-3MM9F-,.button-263WXsg-- .icon-1Y-3MM9F-:hover{fill:\" + colorMap[\"a-1-cl\"] + \"!important;color:\" + colorMap[\"a-1-cl\"] + \"!important;}.container-3_8ayT2Q- .background-Q1Fcmxly-{fill: \" + colorMap[\"b-2-cl\"] + \"; stroke: \" + colorMap[\"b-2-cl\"] + \";}.container-3_8ayT2Q- .arrow-WcYWFXUn-, html.theme-dark .container-3_8ayT2Q- .arrow-WcYWFXUn-{stroke: \" + colorMap[\"b-1-cl\"] + \";}.feature-no-touch .container-3_8ayT2Q-:hover .background-Q1Fcmxly-{fill: \" + colorMap[\"a-1-cl\"] + \";stroke: \" + colorMap[\"a-1-cl\"] + \";}\");\n      /* eslint-enable */\n\n      style.append(clas);\n      this.widget.headerReady().then(function () {\n        _this4.widget.createButton().append(style);\n      });\n    },\n    creatMA: function creatMA() {\n      // ===== 创建移动均线 =====\n      this.widget.chart().createStudy('Moving Average', false, false, [5], null, {\n        'plot.color': '#F5CB89'\n      });\n      this.widget.chart().createStudy('Moving Average', false, false, [10], null, {\n        'plot.color': '#5FCFBF'\n      });\n      this.widget.chart().createStudy('Moving Average', false, false, [30], null, {\n        'plot.color': '#DD89F5'\n      });\n    },\n    setMAShow: function setMAShow() {\n      // ===== 显示移动均线 =====\n      var c = this.widget.chart().getAllStudies();\n      this.widget.chart().setEntityVisibility(c[0].id, true);\n      this.widget.chart().setEntityVisibility(c[1].id, true);\n      this.widget.chart().setEntityVisibility(c[2].id, true);\n    },\n    setMAHide: function setMAHide() {\n      // ===== 隐藏移动均线 =====\n      var c = this.widget.chart().getAllStudies();\n      this.widget.chart().setEntityVisibility(c[0].id, false);\n      this.widget.chart().setEntityVisibility(c[1].id, false);\n      this.widget.chart().setEntityVisibility(c[2].id, false);\n    },\n    timeClike: function timeClike(v) {\n      var _this5 = this;\n\n      if (v !== 'Line' && v !== '1min' && v !== this.lastTimeS) {\n        this.isshowLoading = true;\n      }\n\n      if (v !== this.lastTimeS) {\n        this.lastTimeS = v;\n\n        if (v === 'Line') {\n          myStorage.set('lastTimeS', '1min');\n        } else {\n          myStorage.set('lastTimeS', v);\n        }\n\n        this.$bus.$emit('LAST-TIMES', v);\n\n        if (this.isCreateWidget) {\n          var resolution = this.widget.chart().resolution();\n\n          if (v === 'Line') {\n            if (resolution !== '1') {\n              this.widget.chart().setResolution('1', function () {\n                _this5.widget.chart().setChartType(3); // 折线图\n\n              });\n            } else if (resolution === '1') {\n              this.widget.chart().setChartType(3);\n            }\n\n            this.setMAHide();\n          } else {\n            if (resolution === '1' && v === '1min') {\n              this.widget.chart().setChartType(1); // 蜡烛图\n            } else {\n              var timeS = this.getTimeMin(true, v);\n              this.widget.chart().setResolution(timeS.toString(), function () {\n                _this5.widget.chart().setChartType(1);\n\n                _this5.widget.chart().executeActionById('chartReset');\n              });\n            }\n\n            this.setMAShow();\n          }\n        }\n      }\n    },\n    // 格式化数据\n    setData: function setData(obj) {\n      return {\n        time: new Date(obj.mtime).getTime(),\n        close: obj.close,\n        open: obj.open,\n        high: obj.high,\n        low: obj.low\n      };\n    },\n    setChartType: function setChartType(type) {\n      this.chartType = type;\n    },\n    switchChartType: function switchChartType(type) {\n      var _this6 = this;\n\n      if (type === 2) {\n        if (!window.echarts && !this.loadingEchart) {\n          this.loadingEchart = true;\n          getScript(\"\".concat(process.env.BASE_URL, \"static/js/echarts.min.js\")).then(function () {\n            _this6.loadingEchart = false;\n            _this6.isshowLoading = false;\n            _this6.echartLoaded = true;\n\n            _this6.setChartType(type);\n          });\n        } else {\n          this.setChartType(type);\n        }\n      } else {\n        this.setChartType(type);\n      }\n    },\n    quit: function quit(e) {\n      this.isfullTv = false;\n\n      if (this.isfullTv) {\n        var key = e.keyCode;\n\n        if (key === 27) {\n          this.isfullTv = false;\n        }\n      }\n    },\n    fullTv: function fullTv() {\n      if (!this.isfullTv) {\n        this.isfullTv = true;\n        var element = this.$refs.tv_chart_container;\n\n        if (element.requestFullscreen) {\n          element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n          element.mozRequestFullScreen();\n        } else if (element.webkitRequestFullscreen) {\n          element.webkitRequestFullscreen();\n        } else if (element.msRequestFullscreen) {\n          element.msRequestFullscreen();\n        }\n      } else {\n        this.isfullTv = false;\n\n        if (document.exitFullscreen) {\n          document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n          document.webkitExitFullscreen();\n        }\n      }\n    },\n    quitfullTv: function quitfullTv() {\n      // 监听TV 是否是全屏状态\n      if (this.isfullTv) {\n        this.isfullTv = window.fullScreen || document.webkitIsFullScreen || document.msFullscreenElement;\n      }\n    },\n    getDatas: function getDatas(isreq, callback) {\n      var _this7 = this;\n\n      var callbackFun = callback;\n      var url = this.$store.state.url.futures.indexPriceKline;\n\n      if (this.tableType === 4) {\n        url = this.$store.state.url.futures.tagPriceKline;\n      }\n\n      if (this.contractId && callbackFun) {\n        var paramsData = {\n          contractId: this.contractId\n        };\n\n        if (isreq) {\n          this.isshowLoading = false;\n          paramsData.beginTime = this.beginTime || new Date().getTime();\n        }\n\n        if (this.getReqNumber === 1 && isreq || !isreq) {\n          this.axios({\n            url: url,\n            hostType: 'co',\n            params: paramsData\n          }).then(function (_ref) {\n            var data = _ref.data,\n                code = _ref.code;\n\n            if (code === '0') {\n              _this7.newDateflag = 0;\n              _this7.kLinwReqData = [];\n\n              if (data.records && data.records.length) {\n                _this7.kLinwReqData = data.records;\n                var arr = [];\n                var reverseArr = [];\n\n                _this7.kLinwReqData.forEach(function (item) {\n                  var dataObj = _this7.setData(item);\n\n                  if (dataObj.time > _this7.lastTime && !isreq || isreq) {\n                    arr.push(dataObj);\n                  }\n                });\n\n                if (arr.length) {\n                  reverseArr = arr.reverse();\n                  _this7.beginTime = reverseArr[0].time;\n                  _this7.lastTime = reverseArr[reverseArr.length - 1].time;\n\n                  if (isreq) {\n                    callbackFun(reverseArr);\n\n                    if (!_this7.isCreateWidget) {\n                      _this7.widget_onChartReady();\n\n                      _this7.widget.chart().setChartType(1);\n                    }\n\n                    if (_this7.getReqNumber > 0) {\n                      clearTimeout(_this7.setTimeoutear);\n                      _this7.setTimeoutear = null;\n                      _this7.setTimeoutear = setTimeout(function () {\n                        _this7.newDateflag = 2;\n                        _this7.getReqNumber -= 1;\n\n                        _this7.getDatas(isreq, callback);\n                      }, 100);\n                    } else {\n                      clearTimeout(_this7.setTimeoutear);\n                      _this7.setTimeoutear = null;\n                    }\n                  } else {\n                    callbackFun(reverseArr[0]);\n                  }\n\n                  callbackFun = null;\n                  _this7.isshowLoading = false;\n                }\n              } else if (isreq) {\n                callbackFun([], {\n                  noData: true\n                });\n                callbackFun = null;\n              }\n            } else if (isreq) {\n              callbackFun([], {\n                noData: true\n              });\n              callbackFun = null;\n            }\n          });\n        }\n      }\n    },\n    intgGetDatas: function intgGetDatas(onRealtimeCallback) {\n      var _this8 = this;\n\n      clearInterval(this.timer);\n      this.timer = null;\n      this.getDatas(false, onRealtimeCallback);\n      this.getMinutes = new Date().getMinutes();\n      this.timer = setInterval(function () {\n        if (_this8.getMinutes !== new Date().getMinutes()) {\n          _this8.getDatas(false, onRealtimeCallback);\n\n          _this8.getMinutes = new Date().getMinutes();\n        }\n      }, 1000);\n    }\n  }\n};",null]}