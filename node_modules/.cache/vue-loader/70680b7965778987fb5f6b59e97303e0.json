{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/BlockChain-ui/PC/components/verify/geetest.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/components/verify/geetest.vue","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'common-geetest',\n  data() {\n    return {\n      nowState: false, // 当前状态 true可滑动 false不可滑动 用于下划线时判断\n      isHover: false, // 是否划过\n      isReady: false, // 是否准备成功\n    };\n  },\n  props: {\n    product: { default: '', type: String },\n    width: { default: '100%', type: String }, // 该容器根容器 width属性\n    marginTop: { default: '0px', type: String }, // 该组件根容器 margin-top属性\n    errorHave: { default: false, type: Boolean }, // 是否有错误文案\n    errorText: { default: '', type: String }, // 错误文案\n    errorFlag: { default: false, type: Boolean }, // 错误文案是否显示\n    geetestBg: { default: 'a-7-bg', type: String }, // 极验的背景颜色\n    colorMap: { default: () => {}, required: true },\n  },\n  computed: {\n    lan() {\n      return this.$store.state.baseData.lan;\n    },\n    geetestLan() {\n      let language = '';\n      // 简体中文\n      if (this.lan === 'zh_CN') {\n        language = 'zh-cn';\n        // 繁体中文\n      } else if (this.lan === 'el_GR') {\n        language = 'zh-hk';\n        // 葡萄牙\n      } else if (this.lan === 'pt_PT') {\n        language = 'pt-pt';\n      } else {\n        const arr = [\n          'en', // 英文\n          'ja', // 日文\n          'id', // 印尼\n          'ko', // 韩语\n          'ru', // 俄语\n          'ar', // 阿拉伯\n          'es', // 西班牙语\n          'fr', // 法语\n          'de', // 德语\n        ];\n        if (this.lan.length && this.lan.split('_').length) {\n          if (arr.indexOf(this.lan.split('_')[0].toLowerCase()) !== -1) {\n            const [lans] = this.lan.split('_');\n            language = lans;\n          }\n        }\n      }\n      if (!language.length) {\n        language = 'en';\n      }\n      return language;\n    },\n    // 根容器 行内样式\n    contentStyle() {\n      return {\n        width: this.width,\n        marginTop: this.marginTop,\n      };\n    },\n    // 基础占位容器 class\n    baseStanceClass() {\n      if (this.errorHave && this.errorFlag) {\n        return 'common-geetest-baseStance-error';\n      }\n      return '';\n    },\n    // 下横向 行内样式\n    activeLineStyle() {\n      let width = '0%';\n      if (\n        (this.nowState && this.isHover)\n        || (this.errorHave && this.errorFlag)\n      ) {\n        width = '100%';\n      }\n      return {\n        width,\n      };\n    },\n    // 下横线 class\n    activeLineClass() {\n      let className = 'a-12-bg';\n      if (this.errorHave && this.errorFlag && !this.isFocus) {\n        className = 'a-19-bg';\n      }\n      return className;\n    },\n  },\n  created() {\n    this.init();\n  },\n  methods: {\n    // input 鼠标划入\n    handMouseenter() {\n      this.isHover = true;\n    },\n    // input 鼠标划出\n    handMouseleave() {\n      this.isHover = false;\n    },\n    init() {\n      this.axios({\n        url: 'common/tartCaptcha',\n        headers: {},\n        params: {},\n        method: 'post',\n      }).then((data) => {\n        if (data.code === '0') {\n          this.geetest({\n            challenge: data.data.captcha.challenge,\n            gt: data.data.captcha.gt,\n            success: data.data.captcha.success,\n          });\n        }\n      });\n    },\n    setStyle() {\n      const { colorMap } = this;\n      const radar = document.getElementsByClassName(\n        'geetest_radar_tip_content',\n      );\n      const reset = document.getElementsByClassName(\n        'geetest_reset_tip_content',\n      );\n      const geetestRadarBtn = document.getElementsByClassName(\n        'geetest_radar_btn',\n      );\n      const geetestSuccessBtn = document.getElementsByClassName(\n        'geetest_success_btn',\n      );\n\n      if (colorMap) {\n        if (radar && radar.length) {\n          radar[0].style.color = colorMap['b-2-cl'];\n        }\n        if (reset && reset.length) {\n          reset[0].style.color = colorMap['b-2-cl'];\n        }\n        if (geetestRadarBtn && geetestRadarBtn.length) {\n          geetestRadarBtn[0].style.background = colorMap[this.geetestBg];\n        }\n        if (geetestSuccessBtn && geetestSuccessBtn.length) {\n          geetestSuccessBtn[0].style.background = colorMap[this.geetestBg];\n        }\n      }\n    },\n    // 构件极验\n    geetest({ challenge, gt, success }) {\n      const product = this.product ? this.product : 'popup';\n      window.initGeetest(\n        {\n          // 以下 4 个配置参数为必须，不能缺少\n          product,\n          lang: this.geetestLan,\n          gt,\n          challenge,\n          offline: !success, // 表示用户后台检测极验服务器是否宕机\n          new_captcha: true, // 用于宕机时表示是新验证码的宕机\n          width: '100%',\n        },\n        (captchaObj) => {\n          this.nowState = true;\n          captchaObj.appendTo(this.$refs.captchaBox);\n          this.$emit('getCaptchaObj', captchaObj);\n          captchaObj.onReady(() => {\n            this.isReady = true;\n            this.$nextTick(() => {\n              this.setStyle();\n            });\n          });\n          captchaObj.onError(() => {});\n          captchaObj.onSuccess(() => {\n            this.nowState = false;\n            const result = captchaObj.getValidate();\n            setTimeout(() => {\n              this.$emit('callback', {\n                geetest_challenge: result.geetest_challenge,\n                geetest_seccode: result.geetest_seccode,\n                geetest_validate: result.geetest_validate,\n                verificationType: '2',\n                token: true,\n                nc: Object.assign(captchaObj, { reset: captchaObj.reset }),\n              });\n            }, 300);\n          });\n        },\n      );\n    },\n  },\n};\n",{"version":3,"sources":["geetest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"geetest.vue","sourceRoot":"../BlockChain-ui/PC/components/verify","sourcesContent":["// Created by 任泽阳 on 18/12/07. // 极验\n<template>\n  <section class='common-geetest' :style='contentStyle'>\n    <!-- 基础部分 占位42px -->\n    <div\n      class='common-geetest-baseStance a-2-bd'\n      :class='baseStanceClass'\n      @mouseenter='handMouseenter'\n      @mouseleave='handMouseleave'\n    >\n      <div v-if='!isReady' class='common-geetest-loading'>\n        <c-loading size='20' />\n      </div>\n      <div id='captchaBox' class='a-5-bg' ref='captchaBox'></div>\n      <!-- 选中时横线 -->\n      <span\n        class='common-geetest-activeLine'\n        :class='activeLineClass'\n        :style='activeLineStyle'\n      ></span>\n    </div>\n    <!-- 错误文案占位 24px -->\n    <div class='common-geetest-errorStence b-6-cl' v-if='errorHave'>\n      <!-- 错误信息容器 -->\n      <p class='common-geetest-error' v-if='errorFlag'>{{ errorText }}</p>\n    </div>\n  </section>\n</template>\n<script>\nexport default {\n  name: 'common-geetest',\n  data() {\n    return {\n      nowState: false, // 当前状态 true可滑动 false不可滑动 用于下划线时判断\n      isHover: false, // 是否划过\n      isReady: false, // 是否准备成功\n    };\n  },\n  props: {\n    product: { default: '', type: String },\n    width: { default: '100%', type: String }, // 该容器根容器 width属性\n    marginTop: { default: '0px', type: String }, // 该组件根容器 margin-top属性\n    errorHave: { default: false, type: Boolean }, // 是否有错误文案\n    errorText: { default: '', type: String }, // 错误文案\n    errorFlag: { default: false, type: Boolean }, // 错误文案是否显示\n    geetestBg: { default: 'a-7-bg', type: String }, // 极验的背景颜色\n    colorMap: { default: () => {}, required: true },\n  },\n  computed: {\n    lan() {\n      return this.$store.state.baseData.lan;\n    },\n    geetestLan() {\n      let language = '';\n      // 简体中文\n      if (this.lan === 'zh_CN') {\n        language = 'zh-cn';\n        // 繁体中文\n      } else if (this.lan === 'el_GR') {\n        language = 'zh-hk';\n        // 葡萄牙\n      } else if (this.lan === 'pt_PT') {\n        language = 'pt-pt';\n      } else {\n        const arr = [\n          'en', // 英文\n          'ja', // 日文\n          'id', // 印尼\n          'ko', // 韩语\n          'ru', // 俄语\n          'ar', // 阿拉伯\n          'es', // 西班牙语\n          'fr', // 法语\n          'de', // 德语\n        ];\n        if (this.lan.length && this.lan.split('_').length) {\n          if (arr.indexOf(this.lan.split('_')[0].toLowerCase()) !== -1) {\n            const [lans] = this.lan.split('_');\n            language = lans;\n          }\n        }\n      }\n      if (!language.length) {\n        language = 'en';\n      }\n      return language;\n    },\n    // 根容器 行内样式\n    contentStyle() {\n      return {\n        width: this.width,\n        marginTop: this.marginTop,\n      };\n    },\n    // 基础占位容器 class\n    baseStanceClass() {\n      if (this.errorHave && this.errorFlag) {\n        return 'common-geetest-baseStance-error';\n      }\n      return '';\n    },\n    // 下横向 行内样式\n    activeLineStyle() {\n      let width = '0%';\n      if (\n        (this.nowState && this.isHover)\n        || (this.errorHave && this.errorFlag)\n      ) {\n        width = '100%';\n      }\n      return {\n        width,\n      };\n    },\n    // 下横线 class\n    activeLineClass() {\n      let className = 'a-12-bg';\n      if (this.errorHave && this.errorFlag && !this.isFocus) {\n        className = 'a-19-bg';\n      }\n      return className;\n    },\n  },\n  created() {\n    this.init();\n  },\n  methods: {\n    // input 鼠标划入\n    handMouseenter() {\n      this.isHover = true;\n    },\n    // input 鼠标划出\n    handMouseleave() {\n      this.isHover = false;\n    },\n    init() {\n      this.axios({\n        url: 'common/tartCaptcha',\n        headers: {},\n        params: {},\n        method: 'post',\n      }).then((data) => {\n        if (data.code === '0') {\n          this.geetest({\n            challenge: data.data.captcha.challenge,\n            gt: data.data.captcha.gt,\n            success: data.data.captcha.success,\n          });\n        }\n      });\n    },\n    setStyle() {\n      const { colorMap } = this;\n      const radar = document.getElementsByClassName(\n        'geetest_radar_tip_content',\n      );\n      const reset = document.getElementsByClassName(\n        'geetest_reset_tip_content',\n      );\n      const geetestRadarBtn = document.getElementsByClassName(\n        'geetest_radar_btn',\n      );\n      const geetestSuccessBtn = document.getElementsByClassName(\n        'geetest_success_btn',\n      );\n\n      if (colorMap) {\n        if (radar && radar.length) {\n          radar[0].style.color = colorMap['b-2-cl'];\n        }\n        if (reset && reset.length) {\n          reset[0].style.color = colorMap['b-2-cl'];\n        }\n        if (geetestRadarBtn && geetestRadarBtn.length) {\n          geetestRadarBtn[0].style.background = colorMap[this.geetestBg];\n        }\n        if (geetestSuccessBtn && geetestSuccessBtn.length) {\n          geetestSuccessBtn[0].style.background = colorMap[this.geetestBg];\n        }\n      }\n    },\n    // 构件极验\n    geetest({ challenge, gt, success }) {\n      const product = this.product ? this.product : 'popup';\n      window.initGeetest(\n        {\n          // 以下 4 个配置参数为必须，不能缺少\n          product,\n          lang: this.geetestLan,\n          gt,\n          challenge,\n          offline: !success, // 表示用户后台检测极验服务器是否宕机\n          new_captcha: true, // 用于宕机时表示是新验证码的宕机\n          width: '100%',\n        },\n        (captchaObj) => {\n          this.nowState = true;\n          captchaObj.appendTo(this.$refs.captchaBox);\n          this.$emit('getCaptchaObj', captchaObj);\n          captchaObj.onReady(() => {\n            this.isReady = true;\n            this.$nextTick(() => {\n              this.setStyle();\n            });\n          });\n          captchaObj.onError(() => {});\n          captchaObj.onSuccess(() => {\n            this.nowState = false;\n            const result = captchaObj.getValidate();\n            setTimeout(() => {\n              this.$emit('callback', {\n                geetest_challenge: result.geetest_challenge,\n                geetest_seccode: result.geetest_seccode,\n                geetest_validate: result.geetest_validate,\n                verificationType: '2',\n                token: true,\n                nc: Object.assign(captchaObj, { reset: captchaObj.reset }),\n              });\n            }, 300);\n          });\n        },\n      );\n    },\n  },\n};\n</script>\n<style lang='stylus'>\n// 根容器\n.common-geetest {\n  // 基础占位容器 (默认)\n  .common-geetest-baseStance {\n    position: relative;\n    height: 38px;\n    border-bottom-width: 2px;\n    border-bottom-style: solid;\n    // 下划线动效容器\n    .common-geetest-activeLine {\n      position: absolute;\n      top: 38px;\n      height: 2px;\n      width: 0%;\n      left: 50%;\n      transform: translateX(-50%);\n      display: inline-block;\n      -webkit-transition: 0.5s;\n      transition: 0.5s;\n      animation-delay: 0.5s\n    }\n    // loading容器\n    .common-geetest-loading {\n      position: absolute;\n      height: 30px;\n      line-height: 30px;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      font-size: 14px\n    }\n  }\n  // 基础占位容器 (错误时)\n  .common-geetest-baseStance-error {\n  }\n  // 错误信息占位容器\n  .common-geetest-errorStence {\n    height: 24px;\n    position: relative;\n    // 错误文案容器\n    .common-geetest-error {\n      position: absolute;\n      bottom: 2px;\n      margin: 0;\n      font-size: 12px;\n      user-select:none;\n    }\n  }\n}\n\n// 极验样式部分\n#captchaBox {\n  // 极验 自身最外层盒子\n  .geetest_wind {\n    height: 38px;\n  }\n  // 初始状态 小icon部分\n  .geetest_radar {\n    width: 24px;\n    height: 24px;\n    top: 3px;\n  }\n  // 初始状态 重试状态 文字部分\n  .geetest_radar_tip_content, geetest_reset_tip_content {\n    font-size: 14px;\n  }\n  .geetest_reset_tip_content\n  // 文字部分盒子\n  .geetest_radar_tip {\n    height: 38px;\n    line-height: 42px;\n  }\n  // 等待状态\n  .geetest_holder.geetest_wind.geetest_radar_click_ready .geetest_radar_tip {\n    opacity: 1\n  }\n  // loading\n  .geetest_radar_btn {\n  }\n  .geetest_holder.geetest_wind .geetest_radar_btn ,\n  .geetest_holder.geetest_wind .geetest_radar_btn:hover{\n    background: none;\n    border: none;\n  }\n  // 成功后\n  .geetest_holder.geetest_wind .geetest_success_btn,\n  .geetest_holder.geetest_wind .geetest_success_btn:hover {\n    border: none;\n    height: 38px;\n    background-color transparent;\n  }\n  .geetest_holder.geetest_wind .geetest_success_btn .geetest_success_box .geetest_success_show {\n    background: none;\n    border: none;\n  }\n  .geetest_logo,\n  .geetest_success_logo {\n    display: none;\n  }\n}\n</style>\n"]}]}