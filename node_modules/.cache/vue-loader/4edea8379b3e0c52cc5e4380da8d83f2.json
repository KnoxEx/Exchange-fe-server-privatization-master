{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/coTrade/component/form-input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/coTrade/component/form-input.vue","mtime":1641907318062},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { fixInput } from '@/utils';\n// import Utils from '@/utils/coUtils.js';\n\nexport default {\n  name: 'form-input',\n  props: {\n    isMarket: {\n      default: false,\n      type: Boolean,\n    },\n    fix: {\n      default: 2,\n      type: [Number, String],\n    },\n    default: {\n      default: '',\n      type: [Number, String],\n    },\n    unit: {\n      default: '',\n      type: String,\n    },\n    title: {\n      default: '',\n      type: String,\n    },\n    placeHolder: {\n      default: '',\n      type: String,\n    },\n    haveMarket: {\n      default: false,\n      type: Boolean,\n    },\n    isVol: {\n      default: false,\n      type: Boolean,\n    },\n    isPercentage: {\n      default: '',\n      type: [Number, String],\n    },\n    isError: {\n      default: null,\n      type: [Number, String],\n    },\n    promptText: {\n      default: '',\n      type: String,\n    },\n\n  },\n  data() {\n    return {\n      value: '',\n      inputClass: '',\n      isFocus: false,\n    };\n  },\n  computed: {\n    coinList() {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n      return null;\n    },\n    coinUnit() {\n      return this.$store.state.swap.coinUnit;\n    },\n    valueUnit() {\n      return this.$store.state.swap.valueUnit;\n    },\n  },\n  watch: {\n    default(val) {\n      this.value = val;\n    },\n    isError(val) {\n      this.inputClass = val ? 'a-19-bd' : 'a-3-bd';\n    },\n    isMarket(val) {\n      if (!val) {\n        setTimeout(() => {\n          this.$refs.formInput.focus();\n        });\n      }\n    },\n  },\n  mounted() {\n    this.value = this.default;\n    this.inputClass = this.isError ? 'a-19-bd' : 'a-3-bd';\n  },\n  methods: {\n    focusInputClass(flag) {\n      if (!this.isError) {\n        this.inputClass = 'a-12-bd';\n        if (flag) {\n          this.isFocus = flag;\n        }\n      }\n    },\n    blurinputClass() {\n      if (!this.isError) {\n        this.isFocus = false;\n        this.inputClass = 'a-3-bd';\n      }\n    },\n    mouseoutInputClass() {\n      if (!this.isError && !this.isFocus) {\n        this.inputClass = 'a-3-bd';\n      }\n    },\n    selectMarket() {\n      this.$emit('selectMarket');\n    },\n    focusInput() {\n      setTimeout(() => {\n        this.$refs.formInput.focus();\n      });\n    },\n    clearPercentage() {\n      this.$emit('clearPercentage');\n      setTimeout(() => {\n        this.$refs.formInput.focus();\n      });\n    },\n    newFixInput(val, fix) {\n      return fixInput(val, fix);\n      // if (fix > 0) {\n      //   return r\n      // } else {\n      //   return Utils.retainDecimals(val, { decimal: 0 })\n      // }\n    },\n    handleInput(val) {\n      let data;\n      let valus = val;\n      const str = val;\n      if (str.length >= 10) {\n        valus = str.substring(0, 12);\n      }\n      if (!this.isVol) {\n        data = this.newFixInput(valus, this.fix);\n      } else {\n        data = this.volChange(valus);\n      }\n      this.value = data;\n      this.$emit('tradeChangeValue', data);\n    },\n    // 量改变事件\n    volChange(val) {\n      if (val) {\n        return this.newFixInput(val, this.fix);\n      }\n      return '';\n    },\n  },\n};\n",null]}