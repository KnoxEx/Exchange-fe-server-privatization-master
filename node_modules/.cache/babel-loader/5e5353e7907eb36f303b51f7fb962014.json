{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/contract/index/index.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/contract/index/index.js","mtime":1640796644605},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import futureWorker from '@/utils/futureWorker';\nexport default {\n  name: 'trade',\n  data: function data() {\n    return {\n      // 数据\n      marketData: null,\n      // MywebSocket\n      MywebSocket: null,\n      // 深度值\n      depthValue: 0,\n      // 图表遮罩\n      coverKlineBox: null,\n      // 开通合约交易弹框\n      openFuturesDialogShow: false,\n      // 交易喜好设置弹框\n      setFuturesDialogShow: false,\n      // 计算器弹框\n      calculatorDialogShow: false,\n      // 轮训\n      getPositionTimer: null,\n      // 下单选择类型弹框是否显示\n      subOtderTypeShow: null\n    };\n  },\n  computed: {\n    worker: function worker() {\n      return futureWorker();\n    },\n    // 是否Login\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    // WS URL\n    wsUrl: function wsUrl() {\n      return this.$store.state.future.wsUrl || null;\n    },\n    // 用户配置信息\n    userConfig: function userConfig() {\n      return this.$store.state.future.futureUserConfig;\n    },\n    // 合约币对列表\n    contractSymbolList: function contractSymbolList() {\n      return this.$store.state.future.contractSymbolList;\n    },\n    // 是否开通了合约交易\n    openContract: function openContract() {\n      return this.$store.state.future.openContract;\n    },\n    // 当前币对小写带类型\n    symbolCurrent: function symbolCurrent() {\n      return this.$store.state.future.coTypeSymbol;\n    },\n    contractName: function contractName() {\n      return this.$store.state.future.contractName || '';\n    }\n  },\n  watch: {\n    // wsUrl\n    wsUrl: function wsUrl(val, old) {\n      if (val && !old) {\n        this.worker.postMessage({\n          type: 'CREAT_WEBSOCKET',\n          data: {\n            wsUrl: val,\n            lan: this.$store.state.baseData.lan,\n            rate: '',\n            symbolAll: {}\n          }\n        });\n      }\n    },\n    // 监听 用户配置信息\n    openContract: function openContract(val) {\n      if (!val) {\n        this.openFuturesDialogShow = true;\n      }\n    },\n    // 监听 当前选中货币对的改变\n    contractName: function contractName(val) {\n      if (val) {\n        this.$router.push(\"/trade/\".concat(val));\n        this.$bus.$emit('SYMBOL_CURRENT', val);\n      }\n    },\n    symbolCurrent: function symbolCurrent(val, oldVla) {\n      if (oldVla && this.MywebSocket) {\n        // 停止 上一个币对的 实时成交 send\n        this.webSocketSend('Trade', 'unsub', oldVla); // 发送 实时成交 数据 Send\n\n        this.webSocketSend('Trade', 'req', val);\n        this.webSocketSend('Trade', 'sub', val); // 停止 盘口深度数据 Send\n\n        this.webSocketSend('Depth', 'unsub', oldVla, this.depthValue); // 发送 盘口深度 数据 Send\n\n        this.webSocketSend('Depth', 'sub', val, this.depthValue);\n      }\n    },\n    // 监听 webSocket 创建成功\n    MywebSocket: function MywebSocket(val) {\n      if (val) {\n        // 发送 24小时行情历史数据 Send\n        this.webSocketSend('Review'); // 发送 24小时行情实时数据 Send\n\n        this.webSocketSend('Market', 'sub', this.symbolCurrent, this.contractSymbolList); // 发送 盘口深度数据 Send\n\n        this.webSocketSend('Depth', 'sub', this.symbolCurrent, this.depthValue); // // 发送 实时成交 数据 Send\n\n        this.webSocketSend('Trade', 'req', this.symbolCurrent);\n        this.webSocketSend('Trade', 'sub', this.symbolCurrent);\n      }\n    },\n    // 深度值切换\n    depthValue: function depthValue(val, old) {\n      if (old) {\n        this.webSocketSend('Depth', 'unsub', this.symbolCurrent, old);\n      }\n\n      this.webSocketSend('Depth', 'sub', this.symbolCurrent, val);\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      // 轮训获取数据\n      this.intervalGetData(); // 获取worker信息\n\n      this.worker.onmessage = function (event) {\n        var data = event.data; // 监听 WebSocket 链接成功\n\n        if (data.type === 'WEBSOCKET_ON_OPEN') {\n          _this.MywebSocket = null;\n          _this.MywebSocket = data.data.type;\n\n          _this.$bus.$emit('WEBSOCKET_ON_OPEN', _this.MywebSocket);\n        } // 监听 WS 数据\n\n\n        if (data.type === 'WEBSOCKET_DATA') {\n          _this.listenWSData(data.data);\n        }\n      };\n\n      this.listenBusEvent();\n    },\n    listenBusEvent: function listenBusEvent() {\n      var _this2 = this;\n\n      if (this.wsUrl) {\n        this.worker.postMessage({\n          type: 'CREAT_WEBSOCKET',\n          data: {\n            wsUrl: this.wsUrl,\n            lan: this.$store.state.baseData.lan,\n            rate: '',\n            symbolAll: {}\n          }\n        });\n      } // 显示开通合约弹框\n\n\n      this.$bus.$on('OPEN_FUTURE', function () {\n        _this2.openFuturesDialogShow = true;\n      }); // 显示偏好设置弹框\n\n      this.$bus.$on('SET_FUTURE_CONFIG', function () {\n        if (_this2.isLogin && _this2.openContract) {\n          _this2.$store.dispatch('getUserConfig');\n        }\n\n        _this2.setFuturesDialogShow = true;\n      }); // 显示计算器弹框\n\n      this.$bus.$on('OPEN_CALCULATOR_DIALOG', function () {\n        _this2.calculatorDialogShow = true;\n      }); // 监听 深度级别的值\n\n      this.$bus.$on('DEPTH_VALUE', function (data) {\n        _this2.depthValue = data;\n      }); // 监听 kline 发送Send\n\n      this.$bus.$on('WEBSOCKET_KLINE_SEND', function (data) {\n        _this2.worker.postMessage({\n          type: 'WEBSOCKET_KLINE_SEND',\n          data: data\n        });\n      });\n    },\n    // 分发WS数据\n    listenWSData: function listenWSData(data) {\n      var type = data.type,\n          WsData = data.WsData;\n      this.$bus.$emit(type, WsData);\n    },\n    webSocketSend: function webSocketSend(type, sendType, symbolData, symbolList) {\n      this.worker.postMessage({\n        type: 'WEBSOCKET_SEND',\n        data: {\n          type: type,\n          sendType: sendType,\n          symbolData: symbolData,\n          symbolList: symbolList,\n          depthValue: 0\n        }\n      });\n    },\n    ondblclick: function ondblclick() {\n      return false;\n    },\n    onclickfun: function onclickfun(e) {\n      // 显示和隐藏币币交易页面 TradingView 的遮罩\n      if (e.target.className === 'coverKlineBox') {\n        this.coverKlineBox = e.target;\n      }\n\n      if (e.target.className === 'coverKlineBox') {\n        this.coverKlineBox.style.display = 'none';\n      } else if (this.coverKlineBox) {\n        this.coverKlineBox.style.display = 'block';\n        this.coverKlineBox = null;\n      }\n\n      if (e.target && e.target.className && e.target.className.indexOf && e.target.className.indexOf('ac-type') > -1) {\n        this.subOtderTypeShow = e.target.nextElementSibling;\n      } else if (this.subOtderTypeShow) {\n        this.subOtderTypeShow.style.display = 'none';\n        this.subOtderTypeShow = null;\n      }\n    },\n    // 关闭弹窗\n    closeDialog: function closeDialog() {\n      // 关闭开通合约交易弹框\n      this.openFuturesDialogShow = false; // 关闭喜好设置弹框\n\n      this.setFuturesDialogShow = false; // 关闭计算器弹框\n\n      this.calculatorDialogShow = false;\n    },\n    intervalGetData: function intervalGetData() {\n      var _this3 = this;\n\n      // 获取用户持仓和资产列表\n      clearInterval(this.getPositionTimer);\n      this.getPositionTimer = setInterval(function () {\n        if (_this3.isLogin && _this3.openContract) {\n          _this3.$store.dispatch('getPositionList');\n\n          _this3.$store.dispatch('getUserOrderCount');\n        } else {\n          clearInterval(_this3.getPositionTimer);\n          _this3.getPositionTimer = null;\n        }\n      }, 5000);\n    }\n  },\n  destroyed: function destroyed() {\n    this.$bus.$off('OPEN_FUTURE');\n    this.$bus.$off('SET_FUTURE_CONFIG');\n    this.$bus.$off('OPEN_CALCULATOR_DIALOG');\n    this.$bus.$off('DEPTH_VALUE');\n    this.$bus.$off('WEBSOCKET_KLINE_SEND');\n    clearInterval(this.getPositionTimer);\n    this.getPositionTimer = null;\n  }\n};",null]}