{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/personal/BindPhone/BindPhone.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/personal/BindPhone/BindPhone.js","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport { getCookie } from '@/utils';\nimport countryMinix from \"../../countryList/countryList\";\nexport default {\n  name: 'bindPhone',\n  mixins: [countryMinix],\n  watch: {\n    sendSmsCode: function sendSmsCode(_sendSmsCode) {\n      if (_sendSmsCode !== null) {\n        if (_sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    nowUserRegType: {\n      immediate: true,\n      handler: function handler() {\n        this.dialogSet();\n      }\n    },\n    userInfo: {\n      immediate: true,\n      handler: function handler(userinfo) {\n        if (userinfo) {\n          this.googleCode = !!Number(userinfo.googleStatus);\n          this.googleReady = true;\n          this.dialogSet();\n        }\n      }\n    },\n    mobileBindSave: function mobileBindSave(_mobileBindSave) {\n      if (_mobileBindSave !== null) {\n        this.loading = false;\n\n        if (_mobileBindSave.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _mobileBindSave.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n          this.$router.push('/personal/userManagement');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _mobileBindSave.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n\n          if (_mobileBindSave.code !== '10009') {\n            this.$bus.$emit('getCode-clear', 'phone');\n          }\n        }\n      }\n    }\n  },\n  computed: {\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    sendSmsCode: function sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    mobileBindSave: function mobileBindSave() {\n      return this.$store.state.personal.mobileBindSave;\n    },\n    userRegType: function userRegType() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var str = '{}';\n\n      if (publicInfo) {\n        if (publicInfo.switch && publicInfo.switch.user_reg_type) {\n          str = publicInfo.switch.user_reg_type;\n        }\n      }\n\n      return JSON.parse(str);\n    },\n    nowUserRegType: function nowUserRegType() {\n      var lan = getCookie('lan');\n      var arr = [1, 2];\n\n      if (this.userRegType[lan]) {\n        arr = this.userRegType[lan];\n      }\n\n      return arr;\n    }\n  },\n  data: function data() {\n    return {\n      promptText: this.$t('personal.label.promptText'),\n      errorText: this.$t('personal.label.errorText'),\n      loading: false,\n      checkValue1: '',\n      checkValue2: '',\n      checkValue3: '',\n      promptText1: this.$t('personal.label.phone'),\n      promptText2: this.$t('personal.label.smsCodeText'),\n      promptText3: this.$t('personal.label.googleCodeText'),\n      errorText1: this.$t('personal.prompt.errorPhone'),\n      errorText2: this.$t('personal.prompt.errorCode'),\n      errorText3: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag1: false,\n      checkErrorFlag2: false,\n      checkErrorFlag3: false,\n      disabled: true,\n      googleCode: false,\n      countryErrorFlag: false,\n      dialogFlag: false,\n      googleReady: false\n    };\n  },\n  methods: {\n    dialogSet: function dialogSet() {\n      if (this.nowUserRegType[0] === 2 && this.nowUserRegType.length === 1 && this.googleReady && !this.googleCode) {\n        this.dialogFlag = true;\n      }\n    },\n    dialogClose: function dialogClose() {\n      this.dialogFlag = false;\n    },\n    dialogConfirm: function dialogConfirm() {\n      this.$router.push('/personal/bindGoogle');\n    },\n    init: function init() {\n      if (this.userInfo) {\n        this.googleCode = !!Number(this.userInfo.googleStatus);\n      }\n    },\n    // 手机正则\n    phoneFlag: function phoneFlag(val) {\n      return this.$store.state.regExp.phone.test(val);\n    },\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick: function getCodeClick() {\n      if (this.checkValue1 && !this.checkErrorFlag1) {\n        this.$bus.$emit('getCode-start', 'phone');\n        var info = {\n          countryCode: this.countryKeyCode,\n          mobile: this.checkValue1,\n          operationType: 2\n        };\n        this.$store.dispatch('sendSmsCode', info);\n      } else {\n        this.checkErrorFlag1 = true;\n        this.errorText1 = this.$t('personal.prompt.errorPhoneText');\n      }\n    },\n    inputChanges: function inputChanges(value, name) {\n      switch (name) {\n        case 'phone':\n          {\n            // phone\n            this.checkValue1 = value;\n\n            if (this.phoneFlag(value)) {\n              this.checkErrorFlag1 = false;\n            } else {\n              this.checkErrorFlag1 = true;\n              this.errorText1 = this.$t('personal.prompt.errorPhone');\n            }\n\n            break;\n          }\n\n        case 'phoneCode':\n          {\n            this.checkValue2 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag2 = false;\n            } else {\n              this.checkErrorFlag2 = true;\n            }\n\n            break;\n          }\n\n        default:\n          {\n            // google验证码\n            this.checkValue3 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag3 = false;\n            } else {\n              this.checkErrorFlag3 = true;\n            }\n          }\n      }\n\n      if (this.checkValue1 && this.checkValue2 && !this.checkErrorFlag1 && !this.checkErrorFlag2 && !this.checkErrorFlag3) {\n        if (this.googleCode) {\n          if (this.checkValue3) {\n            this.disabled = !this.checkValue3;\n          }\n        } else {\n          this.disabled = false;\n        }\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink: function btnLink() {\n      this.loading = true;\n      var info = {\n        countryCode: this.countryKeyCode,\n        mobileNumber: this.checkValue1,\n        smsAuthCode: this.checkValue2,\n        googleCode: this.checkValue3\n      };\n      this.$store.dispatch('mobileBindSave', info);\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/personal/BindPhone/BindPhone.js"],"names":["getCookie","countryMinix","name","mixins","watch","sendSmsCode","text","$bus","$emit","msg","type","$store","dispatch","nowUserRegType","immediate","handler","dialogSet","userInfo","userinfo","googleCode","Number","googleStatus","googleReady","mobileBindSave","loading","$router","push","code","computed","state","baseData","personal","userRegType","publicInfo","str","switch","user_reg_type","JSON","parse","lan","arr","data","promptText","$t","errorText","checkValue1","checkValue2","checkValue3","promptText1","promptText2","promptText3","errorText1","errorText2","errorText3","checkErrorFlag1","checkErrorFlag2","checkErrorFlag3","disabled","countryErrorFlag","dialogFlag","methods","length","dialogClose","dialogConfirm","init","phoneFlag","val","regExp","phone","test","codeFlag","verification","getCodeClick","info","countryCode","countryKeyCode","mobile","operationType","inputChanges","value","btnLink","mobileNumber","smsAuthCode"],"mappings":"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","sourcesContent":["import { getCookie } from '@/utils';\nimport countryMinix from '../../countryList/countryList';\n\nexport default {\n  name: 'bindPhone',\n  mixins: [countryMinix],\n  watch: {\n    sendSmsCode(sendSmsCode) {\n      if (sendSmsCode !== null) {\n        if (sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', { text: sendSmsCode.msg, type: 'success' });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', { text: sendSmsCode.msg, type: 'error' });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    nowUserRegType: {\n      immediate: true,\n      handler() {\n        this.dialogSet();\n      },\n    },\n    userInfo: {\n      immediate: true,\n      handler(userinfo) {\n        if (userinfo) {\n          this.googleCode = !!Number(userinfo.googleStatus);\n          this.googleReady = true;\n          this.dialogSet();\n        }\n      },\n    },\n    mobileBindSave(mobileBindSave) {\n      if (mobileBindSave !== null) {\n        this.loading = false;\n        if (mobileBindSave.text === 'success') {\n          this.$bus.$emit('tip', { text: mobileBindSave.msg, type: 'success' });\n          this.$store.dispatch('resetType');\n          this.$router.push('/personal/userManagement');\n        } else {\n          this.$bus.$emit('tip', { text: mobileBindSave.msg, type: 'error' });\n          this.$store.dispatch('resetType');\n          if (mobileBindSave.code !== '10009') {\n            this.$bus.$emit('getCode-clear', 'phone');\n          }\n        }\n      }\n    },\n  },\n  computed: {\n    userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    mobileBindSave() {\n      return this.$store.state.personal.mobileBindSave;\n    },\n    userRegType() {\n      const { publicInfo } = this.$store.state.baseData;\n      let str = '{}';\n      if (publicInfo) {\n        if (publicInfo.switch && publicInfo.switch.user_reg_type) {\n          str = publicInfo.switch.user_reg_type;\n        }\n      }\n      return JSON.parse(str);\n    },\n    nowUserRegType() {\n      const lan = getCookie('lan');\n      let arr = [1, 2];\n      if (this.userRegType[lan]) {\n        arr = this.userRegType[lan];\n      }\n      return arr;\n    },\n  },\n  data() {\n    return {\n      promptText: this.$t('personal.label.promptText'),\n      errorText: this.$t('personal.label.errorText'),\n      loading: false,\n      checkValue1: '',\n      checkValue2: '',\n      checkValue3: '',\n      promptText1: this.$t('personal.label.phone'),\n      promptText2: this.$t('personal.label.smsCodeText'),\n      promptText3: this.$t('personal.label.googleCodeText'),\n      errorText1: this.$t('personal.prompt.errorPhone'),\n      errorText2: this.$t('personal.prompt.errorCode'),\n      errorText3: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag1: false,\n      checkErrorFlag2: false,\n      checkErrorFlag3: false,\n      disabled: true,\n      googleCode: false,\n      countryErrorFlag: false,\n      dialogFlag: false,\n      googleReady: false,\n    };\n  },\n  methods: {\n    dialogSet() {\n      if (this.nowUserRegType[0] === 2\n          && this.nowUserRegType.length === 1\n          && this.googleReady && !this.googleCode) {\n        this.dialogFlag = true;\n      }\n    },\n    dialogClose() {\n      this.dialogFlag = false;\n    },\n    dialogConfirm() {\n      this.$router.push('/personal/bindGoogle');\n    },\n    init() {\n      if (this.userInfo) {\n        this.googleCode = !!Number(this.userInfo.googleStatus);\n      }\n    },\n    // 手机正则\n    phoneFlag(val) {\n      return this.$store.state.regExp.phone.test(val);\n    },\n    codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick() {\n      if (this.checkValue1 && !this.checkErrorFlag1) {\n        this.$bus.$emit('getCode-start', 'phone');\n        const info = {\n          countryCode: this.countryKeyCode,\n          mobile: this.checkValue1,\n          operationType: 2,\n        };\n        this.$store.dispatch('sendSmsCode', info);\n      } else {\n        this.checkErrorFlag1 = true;\n        this.errorText1 = this.$t('personal.prompt.errorPhoneText');\n      }\n    },\n    inputChanges(value, name) {\n      switch (name) {\n        case 'phone': { // phone\n          this.checkValue1 = value;\n          if (this.phoneFlag(value)) {\n            this.checkErrorFlag1 = false;\n          } else {\n            this.checkErrorFlag1 = true;\n            this.errorText1 = this.$t('personal.prompt.errorPhone');\n          }\n          break;\n        }\n        case 'phoneCode': {\n          this.checkValue2 = value;\n          if (this.codeFlag(value)) {\n            this.checkErrorFlag2 = false;\n          } else {\n            this.checkErrorFlag2 = true;\n          }\n          break;\n        }\n        default: { // google验证码\n          this.checkValue3 = value;\n          if (this.codeFlag(value)) {\n            this.checkErrorFlag3 = false;\n          } else {\n            this.checkErrorFlag3 = true;\n          }\n        }\n      }\n      if (this.checkValue1 && this.checkValue2 && !this.checkErrorFlag1\n        && !this.checkErrorFlag2 && !this.checkErrorFlag3) {\n        if (this.googleCode) {\n          if (this.checkValue3) {\n            this.disabled = !this.checkValue3;\n          }\n        } else {\n          this.disabled = false;\n        }\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink() {\n      this.loading = true;\n      const info = {\n        countryCode: this.countryKeyCode,\n        mobileNumber: this.checkValue1,\n        smsAuthCode: this.checkValue2,\n        googleCode: this.checkValue3,\n      };\n      this.$store.dispatch('mobileBindSave', info);\n    },\n  },\n};\n"]}]}