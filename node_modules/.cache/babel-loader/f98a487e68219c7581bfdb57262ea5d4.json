{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/personal/modifyApi/modifyApi.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/personal/modifyApi/modifyApi.js","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\nexport default {\n  name: 'checkApi',\n  props: {\n    getApiList: {\n      default: function _default() {\n        return [];\n      },\n      type: Function\n    }\n  },\n  watch: {\n    sendSmsCode: function sendSmsCode(_sendSmsCode) {\n      if (_sendSmsCode !== null) {\n        if (_sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    updateOpenApi: function updateOpenApi(_updateOpenApi) {\n      if (_updateOpenApi !== null) {\n        this.loading = false;\n\n        if (_updateOpenApi.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _updateOpenApi.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n          this.$store.dispatch('setModifyApiShow', false);\n          this.getApiList();\n        } else {\n          this.$bus.$emit('tip', {\n            text: _updateOpenApi.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    }\n  },\n  computed: {\n    sendSmsCode: function sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    updateOpenApi: function updateOpenApi() {\n      return this.$store.state.personal.updateOpenApi;\n    }\n  },\n  data: function data() {\n    return {\n      // input\n      loading: false,\n      divShow: 1,\n      promptText1: this.$t('personal.label.ipText'),\n      errorText1: this.$t('personal.prompt.ipErrorText'),\n      checkErrorFlag1: false,\n      checkValue1: '',\n      promptText2: this.$t('personal.label.noteText'),\n      errorText2: '',\n      checkErrorFlag2: false,\n      checkValue2: '',\n      promptText3: this.$t('personal.label.smsCodeText'),\n      errorText3: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag3: false,\n      checkValue3: '',\n      promptText4: this.$t('personal.label.googleCodeText'),\n      errorText4: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag4: false,\n      checkValue4: '',\n      disabled: true,\n      googleCode: false,\n      smsCode: false\n    };\n  },\n  methods: {\n    init: function init() {\n      var userInfo = this.$store.state.baseData.userInfo;\n\n      if (userInfo !== null) {\n        this.googleCode = !!Number(userInfo.googleStatus);\n        this.smsCode = !!Number(userInfo.isOpenMobileCheck);\n      }\n\n      var apiIp = this.$store.state.personal.apiIp;\n      var apiLabel = this.$store.state.personal.apiLabel;\n\n      if (apiIp !== null) {\n        this.checkValue1 = apiIp;\n      }\n\n      if (apiLabel !== null) {\n        this.checkValue2 = apiLabel;\n      }\n    },\n    dealIp: function dealIp(value) {\n      var _this = this;\n\n      var a = true;\n\n      if (value.indexOf(',') !== -1) {\n        if (value.charAt(value.length - 1) === ',') {\n          // 如果最后一位是,删除最后一位再进行处理\n          var attr = value.substring(0, value.length - 1).split(',');\n          var len = attr.length;\n\n          if (len <= 5) {\n            attr.forEach(function (obj) {\n              if (_this.ipFlag(obj)) {\n                a = true;\n              } else {\n                a = false;\n              }\n            });\n          } else {\n            a = false;\n          }\n        } else {\n          // 否则正常处理\n          var _attr = value.split(',');\n\n          var _len = _attr.length;\n\n          if (_len <= 5) {\n            _attr.forEach(function (obj) {\n              if (_this.ipFlag(obj)) {\n                a = true;\n              } else {\n                a = false;\n              }\n            });\n          } else {\n            a = false;\n          }\n        }\n      } else {\n        a = this.ipFlag(value);\n      }\n\n      return a;\n    },\n    ipFlag: function ipFlag(val) {\n      var flag = false;\n\n      if (!val) {\n        flag = true;\n      } else {\n        flag = new RegExp(this.$store.state.regExp.ip, 'g').test(val);\n      }\n\n      return flag;\n    },\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick: function getCodeClick() {\n      this.$bus.$emit('getCode-start', 'phone');\n      var info = {\n        operationType: 16\n      };\n      this.$store.dispatch('sendSmsCode', info);\n    },\n    inputChanges: function inputChanges(val, name) {\n      switch (name) {\n        case 'ip':\n          this.checkValue1 = val;\n\n          if (this.dealIp(val)) {\n            this.checkErrorFlag1 = false;\n          } else {\n            this.checkErrorFlag1 = true;\n          }\n\n          break;\n\n        case 'note':\n          this.checkValue2 = val;\n          break;\n\n        case 'phoneCode':\n          this.checkValue3 = val;\n\n          if (this.codeFlag(val)) {\n            this.checkErrorFlag3 = false;\n          } else {\n            this.checkErrorFlag3 = true;\n          }\n\n          break;\n\n        default:\n          this.checkValue4 = val;\n\n          if (this.codeFlag(val)) {\n            this.checkErrorFlag4 = false;\n          } else {\n            this.checkErrorFlag4 = true;\n          }\n\n      }\n\n      if (this.checkValue2 && !this.checkErrorFlag1 && !this.checkErrorFlag3 && !this.checkErrorFlag4) {\n        if (this.smsCode) {\n          this.disabled = !this.checkValue3;\n        }\n\n        if (this.googleCode) {\n          this.disabled = !this.checkValue4;\n        }\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink: function btnLink() {\n      this.loading = true;\n      var token = this.$store.state.personal.apiToken;\n      var info = {\n        smsValidCode: this.checkValue3,\n        googleCode: this.checkValue4,\n        label: this.checkValue2,\n        believeIps: this.checkValue1,\n        token: token\n      };\n      this.$store.dispatch('updateOpenApi', info);\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/personal/modifyApi/modifyApi.js"],"names":["name","props","getApiList","default","type","Function","watch","sendSmsCode","text","$bus","$emit","msg","$store","dispatch","updateOpenApi","loading","computed","state","personal","data","divShow","promptText1","$t","errorText1","checkErrorFlag1","checkValue1","promptText2","errorText2","checkErrorFlag2","checkValue2","promptText3","errorText3","checkErrorFlag3","checkValue3","promptText4","errorText4","checkErrorFlag4","checkValue4","disabled","googleCode","smsCode","methods","init","userInfo","baseData","Number","googleStatus","isOpenMobileCheck","apiIp","apiLabel","dealIp","value","a","indexOf","charAt","length","attr","substring","split","len","forEach","obj","ipFlag","val","flag","RegExp","regExp","ip","test","codeFlag","verification","getCodeClick","info","operationType","inputChanges","btnLink","token","apiToken","smsValidCode","label","believeIps"],"mappings":"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","sourcesContent":["export default {\n  name: 'checkApi',\n  props: {\n    getApiList: {\n      default: () => [],\n      type: Function,\n    },\n  },\n  watch: {\n    sendSmsCode(sendSmsCode) {\n      if (sendSmsCode !== null) {\n        if (sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', { text: sendSmsCode.msg, type: 'success' });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', { text: sendSmsCode.msg, type: 'error' });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    updateOpenApi(updateOpenApi) {\n      if (updateOpenApi !== null) {\n        this.loading = false;\n        if (updateOpenApi.text === 'success') {\n          this.$bus.$emit('tip', { text: updateOpenApi.msg, type: 'success' });\n          this.$store.dispatch('resetType');\n          this.$store.dispatch('setModifyApiShow', false);\n          this.getApiList();\n        } else {\n          this.$bus.$emit('tip', { text: updateOpenApi.msg, type: 'error' });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n  },\n  computed: {\n    sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    updateOpenApi() {\n      return this.$store.state.personal.updateOpenApi;\n    },\n  },\n  data() {\n    return {\n      // input\n      loading: false,\n      divShow: 1,\n      promptText1: this.$t('personal.label.ipText'),\n      errorText1: this.$t('personal.prompt.ipErrorText'),\n      checkErrorFlag1: false,\n      checkValue1: '',\n      promptText2: this.$t('personal.label.noteText'),\n      errorText2: '',\n      checkErrorFlag2: false,\n      checkValue2: '',\n      promptText3: this.$t('personal.label.smsCodeText'),\n      errorText3: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag3: false,\n      checkValue3: '',\n      promptText4: this.$t('personal.label.googleCodeText'),\n      errorText4: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag4: false,\n      checkValue4: '',\n      disabled: true,\n      googleCode: false,\n      smsCode: false,\n    };\n  },\n  methods: {\n    init() {\n      const { userInfo } = this.$store.state.baseData;\n      if (userInfo !== null) {\n        this.googleCode = !!Number(userInfo.googleStatus);\n        this.smsCode = !!Number(userInfo.isOpenMobileCheck);\n      }\n      const { apiIp } = this.$store.state.personal;\n      const { apiLabel } = this.$store.state.personal;\n      if (apiIp !== null) {\n        this.checkValue1 = apiIp;\n      }\n      if (apiLabel !== null) {\n        this.checkValue2 = apiLabel;\n      }\n    },\n    dealIp(value) {\n      let a = true;\n      if (value.indexOf(',') !== -1) {\n        if (value.charAt(value.length - 1) === ',') { // 如果最后一位是,删除最后一位再进行处理\n          const attr = value.substring(0, value.length - 1).split(',');\n          const len = attr.length;\n          if (len <= 5) {\n            attr.forEach((obj) => {\n              if (this.ipFlag(obj)) {\n                a = true;\n              } else {\n                a = false;\n              }\n            });\n          } else {\n            a = false;\n          }\n        } else { // 否则正常处理\n          const attr = value.split(',');\n          const len = attr.length;\n          if (len <= 5) {\n            attr.forEach((obj) => {\n              if (this.ipFlag(obj)) {\n                a = true;\n              } else {\n                a = false;\n              }\n            });\n          } else {\n            a = false;\n          }\n        }\n      } else {\n        a = this.ipFlag(value);\n      }\n      return a;\n    },\n    ipFlag(val) {\n      let flag = false;\n      if (!val) {\n        flag = true;\n      } else {\n        flag = new RegExp(this.$store.state.regExp.ip, 'g').test(val);\n      }\n      return flag;\n    },\n    codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick() {\n      this.$bus.$emit('getCode-start', 'phone');\n      const info = { operationType: 16 };\n      this.$store.dispatch('sendSmsCode', info);\n    },\n    inputChanges(val, name) {\n      switch (name) {\n        case 'ip':\n          this.checkValue1 = val;\n          if (this.dealIp(val)) {\n            this.checkErrorFlag1 = false;\n          } else {\n            this.checkErrorFlag1 = true;\n          }\n          break;\n        case 'note':\n          this.checkValue2 = val;\n          break;\n        case 'phoneCode':\n          this.checkValue3 = val;\n          if (this.codeFlag(val)) {\n            this.checkErrorFlag3 = false;\n          } else {\n            this.checkErrorFlag3 = true;\n          }\n          break;\n        default:\n          this.checkValue4 = val;\n          if (this.codeFlag(val)) {\n            this.checkErrorFlag4 = false;\n          } else {\n            this.checkErrorFlag4 = true;\n          }\n      }\n      if (this.checkValue2 && !this.checkErrorFlag1\n        && !this.checkErrorFlag3 && !this.checkErrorFlag4) {\n        if (this.smsCode) {\n          this.disabled = !this.checkValue3;\n        }\n        if (this.googleCode) {\n          this.disabled = !this.checkValue4;\n        }\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink() {\n      this.loading = true;\n      const token = this.$store.state.personal.apiToken;\n      const info = {\n        smsValidCode: this.checkValue3,\n        googleCode: this.checkValue4,\n        label: this.checkValue2,\n        believeIps: this.checkValue1,\n        token,\n      };\n      this.$store.dispatch('updateOpenApi', info);\n    },\n\n  },\n};\n"]}]}