{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/message/message.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/message/message.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/toArray\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { formatTime } from '@/utils';\nexport default {\n  name: 'mesage',\n  data: function data() {\n    return {\n      messageType: 0,\n      sideList: [],\n      notieContent: [],\n      pagination: {\n        count: 0,\n        page: 1,\n        pageSize: 10\n      },\n      selectArr: [],\n      deleteFlag: null,\n      readFlag: null,\n      pageNumber: null,\n      isshowLoading: true,\n      pageTitle: null\n    };\n  },\n  computed: {\n    title: function title() {\n      if (this.pageTitle) {\n        return this.pageTitle;\n      }\n\n      if (this.sideList.length) {\n        return this.sideList[0].title;\n      }\n\n      return '';\n    },\n    dataListId: function dataListId() {\n      if (this.notieContent.length) {\n        var arr = [];\n        this.notieContent.forEach(function (item) {\n          arr.push(item.id);\n        });\n        return arr;\n      }\n\n      return [];\n    }\n  },\n  methods: {\n    init: function init() {\n      this.getListData();\n    },\n    formatTimeFn: function formatTimeFn(date) {\n      return formatTime(date);\n    },\n    // 获取列表书数据\n    getListData: function getListData() {\n      var _this = this;\n\n      this.isshowLoading = true;\n      this.getData({\n        url: this.$store.state.url.mesage.message,\n        params: {\n          page: this.pagination.page,\n          pageSize: this.pagination.pageSize,\n          messageType: this.messageType\n        },\n        callback: function callback(data) {\n          _this.notieContent = data.data.userMessageList;\n          _this.sideList = data.data.typeList;\n          _this.pagination.count = data.data.count;\n          _this.isshowLoading = false;\n        }\n      });\n    },\n    getData: function getData(datas) {\n      var _this2 = this;\n\n      var url = datas.url,\n          params = datas.params,\n          callback = datas.callback;\n      this.axios({\n        url: url,\n        params: params,\n        method: 'post'\n      }).then(function (data) {\n        if (data.code === '0') {\n          callback(data);\n        } else {\n          _this2.deleteFlag = null;\n          _this2.readFlag = null;\n\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      }).catch(function () {\n        _this2.deleteFlag = null;\n        _this2.readFlag = null;\n\n        _this2.$bus.$emit('tip', {\n          text: _this2.$t('common.error_500'),\n          type: 'error'\n        });\n      });\n    },\n    // 标记为已读\n    onChangeRead: function onChangeRead(id, index) {\n      var _this3 = this;\n\n      if (index !== 'all' && this.notieContent[index].status === 2) {\n        return false;\n      }\n\n      if (this.readFlag !== id) {\n        this.readFlag = id;\n        this.getData({\n          url: this.$store.state.url.mesage.message_status,\n          params: {\n            id: id\n          },\n          callback: function callback() {\n            if (index === 'all') {\n              _this3.notieContent.forEach(function (item, i) {\n                _this3.notieContent[i].status = 2;\n              });\n            } else {\n              _this3.notieContent[index].status = 2;\n            }\n\n            _this3.$store.dispatch('getMessage_count');\n          }\n        });\n      }\n\n      return true;\n    },\n    // 删除\n    deleteMsg: function deleteMsg(id, index) {\n      var _this4 = this;\n\n      if (index === 'all' && !id.length) {\n        // '请选择要删除的内容'\n        this.$bus.$emit('tip', {\n          text: this.$t('message.pleSelContent'),\n          type: 'error'\n        });\n      } else if (this.deleteFlag !== id) {\n        this.deleteFlag = id;\n        this.getData({\n          url: this.$store.state.url.mesage.message_del,\n          params: {\n            ids: id.toString()\n          },\n          callback: function callback() {\n            _this4.selectArr = [];\n\n            _this4.notieContent.splice(index, 1);\n\n            _this4.$store.dispatch('getMessage_count');\n\n            _this4.getListData();\n          }\n        });\n      }\n    },\n    // 切换类型\n    switchType: function switchType(id, title) {\n      this.pageTitle = title;\n      this.messageType = id;\n      this.pagination.page = 1;\n      this.getListData();\n    },\n    // 翻页事件\n    pagechange: function pagechange(num) {\n      this.pageNumber = num;\n      this.pagination.page = num;\n      this.getListData();\n    },\n    // 复选框\n    checkoutSelect: function checkoutSelect(data) {\n      if (data === 'all') {\n        if (this.selectArr.length === this.dataListId.length) {\n          this.selectArr = [];\n        } else {\n          var _this$dataListId = _toArray(this.dataListId),\n              selectArr = _this$dataListId.slice(0);\n\n          this.selectArr = selectArr;\n        }\n      } else {\n        var index = this.selectArr.indexOf(data);\n\n        if (index !== -1) {\n          this.selectArr.splice(index, 1);\n        } else {\n          this.selectArr.push(data);\n        }\n      }\n    }\n  }\n};",null]}