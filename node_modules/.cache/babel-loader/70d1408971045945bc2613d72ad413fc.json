{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/components/forcedReminder/forcedReminder.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/components/forcedReminder/forcedReminder.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { colorMap, getHex } from '@/utils';\nexport default {\n  name: 'set-forcedReminder',\n  data: function data() {\n    return {\n      // 是否可以提交\n      dialogConfirmLoading: false,\n      // 是否禁止提交\n      dialogConfirmDisabled: false,\n      // 是否不在显示弹框\n      isNotReConfirm: false,\n      // 时间\n      time: null,\n      timer: null // dataInfo: {\n      //   symbol: 'BTCUSDTX',\n      //   orderType: '限价单',\n      //   sideText: '买入做多',\n      //   sideClass: 'u-4-bg',\n      //   isOpenAndIsMarket: true,\n      //   price: '10000 USDTX',\n      //   vol: '12333 ETHX',\n      //   marginCoin: 'BTCX',\n      //   currentCategory: 3,\n      // },\n\n    };\n  },\n  props: {\n    isShow: {\n      default: false,\n      type: Boolean\n    },\n    close: {\n      default: function _default() {},\n      type: Function\n    },\n    dataInfo: {\n      default: function _default() {\n        return {};\n      },\n      type: Object\n    }\n  },\n  computed: {\n    lanText: function lanText() {\n      return {\n        text1: this.$t('futures.reminder.text1'),\n        // 触发价格\n        text2: this.$t('futures.reminder.text2'),\n        // 价格\n        text3: this.$t('futures.reminder.text3'),\n        // 下次不要提示，您可在【交易偏好设置】中重新设置\n        text4: this.$t('futures.reminder.text4'),\n        // 金额\n        text5: this.$t('futures.reminder.text5'),\n        // 数量\n        text6: this.$t('futures.reminder.text6'),\n        // 占用保证金\n        text7: this.$t('futures.reminder.text7'),\n        // 委托保证金\n        text8: this.$t('futures.reminder.text8'),\n        // 限价单\n        text9: this.$t('futures.reminder.text9'),\n        // 市价单\n        text10: this.$t('futures.reminder.text10') // 条件单\n\n      };\n    },\n    // 弹框标题文案\n    titleText: function titleText() {\n      if (this.dataInfo) {\n        return \"\".concat(this.dataInfo.sideText).concat(this.dataInfo.symbol);\n      }\n\n      return null;\n    },\n    // 确认按钮文案\n    confirmText: function confirmText() {\n      return this.dataInfo.sideText;\n    },\n    // 数量 || 金额\n    volPrice: function volPrice() {\n      if (this.dataInfo.isOpenAndIsMarket) {\n        return this.lanText.text4; // '金额';\n      }\n\n      return this.lanText.text5; // '数量';\n    },\n    // 保证金标题\n    marginTitle: function marginTitle() {\n      if (this.dataInfo && this.dataInfo.currentCategory === 3) {\n        return this.lanText.text6; // '占用保证金';\n      }\n\n      return this.lanText.text7; // '委托保证金';\n    },\n    // 订单类型\n    orderType: function orderType() {\n      var text = this.lanText.text8; // '限价单';\n\n      if (this.dataInfo.currentCategory === 2) {\n        text = this.lanText.text9; // '市价单';\n      }\n\n      if (this.dataInfo.currentCategory === 3) {\n        text = this.lanText.text10; // '条件单';\n      }\n\n      return text;\n    }\n  },\n  watch: {\n    dataInfo: function dataInfo(val) {\n      setTimeout(function () {\n        var box = document.getElementsByClassName('toConfirmBtn')[0];\n\n        if (box) {\n          box.style.setProperty('background-color', getHex(colorMap[val.sideClass]), 'important');\n        }\n      });\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      clearInterval(this.timer);\n      this.fnCreatClock();\n      this.timer = setInterval(function () {\n        _this.fnCreatClock();\n      }, 1000);\n    },\n    // 二次确认提交\n    submitConfirm: function submitConfirm() {\n      // this.close();\n      this.$emit('submitOrder', this.isNotReConfirm);\n    },\n    isReConfirmFun: function isReConfirmFun() {\n      this.isNotReConfirm = !this.isNotReConfirm;\n    },\n    fnToDouble: function fnToDouble(num) {\n      // 声明一个返回结果\n      var sResult = '';\n\n      if (num < 10) {\n        // 判断数字小于10则是单数字，需要在前面添加字符串0\n        sResult = \"0\".concat(num);\n      } else {\n        // 数字为10以上转换为字符串\n        sResult = \"\".concat(num);\n      } // 返回格式化后的字符串\n\n\n      return sResult;\n    },\n    fnCreatClock: function fnCreatClock() {\n      var dLocal = new Date();\n      var nYear = dLocal.getFullYear();\n      var nMonth = dLocal.getMonth() + 1;\n      var nDate = dLocal.getDate();\n      var nHours = dLocal.getHours();\n      var nMinutes = dLocal.getMinutes();\n      var nSeconds = dLocal.getSeconds();\n      this.time = \"\".concat(nYear, \"-\").concat(this.fnToDouble(nMonth), \"-\").concat(this.fnToDouble(nDate), \" \").concat(this.fnToDouble(nHours), \":\").concat(this.fnToDouble(nMinutes), \":\").concat(this.fnToDouble(nSeconds));\n    }\n  }\n};",null]}