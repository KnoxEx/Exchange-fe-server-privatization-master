{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/ex-tradeForm/ex-tradeForm.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/ex-tradeForm/ex-tradeForm.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport { myStorage, nul, getCoinShowName, fixRate, fixD, imgMap } from '@/utils';\nexport default {\n  name: 'tableList',\n  data: function data() {\n    return {\n      formData_1: {\n        title: this.$t('trade.price'),\n        // 价格\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        subText: '',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        value: ''\n      },\n      formData_2: {\n        title: this.$t('trade.number'),\n        // '数量',\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[0] : 'USDT',\n        subText: '',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        value: null\n      },\n      formData_3: {\n        title: this.$t('trade.price'),\n        // '价格',\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        subText: '',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        value: null\n      },\n      formData_4: {\n        title: this.$t('trade.number'),\n        // '数量',\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[0] : 'USDT',\n        subText: '',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        value: null\n      },\n      formData_5: {\n        title: this.$t('trade.noUnlock'),\n        // '充值未解锁',\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[0] : 'USDT',\n        subText: '',\n        errorText: '',\n        isError: false,\n        disabled: true,\n        disabledText: '',\n        isShowUnit: true,\n        value: null\n      },\n      formData_6: {\n        title: this.$t('trade.ySellVol'),\n        // '可卖出数量',\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[0] : 'USDT',\n        subText: '',\n        errorText: '',\n        isError: false,\n        disabled: true,\n        disabledText: '',\n        isShowUnit: true,\n        value: null\n      },\n      // 交易类型 1限价 2 市价\n      transactionType: 1,\n      // 当前切换的货币对\n      symbolCurrent: myStorage.get('sSymbolName'),\n      // 百分比\n      perArr: [25, 50, 75, 100],\n      perBuy: null,\n      perSell: null,\n      // 防止多次提交\n      fal: true,\n      assetsInter: null,\n      totalBalancesHide: false,\n      unlockSellFlag: true,\n      // 解锁卖出\n      isShowDialog: false,\n      imgMap: imgMap,\n      tsTexttype: 1\n    };\n  },\n  props: {},\n  computed: {\n    localText: function localText() {\n      return {\n        title1: this.$t('trade.price'),\n        // 价格\n        title2: this.$t('trade.number'),\n        // '数量',\n        title3: this.$t('trade.price'),\n        // '价格',\n        title4: this.$t('trade.number'),\n        // '数量',\n        title5: this.$t('trade.noUnlock'),\n        // '充值未解锁',\n        title6: this.$t('trade.ySellVol') // '可卖出数量',\n\n      };\n    },\n    coinSymbols: function coinSymbols() {\n      if (this.symbolCurrent) {\n        return this.symbolCurrent.replace('/', ',');\n      }\n\n      return '';\n    },\n    // 全部币种列表\n    coinList: function coinList() {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n\n      return null;\n    },\n    overchargeMsg: function overchargeMsg() {\n      var symbolInfo = this.coinList[this.symbolUnit.symbol];\n      return symbolInfo ? symbolInfo.isOverchargeMsg : '';\n    },\n    // 是否展示解锁卖出\n    showUnlockSell: function showUnlockSell() {\n      var symbol = this.symbolUnit.symbol;\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var flag = false;\n\n      if (publicInfo && symbol && this.isLogin && publicInfo.market) {\n        var coinList = publicInfo.market.coinList;\n\n        if (coinList[symbol] && coinList[symbol].isOvercharge && coinList[symbol].isOvercharge.toString() === '1') {\n          flag = true;\n        }\n      }\n\n      return flag;\n    },\n    // 是否为计价货币手续费币对\n    openQuoteFee: function openQuoteFee() {\n      var _this$symbolUnit = this.symbolUnit,\n          units = _this$symbolUnit.units,\n          symbol = _this$symbolUnit.symbol;\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var flag = false;\n\n      if (publicInfo && units && symbol && publicInfo.market) {\n        var market = publicInfo.market.market;\n\n        if (market[units] && market[units][\"\".concat(symbol, \"/\").concat(units)] && market[units][\"\".concat(symbol, \"/\").concat(units)].openQuoteFee && market[units][\"\".concat(symbol, \"/\").concat(units)].openQuoteFee.toString() === '1') {\n          flag = true;\n        }\n      }\n\n      return flag;\n    },\n    // 计价货币手续费率\n    quoteFeeRate: function quoteFeeRate() {\n      var _this$symbolUnit2 = this.symbolUnit,\n          units = _this$symbolUnit2.units,\n          symbol = _this$symbolUnit2.symbol;\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var quoteFeeRate = 0;\n\n      if (publicInfo && symbol && units && publicInfo.market && this.openQuoteFee) {\n        var market = publicInfo.market.market;\n        quoteFeeRate = market[units][\"\".concat(symbol, \"/\").concat(units)].quoteFeeRate;\n      }\n\n      return quoteFeeRate;\n    },\n    isLogin: function isLogin() {\n      if (this.$store.state.baseData.isLogin) {\n        return this.$store.state.baseData.isLogin;\n      }\n\n      return false;\n    },\n    // 按钮信息\n    buttosContent: function buttosContent() {\n      return {\n        buyButton: {\n          text: this.isLogin ? \"\".concat(this.$t('trade.buy'), \" \").concat(getCoinShowName(this.symbolUnit.symbol, this.coinList)) : this.$t('trade.loginReg'),\n          // '登录/注册',\n          class: this.isLogin ? 'u-1-bg buyBtn u-16-cl' : 'u-8-bg buyBtn u-16-cl'\n        },\n        sellButton: {\n          text: this.isLogin ? \"\".concat(this.$t('trade.sell'), \" \").concat(getCoinShowName(this.symbolUnit.symbol, this.coinList)) : this.$t('trade.loginReg'),\n          // '登录/注册',\n          class: this.isLogin ? 'u-4-bg sellBtn u-16-cl' : 'u-8-bg sellBtn u-16-cl'\n        },\n        unlockSellButton: {\n          text: this.isLogin ? '一键解锁卖出' : this.$t('trade.loginReg'),\n          // '登录/注册',\n          class: this.isLogin ? 'u-4-bg sellBtn u-16-cl' : 'u-8-bg sellBtn u-16-cl'\n        }\n      };\n    },\n    // 账户资产\n    accountBalance: function accountBalance() {\n      if (this.$store.state.assets) {\n        return this.$store.state.assets.assetsCoinData;\n      }\n\n      return null;\n    },\n    // 当前币对的资产\n    currenTaccount: function currenTaccount() {\n      if (this.accountBalance && this.symbolUnit && this.fixValue) {\n        var allCoinMap = this.accountBalance.allCoinMap;\n        var _this$symbolUnit3 = this.symbolUnit,\n            symbol = _this$symbolUnit3.symbol,\n            units = _this$symbolUnit3.units;\n        return {\n          symbolAccoubt: allCoinMap[symbol] ? fixD(allCoinMap[symbol].normal_balance, this.fixValue.volumeFix) : '0',\n          unitsAccoubt: allCoinMap[units] ? fixD(allCoinMap[units].normal_balance, this.fixValue.priceFix) : '0',\n          symbolOpen: allCoinMap[symbol] ? allCoinMap[symbol].depositOpen : '0',\n          unitsOpen: allCoinMap[units] ? allCoinMap[units].depositOpen : '0',\n          // 可卖出数量\n          overcharge: allCoinMap[symbol] ? fixD(allCoinMap[symbol].overcharge_balance, this.fixValue.volumeFix) : '0',\n          // 充值未解锁\n          lockPositionV2Amount: allCoinMap[symbol] ? fixD(allCoinMap[symbol].lock_position_v2_amount, this.fixValue.volumeFix) : '0'\n        };\n      }\n\n      return {\n        symbolAccoubt: '0',\n        unitsAccoubt: '0',\n        symbolOpen: '0',\n        unitsOpen: '0',\n        overcharge: '0',\n        lockPositionV2Amount: '0'\n      };\n    },\n    // 折合总资产\n    totalBalances: function totalBalances() {\n      if (this.accountBalance) {\n        var _this$accountBalance = this.accountBalance,\n            totalBalance = _this$accountBalance.totalBalance,\n            totalBalanceSymbol = _this$accountBalance.totalBalanceSymbol;\n        return {\n          totalBalance: totalBalance,\n          totalBalanceSymbol: totalBalanceSymbol,\n          totalRater: fixRate(totalBalance, this.rateData, totalBalanceSymbol)\n        };\n      }\n\n      return {\n        totalBalance: '0.0000',\n        totalBalanceSymbol: 'BTC',\n        totalRater: '0.00'\n      };\n    },\n    // 当前币对\n    symbolUnit: function symbolUnit() {\n      if (this.symbolCurrent) {\n        var publicInfo = this.$store.state.baseData.publicInfo;\n\n        var _this$symbolCurrent$s = this.symbolCurrent.split('/'),\n            _this$symbolCurrent$s2 = _slicedToArray(_this$symbolCurrent$s, 2),\n            symbol = _this$symbolCurrent$s2[0],\n            units = _this$symbolCurrent$s2[1];\n\n        var showPrecision = publicInfo && publicInfo.market ? publicInfo.market.coinList[units].showPrecision : 0;\n        return {\n          symbol: symbol,\n          units: units,\n          showPrecision: showPrecision\n        };\n      }\n\n      return {};\n    },\n    // 汇率单位\n    rateData: function rateData() {\n      return this.$store.state.baseData.rate;\n    },\n    // 全部币对列表\n    symbolAll: function symbolAll() {\n      return this.$store.state.baseData.symbolAll;\n    },\n    // 当前币对精度计算的值\n    fixValue: function fixValue() {\n      if (this.symbolAll && this.symbolCurrent) {\n        var symbol = this.symbolAll[this.symbolCurrent];\n        return {\n          priceFix: symbol.price,\n          volumeFix: symbol.volume\n        };\n      }\n\n      return {\n        priceFix: 2,\n        volumeFix: 8\n      };\n    },\n    formData2Fix: function formData2Fix() {\n      if (this.transactionType === 2) {\n        return this.fixValue.priceFix;\n      }\n\n      return this.fixValue.volumeFix;\n    },\n    // 买入交易额\n    tradeVolumeBuy: function tradeVolumeBuy() {\n      var count = nul(fixD(this.formData_1.value, this.fixValue.priceFix), fixD(this.formData_2.value, this.fixValue.priceFix));\n      return fixD(count, this.symbolUnit.showPrecision);\n    },\n    tradeVolumeSell: function tradeVolumeSell() {\n      var count = nul(fixD(this.formData_3.value, this.fixValue.priceFix), fixD(this.formData_4.value, this.fixValue.priceFix));\n      return fixD(count, this.symbolUnit.showPrecision);\n    },\n    baseData: function baseData() {\n      return this.$store.state.baseData.publicInfo;\n    },\n    // 交易是否开启了必须实名认证\n    exchangeTradeKycOpen: function exchangeTradeKycOpen() {\n      var isOpen = 0;\n\n      if (this.baseData && this.baseData.kycLimitConfig) {\n        isOpen = this.baseData.kycLimitConfig.exchange_trade_kyc_open;\n      }\n\n      return Number(isOpen);\n    },\n    // 用户信息\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    // 认证信息\n    idAuth: function idAuth() {\n      var idAuth = 0;\n\n      if (this.userInfo) {\n        idAuth = Number(this.userInfo.authLevel);\n      }\n\n      return idAuth;\n    }\n  },\n  watch: {\n    localText: function localText(_localText) {\n      this.formData_1.title = _localText.title1;\n      this.formData_2.title = _localText.title2;\n      this.formData_3.title = _localText.title3;\n      this.formData_4.title = _localText.title4;\n      this.formData_5.title = _localText.title5;\n      this.formData_6.title = _localText.title6;\n    },\n    currenTaccount: function currenTaccount(value) {\n      if (value) {\n        this.formData_5.disabledText = value.lockPositionV2Amount;\n        this.formData_6.disabledText = value.overcharge;\n      }\n    },\n    isLogin: function isLogin(val) {\n      var _this = this;\n\n      if (val) {\n        this.$store.dispatch('assetsExchangeData', {\n          auto: false,\n          coinSymbols: this.coinSymbols\n        });\n        clearInterval(this.assetsInter);\n        this.assetsInter = setInterval(function () {\n          _this.$store.dispatch('assetsExchangeData', {\n            auto: true,\n            coinSymbols: _this.symbolUnit.symbol\n          });\n        }, 10000);\n      }\n    },\n    // 切换 限价交易 和 市价交易\n    transactionType: function transactionType(val) {\n      // 2 市价交易\n      if (val === 2) {\n        this.formData_1.disabled = true;\n        this.formData_1.disabledText = this.$t('trade.mPriceBuy'); // 以市场最优价买入\n\n        this.formData_2.title = this.$t('trade.dealMoney'); // '交易额';\n\n        this.formData_2.units = this.symbolUnit.units;\n        this.formData_3.disabled = true;\n        this.formData_3.disabledText = this.$t('trade.mPriceSell'); // 以市场最优价卖出\n      } else {\n        this.formData_1.disabled = false;\n        this.formData_1.disabledText = '';\n        this.formData_2.title = this.$t('trade.number'); // '数量';\n\n        this.formData_2.units = this.symbolUnit.symbol;\n        this.formData_3.disabled = false;\n        this.formData_3.disabledText = '';\n      }\n    },\n    // 各个输入框的 单位\n    symbolUnit: function symbolUnit(val) {\n      this.formData_1.units = val.units;\n      this.formData_2.units = val.symbol;\n      this.formData_3.units = val.units;\n      this.formData_4.units = val.symbol;\n      this.formData_5.units = val.symbol;\n      this.formData_6.units = val.symbol;\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this2 = this;\n\n      // 监听 当前货币对切换\n      this.$bus.$on('SYMBOL_CURRENT', function (val) {\n        _this2.clearValue();\n\n        _this2.symbolCurrent = val;\n\n        if (_this2.transactionType === 3) {\n          _this2.transactionType = 1;\n        }\n      });\n\n      if (this.isLogin) {\n        this.$store.dispatch('assetsExchangeData', {\n          auto: false,\n          coinSymbols: this.coinSymbols\n        });\n        clearInterval(this.assetsInter);\n        this.assetsInter = setInterval(function () {\n          _this2.$store.dispatch('assetsExchangeData', {\n            auto: true,\n            coinSymbols: _this2.symbolUnit.symbol\n          });\n        }, 10000);\n      } // 监听 价格点击\n\n\n      this.$bus.$on('HANDEL_PRICE', function (data) {\n        if (data) {\n          // const obj = {name: 'formData_1', data };\n          var arr = ['formData_1', 'formData_3'];\n          arr.forEach(function (item) {\n            _this2.onChaneForm({\n              name: item,\n              value: data\n            });\n          }); // onChaneForm\n          // this.formData_1.value = data;\n          // this.formData_3.value = data;\n        }\n      });\n    },\n    unlockSell: function unlockSell() {\n      var _this3 = this;\n\n      if (!this.unlockSellFlag) return;\n      this.unlockSellFlag = false;\n\n      if (this.exchangeTradeKycOpen && this.idAuth !== 1) {\n        this.isShowDialog = true;\n      } else {\n        this.axios({\n          url: 'order/create_overcharge_onekey',\n          headers: {},\n          params: {\n            symbol: this.symbolCurrent\n          },\n          method: 'post'\n        }).then(function (data) {\n          _this3.unlockSellFlag = true;\n\n          if (data.code === '0') {\n            // 重新请求资产\n            _this3.$store.dispatch('assetsExchangeData', {\n              auto: false,\n              coinSymbols: _this3.coinSymbols\n            }); // 提示成功 下单成功\n\n\n            _this3.$bus.$emit('tip', {\n              text: _this3.$t('trade.dealCussess'),\n              type: 'success'\n            });\n          } else {\n            _this3.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    },\n    goCz: function goCz(v) {\n      if (this.exchangeTradeKycOpen && this.idAuth !== 1) {\n        this.tsTexttype = 2;\n        this.isShowDialog = true;\n      } else if (v) {\n        if (process.env.NODE_ENV === 'development') {\n          window.location.href = \"assets/recharge?symbol=\".concat(v);\n        } else {\n          window.location.href = \"/assets/recharge?symbol=\".concat(v);\n        }\n      }\n    },\n    // 切换 限价交易 和 市价交易\n    switchTradeType: function switchTradeType(type) {\n      this.clearValue();\n      this.transactionType = type;\n    },\n    // 显示隐藏折合资产\n    handelTotal: function handelTotal() {\n      this.totalBalancesHide = !this.totalBalancesHide;\n    },\n    // input 框 输入事件\n    onChaneForm: function onChaneForm(data) {\n      this[data.name].value = data.value;\n\n      if (data.value) {\n        this[data.name].isError = false;\n      }\n\n      if (data.name === 'formData_3' || data.name === 'formData_1') {\n        this[data.name].subText = fixRate(fixD(data.value, this.fixValue.priceFix), this.rateData, this.symbolUnit.units);\n      }\n\n      if (data.name === 'formData_2' || data.name === 'formData_1') {\n        var V1 = this.formData_1.value;\n        var V2 = this.formData_2.value;\n        var UA = this.currenTaccount.unitsAccoubt;\n        this.perBuy = V1 * V2 / UA * 100;\n      }\n\n      if (data.name === 'formData_4' || data.name === 'formData_3') {\n        var V3 = parseFloat(this.formData_3.value);\n        var V4 = parseFloat(this.formData_4.value);\n        var SA = this.currenTaccount.symbolAccoubt;\n        this.perSell = V3 * V4 / SA * 100;\n      }\n\n      if (!data.value) {\n        this[data.name].subText = null;\n      }\n    },\n    // 点击百分之 事件\n    setPerNumber: function setPerNumber(type, num) {\n      if (!this.isLogin) {\n        // 请先登录账号\n        this.$bus.$emit('tip', {\n          text: this.$t('trade.pleaseLogin'),\n          type: 'error'\n        });\n      } else if (type === 'buy') {\n        if (!this.formData_1.value && this.transactionType === 1) {\n          // 请输入价格\n          this.formData_1.errorText = this.$t('trade.pleasePrice');\n          this.formData_1.isError = true;\n        } else if (this.transactionType === 1) {\n          this.perBuy = num;\n          var data = this.currenTaccount.unitsAccoubt / this.formData_1.value * (num / 100); // 可用余额 / (价格*(1+手续费比例)）* 百分比\n\n          var dataFee = this.currenTaccount.unitsAccoubt / (this.formData_1.value * (1 + this.quoteFeeRate)) * (num / 100);\n          var numberVol = this.openQuoteFee ? dataFee : data;\n          this.formData_2.value = fixD(numberVol, this.fixValue.volumeFix);\n        } else {\n          this.perBuy = num;\n\n          var _data = this.currenTaccount.unitsAccoubt * (num / 100);\n\n          this.formData_2.value = fixD(_data, this.fixValue.priceFix);\n        }\n      } else if (type === 'sell') {\n        this.perSell = num;\n\n        var _data2 = this.currenTaccount.symbolAccoubt * (num / 100);\n\n        this.formData_4.value = fixD(_data2, this.fixValue.volumeFix);\n      }\n    },\n    // 百分比按钮class\n    perSellClass: function perSellClass(num) {\n      if (this.perSell === num) {\n        return ['a-12-bd', 'b-4-cl'];\n      }\n\n      return 'a-3-bd';\n    },\n    perBuyClass: function perBuyClass(num) {\n      if (this.perBuy === num) {\n        return ['a-12-bd', 'b-4-cl'];\n      }\n\n      return 'a-3-bd';\n    },\n    // 交易额 文字颜色Class\n    volumeTradeClass: function volumeTradeClass(num, total) {\n      if (parseFloat(num) > parseFloat(total)) {\n        return 'u-4-cl';\n      }\n\n      return 'b-1-cl';\n    },\n    submitFormKey: function submitFormKey(type) {\n      var formKey = [];\n      var price = null;\n      var volume = null;\n\n      if (this.transactionType === 1) {\n        if (type === 'BUY') {\n          formKey = ['formData_1', 'formData_2'];\n          price = fixD(this.formData_1.value, this.fixValue.priceFix);\n          volume = fixD(this.formData_2.value, this.fixValue.volumeFix);\n        } else {\n          formKey = ['formData_3', 'formData_4'];\n          price = fixD(this.formData_3.value, this.fixValue.priceFix);\n          volume = fixD(this.formData_4.value, this.fixValue.volumeFix);\n        }\n      } else if (type === 'BUY') {\n        formKey = ['formData_2'];\n        volume = fixD(this.formData_2.value, this.fixValue.priceFix);\n      } else {\n        formKey = ['formData_4'];\n        volume = fixD(this.formData_4.value, this.fixValue.volumeFix);\n      }\n\n      return {\n        formKey: formKey,\n        price: price,\n        volume: volume\n      };\n    },\n    // 清空 表单数据\n    clearValue: function clearValue() {\n      var _this4 = this;\n\n      var formKey = ['formData_1', 'formData_2', 'formData_3', 'formData_4'];\n      formKey.forEach(function (item) {\n        _this4[item].value = '';\n        _this4[item].isError = false;\n        _this4[item].subText = null;\n      });\n      this.perSell = 0;\n      this.perBuy = 0;\n    },\n    submit: function submit(side) {\n      var _this5 = this;\n\n      if (!this.isLogin) {\n        this.$router.push('/login');\n      } else if (this.exchangeTradeKycOpen && this.idAuth !== 1) {\n        this.tsTexttype = 1;\n        this.isShowDialog = true;\n      } else {\n        var _this$submitFormKey = this.submitFormKey(side),\n            formKey = _this$submitFormKey.formKey,\n            price = _this$submitFormKey.price,\n            volume = _this$submitFormKey.volume;\n\n        var fal = true;\n\n        if (formKey.length) {\n          formKey.forEach(function (item) {\n            var value = _this5[item].value;\n\n            if (!value) {\n              _this5[item].errorText = \"\".concat(_this5.$t('trade.pleaseInput')).concat(_this5[item].title);\n              _this5[item].isError = true;\n              fal = false;\n            }\n\n            if (parseFloat(value) <= 0) {\n              _this5[item].errorText = \"\".concat(_this5[item].title).concat(_this5.$t('trade.inputError')); // 输入有误\n\n              _this5[item].isError = true;\n              fal = false;\n            }\n          });\n\n          if (this.fal && fal) {\n            var symbolArr = this.symbolCurrent.split('/');\n            var symbol = symbolArr[0].toLowerCase() + symbolArr[1].toLowerCase();\n            this.fal = false;\n            var submitData = {\n              side: side,\n              price: price,\n              volume: volume,\n              symbol: symbol,\n              type: this.transactionType\n            };\n            this.axios({\n              url: this.$store.state.url.cointran.order_create,\n              headers: {},\n              params: submitData,\n              method: 'post'\n            }).then(function (data) {\n              if (data.code === '0') {\n                // 清空表单\n                _this5.clearValue(); // 重新请求资产\n\n\n                _this5.$store.dispatch('assetsExchangeData', {\n                  auto: false,\n                  coinSymbols: _this5.coinSymbols\n                }); // 发送下单成功的事件\n\n\n                _this5.$bus.$emit('ORDER_CREATE', {\n                  type: 'success'\n                }); // 提示成功 下单成功\n\n\n                _this5.$bus.$emit('tip', {\n                  text: _this5.$t('trade.dealCussess'),\n                  type: 'success'\n                });\n\n                _this5.fal = true;\n              } else {\n                _this5.$bus.$emit('tip', {\n                  text: data.msg,\n                  type: 'error'\n                });\n\n                _this5.fal = true;\n              }\n            });\n          }\n        }\n      }\n    },\n    dialogClose: function dialogClose() {\n      this.isShowDialog = false;\n    },\n    // 去认证\n    gotoAuth: function gotoAuth() {\n      this.$router.push('/personal/userManagement');\n    }\n  }\n};",null]}