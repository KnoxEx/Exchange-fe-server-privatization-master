{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/BlockChain-ui/PC/components/verify/geetest.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/components/verify/geetest.vue","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'common-geetest',\n  data: function data() {\n    return {\n      nowState: false,\n      // 当前状态 true可滑动 false不可滑动 用于下划线时判断\n      isHover: false,\n      // 是否划过\n      isReady: false // 是否准备成功\n\n    };\n  },\n  props: {\n    product: {\n      default: '',\n      type: String\n    },\n    width: {\n      default: '100%',\n      type: String\n    },\n    // 该容器根容器 width属性\n    marginTop: {\n      default: '0px',\n      type: String\n    },\n    // 该组件根容器 margin-top属性\n    errorHave: {\n      default: false,\n      type: Boolean\n    },\n    // 是否有错误文案\n    errorText: {\n      default: '',\n      type: String\n    },\n    // 错误文案\n    errorFlag: {\n      default: false,\n      type: Boolean\n    },\n    // 错误文案是否显示\n    geetestBg: {\n      default: 'a-7-bg',\n      type: String\n    },\n    // 极验的背景颜色\n    colorMap: {\n      default: function _default() {},\n      required: true\n    }\n  },\n  computed: {\n    lan: function lan() {\n      return this.$store.state.baseData.lan;\n    },\n    geetestLan: function geetestLan() {\n      var language = ''; // 简体中文\n\n      if (this.lan === 'zh_CN') {\n        language = 'zh-cn'; // 繁体中文\n      } else if (this.lan === 'el_GR') {\n        language = 'zh-hk'; // 葡萄牙\n      } else if (this.lan === 'pt_PT') {\n        language = 'pt-pt';\n      } else {\n        var arr = ['en', // 英文\n        'ja', // 日文\n        'id', // 印尼\n        'ko', // 韩语\n        'ru', // 俄语\n        'ar', // 阿拉伯\n        'es', // 西班牙语\n        'fr', // 法语\n        'de' // 德语\n        ];\n\n        if (this.lan.length && this.lan.split('_').length) {\n          if (arr.indexOf(this.lan.split('_')[0].toLowerCase()) !== -1) {\n            var _this$lan$split = this.lan.split('_'),\n                _this$lan$split2 = _slicedToArray(_this$lan$split, 1),\n                lans = _this$lan$split2[0];\n\n            language = lans;\n          }\n        }\n      }\n\n      if (!language.length) {\n        language = 'en';\n      }\n\n      return language;\n    },\n    // 根容器 行内样式\n    contentStyle: function contentStyle() {\n      return {\n        width: this.width,\n        marginTop: this.marginTop\n      };\n    },\n    // 基础占位容器 class\n    baseStanceClass: function baseStanceClass() {\n      if (this.errorHave && this.errorFlag) {\n        return 'common-geetest-baseStance-error';\n      }\n\n      return '';\n    },\n    // 下横向 行内样式\n    activeLineStyle: function activeLineStyle() {\n      var width = '0%';\n\n      if (this.nowState && this.isHover || this.errorHave && this.errorFlag) {\n        width = '100%';\n      }\n\n      return {\n        width: width\n      };\n    },\n    // 下横线 class\n    activeLineClass: function activeLineClass() {\n      var className = 'a-12-bg';\n\n      if (this.errorHave && this.errorFlag && !this.isFocus) {\n        className = 'a-19-bg';\n      }\n\n      return className;\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    // input 鼠标划入\n    handMouseenter: function handMouseenter() {\n      this.isHover = true;\n    },\n    // input 鼠标划出\n    handMouseleave: function handMouseleave() {\n      this.isHover = false;\n    },\n    init: function init() {\n      var _this = this;\n\n      this.axios({\n        url: 'common/tartCaptcha',\n        headers: {},\n        params: {},\n        method: 'post'\n      }).then(function (data) {\n        if (data.code === '0') {\n          _this.geetest({\n            challenge: data.data.captcha.challenge,\n            gt: data.data.captcha.gt,\n            success: data.data.captcha.success\n          });\n        }\n      });\n    },\n    setStyle: function setStyle() {\n      var colorMap = this.colorMap;\n      var radar = document.getElementsByClassName('geetest_radar_tip_content');\n      var reset = document.getElementsByClassName('geetest_reset_tip_content');\n      var geetestRadarBtn = document.getElementsByClassName('geetest_radar_btn');\n      var geetestSuccessBtn = document.getElementsByClassName('geetest_success_btn');\n\n      if (colorMap) {\n        if (radar && radar.length) {\n          radar[0].style.color = colorMap['b-2-cl'];\n        }\n\n        if (reset && reset.length) {\n          reset[0].style.color = colorMap['b-2-cl'];\n        }\n\n        if (geetestRadarBtn && geetestRadarBtn.length) {\n          geetestRadarBtn[0].style.background = colorMap[this.geetestBg];\n        }\n\n        if (geetestSuccessBtn && geetestSuccessBtn.length) {\n          geetestSuccessBtn[0].style.background = colorMap[this.geetestBg];\n        }\n      }\n    },\n    // 构件极验\n    geetest: function geetest(_ref) {\n      var _this2 = this;\n\n      var challenge = _ref.challenge,\n          gt = _ref.gt,\n          success = _ref.success;\n      var product = this.product ? this.product : 'popup';\n      window.initGeetest({\n        // 以下 4 个配置参数为必须，不能缺少\n        product: product,\n        lang: this.geetestLan,\n        gt: gt,\n        challenge: challenge,\n        offline: !success,\n        // 表示用户后台检测极验服务器是否宕机\n        new_captcha: true,\n        // 用于宕机时表示是新验证码的宕机\n        width: '100%'\n      }, function (captchaObj) {\n        _this2.nowState = true;\n        captchaObj.appendTo(_this2.$refs.captchaBox);\n\n        _this2.$emit('getCaptchaObj', captchaObj);\n\n        captchaObj.onReady(function () {\n          _this2.isReady = true;\n\n          _this2.$nextTick(function () {\n            _this2.setStyle();\n          });\n        });\n        captchaObj.onError(function () {});\n        captchaObj.onSuccess(function () {\n          _this2.nowState = false;\n          var result = captchaObj.getValidate();\n          setTimeout(function () {\n            _this2.$emit('callback', {\n              geetest_challenge: result.geetest_challenge,\n              geetest_seccode: result.geetest_seccode,\n              geetest_validate: result.geetest_validate,\n              verificationType: '2',\n              token: true,\n              nc: Object.assign(captchaObj, {\n                reset: captchaObj.reset\n              })\n            });\n          }, 300);\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["geetest.vue"],"names":[],"mappings":"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","sourcesContent":["// Created by 任泽阳 on 18/12/07. // 极验\n<template>\n  <section class='common-geetest' :style='contentStyle'>\n    <!-- 基础部分 占位42px -->\n    <div\n      class='common-geetest-baseStance a-2-bd'\n      :class='baseStanceClass'\n      @mouseenter='handMouseenter'\n      @mouseleave='handMouseleave'\n    >\n      <div v-if='!isReady' class='common-geetest-loading'>\n        <c-loading size='20' />\n      </div>\n      <div id='captchaBox' class='a-5-bg' ref='captchaBox'></div>\n      <!-- 选中时横线 -->\n      <span\n        class='common-geetest-activeLine'\n        :class='activeLineClass'\n        :style='activeLineStyle'\n      ></span>\n    </div>\n    <!-- 错误文案占位 24px -->\n    <div class='common-geetest-errorStence b-6-cl' v-if='errorHave'>\n      <!-- 错误信息容器 -->\n      <p class='common-geetest-error' v-if='errorFlag'>{{ errorText }}</p>\n    </div>\n  </section>\n</template>\n<script>\nexport default {\n  name: 'common-geetest',\n  data() {\n    return {\n      nowState: false, // 当前状态 true可滑动 false不可滑动 用于下划线时判断\n      isHover: false, // 是否划过\n      isReady: false, // 是否准备成功\n    };\n  },\n  props: {\n    product: { default: '', type: String },\n    width: { default: '100%', type: String }, // 该容器根容器 width属性\n    marginTop: { default: '0px', type: String }, // 该组件根容器 margin-top属性\n    errorHave: { default: false, type: Boolean }, // 是否有错误文案\n    errorText: { default: '', type: String }, // 错误文案\n    errorFlag: { default: false, type: Boolean }, // 错误文案是否显示\n    geetestBg: { default: 'a-7-bg', type: String }, // 极验的背景颜色\n    colorMap: { default: () => {}, required: true },\n  },\n  computed: {\n    lan() {\n      return this.$store.state.baseData.lan;\n    },\n    geetestLan() {\n      let language = '';\n      // 简体中文\n      if (this.lan === 'zh_CN') {\n        language = 'zh-cn';\n        // 繁体中文\n      } else if (this.lan === 'el_GR') {\n        language = 'zh-hk';\n        // 葡萄牙\n      } else if (this.lan === 'pt_PT') {\n        language = 'pt-pt';\n      } else {\n        const arr = [\n          'en', // 英文\n          'ja', // 日文\n          'id', // 印尼\n          'ko', // 韩语\n          'ru', // 俄语\n          'ar', // 阿拉伯\n          'es', // 西班牙语\n          'fr', // 法语\n          'de', // 德语\n        ];\n        if (this.lan.length && this.lan.split('_').length) {\n          if (arr.indexOf(this.lan.split('_')[0].toLowerCase()) !== -1) {\n            const [lans] = this.lan.split('_');\n            language = lans;\n          }\n        }\n      }\n      if (!language.length) {\n        language = 'en';\n      }\n      return language;\n    },\n    // 根容器 行内样式\n    contentStyle() {\n      return {\n        width: this.width,\n        marginTop: this.marginTop,\n      };\n    },\n    // 基础占位容器 class\n    baseStanceClass() {\n      if (this.errorHave && this.errorFlag) {\n        return 'common-geetest-baseStance-error';\n      }\n      return '';\n    },\n    // 下横向 行内样式\n    activeLineStyle() {\n      let width = '0%';\n      if (\n        (this.nowState && this.isHover)\n        || (this.errorHave && this.errorFlag)\n      ) {\n        width = '100%';\n      }\n      return {\n        width,\n      };\n    },\n    // 下横线 class\n    activeLineClass() {\n      let className = 'a-12-bg';\n      if (this.errorHave && this.errorFlag && !this.isFocus) {\n        className = 'a-19-bg';\n      }\n      return className;\n    },\n  },\n  created() {\n    this.init();\n  },\n  methods: {\n    // input 鼠标划入\n    handMouseenter() {\n      this.isHover = true;\n    },\n    // input 鼠标划出\n    handMouseleave() {\n      this.isHover = false;\n    },\n    init() {\n      this.axios({\n        url: 'common/tartCaptcha',\n        headers: {},\n        params: {},\n        method: 'post',\n      }).then((data) => {\n        if (data.code === '0') {\n          this.geetest({\n            challenge: data.data.captcha.challenge,\n            gt: data.data.captcha.gt,\n            success: data.data.captcha.success,\n          });\n        }\n      });\n    },\n    setStyle() {\n      const { colorMap } = this;\n      const radar = document.getElementsByClassName(\n        'geetest_radar_tip_content',\n      );\n      const reset = document.getElementsByClassName(\n        'geetest_reset_tip_content',\n      );\n      const geetestRadarBtn = document.getElementsByClassName(\n        'geetest_radar_btn',\n      );\n      const geetestSuccessBtn = document.getElementsByClassName(\n        'geetest_success_btn',\n      );\n\n      if (colorMap) {\n        if (radar && radar.length) {\n          radar[0].style.color = colorMap['b-2-cl'];\n        }\n        if (reset && reset.length) {\n          reset[0].style.color = colorMap['b-2-cl'];\n        }\n        if (geetestRadarBtn && geetestRadarBtn.length) {\n          geetestRadarBtn[0].style.background = colorMap[this.geetestBg];\n        }\n        if (geetestSuccessBtn && geetestSuccessBtn.length) {\n          geetestSuccessBtn[0].style.background = colorMap[this.geetestBg];\n        }\n      }\n    },\n    // 构件极验\n    geetest({ challenge, gt, success }) {\n      const product = this.product ? this.product : 'popup';\n      window.initGeetest(\n        {\n          // 以下 4 个配置参数为必须，不能缺少\n          product,\n          lang: this.geetestLan,\n          gt,\n          challenge,\n          offline: !success, // 表示用户后台检测极验服务器是否宕机\n          new_captcha: true, // 用于宕机时表示是新验证码的宕机\n          width: '100%',\n        },\n        (captchaObj) => {\n          this.nowState = true;\n          captchaObj.appendTo(this.$refs.captchaBox);\n          this.$emit('getCaptchaObj', captchaObj);\n          captchaObj.onReady(() => {\n            this.isReady = true;\n            this.$nextTick(() => {\n              this.setStyle();\n            });\n          });\n          captchaObj.onError(() => {});\n          captchaObj.onSuccess(() => {\n            this.nowState = false;\n            const result = captchaObj.getValidate();\n            setTimeout(() => {\n              this.$emit('callback', {\n                geetest_challenge: result.geetest_challenge,\n                geetest_seccode: result.geetest_seccode,\n                geetest_validate: result.geetest_validate,\n                verificationType: '2',\n                token: true,\n                nc: Object.assign(captchaObj, { reset: captchaObj.reset }),\n              });\n            }, 300);\n          });\n        },\n      );\n    },\n  },\n};\n</script>\n<style lang='stylus'>\n// 根容器\n.common-geetest {\n  // 基础占位容器 (默认)\n  .common-geetest-baseStance {\n    position: relative;\n    height: 38px;\n    border-bottom-width: 2px;\n    border-bottom-style: solid;\n    // 下划线动效容器\n    .common-geetest-activeLine {\n      position: absolute;\n      top: 38px;\n      height: 2px;\n      width: 0%;\n      left: 50%;\n      transform: translateX(-50%);\n      display: inline-block;\n      -webkit-transition: 0.5s;\n      transition: 0.5s;\n      animation-delay: 0.5s\n    }\n    // loading容器\n    .common-geetest-loading {\n      position: absolute;\n      height: 30px;\n      line-height: 30px;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      font-size: 14px\n    }\n  }\n  // 基础占位容器 (错误时)\n  .common-geetest-baseStance-error {\n  }\n  // 错误信息占位容器\n  .common-geetest-errorStence {\n    height: 24px;\n    position: relative;\n    // 错误文案容器\n    .common-geetest-error {\n      position: absolute;\n      bottom: 2px;\n      margin: 0;\n      font-size: 12px;\n      user-select:none;\n    }\n  }\n}\n\n// 极验样式部分\n#captchaBox {\n  // 极验 自身最外层盒子\n  .geetest_wind {\n    height: 38px;\n  }\n  // 初始状态 小icon部分\n  .geetest_radar {\n    width: 24px;\n    height: 24px;\n    top: 3px;\n  }\n  // 初始状态 重试状态 文字部分\n  .geetest_radar_tip_content, geetest_reset_tip_content {\n    font-size: 14px;\n  }\n  .geetest_reset_tip_content\n  // 文字部分盒子\n  .geetest_radar_tip {\n    height: 38px;\n    line-height: 42px;\n  }\n  // 等待状态\n  .geetest_holder.geetest_wind.geetest_radar_click_ready .geetest_radar_tip {\n    opacity: 1\n  }\n  // loading\n  .geetest_radar_btn {\n  }\n  .geetest_holder.geetest_wind .geetest_radar_btn ,\n  .geetest_holder.geetest_wind .geetest_radar_btn:hover{\n    background: none;\n    border: none;\n  }\n  // 成功后\n  .geetest_holder.geetest_wind .geetest_success_btn,\n  .geetest_holder.geetest_wind .geetest_success_btn:hover {\n    border: none;\n    height: 38px;\n    background-color transparent;\n  }\n  .geetest_holder.geetest_wind .geetest_success_btn .geetest_success_box .geetest_success_show {\n    background: none;\n    border: none;\n  }\n  .geetest_logo,\n  .geetest_success_logo {\n    display: none;\n  }\n}\n</style>\n"],"sourceRoot":"../BlockChain-ui/PC/components/verify"}]}