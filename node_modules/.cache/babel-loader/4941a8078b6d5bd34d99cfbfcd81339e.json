{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/BindGoogle/BindGoogle.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/personal/BindGoogle/BindGoogle.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n// @ is an alias to /src\nexport default {\n  name: 'bindEmail',\n  watch: {\n    userInfo: function userInfo(userinfo) {\n      this.googleCode = !!Number(userinfo.googleStatus);\n      this.smsCode = !!Number(userinfo.isOpenMobileCheck);\n    },\n    toopenGoogleAuthenticator: function toopenGoogleAuthenticator(_toopenGoogleAuthenticator) {\n      this.googleImg = _toopenGoogleAuthenticator.googleImg;\n      this.googleKey = _toopenGoogleAuthenticator.googleKey;\n    },\n    googleVerify: function googleVerify(_googleVerify) {\n      if (_googleVerify !== null) {\n        this.loading = false;\n\n        if (_googleVerify.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _googleVerify.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n          this.$router.push('/personal/userManagement');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _googleVerify.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    }\n  },\n  computed: {\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    toopenGoogleAuthenticator: function toopenGoogleAuthenticator() {\n      return this.$store.state.personal.toopenGoogleAuthenticator;\n    },\n    googleVerify: function googleVerify() {\n      return this.$store.state.personal.googleVerify;\n    }\n  },\n  data: function data() {\n    return {\n      svgShow: true,\n      loading: false,\n      checkValue4: '',\n      checkValue5: '',\n      promptText4: this.$t('personal.label.password'),\n      promptText5: this.$t('personal.label.googleCodeText'),\n      errorText4: this.$t('personal.prompt.errorPasswordText'),\n      errorText5: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag4: false,\n      checkErrorFlag5: false,\n      disabled: true,\n      oldNew: false,\n      smsCode: false,\n      googleCode: false,\n      autoStart: false,\n      googleImg: '',\n      googleKey: ''\n    };\n  },\n  methods: {\n    init: function init() {\n      this.$store.dispatch('toopenGoogleAuthenticator');\n\n      if (this.userInfo) {\n        this.googleCode = !!Number(this.userInfo.googleStatus);\n        this.smsCode = !!Number(this.userInfo.isOpenMobileCheck);\n      }\n    },\n    reload: function reload() {\n      this.init();\n    },\n    handMouseenter: function handMouseenter() {\n      this.svgShow = false;\n    },\n    handMouseleave: function handMouseleave() {\n      this.svgShow = true;\n    },\n    copyClick: function copyClick() {\n      this.copy(this.googleKey);\n    },\n    copy: function copy(str) {\n      // this.$bus.$emit('tip', { text: this.$t('personal.prompt.copySucces'), type: 'success' });\n      function save(e) {\n        e.clipboardData.setData('text/plain', str); // 下面会说到clipboardData对象\n\n        e.preventDefault(); // 阻止默认行为\n      }\n\n      document.addEventListener('copy', save);\n      document.execCommand('copy'); // 使文档处于可编辑状态，否则无效\n\n      document.removeEventListener('copy', save);\n    },\n    // 密码正则\n    passFlag: function passFlag(val) {\n      return this.$store.state.regExp.passWord.test(val);\n    },\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick: function getCodeClick(name) {\n      if (name === 'phone') {\n        this.$bus.$emit('getCode-start', 'phone');\n        var info = {\n          operationType: 5\n        };\n        this.$store.dispatch('sendSmsCode', info);\n      }\n    },\n    inputChanges: function inputChanges(value, name) {\n      if (name === 'password') {\n        this.checkValue4 = value;\n\n        if (this.passFlag(value)) {\n          this.checkErrorFlag4 = false;\n        } else {\n          this.checkErrorFlag4 = true;\n        }\n      } else {\n        this.checkValue5 = value;\n\n        if (this.codeFlag(value)) {\n          this.checkErrorFlag5 = false;\n        } else {\n          this.checkErrorFlag5 = true;\n        }\n      }\n\n      if (this.checkValue5 && this.checkValue4 && !this.checkErrorFlag4 && !this.checkErrorFlag5) {\n        this.disabled = false;\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink: function btnLink(name) {\n      if (name === 'appstore') {\n        window.open('https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8');\n      } else if (name === 'googleplay') {\n        window.open('https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2');\n      } else if (name === 'android') {\n        window.open('https://sj.qq.com/myapp/detail.htm?apkName=com.google.android.apps.authenticator2');\n      } else {\n        this.loading = true;\n        var info = {\n          googleKey: this.googleKey,\n          googleCode: this.checkValue5,\n          loginPwd: this.checkValue4\n        };\n        this.$store.dispatch('googleVerify', info);\n      }\n    }\n  }\n};",null]}