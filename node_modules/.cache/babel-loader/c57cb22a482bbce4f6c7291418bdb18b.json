{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/order/exchangeOrder/exchangeOrder.js","dependencies":[{"path":"/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/order/exchangeOrder/exchangeOrder.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { fixD, getCoinShowName, imgMap, colorMap } from '@/utils';\nexport default {\n  data: function data() {\n    return {\n      imgMap: imgMap,\n      colorMap: colorMap,\n      deleteArr: [],\n      tabelLoading: true,\n      switchFlag: false,\n      // 显示已撤单\n      nowType: 1,\n      // 1为当前委托 2为历史委托\n      symbol: '',\n      // 当前币种\n      symbolList: [],\n      // 币种选择列表\n      side: 'all',\n      // 方向\n      paginationObj: {\n        total: 0,\n        // 数据总条数\n        display: 10,\n        // 每页显示条数\n        currentPage: 1 // 当前页码\n\n      },\n      symbolMarketList: [],\n      // 市场列表\n      symbolMarket: '',\n      // 当前市场\n      symbolCoinList: [],\n      // 币种列表\n      symbolCoin: '',\n      // 币种列表\n      subTableData: {},\n      tabelList: [],\n      revokeList: [],\n      // 撤销队列\n      subContent: [],\n      // 展开的数据\n      subColumns: [],\n      // 展开的表头\n      subContentId: 0,\n      // 展开的id\n      subLoading: false // 展开的loading\n\n    };\n  },\n  watch: {\n    market: function market(v) {\n      if (v) {\n        this.initSymbolMarketList();\n      }\n    }\n  },\n  computed: {\n    navTab: function navTab() {\n      return [// 当前委托\n      {\n        name: this.$t('order.exchangeOrder.nowOrder'),\n        index: 1\n      }, // 历史委托\n      {\n        name: this.$t('order.exchangeOrder.hisOrder'),\n        index: 2\n      }];\n    },\n    sideList: function sideList() {\n      return [// 方向选择列表\n      // 全部\n      {\n        code: 'all',\n        value: this.$t('order.exchangeOrder.all')\n      }, // 买入\n      {\n        code: 'buy',\n        value: this.$t('order.exchangeOrder.buy')\n      }, // 卖出\n      {\n        code: 'sell',\n        value: this.$t('order.exchangeOrder.sell')\n      }];\n    },\n    market: function market() {\n      return this.$store.state.baseData.market;\n    },\n    // 表格title\n    columns: function columns() {\n      var list = []; // let market = this.symbolMarket;\n      // let coin = this.symbolCoin;\n      // const { coinList } = this.market ? this.market.coinList : '';\n      // if (coinList) {\n      //   // market = market === 'all' ? '' : `(${getCoinShowName(market, coinList)})`;\n      //   // coin = coin === 'all' ? '' : `(${getCoinShowName(coin, coinList)})`;\n      // }\n\n      if (this.nowType === 1) {\n        list = [// 时间\n        {\n          title: this.$t('order.exchangeOrder.nowOrderTime'),\n          width: '70px'\n        }, // 币对\n        {\n          title: this.$t('order.exchangeOrder.coin'),\n          width: '70px'\n        }, // 类别\n        {\n          title: this.$t('order.exchangeOrder.nowOrderType'),\n          width: '70px'\n        }, // 价格\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.nowOrderPrice'))\n        }, // 数量\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.nowOrderVolume'))\n        }, // 交易额\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.nowOrderTotol'))\n        }, // 平均成交价\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.nowOrderAverage')) // width: '130px',\n\n        }, // 已成交/未成交\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.nowOrderTransaction')),\n          width: '140px'\n        }, // 操作\n        {\n          title: this.$t('order.exchangeOrder.nowOrderOptions'),\n          width: '100px'\n        }];\n      }\n\n      if (this.nowType === 2) {\n        list = [// 时间\n        {\n          title: this.$t('order.exchangeOrder.hisOrderTime'),\n          width: '70px'\n        }, // 币对\n        {\n          title: this.$t('order.exchangeOrder.coin'),\n          width: '70px'\n        }, // 类别\n        {\n          title: this.$t('order.exchangeOrder.hisOrderType'),\n          width: '70px'\n        }, // 价格\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.hisOrderPrice'))\n        }, // 数量\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.hisOrderVolume'))\n        }, // 成交均价\n        {\n          title: \"\".concat(this.$t('order.exchangeOrder.hisOrderAverage')) // width: '130px',\n\n        }, // 状态\n        {\n          title: this.$t('order.exchangeOrder.hisOrderStatus')\n        }, // 操作\n        {\n          title: this.$t('order.exchangeOrder.hisOrderOptions'),\n          width: '100px'\n        }];\n      }\n\n      return list;\n    },\n    axiosSide: function axiosSide() {\n      if (this.side === 'all') {\n        return '';\n      }\n\n      return this.side;\n    },\n    axiosSymbol: function axiosSymbol() {\n      return \"\".concat(this.symbolCoin).concat(this.symbolMarket).toLowerCase();\n    },\n    symbolAll: function symbolAll() {\n      return this.$store.state.baseData.symbolAll;\n    },\n    // 是否开启 查询全部币对\n    openOrderCollect: function openOrderCollect() {\n      if (this.$store.state.baseData.publicInfo) {\n        return this.$store.state.baseData.publicInfo.open_order_collect;\n      }\n\n      return null;\n    }\n  },\n  methods: {\n    init: function init() {\n      if (this.$route.query.nowType) {\n        this.nowType = Number(this.$route.query.nowType);\n      }\n\n      if (this.market) {\n        this.initSymbolMarketList();\n      }\n    },\n    // 市场发生改变\n    symbolMarketChange: function symbolMarketChange(item) {\n      if (this.symbolMarket === item.code) {\n        return;\n      }\n\n      this.symbolMarket = item.code; // 创建币种列表\n\n      var list = [];\n\n      if (this.openOrderCollect === '1' && this.symbolMarket === 'all') {\n        list.push({\n          value: this.$t('order.exchangeOrder.all'),\n          code: 'all'\n        });\n      }\n\n      var market = this.market.market;\n      var curList = market[this.symbolMarket];\n\n      if (this.symbolMarket === 'all') {\n        curList = this.symbolAll;\n      }\n\n      if (curList) {\n        Object.keys(curList).forEach(function (citem) {\n          var coinArr = citem.split('/');\n          var citemObj = curList[citem];\n          var showSymbol = citemObj.showName || citemObj.name;\n          list.push({\n            code: \"\".concat(coinArr[0]).concat(coinArr[1]),\n            value: showSymbol\n          });\n        });\n      }\n\n      this.symbolCoinList = list;\n\n      if (list.length) {\n        this.symbolCoinChange(list[0]);\n      }\n    },\n    // 币种发生改变\n    symbolCoinChange: function symbolCoinChange(item) {\n      if (this.symbolCoin === item.code) {\n        return;\n      }\n\n      this.symbolCoin = item.code;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.clearSub();\n      this.getData();\n    },\n    // 初始化市场\n    initSymbolMarketList: function initSymbolMarketList() {\n      var _this$market = this.market,\n          market = _this$market.market,\n          coinList = _this$market.coinList;\n      var list = [];\n\n      if (this.openOrderCollect === '1') {\n        list.push({\n          value: this.$t('order.exchangeOrder.all180'),\n          code: 'all'\n        });\n      }\n\n      Object.keys(market).forEach(function (item) {\n        list.push({\n          value: getCoinShowName(item, coinList),\n          code: item\n        });\n      });\n      this.symbolMarketList = list;\n\n      if (list.length) {\n        this.symbolMarketChange(list[0]);\n      }\n    },\n    switchChange: function switchChange() {\n      this.switchFlag = !this.switchFlag;\n      this.getData();\n    },\n    // 切换委托\n    currentType: function currentType(item) {\n      if (this.nowType === item.index) {\n        return;\n      }\n\n      this.nowType = item.index;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.clearSub();\n      this.getData();\n    },\n    getData: function getData() {\n      if (this.nowType === 1) {\n        this.getNowData();\n      } else if (this.nowType === 2) {\n        this.getHisData();\n      }\n    },\n    getFix: function getFix(market, coin) {\n      // 例如 btc/usdt\n      var marketFix = 0; // 市场精度 usdt\n\n      var coinFix = 0; // 交易币种精度 btc\n\n      var symbol = \"\".concat(coin, \"/\").concat(market);\n\n      if (this.symbolAll[symbol]) {\n        var _this$symbolAll$symbo = this.symbolAll[symbol],\n            price = _this$symbolAll$symbo.price,\n            volume = _this$symbolAll$symbo.volume;\n        marketFix = price;\n        coinFix = volume;\n      }\n\n      return {\n        marketFix: marketFix,\n        coinFix: coinFix\n      };\n    },\n    // 获取当前\n    getNowData: function getNowData() {\n      var _this = this;\n\n      var symbolCoin = this.symbolCoin === 'all' ? '' : this.symbolCoin; // const symbolMarket = this.symbolMarket === 'all' ? '' : this.symbolMarket;\n\n      var symbol = symbolCoin.toLowerCase();\n      var ajaxUrl = 'order/list/new';\n      var paramsData = {\n        side: this.axiosSide,\n        pageSize: this.paginationObj.display,\n        // 每页条数\n        page: this.paginationObj.currentPage,\n        // 页码\n        symbol: symbol\n      };\n\n      if (this.openOrderCollect === '1') {\n        paramsData.entrust = this.nowType;\n        paramsData.orderType = 1;\n        ajaxUrl = 'order/entrust_search';\n      }\n\n      this.axios({\n        url: ajaxUrl,\n        method: 'post',\n        params: paramsData\n      }).then(function (data) {\n        if (_this.nowType !== 1) return;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var orderList = data.data.orderList;\n\n          if (_this.openOrderCollect === '1') {\n            orderList = data.data.orders;\n          }\n\n          orderList.forEach(function (item) {\n            var quoteCoin = item.quoteCoin || item.countCoin;\n\n            var _this$getFix = _this.getFix(quoteCoin, item.baseCoin),\n                marketFix = _this$getFix.marketFix,\n                coinFix = _this$getFix.coinFix;\n\n            var showClose = true;\n\n            if (item.type === 2 || item.status === 5 || item.isCloseCancelOrder && item.isCloseCancelOrder.toString() === '1') {\n              showClose = false;\n            }\n\n            list.push({\n              id: item.id,\n              data: [item.created_at, // 时间\n              \"\".concat(item.baseCoin, \"/\").concat(quoteCoin), // 币对\n              [{\n                text: item.side_text,\n                classes: item.side === 'BUY' ? 'b-5-cl' : 'b-6-cl'\n              }], item.type.toString() === '1' ? \"\".concat(fixD(item.price, marketFix), \" \").concat(quoteCoin) // 价格\n              : _this.$t('order.exchangeOrder.marketPrice'), // 市价\n              \"\".concat(fixD(item.volume, coinFix), \" \").concat(item.baseCoin), // 数量\n              \"\".concat(fixD(item.total_price, marketFix), \" \").concat(quoteCoin), // 交易额\n              \"\".concat(fixD(item.avg_price, marketFix), \" \").concat(quoteCoin), // 平均成交价\n              [{\n                text: \"\".concat(fixD(item.deal_volume, coinFix), \" \").concat(item.baseCoin),\n                subContent: {\n                  text: \"\".concat(fixD(item.remain_volume, coinFix), \" \").concat(item.baseCoin)\n                }\n              }], [showClose ? {\n                type: 'button',\n                text: _this.$t('order.exchangeOrder.cancel'),\n                // 撤单\n                eventType: 'cancelOrder'\n              } : '']]\n            });\n          });\n          _this.tabelLoading = false;\n          _this.tabelList = list;\n          _this.paginationObj.total = data.data.count;\n        } else {\n          _this.tabelLoading = false;\n\n          _this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 分页器\n    pagechange: function pagechange(v) {\n      this.paginationObj.currentPage = v;\n      this.clearSub();\n      this.getData();\n    },\n    // 获取历史\n    getHisData: function getHisData() {\n      var _this2 = this;\n\n      var symbolCoin = this.symbolCoin === 'all' ? '' : this.symbolCoin; // const symbolMarket = this.symbolMarket === 'all' ? '' : this.symbolMarket;\n\n      var symbol = symbolCoin.toLowerCase();\n      var ajaxUrl = '/order/entrust_history';\n      var paramsData = {\n        side: this.axiosSide,\n        pageSize: this.paginationObj.display,\n        // 每页条数\n        page: this.paginationObj.currentPage,\n        // 页码\n        isShowCanceled: this.switchFlag ? 1 : 0,\n        // 是否展示已撤单\n        symbol: symbol\n      };\n\n      if (this.openOrderCollect === '1') {\n        paramsData.entrust = this.nowType;\n        paramsData.orderType = 1;\n        ajaxUrl = 'order/entrust_search';\n      }\n\n      this.axios({\n        url: ajaxUrl,\n        method: 'post',\n        params: paramsData\n      }).then(function (data) {\n        if (_this2.nowType !== 2) return;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var orderList = data.data.orderList;\n\n          if (_this2.openOrderCollect === '1') {\n            orderList = data.data.orders;\n          }\n\n          orderList.forEach(function (item) {\n            var quoteCoin = item.quoteCoin || item.countCoin;\n\n            var _this2$getFix = _this2.getFix(quoteCoin, item.baseCoin),\n                marketFix = _this2$getFix.marketFix,\n                coinFix = _this2$getFix.coinFix;\n\n            var subTableBtn = [];\n\n            if (item.status === 2 || item.status === 4 && parseFloat(item.deal_volume) !== 0) {\n              subTableBtn = [{\n                type: 'subTable',\n                text: _this2.$t('order.exchangeOrder.details'),\n                // 详情\n                eventType: 'view'\n              }];\n            } else {\n              subTableBtn = [];\n            }\n\n            list.push({\n              id: item.id,\n              data: [item.created_at, \"\".concat(item.baseCoin, \"/\").concat(quoteCoin), // 币对\n              [{\n                text: item.side_text,\n                classes: item.side === 'BUY' ? 'b-5-cl' : 'b-6-cl'\n              }], item.type.toString() === '1' ? \"\".concat(fixD(item.price, marketFix), \" \").concat(quoteCoin) // 价格\n              : _this2.$t('order.exchangeOrder.marketPrice'), // 市价\n              \"\".concat(fixD(item.volume, coinFix), \" \").concat(item.baseCoin), // 数量\n              \"\".concat(fixD(item.avg_price, marketFix), \" \").concat(quoteCoin), // 平均成交价\n              item.status_text, subTableBtn]\n            });\n          });\n          _this2.tabelLoading = false;\n          _this2.tabelList = list;\n          _this2.paginationObj.total = data.data.count;\n        } else {\n          _this2.tabelLoading = false;\n\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 切换方向\n    sideChange: function sideChange(item) {\n      if (this.side === item.code) {\n        return;\n      }\n\n      this.side = item.code;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.clearSub();\n      this.getData();\n    },\n    tableClick: function tableClick(type, id) {\n      if (type === 'cancelOrder') {\n        this.cancelOrder(id);\n      }\n\n      if (type === 'view') {\n        this.getSubTableData(id);\n      }\n    },\n    // 重置详情\n    clearSub: function clearSub() {\n      this.subContentId = null;\n      this.subColumns = [];\n      this.subContent = [];\n      this.subLoading = false;\n    },\n    // 查看详情\n    getSubTableData: function getSubTableData(v) {\n      var _this3 = this;\n\n      if (v.open) {\n        this.subContentId = v.id;\n        this.subColumns = [this.$t('order.exchangeOrder.detailsTime'), // 时间\n        this.$t('order.exchangeOrder.detailsPrice'), // 价格\n        this.$t('order.exchangeOrder.detailsVolume'), // 数量\n        this.$t('order.exchangeOrder.detailsTotol'), // 成交额\n        this.$t('order.exchangeOrder.detailsFee') // 手续费\n        ];\n        this.subContent = [];\n        this.subLoading = true;\n        var symbol = '';\n        this.tabelList.forEach(function (item) {\n          if (item.id === v.id) {\n            var _item$data = _slicedToArray(item.data, 2);\n\n            symbol = _item$data[1];\n          }\n        });\n        var symbolCoin = \"\".concat(symbol.split('/')[0]).concat(symbol.split('/')[1]);\n        this.axios({\n          url: 'trade/list_by_order',\n          method: 'post',\n          params: {\n            symbol: symbolCoin,\n            order_id: v.id // pageSize: this.pagination.pageSize,\n\n          }\n        }).then(function (data) {\n          if (v.id !== _this3.subContentId) {\n            return;\n          }\n\n          if (data.code.toString() === '0') {\n            var list = [];\n            data.data.trade_list.forEach(function (item) {\n              var _this3$getFix = _this3.getFix(symbol.split('/')[1], symbol.split('/')[0]),\n                  marketFix = _this3$getFix.marketFix,\n                  coinFix = _this3$getFix.coinFix;\n\n              list.push({\n                ctime: item.ctime,\n                price: fixD(item.price, marketFix),\n                volume: fixD(item.volume, coinFix),\n                dealPrice: fixD(item.deal_price, marketFix),\n                fee: item.fee\n              });\n            });\n            _this3.subLoading = false;\n            _this3.subContent = list;\n          } else {\n            _this3.subLoading = false;\n\n            _this3.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    },\n    // 撤单\n    cancelOrder: function cancelOrder(id) {\n      var _this4 = this;\n\n      if (this.revokeList.indexOf(id) === -1) {\n        this.revokeList.push(id);\n        var symbol = '';\n        this.tabelList.forEach(function (item) {\n          if (item.id === id) {\n            var _item$data2 = _slicedToArray(item.data, 2);\n\n            symbol = _item$data2[1];\n          }\n        });\n        symbol = \"\".concat(symbol.split('/')[0]).concat(symbol.split('/')[1]);\n        this.axios({\n          url: 'order/cancel',\n          method: 'post',\n          params: {\n            orderId: id,\n            symbol: symbol\n          }\n        }).then(function (data) {\n          var ind = _this4.revokeList.indexOf(id);\n\n          _this4.revokeList.splice(ind, 1);\n\n          if (data.code.toString() === '0') {\n            _this4.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'success'\n            });\n\n            var sId = 0;\n\n            _this4.tabelList.forEach(function (item, i) {\n              if (item.id === id) {\n                sId = i;\n              }\n            });\n\n            _this4.tabelList.splice(sId, 1); // this.getData();\n\n          } else {\n            _this4.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/order/exchangeOrder/exchangeOrder.js"],"names":["fixD","getCoinShowName","imgMap","colorMap","data","deleteArr","tabelLoading","switchFlag","nowType","symbol","symbolList","side","paginationObj","total","display","currentPage","symbolMarketList","symbolMarket","symbolCoinList","symbolCoin","subTableData","tabelList","revokeList","subContent","subColumns","subContentId","subLoading","watch","market","v","initSymbolMarketList","computed","navTab","name","$t","index","sideList","code","value","$store","state","baseData","columns","list","title","width","axiosSide","axiosSymbol","toLowerCase","symbolAll","openOrderCollect","publicInfo","open_order_collect","methods","init","$route","query","Number","symbolMarketChange","item","push","curList","Object","keys","forEach","citem","coinArr","split","citemObj","showSymbol","showName","length","symbolCoinChange","clearSub","getData","coinList","switchChange","currentType","getNowData","getHisData","getFix","coin","marketFix","coinFix","price","volume","ajaxUrl","paramsData","pageSize","page","entrust","orderType","axios","url","method","params","then","toString","orderList","orders","quoteCoin","countCoin","baseCoin","showClose","type","status","isCloseCancelOrder","id","created_at","text","side_text","classes","total_price","avg_price","deal_volume","remain_volume","eventType","count","$bus","$emit","msg","pagechange","isShowCanceled","subTableBtn","parseFloat","status_text","sideChange","tableClick","cancelOrder","getSubTableData","open","order_id","trade_list","ctime","dealPrice","deal_price","fee","indexOf","orderId","ind","splice","sId","i"],"mappings":"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","sourcesContent":["import {\r\n  fixD,\r\n  getCoinShowName,\r\n  imgMap,\r\n  colorMap,\r\n} from '@/utils';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      imgMap,\r\n      colorMap,\r\n      deleteArr: [],\r\n      tabelLoading: true,\r\n      switchFlag: false, // 显示已撤单\r\n      nowType: 1, // 1为当前委托 2为历史委托\r\n      symbol: '', // 当前币种\r\n      symbolList: [], // 币种选择列表\r\n      side: 'all', // 方向\r\n      paginationObj: {\r\n        total: 0, // 数据总条数\r\n        display: 10, // 每页显示条数\r\n        currentPage: 1, // 当前页码\r\n      },\r\n      symbolMarketList: [], // 市场列表\r\n      symbolMarket: '', // 当前市场\r\n      symbolCoinList: [], // 币种列表\r\n      symbolCoin: '', // 币种列表\r\n      subTableData: {},\r\n      tabelList: [],\r\n      revokeList: [], // 撤销队列\r\n      subContent: [], // 展开的数据\r\n      subColumns: [], // 展开的表头\r\n      subContentId: 0, // 展开的id\r\n      subLoading: false, // 展开的loading\r\n    };\r\n  },\r\n  watch: {\r\n    market(v) { if (v) { this.initSymbolMarketList(); } },\r\n  },\r\n  computed: {\r\n    navTab() {\r\n      return [\r\n        // 当前委托\r\n        { name: this.$t('order.exchangeOrder.nowOrder'), index: 1 },\r\n        // 历史委托\r\n        { name: this.$t('order.exchangeOrder.hisOrder'), index: 2 },\r\n      ];\r\n    },\r\n    sideList() {\r\n      return [ // 方向选择列表\r\n        // 全部\r\n        { code: 'all', value: this.$t('order.exchangeOrder.all') },\r\n        // 买入\r\n        { code: 'buy', value: this.$t('order.exchangeOrder.buy') },\r\n        // 卖出\r\n        { code: 'sell', value: this.$t('order.exchangeOrder.sell') },\r\n      ];\r\n    },\r\n    market() { return this.$store.state.baseData.market; },\r\n    // 表格title\r\n    columns() {\r\n      let list = [];\r\n      // let market = this.symbolMarket;\r\n      // let coin = this.symbolCoin;\r\n      // const { coinList } = this.market ? this.market.coinList : '';\r\n      // if (coinList) {\r\n      //   // market = market === 'all' ? '' : `(${getCoinShowName(market, coinList)})`;\r\n      //   // coin = coin === 'all' ? '' : `(${getCoinShowName(coin, coinList)})`;\r\n      // }\r\n      if (this.nowType === 1) {\r\n        list = [\r\n          // 时间\r\n          {\r\n            title: this.$t('order.exchangeOrder.nowOrderTime'),\r\n            width: '70px',\r\n          },\r\n          // 币对\r\n          {\r\n            title: this.$t('order.exchangeOrder.coin'),\r\n            width: '70px',\r\n          },\r\n          // 类别\r\n          {\r\n            title: this.$t('order.exchangeOrder.nowOrderType'),\r\n            width: '70px',\r\n          },\r\n          // 价格\r\n          {\r\n            title: `${this.$t('order.exchangeOrder.nowOrderPrice')}`,\r\n          },\r\n          // 数量\r\n          {\r\n            title: `${this.$t('order.exchangeOrder.nowOrderVolume')}`,\r\n          },\r\n          // 交易额\r\n          {\r\n            title: `${this.$t('order.exchangeOrder.nowOrderTotol')}`,\r\n          },\r\n          // 平均成交价\r\n          {\r\n            title: `${this.$t('order.exchangeOrder.nowOrderAverage')}`,\r\n            // width: '130px',\r\n          },\r\n          // 已成交/未成交\r\n          {\r\n            title: `${this.$t('order.exchangeOrder.nowOrderTransaction')}`,\r\n            width: '140px',\r\n          },\r\n          // 操作\r\n          {\r\n            title: this.$t('order.exchangeOrder.nowOrderOptions'),\r\n            width: '100px',\r\n          },\r\n        ];\r\n      } if (this.nowType === 2) {\r\n        list = [\r\n          // 时间\r\n          {\r\n            title: this.$t('order.exchangeOrder.hisOrderTime'),\r\n            width: '70px',\r\n          },\r\n          // 币对\r\n          {\r\n            title: this.$t('order.exchangeOrder.coin'),\r\n            width: '70px',\r\n          },\r\n          // 类别\r\n          {\r\n            title: this.$t('order.exchangeOrder.hisOrderType'),\r\n            width: '70px',\r\n          },\r\n          // 价格\r\n          {\r\n            title: `${this.$t('order.exchangeOrder.hisOrderPrice')}`,\r\n          },\r\n          // 数量\r\n          {\r\n            title: `${this.$t('order.exchangeOrder.hisOrderVolume')}`,\r\n          },\r\n          // 成交均价\r\n          {\r\n            title: `${this.$t('order.exchangeOrder.hisOrderAverage')}`,\r\n            // width: '130px',\r\n          },\r\n          // 状态\r\n          {\r\n            title: this.$t('order.exchangeOrder.hisOrderStatus'),\r\n          },\r\n          // 操作\r\n          {\r\n            title: this.$t('order.exchangeOrder.hisOrderOptions'),\r\n            width: '100px',\r\n          },\r\n        ];\r\n      }\r\n      return list;\r\n    },\r\n    axiosSide() {\r\n      if (this.side === 'all') {\r\n        return '';\r\n      }\r\n      return this.side;\r\n    },\r\n    axiosSymbol() {\r\n      return `${this.symbolCoin}${this.symbolMarket}`.toLowerCase();\r\n    },\r\n    symbolAll() {\r\n      return this.$store.state.baseData.symbolAll;\r\n    },\r\n    // 是否开启 查询全部币对\r\n    openOrderCollect() {\r\n      if (this.$store.state.baseData.publicInfo) {\r\n        return this.$store.state.baseData.publicInfo.open_order_collect;\r\n      }\r\n      return null;\r\n    },\r\n  },\r\n  methods: {\r\n    init() {\r\n      if (this.$route.query.nowType) {\r\n        this.nowType = Number(this.$route.query.nowType);\r\n      }\r\n      if (this.market) { this.initSymbolMarketList(); }\r\n    },\r\n    // 市场发生改变\r\n    symbolMarketChange(item) {\r\n      if (this.symbolMarket === item.code) { return; }\r\n      this.symbolMarket = item.code;\r\n      // 创建币种列表\r\n      const list = [];\r\n      if (this.openOrderCollect === '1' && this.symbolMarket === 'all') {\r\n        list.push({ value: this.$t('order.exchangeOrder.all'), code: 'all' });\r\n      }\r\n      const { market } = this.market;\r\n      let curList = market[this.symbolMarket];\r\n      if (this.symbolMarket === 'all') {\r\n        curList = this.symbolAll;\r\n      }\r\n      if (curList) {\r\n        Object.keys(curList).forEach((citem) => {\r\n          const coinArr = citem.split('/');\r\n          const citemObj = curList[citem];\r\n          const showSymbol = citemObj.showName || citemObj.name;\r\n          list.push({ code: `${coinArr[0]}${coinArr[1]}`, value: showSymbol });\r\n        });\r\n      }\r\n      this.symbolCoinList = list;\r\n      if (list.length) {\r\n        this.symbolCoinChange(list[0]);\r\n      }\r\n    },\r\n    // 币种发生改变\r\n    symbolCoinChange(item) {\r\n      if (this.symbolCoin === item.code) { return; }\r\n      this.symbolCoin = item.code;\r\n      this.paginationObj.currentPage = 1; // 页码\r\n      this.paginationObj.total = 0; // 总条数\r\n      this.tabelList = [];\r\n      this.tabelLoading = true;\r\n      this.clearSub();\r\n      this.getData();\r\n    },\r\n    // 初始化市场\r\n    initSymbolMarketList() {\r\n      const { market, coinList } = this.market;\r\n      const list = [];\r\n      if (this.openOrderCollect === '1') {\r\n        list.push({ value: this.$t('order.exchangeOrder.all180'), code: 'all' });\r\n      }\r\n      Object.keys(market).forEach((item) => {\r\n        list.push({ value: getCoinShowName(item, coinList), code: item });\r\n      });\r\n      this.symbolMarketList = list;\r\n      if (list.length) {\r\n        this.symbolMarketChange(list[0]);\r\n      }\r\n    },\r\n    switchChange() {\r\n      this.switchFlag = !this.switchFlag;\r\n      this.getData();\r\n    },\r\n    // 切换委托\r\n    currentType(item) {\r\n      if (this.nowType === item.index) { return; }\r\n      this.nowType = item.index;\r\n      this.paginationObj.currentPage = 1; // 页码\r\n      this.paginationObj.total = 0; // 总条数\r\n      this.tabelList = [];\r\n      this.tabelLoading = true;\r\n      this.clearSub();\r\n      this.getData();\r\n    },\r\n    getData() {\r\n      if (this.nowType === 1) {\r\n        this.getNowData();\r\n      } else if (this.nowType === 2) {\r\n        this.getHisData();\r\n      }\r\n    },\r\n    getFix(market, coin) {\r\n      // 例如 btc/usdt\r\n      let marketFix = 0; // 市场精度 usdt\r\n      let coinFix = 0; // 交易币种精度 btc\r\n      const symbol = `${coin}/${market}`;\r\n      if (this.symbolAll[symbol]) {\r\n        const { price, volume } = this.symbolAll[symbol];\r\n        marketFix = price;\r\n        coinFix = volume;\r\n      }\r\n      return {\r\n        marketFix,\r\n        coinFix,\r\n      };\r\n    },\r\n    // 获取当前\r\n    getNowData() {\r\n      const symbolCoin = this.symbolCoin === 'all' ? '' : this.symbolCoin;\r\n      // const symbolMarket = this.symbolMarket === 'all' ? '' : this.symbolMarket;\r\n      const symbol = symbolCoin.toLowerCase();\r\n      let ajaxUrl = 'order/list/new';\r\n      const paramsData = {\r\n        side: this.axiosSide,\r\n        pageSize: this.paginationObj.display, // 每页条数\r\n        page: this.paginationObj.currentPage, // 页码\r\n        symbol,\r\n      };\r\n      if (this.openOrderCollect === '1') {\r\n        paramsData.entrust = this.nowType;\r\n        paramsData.orderType = 1;\r\n        ajaxUrl = 'order/entrust_search';\r\n      }\r\n      this.axios({\r\n        url: ajaxUrl,\r\n        method: 'post',\r\n        params: paramsData,\r\n      }).then((data) => {\r\n        if (this.nowType !== 1) return;\r\n        if (data.code.toString() === '0') {\r\n          const list = [];\r\n          let { orderList } = data.data;\r\n          if (this.openOrderCollect === '1') {\r\n            orderList = data.data.orders;\r\n          }\r\n          orderList.forEach((item) => {\r\n            const quoteCoin = item.quoteCoin || item.countCoin;\r\n            const { marketFix, coinFix } = this.getFix(quoteCoin, item.baseCoin);\r\n            let showClose = true;\r\n            if (item.type === 2 || item.status === 5\r\n              || (item.isCloseCancelOrder && item.isCloseCancelOrder.toString() === '1')) {\r\n              showClose = false;\r\n            }\r\n            list.push({\r\n              id: item.id,\r\n              data: [\r\n                item.created_at, // 时间\r\n                `${item.baseCoin}/${quoteCoin}`, // 币对\r\n                [{\r\n                  text: item.side_text,\r\n                  classes: item.side === 'BUY' ? 'b-5-cl' : 'b-6-cl',\r\n                }],\r\n                item.type.toString() === '1'\r\n                  ? `${fixD(item.price, marketFix)} ${quoteCoin}` // 价格\r\n                  : this.$t('order.exchangeOrder.marketPrice'), // 市价\r\n                `${fixD(item.volume, coinFix)} ${item.baseCoin}`, // 数量\r\n                `${fixD(item.total_price, marketFix)} ${quoteCoin}`, // 交易额\r\n                `${fixD(item.avg_price, marketFix)} ${quoteCoin}`, // 平均成交价\r\n                [\r\n                  {\r\n                    text: `${fixD(item.deal_volume, coinFix)} ${item.baseCoin}`,\r\n                    subContent: { text: `${fixD(item.remain_volume, coinFix)} ${item.baseCoin}` },\r\n                  },\r\n                ],\r\n                [\r\n                  showClose\r\n                    ? {\r\n                      type: 'button',\r\n                      text: this.$t('order.exchangeOrder.cancel'), // 撤单\r\n                      eventType: 'cancelOrder',\r\n                    }\r\n                    : '',\r\n                ],\r\n              ],\r\n            });\r\n          });\r\n          this.tabelLoading = false;\r\n          this.tabelList = list;\r\n          this.paginationObj.total = data.data.count;\r\n        } else {\r\n          this.tabelLoading = false;\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    // 分页器\r\n    pagechange(v) {\r\n      this.paginationObj.currentPage = v;\r\n      this.clearSub();\r\n      this.getData();\r\n    },\r\n    // 获取历史\r\n    getHisData() {\r\n      const symbolCoin = this.symbolCoin === 'all' ? '' : this.symbolCoin;\r\n      // const symbolMarket = this.symbolMarket === 'all' ? '' : this.symbolMarket;\r\n      const symbol = symbolCoin.toLowerCase();\r\n      let ajaxUrl = '/order/entrust_history';\r\n      const paramsData = {\r\n        side: this.axiosSide,\r\n        pageSize: this.paginationObj.display, // 每页条数\r\n        page: this.paginationObj.currentPage, // 页码\r\n        isShowCanceled: this.switchFlag ? 1 : 0, // 是否展示已撤单\r\n        symbol,\r\n      };\r\n      if (this.openOrderCollect === '1') {\r\n        paramsData.entrust = this.nowType;\r\n        paramsData.orderType = 1;\r\n        ajaxUrl = 'order/entrust_search';\r\n      }\r\n      this.axios({\r\n        url: ajaxUrl,\r\n        method: 'post',\r\n        params: paramsData,\r\n      }).then((data) => {\r\n        if (this.nowType !== 2) return;\r\n        if (data.code.toString() === '0') {\r\n          const list = [];\r\n          let { orderList } = data.data;\r\n          if (this.openOrderCollect === '1') {\r\n            orderList = data.data.orders;\r\n          }\r\n          orderList.forEach((item) => {\r\n            const quoteCoin = item.quoteCoin || item.countCoin;\r\n            const { marketFix, coinFix } = this.getFix(quoteCoin, item.baseCoin);\r\n            let subTableBtn = [];\r\n            if (item.status === 2 || (item.status === 4 && parseFloat(item.deal_volume) !== 0)) {\r\n              subTableBtn = [\r\n                {\r\n                  type: 'subTable',\r\n                  text: this.$t('order.exchangeOrder.details'), // 详情\r\n                  eventType: 'view',\r\n                },\r\n              ];\r\n            } else {\r\n              subTableBtn = [];\r\n            }\r\n            list.push({\r\n              id: item.id,\r\n              data: [\r\n                item.created_at,\r\n                `${item.baseCoin}/${quoteCoin}`, // 币对\r\n                [{\r\n                  text: item.side_text,\r\n                  classes: item.side === 'BUY' ? 'b-5-cl' : 'b-6-cl',\r\n                }],\r\n                item.type.toString() === '1'\r\n                  ? `${fixD(item.price, marketFix)} ${quoteCoin}` // 价格\r\n                  : this.$t('order.exchangeOrder.marketPrice'), // 市价\r\n                `${fixD(item.volume, coinFix)} ${item.baseCoin}`, // 数量\r\n                `${fixD(item.avg_price, marketFix)} ${quoteCoin}`, // 平均成交价\r\n                item.status_text,\r\n                subTableBtn,\r\n              ],\r\n            });\r\n          });\r\n          this.tabelLoading = false;\r\n          this.tabelList = list;\r\n          this.paginationObj.total = data.data.count;\r\n        } else {\r\n          this.tabelLoading = false;\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    // 切换方向\r\n    sideChange(item) {\r\n      if (this.side === item.code) { return; }\r\n      this.side = item.code;\r\n      this.paginationObj.currentPage = 1; // 页码\r\n      this.paginationObj.total = 0; // 总条数\r\n      this.tabelList = [];\r\n      this.tabelLoading = true;\r\n      this.clearSub();\r\n      this.getData();\r\n    },\r\n    tableClick(type, id) {\r\n      if (type === 'cancelOrder') {\r\n        this.cancelOrder(id);\r\n      }\r\n      if (type === 'view') {\r\n        this.getSubTableData(id);\r\n      }\r\n    },\r\n    // 重置详情\r\n    clearSub() {\r\n      this.subContentId = null;\r\n      this.subColumns = [];\r\n      this.subContent = [];\r\n      this.subLoading = false;\r\n    },\r\n    // 查看详情\r\n    getSubTableData(v) {\r\n      if (v.open) {\r\n        this.subContentId = v.id;\r\n        this.subColumns = [\r\n          this.$t('order.exchangeOrder.detailsTime'), // 时间\r\n          this.$t('order.exchangeOrder.detailsPrice'), // 价格\r\n          this.$t('order.exchangeOrder.detailsVolume'), // 数量\r\n          this.$t('order.exchangeOrder.detailsTotol'), // 成交额\r\n          this.$t('order.exchangeOrder.detailsFee'), // 手续费\r\n        ];\r\n        this.subContent = [];\r\n        this.subLoading = true;\r\n        let symbol = '';\r\n        this.tabelList.forEach((item) => {\r\n          if (item.id === v.id) {\r\n            [, symbol] = item.data;\r\n          }\r\n        });\r\n        const symbolCoin = `${symbol.split('/')[0]}${symbol.split('/')[1]}`;\r\n        this.axios({\r\n          url: 'trade/list_by_order',\r\n          method: 'post',\r\n          params: {\r\n            symbol: symbolCoin,\r\n            order_id: v.id,\r\n            // pageSize: this.pagination.pageSize,\r\n          },\r\n        }).then((data) => {\r\n          if (v.id !== this.subContentId) { return; }\r\n          if (data.code.toString() === '0') {\r\n            const list = [];\r\n            data.data.trade_list.forEach((item) => {\r\n              const { marketFix, coinFix } = this.getFix(\r\n                symbol.split('/')[1], symbol.split('/')[0],\r\n              );\r\n              list.push({\r\n                ctime: item.ctime,\r\n                price: fixD(item.price, marketFix),\r\n                volume: fixD(item.volume, coinFix),\r\n                dealPrice: fixD(item.deal_price, marketFix),\r\n                fee: item.fee,\r\n              });\r\n            });\r\n            this.subLoading = false;\r\n            this.subContent = list;\r\n          } else {\r\n            this.subLoading = false;\r\n            this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n          }\r\n        });\r\n      }\r\n    },\r\n    // 撤单\r\n    cancelOrder(id) {\r\n      if (this.revokeList.indexOf(id) === -1) {\r\n        this.revokeList.push(id);\r\n        let symbol = '';\r\n        this.tabelList.forEach((item) => {\r\n          if (item.id === id) {\r\n            [, symbol] = item.data;\r\n          }\r\n        });\r\n        symbol = `${symbol.split('/')[0]}${symbol.split('/')[1]}`;\r\n        this.axios({\r\n          url: 'order/cancel',\r\n          method: 'post',\r\n          params: {\r\n            orderId: id,\r\n            symbol,\r\n          },\r\n        }).then((data) => {\r\n          const ind = this.revokeList.indexOf(id);\r\n          this.revokeList.splice(ind, 1);\r\n          if (data.code.toString() === '0') {\r\n            this.$bus.$emit('tip', { text: data.msg, type: 'success' });\r\n            let sId = 0;\r\n            this.tabelList.forEach((item, i) => {\r\n              if (item.id === id) {\r\n                sId = i;\r\n              }\r\n            });\r\n            this.tabelList.splice(sId, 1);\r\n            // this.getData();\r\n          } else {\r\n            this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n          }\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n"]}]}