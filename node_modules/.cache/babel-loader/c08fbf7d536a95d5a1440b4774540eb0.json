{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/coTrade/depositMode/depositMode.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/coTrade/depositMode/depositMode.js","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\n// 保证金模式弹框 全仓/逐仓切换\nexport default {\n  name: 'depositMode',\n  data: function data() {\n    return {\n      marginModel: 1,\n      // 是否加载成功\n      dialogConfirmLoading: false,\n      // 是否禁止提交\n      dialogConfirmDisabled: false\n    };\n  },\n  props: {\n    isShow: {\n      default: false,\n      type: Boolean\n    },\n    close: {\n      default: function _default() {},\n      type: Function\n    }\n  },\n  computed: {\n    lanText: function lanText() {\n      return {\n        // 全仓保证金模式: 所有仓位共用合约账户中的保证金来避免仓位被强平。在强平事件中，交易者可能会损失所有的保证金和仓位。\n        text1: this.$t('futures.depositMode.text1'),\n        // 逐仓保证金模式: 一定数量保证金被分配到仓位上。如果仓位保证金亏损到低于维持保证金的水平，仓位将被强平。在逐仓模式下，您可以为这个仓位添加和减少保证金。\n        text2: this.$t('futures.depositMode.text2'),\n        text3: this.$t('futures.depositMode.text3'),\n        // 设置为全仓模式\n        text4: this.$t('futures.depositMode.text4'),\n        // 设置为逐仓模式\n        text5: this.$t('futures.depositMode.text5'),\n        // 请登录后再进行操作\n        text6: this.$t('futures.depositMode.text6'),\n        // 已是全仓模式\n        text7: this.$t('futures.depositMode.text7'),\n        // 已是逐仓模式\n        text8: this.$t('futures.depositMode.text8'),\n        // 持有仓位/有挂单时不可改变保证金模式\n        text9: this.$t('futures.depositMode.text9'),\n        // 全仓\n        text10: this.$t('futures.depositMode.text10'),\n        // 逐仓\n        text12: this.$t('futures.depositMode.text12') // 保证金模式\n\n      };\n    },\n    // 提交保证金按钮文案\n    confirmText: function confirmText() {\n      // '设置为全仓模式' : '设置为逐仓模式'\n      var text = this.marginModel === 1 ? this.lanText.text3 : this.lanText.text4;\n\n      if (!this.isLogin) {\n        return this.lanText.text5; // '请登录后再进行操作';\n      }\n\n      if (this.userConfig && this.marginModel === this.userConfig.marginModel) {\n        // '已是全仓模式' : '已是逐仓模式';\n        text = this.marginModel === 1 ? this.lanText.text6 : this.lanText.text7;\n        this.dialogConfirmDisabled = true;\n      }\n\n      if (this.userConfig && this.marginModel !== this.userConfig.marginModel) {\n        this.dialogConfirmDisabled = false;\n      }\n\n      if (this.userConfig && !this.userConfig.marginModelCanSwitch) {\n        text = this.lanText.text8; // '持有仓位/有挂单时不可改变保证金模式';\n\n        this.dialogConfirmDisabled = true;\n      }\n\n      if (!this.userConfig) {\n        this.dialogConfirmDisabled = true;\n      }\n\n      return text;\n    },\n    // 保证金模式列表\n    categoryList: function categoryList() {\n      return [{\n        id: 1,\n        text: this.lanText.text9,\n        // '全仓',\n        classes: this.marginModel === 1 ? 'u-8-bg' : 'a-3-bg'\n      }, {\n        id: 2,\n        text: this.lanText.text10,\n        // '逐仓',\n        classes: this.marginModel === 2 ? 'u-8-bg' : 'a-3-bg'\n      }];\n    },\n    // 是否Login\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    // 用户配置信息\n    userConfig: function userConfig() {\n      return this.$store.state.future.futureUserConfig;\n    },\n    // 当前合约ID\n    contractId: function contractId() {\n      return this.$store.state.future.contractId;\n    },\n    // 当前合约信息\n    contractInfo: function contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 当前合约名称\n    activeContractName: function activeContractName() {\n      var name = '';\n      var text = '';\n\n      if (this.contractInfo) {\n        var nameText = this.contractInfo.symbol ? this.contractInfo.symbol.replace('-', '') : '';\n\n        if (this.contractInfo.contractType !== 'E') {\n          text = \"-\".concat(this.contractInfo.marginCoin);\n        }\n\n        name = \"\".concat(nameText).concat(text);\n      }\n\n      return name;\n    },\n    // 弹窗标题\n    titleText: function titleText() {\n      return \"\".concat(this.activeContractName).concat(this.lanText.text12); // 保证金模式\n    }\n  },\n  methods: {\n    init: function init() {\n      if (this.userConfig) {\n        if (this.userConfig.marginModelCanSwitch) {\n          this.marginModel = this.userConfig.marginModel === 1 ? 2 : 1;\n        } else {\n          this.marginModel = this.userConfig.marginModel;\n        }\n      }\n    },\n    // 切换保证金模式\n    selectCategory: function selectCategory(id) {\n      this.marginModel = id;\n    },\n    // 提交保证金模式\n    submit: function submit() {\n      var _this = this;\n\n      if (!this.isLogin) {\n        this.$router.push('/login');\n        return false;\n      }\n\n      if (this.userConfig) {\n        this.dialogConfirmLoading = true;\n        this.axios({\n          url: this.$store.state.url.futures.marginModelEdit,\n          hostType: 'co',\n          method: 'post',\n          params: {\n            marginModel: this.marginModel,\n            contractId: this.contractId\n          }\n        }).then(function (_ref) {\n          var code = _ref.code,\n              msg = _ref.msg;\n\n          if (code.toString() === '0') {\n            _this.$store.dispatch('getUserConfig');\n\n            _this.close();\n\n            _this.$bus.$emit('tip', {\n              text: msg,\n              type: 'success'\n            });\n          } else {\n            _this.$bus.$emit('tip', {\n              text: msg,\n              type: 'error'\n            });\n          }\n\n          _this.dialogConfirmLoading = false;\n        });\n      }\n\n      return false;\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/coTrade/depositMode/depositMode.js"],"names":["name","data","marginModel","dialogConfirmLoading","dialogConfirmDisabled","props","isShow","default","type","Boolean","close","Function","computed","lanText","text1","$t","text2","text3","text4","text5","text6","text7","text8","text9","text10","text12","confirmText","text","isLogin","userConfig","marginModelCanSwitch","categoryList","id","classes","$store","state","baseData","future","futureUserConfig","contractId","contractInfo","activeContractName","nameText","symbol","replace","contractType","marginCoin","titleText","methods","init","selectCategory","submit","$router","push","axios","url","futures","marginModelEdit","hostType","method","params","then","code","msg","toString","dispatch","$bus","$emit"],"mappings":"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","sourcesContent":["// 保证金模式弹框 全仓/逐仓切换\nexport default {\n  name: 'depositMode',\n  data() {\n    return {\n      marginModel: 1,\n      // 是否加载成功\n      dialogConfirmLoading: false,\n      // 是否禁止提交\n      dialogConfirmDisabled: false,\n    };\n  },\n  props: {\n    isShow: {\n      default: false,\n      type: Boolean,\n    },\n    close: {\n      default() {},\n      type: Function,\n    },\n  },\n  computed: {\n    lanText() {\n      return {\n        // 全仓保证金模式: 所有仓位共用合约账户中的保证金来避免仓位被强平。在强平事件中，交易者可能会损失所有的保证金和仓位。\n        text1: this.$t('futures.depositMode.text1'),\n        // 逐仓保证金模式: 一定数量保证金被分配到仓位上。如果仓位保证金亏损到低于维持保证金的水平，仓位将被强平。在逐仓模式下，您可以为这个仓位添加和减少保证金。\n        text2: this.$t('futures.depositMode.text2'),\n        text3: this.$t('futures.depositMode.text3'), // 设置为全仓模式\n        text4: this.$t('futures.depositMode.text4'), // 设置为逐仓模式\n        text5: this.$t('futures.depositMode.text5'), // 请登录后再进行操作\n        text6: this.$t('futures.depositMode.text6'), // 已是全仓模式\n        text7: this.$t('futures.depositMode.text7'), // 已是逐仓模式\n        text8: this.$t('futures.depositMode.text8'), // 持有仓位/有挂单时不可改变保证金模式\n        text9: this.$t('futures.depositMode.text9'), // 全仓\n        text10: this.$t('futures.depositMode.text10'), // 逐仓\n        text12: this.$t('futures.depositMode.text12'), // 保证金模式\n      };\n    },\n    // 提交保证金按钮文案\n    confirmText() {\n      // '设置为全仓模式' : '设置为逐仓模式'\n      let text = this.marginModel === 1 ? this.lanText.text3 : this.lanText.text4;\n      if (!this.isLogin) {\n        return this.lanText.text5; // '请登录后再进行操作';\n      }\n      if (this.userConfig && this.marginModel === this.userConfig.marginModel) {\n        // '已是全仓模式' : '已是逐仓模式';\n        text = this.marginModel === 1 ? this.lanText.text6 : this.lanText.text7;\n        this.dialogConfirmDisabled = true;\n      }\n      if (this.userConfig && this.marginModel !== this.userConfig.marginModel) {\n        this.dialogConfirmDisabled = false;\n      }\n      if (this.userConfig && !this.userConfig.marginModelCanSwitch) {\n        text = this.lanText.text8; // '持有仓位/有挂单时不可改变保证金模式';\n        this.dialogConfirmDisabled = true;\n      }\n      if (!this.userConfig) {\n        this.dialogConfirmDisabled = true;\n      }\n      return text;\n    },\n    // 保证金模式列表\n    categoryList() {\n      return [\n        {\n          id: 1,\n          text: this.lanText.text9, // '全仓',\n          classes: this.marginModel === 1 ? 'u-8-bg' : 'a-3-bg',\n        },\n        {\n          id: 2,\n          text: this.lanText.text10, // '逐仓',\n          classes: this.marginModel === 2 ? 'u-8-bg' : 'a-3-bg',\n        },\n      ];\n    },\n    // 是否Login\n    isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    // 用户配置信息\n    userConfig() {\n      return this.$store.state.future.futureUserConfig;\n    },\n    // 当前合约ID\n    contractId() {\n      return this.$store.state.future.contractId;\n    },\n    // 当前合约信息\n    contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 当前合约名称\n    activeContractName() {\n      let name = '';\n      let text = '';\n      if (this.contractInfo) {\n        const nameText = this.contractInfo.symbol ? this.contractInfo.symbol.replace('-', '') : '';\n        if (this.contractInfo.contractType !== 'E') {\n          text = `-${this.contractInfo.marginCoin}`;\n        }\n        name = `${nameText}${text}`;\n      }\n      return name;\n    },\n    // 弹窗标题\n    titleText() {\n      return `${this.activeContractName}${this.lanText.text12}`; // 保证金模式\n    },\n  },\n  methods: {\n    init() {\n      if (this.userConfig) {\n        if (this.userConfig.marginModelCanSwitch) {\n          this.marginModel = this.userConfig.marginModel === 1 ? 2 : 1;\n        } else {\n          this.marginModel = this.userConfig.marginModel;\n        }\n      }\n    },\n    // 切换保证金模式\n    selectCategory(id) {\n      this.marginModel = id;\n    },\n    // 提交保证金模式\n    submit() {\n      if (!this.isLogin) {\n        this.$router.push('/login');\n        return false;\n      }\n      if (this.userConfig) {\n        this.dialogConfirmLoading = true;\n        this.axios({\n          url: this.$store.state.url.futures.marginModelEdit,\n          hostType: 'co',\n          method: 'post',\n          params: {\n            marginModel: this.marginModel,\n            contractId: this.contractId,\n          },\n        }).then(({ code, msg }) => {\n          if (code.toString() === '0') {\n            this.$store.dispatch('getUserConfig');\n            this.close();\n            this.$bus.$emit('tip', { text: msg, type: 'success' });\n          } else {\n            this.$bus.$emit('tip', { text: msg, type: 'error' });\n          }\n          this.dialogConfirmLoading = false;\n        });\n      }\n      return false;\n    },\n  },\n};\n"]}]}