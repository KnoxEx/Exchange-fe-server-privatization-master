{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/assets/recharge/recharge.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/assets/recharge/recharge.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { fixD, getCoinShowName, colorMap, imgMap } from '@/utils';\nexport default {\n  name: 'page-recharge',\n  data: function data() {\n    return {\n      addressShow: true,\n      addressPageShow: true,\n      tabelLoading: true,\n      alertFlag: false,\n      imgMap: imgMap,\n      colorMap: colorMap,\n      detailsList: [{\n        key: 'sum',\n        value: '--'\n      }, {\n        key: 'normal',\n        value: '--'\n      }, {\n        key: 'lock',\n        value: '--'\n      }],\n      address: '',\n      // 地址\n      addressPage: '',\n      // 标签（xrp/eos）时\n      addressQRCode: '',\n      // 二维码地址\n      tabelList: [],\n      // 充值记录\n      symbol: '',\n      havePageArr: ['XRP', 'EOS'],\n      // 含有标签的币种\n      paginationObj: {\n        total: 0,\n        // 数据总条数\n        display: 10,\n        // 每页显示条数\n        currentPage: 1 // 当前页码\n\n      },\n      addressTime: null,\n      branchTip: ''\n    };\n  },\n  watch: {\n    exchangeData: function exchangeData(v) {\n      if (v) {\n        this.initDetails();\n      }\n    },\n    symbol: function symbol(v) {\n      if (v && this.market) {\n        this.branchInit(this.market);\n        this.initAddress();\n      }\n    },\n    market: {\n      immediate: true,\n      handler: function handler(v) {\n        if (v && this.symbol) {\n          this.branchInit(v);\n          this.initAddress();\n        }\n      }\n    },\n    paginationObjCurrentPage: function paginationObjCurrentPage() {\n      this.getTableList();\n    }\n  },\n  filters: {\n    fixDFn: function fixDFn(v, that) {\n      return fixD(v, that.showPrecision);\n    }\n  },\n  computed: {\n    isHavePage: function isHavePage() {\n      var flag = false; // 判断market是否请求下来\n\n      if (this.market && this.market.coinList) {\n        if (!this.haveBranch) {\n          // 判断market.coinList是否有当前币种\n          if (this.market.coinList[this.symbol]) {\n            var tagType = this.market.coinList[this.symbol].tagType;\n            flag = tagType;\n          }\n        } else if (this.market.followCoinList[this.symbol][this.activeBranch]) {\n          var _tagType = this.market.followCoinList[this.symbol][this.activeBranch].tagType;\n          flag = _tagType;\n        }\n      }\n\n      return flag;\n    },\n    showSymbol: function showSymbol() {\n      var str = this.symbol;\n\n      if (this.market && this.market.coinList && this.market.coinList[this.symbol]) {\n        str = getCoinShowName(this.symbol, this.market.coinList);\n      }\n\n      return str;\n    },\n    serverName: function serverName() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var code = '';\n\n      if (publicInfo && publicInfo.msg && publicInfo.msg.company_name) {\n        code = publicInfo.msg.company_name;\n      }\n\n      return code;\n    },\n    paginationObjCurrentPage: function paginationObjCurrentPage() {\n      return this.paginationObj.currentPage;\n    },\n    that: function that() {\n      return this;\n    },\n    // 当前币种精度\n    showPrecision: function showPrecision() {\n      var v = 0;\n      var market = this.$store.state.baseData.market;\n\n      if (market && market.coinList && market.coinList[this.symbol]) {\n        v = market.coinList[this.symbol].showPrecision;\n      }\n\n      return v;\n    },\n    // finance/account_balance 接口返回成功的数据\n    exchangeData: function exchangeData() {\n      return this.$store.state.assets.exchangeData;\n    },\n    // market 接口\n    market: function market() {\n      return this.$store.state.baseData.market;\n    },\n    // 表格title\n    columns: function columns() {\n      return [{\n        title: this.$t('assets.recharge.RechargeTime'),\n        width: '20%'\n      }, // 充值时间\n      {\n        title: this.$t('assets.recharge.RechargeCoin'),\n        width: '10%'\n      }, // 币种\n      {\n        title: this.$t('assets.recharge.RechargeVolume'),\n        width: '30%'\n      }, // 充值数量\n      {\n        title: this.$t('assets.recharge.RechargeNumber'),\n        width: '20%'\n      }, // 确认次数\n      {\n        title: this.$t('assets.recharge.RechargeStatus'),\n        width: '20%'\n      } // 状态\n      ];\n    }\n  },\n  methods: {\n    setActiveBranch: function setActiveBranch(v) {\n      this.activeBranch = v;\n      this.initAddress();\n    },\n    init: function init() {\n      // 如果不存在币种跳走\n      if (this.$route.query.symbol) {\n        this.symbol = this.$route.query.symbol.toUpperCase();\n      } else {\n        this.$router.push('/assets/exchangeAccount');\n      } // 如果没有 finance/account_balance 接口返回成功的数据\n\n\n      if (!this.exchangeData) {\n        this.$store.dispatch('assetsExchangeData');\n      } else {\n        this.initDetails();\n      } // 获取table表数据\n\n\n      this.getTableList();\n    },\n    handMouseenter: function handMouseenter(name) {\n      if (name === 'address') {\n        this.addressShow = false;\n      } else {\n        this.addressPageShow = false;\n      }\n    },\n    handMouseleave: function handMouseleave(name) {\n      if (name === 'address') {\n        this.addressShow = true;\n      } else {\n        this.addressPageShow = true;\n      }\n    },\n    alertClone: function alertClone() {\n      this.alertFlag = false;\n    },\n    initDetails: function initDetails() {\n      var obj = this.exchangeData.allCoinMap[this.symbol];\n      var normalBalance = Number(obj.normal_balance) || Number(obj.overcharge_balance);\n      this.detailsList = [{\n        key: 'sum',\n        value: obj.total_balance\n      }, {\n        key: 'normal',\n        value: normalBalance\n      }, {\n        key: 'lock',\n        value: obj.lock_balance\n      }];\n    },\n    getBranchAddress: function getBranchAddress() {\n      var _this = this;\n\n      this.axios({\n        url: 'cost/Getcost',\n        params: {\n          symbol: this.activeBranch\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          _this.branchTip = data.data.mainChainNameTip;\n        }\n      });\n    },\n    initAddress: function initAddress() {\n      var _this2 = this;\n\n      // const { tokenBase } = this.market.coinList[this.symbol];\n      var tagType = this.market.coinList[this.symbol].tagType;\n\n      if (tagType === 1 || tagType === 2) {\n        // this.isHavePage = tagType;\n        setTimeout(function () {\n          _this2.alertFlag = Boolean(tagType);\n        }, 100);\n      }\n\n      if (this.haveBranch) {\n        this.getBranchAddress();\n      } // 请求该数据详情\n\n\n      this.axios({\n        url: 'finance/get_charge_address',\n        params: {\n          symbol: !this.haveBranch ? this.symbol : this.activeBranch\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          // let { allCoinMap } = this.exchangeData\n          _this2.addressQRCode = data.data.addressQRCode;\n\n          if (_this2.isHavePage) {\n            var arr = data.data.addressStr.split('_');\n\n            var _arr = _slicedToArray(arr, 2),\n                address = _arr[0],\n                addressPage = _arr[1];\n\n            _this2.address = address;\n            _this2.addressPage = addressPage;\n          } else {\n            _this2.address = data.data.addressStr;\n          }\n        } else {\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    copy: function copy(item) {\n      if (item === 'address') {\n        this.copyAddress();\n      } else if (item === 'addressPage') {\n        this.copyAddressPage();\n      }\n    },\n    copyAddress: function copyAddress() {\n      var input = this.$refs.address;\n      input.select();\n      document.execCommand('copy'); // 地址复制成功\n\n      this.$bus.$emit('tip', {\n        text: this.$t('assets.recharge.copyAddress'),\n        type: 'success'\n      });\n    },\n    copyAddressPage: function copyAddressPage() {\n      var input = this.$refs.addressPage;\n      input.select();\n      input.setSelectionRange(0, input.value.length);\n      document.execCommand('copy'); // 地址标签成功\n\n      this.$bus.$emit('tip', {\n        text: this.$t('assets.recharge.copyLabel'),\n        type: 'success'\n      });\n    },\n    pagechange: function pagechange(v) {\n      this.paginationObj.currentPage = v;\n    },\n    getTableList: function getTableList() {\n      var _this3 = this;\n\n      this.axios({\n        url: 'record/deposit_list',\n        params: {\n          pageSize: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          coinSymbol: this.symbol\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          var list = [];\n          data.data.financeList.forEach(function (item, index) {\n            var coinList = _this3.market.coinList;\n            var coinName = getCoinShowName(item.symbol, coinList);\n            list.push({\n              id: index,\n              data: [item.createdAt, // 时间\n              coinName, // 币种\n              fixD(item.amount, _this3.showPrecision), // 充值数量\n              item.confirmDesc, // 确认次数\n              item.status_text // 状态\n              ]\n            });\n          });\n          _this3.tabelLoading = false;\n          _this3.tabelList = list;\n          _this3.paginationObj.total = data.data.count > 30 ? 30 : data.data.count;\n        }\n      });\n    }\n  }\n};",null]}