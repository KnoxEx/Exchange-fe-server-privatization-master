{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/order/coOrder/coOrder.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/order/coOrder/coOrder.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport { fixD, formatTime, imgMap, colorMap } from '@/utils';\nexport default {\n  name: 'page-otcOrder',\n  data: function data() {\n    return {\n      imgMap: imgMap,\n      colorMap: colorMap,\n      switchFlag: false,\n      tabelLoading: true,\n      tabelList: [],\n      startTime: '',\n      endTime: '',\n      nowType: 1,\n      // 1为当前委托 2\b计划委托 3\b历史委托 4\b历史成交\n      contractList: [],\n      // 合约\n      side: '',\n      // 当前方向\n      contractType: '',\n      // 合约类型\n      contract: '',\n      // 当前合约\n      orderType: '',\n      // 订单类型\n      paginationObj: {\n        total: 0,\n        // 数据总条数\n        display: 20,\n        // 每页显示条数\n        currentPage: 1 // 当前页码\n\n      },\n      revokeList: [] // 撤销队列\n\n    };\n  },\n  watch: {\n    sideList: function sideList(v) {\n      if (v && v.length) {\n        this.side = 1;\n      }\n    },\n    contractTypeList: function contractTypeList(v) {\n      if (v && v.length) {\n        this.contractType = 1;\n      }\n    },\n    orderTypeList: function orderTypeList(v) {\n      if (v && v.length) {\n        this.orderType = 'all';\n      }\n    },\n    contractListAll: function contractListAll(newVal) {\n      if (newVal && newVal.length) {\n        this.getContractList();\n      }\n    },\n    startTime: function startTime(newVal, oldVal) {\n      if (oldVal) {\n        this.getData();\n      }\n    },\n    endTime: function endTime(newVal, oldVal) {\n      if (oldVal) {\n        this.getData();\n      }\n    }\n  },\n  computed: {\n    startTimeNum: function startTimeNum() {\n      return (new Date(this.startTime.replace(/-/g, '/')).getTime() / 1000).toString();\n    },\n    endTimeNum: function endTimeNum() {\n      return (new Date(this.endTime.replace(/-/g, '/')).getTime() / 1000).toString();\n    },\n    // 合约列表\n    contractListAll: function contractListAll() {\n      if (this.$store.state.future) {\n        return this.$store.state.future.contractList;\n      }\n\n      return [];\n    },\n    // 合约列表 MAP\n    contractListMap: function contractListMap() {\n      if (this.$store.state.future) {\n        return this.$store.state.future.contractListMap;\n      }\n\n      return {};\n    },\n    coPublicInfo: function coPublicInfo() {\n      return this.$store.state.baseData.coPublicInfo;\n    },\n    navTab: function navTab() {\n      return [// 当前委托\n      {\n        name: this.$t('futures.order.title1'),\n        index: 1\n      }, // \b计划委托\n      {\n        name: this.$t('futures.order.title2'),\n        index: 2\n      }, // \b历史委托\n      {\n        name: this.$t('futures.order.title3'),\n        index: 3\n      }, // \b历史计划委托\n      {\n        name: this.$t('futures.order.title4'),\n        index: 4\n      }, // \b历史成交\n      {\n        name: this.$t('futures.order.title5'),\n        index: 5\n      }];\n    },\n    sideList: function sideList() {\n      return [// 交割类型列表\n      // 永续合约\n      {\n        code: 1,\n        value: this.$t('futures.order.typeList1')\n      }, // 模拟合约\n      {\n        code: 2,\n        value: this.$t('futures.order.typeList2')\n      }, // 混合合约\n      {\n        code: 3,\n        value: this.$t('futures.order.typeList3')\n      }];\n    },\n    // 合约类型\n    contractTypeList: function contractTypeList() {\n      return [// 合约类型列表\n      // USDT合约\n      {\n        code: 1,\n        value: this.$t('futures.order.sideType1')\n      }, // 币本位合约\n      {\n        code: 0,\n        value: this.$t('futures.order.sideType2')\n      } // // 混合合约\n      // { code: 2, value: '混合合约' },\n      ];\n    },\n    // 订单类型\n    orderTypeList: function orderTypeList() {\n      return [// 订单类型列表\n      // 全部\n      {\n        code: 'all',\n        value: this.$t('futures.order.all')\n      }, // 限价单\n      {\n        code: 1,\n        value: this.$t('futures.order.orderType1')\n      }, // 市价单\n      {\n        code: 2,\n        value: this.$t('futures.order.orderType2')\n      }, // PostOnly\n      {\n        code: 3,\n        value: this.$t('futures.order.orderType3')\n      }, // IOC\n      {\n        code: 4,\n        value: this.$t('futures.order.orderType4')\n      }, // FOK\n      {\n        code: 5,\n        value: this.$t('futures.order.orderType5')\n      }];\n    },\n    //\n    axiosType: function axiosType() {\n      if (this.orderType === 'all') {\n        return '';\n      }\n\n      return this.orderType;\n    },\n    // 表格title\n    columns: function columns() {\n      var list = [];\n\n      if (this.nowType === 1) {\n        list = [{\n          title: this.$t('futures.order.contract'),\n          width: '10%',\n          align: 'left'\n        }, // 合约\n        {\n          title: this.$t('futures.order.time'),\n          width: '10%'\n        }, // 时间\n        {\n          title: this.$t('futures.order.orderType'),\n          width: '10%'\n        }, // 订单类型\n        {\n          title: this.$t('futures.order.side'),\n          width: '10%'\n        }, // 方向\n        {\n          title: this.$t('futures.order.intrustPrice'),\n          width: '10%'\n        }, // 委托价格\n        {\n          title: this.$t('futures.order.intrustVolume'),\n          width: '10%'\n        }, // 委托数量\n        {\n          title: this.$t('futures.order.dealVolume'),\n          width: '10%'\n        }, // 成交数量\n        {\n          title: this.$t('futures.order.dealPrice'),\n          width: '10%'\n        }, // 成交均价\n        {\n          title: this.$t('futures.order.onlyCut'),\n          width: '10%'\n        }, // 只减仓\n        {\n          title: this.$t('futures.order.opera'),\n          width: '10%'\n        } // 操作\n        ];\n      }\n\n      if (this.nowType === 2) {\n        list = [{\n          title: this.$t('futures.order.contract'),\n          width: '10%',\n          align: 'left'\n        }, // 合约\n        {\n          title: this.$t('futures.order.time'),\n          width: '10%'\n        }, // 时间\n        {\n          title: this.$t('futures.order.orderType'),\n          width: '10%'\n        }, // 订单类型\n        {\n          title: this.$t('futures.order.side'),\n          width: '10%'\n        }, // 方向\n        {\n          title: this.$t('futures.order.triggerPrice'),\n          width: '10%'\n        }, // 触发价\n        {\n          title: this.$t('futures.order.intrustPrice'),\n          width: '10%'\n        }, // 委托价格\n        {\n          title: this.$t('futures.order.intrustVolumeOrNum'),\n          width: '10%'\n        }, // 委托数量/价值\n        // { title: '成交数量(张)', width: '10%' }, // 价值\n        // { title: '成交均价', width: '10%' }, // 成交均价\n        {\n          title: this.$t('futures.order.onlyCut'),\n          width: '10%'\n        }, // 只减仓\n        {\n          title: this.$t('futures.order.overTime'),\n          width: '10%'\n        }, // 只减仓\n        {\n          title: this.$t('futures.order.opera'),\n          width: '10%'\n        } // 操作\n        ];\n      }\n\n      if (this.nowType === 3) {\n        list = [{\n          title: this.$t('futures.order.contract'),\n          width: '8%',\n          align: 'left'\n        }, // 合约\n        {\n          title: this.$t('futures.order.time'),\n          width: '10%'\n        }, // 时间\n        {\n          title: this.$t('futures.order.orderType'),\n          width: '10%'\n        }, // 订单类型(张)\n        {\n          title: this.$t('futures.order.side'),\n          width: '10%'\n        }, // 方向\n        {\n          title: this.$t('futures.order.intrustPrice'),\n          width: '10%'\n        }, // 委托价格\n        {\n          title: this.$t('futures.order.intrustVolumeOrNum'),\n          width: '10%'\n        }, // 委托数量/价值\n        {\n          title: this.$t('futures.order.dealVolume'),\n          width: '10%'\n        }, // 成交数量\n        {\n          title: this.$t('futures.order.dealPrice'),\n          width: '8%'\n        }, // 成交均价\n        {\n          title: this.$t('futures.order.fee'),\n          width: '8%'\n        }, // 手续费\n        {\n          title: this.$t('futures.order.onlyCut'),\n          width: '8%'\n        }, // 只减仓\n        {\n          title: this.$t('futures.order.status'),\n          width: '8%'\n        } // 状态\n        ];\n      }\n\n      if (this.nowType === 4) {\n        list = [{\n          title: this.$t('futures.order.contract'),\n          width: '10%',\n          align: 'left'\n        }, // 合约\n        {\n          title: this.$t('futures.order.side'),\n          width: '10%'\n        }, // 方向\n        {\n          title: this.$t('futures.order.triggerPrice'),\n          width: '15%'\n        }, // 触发价格\n        {\n          title: this.$t('futures.order.intrustPrice'),\n          width: '15%'\n        }, // 委托价格\n        {\n          title: this.$t('futures.order.intrustVolumeOrNum'),\n          width: '10%'\n        }, // 委托数量/价值\n        {\n          title: this.$t('futures.order.onlyCut'),\n          width: '10%'\n        }, // 只减仓\n        {\n          title: this.$t('futures.order.status'),\n          width: '10%'\n        }, // 状态\n        {\n          title: this.$t('futures.order.submitTime'),\n          width: '10%'\n        }, // 提交委托时间\n        {\n          title: this.$t('futures.order.triggerTime'),\n          width: '10%'\n        } // 触发时间\n        ];\n      }\n\n      if (this.nowType === 5) {\n        list = [{\n          title: this.$t('futures.order.contract'),\n          width: '10%',\n          align: 'left'\n        }, // 合约\n        {\n          title: this.$t('futures.order.time'),\n          width: '15%'\n        }, // 时间\n        {\n          title: this.$t('futures.order.side'),\n          width: '15%'\n        }, // 方向\n        {\n          title: this.$t('futures.order.roles'),\n          width: '15%'\n        }, // 角色\n        {\n          title: this.$t('futures.order.dealVolume'),\n          width: '15%'\n        }, // 成交数量\n        {\n          title: this.$t('futures.order.priceDeal'),\n          width: '15%'\n        }, // 成交价格\n        {\n          title: this.$t('futures.order.fee'),\n          width: '15%'\n        } // 手续费\n        ];\n      }\n\n      return list;\n    },\n    // 历史委托\n    historyMemoText: function historyMemoText() {\n      return [this.$t('futures.orderList.memoText1'), this.$t('futures.orderList.memoText2'), this.$t('futures.orderList.memoText3'), this.$t('futures.orderList.memoText4'), this.$t('futures.orderList.memoText5'), this.$t('futures.orderList.memoText6'), this.$t('futures.orderList.memoText7'), this.$t('futures.orderList.memoText8')]; // return [\n      //   '用户撤销',\n      //   '订单异常，被系统撤销',\n      //   '仓位发生强平，未成交委托被系统撤销',\n      //   '对手盘不足，委托被系统取消',\n      //   'FOK订单，无法全部成交时被系统撤销',\n      //   'IOC订单，无法立即成交时部分委托被系统撤销',\n      //   '被动委托, 被动委托，撮合时为taker部分被系统撤销',\n      // ];\n    }\n  },\n  methods: {\n    init: function init() {\n      if (this.sideList[0].value) {\n        this.side = 1;\n      }\n\n      if (this.contractTypeList[0].value) {\n        this.contractType = 1;\n      }\n\n      if (this.orderTypeList[0].value) {\n        this.orderType = 'all';\n      }\n\n      if (this.contractListAll) {\n        this.getContractList();\n      }\n\n      this.resetTime();\n    },\n    // 重置时间\n    resetTime: function resetTime() {\n      var timestamp = new Date().getTime();\n      var t = 60 * 60 * 24 * 1000 * 2;\n      this.startTime = this.getNowTime(timestamp - t);\n      this.endTime = this.getNowTime(timestamp);\n      this.start = \"\".concat(this.startTime, \" 00:00:00\");\n      this.end = \"\".concat(this.endTime, \" 23:59:59\");\n    },\n    getNowTime: function getNowTime() {\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var date = new Date(time);\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      var day = date.getDate();\n      return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n    },\n    getContractList: function getContractList() {\n      var side = '';\n\n      if (this.side) {\n        if (this.side === 1) {\n          side = 'E';\n        } else if (this.side === 2) {\n          side = 'S';\n        } else {\n          side = 'H';\n        }\n      } else {\n        side = 'E';\n      }\n\n      var contractType = '';\n\n      if (this.contractType !== '') {\n        contractType = this.contractType;\n      } else {\n        contractType = 1;\n      }\n\n      var list = [];\n      this.contract = null;\n      this.contractListAll.forEach(function (item) {\n        if (item.coType === side && item.contractSide === contractType) {\n          list.push({\n            code: item.id,\n            value: item.symbol.replace('-', '')\n          });\n        }\n      });\n      this.contractList = list;\n\n      if (list.length) {\n        this.contract = list[0].code;\n        this.tabelLoading = true;\n        this.getData();\n      } else {\n        this.paginationObj.currentPage = 1; // 页码\n\n        this.paginationObj.total = 0; // 总条数\n\n        this.tabelList = [];\n        this.tabelLoading = false;\n      }\n    },\n    // initContractList() {\n    //   const { market } = this.coPublicInfo;\n    //   const list = [];\n    //   Object.keys(market).forEach((vitem) => {\n    //     market[vitem].forEach((item) => {\n    //       const {\n    //         baseSymbol, quoteSymbol, contractType, settleTime, maxLeverageLevel,\n    //       } = item;\n    //       let time = '';\n    //       if (contractType) {\n    //         const t = settleTime.split(' ')[0].split('-');\n    //         time = t[1] + t[2];\n    //       }\n    //       const msg = `${this.getContractType(contractType)} · ${time} (${maxLeverageLevel}X)`;\n    //       const str = `${baseSymbol}${quoteSymbol} - ${msg}`;\n    //       list.push(\n    //         {\n    //           code: item.id,\n    //           value: str,\n    //         },\n    //       );\n    //     });\n    //   });\n    //   this.contractList = list;\n    //   if (list.length) {\n    //     this.contract = list[0].code;\n    //     this.getData();\n    //   }\n    // },\n    // switchChange() {\n    //   this.switchFlag = !this.switchFlag;\n    //   this.getData();\n    // },\n    getData: function getData() {\n      if (this.nowType === 1) {\n        this.getNowData();\n      } else if (this.nowType === 2) {\n        this.getPlanData();\n      } else if (this.nowType === 3) {\n        this.getHisData();\n      } else if (this.nowType === 4) {\n        this.getHisPlanData();\n      } else if (this.nowType === 5) {\n        this.getHisDealData();\n      }\n    },\n    typeStatus: function typeStatus(status) {\n      var str = '';\n\n      switch (status) {\n        case 1:\n          str = this.$t('futures.order.orderType1'); // '限价单';\n\n          break;\n\n        case 2:\n          str = this.$t('futures.order.orderType2'); // '市价单';\n\n          break;\n\n        case 3:\n          str = this.$t('futures.order.orderType4'); // 'IOC';\n\n          break;\n\n        case 4:\n          str = this.$t('futures.order.orderType5'); // 'FOK';\n\n          break;\n\n        case 5:\n          str = this.$t('futures.order.orderType3'); // 'POST_ONLY';\n\n          break;\n\n        case 6:\n          str = this.$t('futures.order.orderType6'); // '强制减仓';\n\n          break;\n\n        case 7:\n          str = this.$t('futures.order.orderType7'); // '仓位合并';\n\n          break;\n\n        default:\n          str = '';\n      }\n\n      return str;\n    },\n    getStatus: function getStatus(status) {\n      var str = '';\n\n      switch (status) {\n        case 0:\n          str = this.$t('futures.order.status1'); // '新订单';\n\n          break;\n\n        case 1:\n          str = this.$t('futures.order.status1'); // '新订单';\n\n          break;\n\n        case 2:\n          str = this.$t('futures.order.status2'); // '完全成交';\n\n          break;\n\n        case 3:\n          str = this.$t('futures.order.status3'); // '部分成交';\n\n          break;\n\n        case 4:\n          str = this.$t('futures.order.status4'); // '已取消';\n\n          break;\n\n        case 5:\n          str = this.$t('futures.order.status5'); // '待撤销';\n\n          break;\n\n        case 6:\n          str = this.$t('futures.order.status6'); // '异常订单';\n\n          break;\n\n        case 7:\n          str = this.$t('futures.order.status7'); // '部分成交已撤销';\n\n          break;\n\n        default:\n          str = '';\n      }\n\n      return str;\n    },\n    getContractType: function getContractType(contractType) {\n      var type = '';\n\n      switch (contractType) {\n        case 0:\n          type = this.$t('futures.order.contractType1'); // '永续';\n\n          break;\n\n        case 1:\n          type = this.$t('futures.order.contractType2'); // '当周';\n\n          break;\n\n        case 2:\n          type = this.$t('futures.order.contractType3'); // '次周';\n\n          break;\n\n        case 3:\n          type = this.$t('futures.order.contractType4'); // '月度';\n\n          break;\n\n        case 4:\n          type = this.$t('futures.order.contractType5'); // '季度';\n\n          break;\n\n        default:\n          type = '';\n      }\n\n      return type;\n    },\n    statusText: function statusText(status) {\n      var str = '';\n\n      switch (status) {\n        case 0:\n          str = this.$t('futures.order.statusText1'); // '有效';\n\n          break;\n\n        case 1:\n          str = this.$t('futures.order.statusText2'); // '已过期';\n\n          break;\n\n        case 2:\n          str = this.$t('futures.order.statusText3'); // '已完成';\n\n          break;\n\n        case 3:\n          str = this.$t('futures.order.statusText4'); // '触发失败';\n\n          break;\n\n        case 4:\n          str = this.$t('futures.order.status4'); // '已取消';\n\n          break;\n\n        default:\n          str = '';\n      }\n\n      return str;\n    },\n    // 获取当前委托\n    getNowData: function getNowData() {\n      var _this = this;\n\n      this.axios({\n        url: 'order/current_order_list',\n        hostType: 'co',\n        method: 'post',\n        params: {\n          type: this.axiosType,\n          // side: this.side,\n          limit: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          contractId: this.contract\n        }\n      }).then(function (data) {\n        if (_this.nowType !== 1) return;\n        _this.tabelLoading = false;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var _data$data = data.data,\n              orderList = _data$data.orderList,\n              count = _data$data.count;\n\n          if (orderList && orderList.length) {\n            orderList.forEach(function (item) {\n              var open = item.open === 'OPEN' ? _this.$t('futures.order.open') : _this.$t('futures.order.close');\n\n              var side = _this.$t('futures.order.sell');\n\n              if (item.open === 'OPEN' && item.side === 'BUY' || item.open === 'CLOSE' && item.side === 'SELL') {\n                side = _this.$t('futures.order.buy');\n              }\n\n              var price = null;\n\n              if (item.type === 2 && Number(item.price) === 0) {\n                price = _this.$t('futures.order.currentPrice');\n              } else {\n                price = fixD(item.price, item.pricePrecision);\n              }\n\n              list.push({\n                id: JSON.stringify(item),\n                data: [item.symbol, // 合约\n                formatTime(item.ctime), // 时间\n                _this.typeStatus(item.type), open + side, price, // 委托价格\n                item.volume, // 委托数量\n                item.dealVolume, // 成交数量\n                item.avgPrice ? fixD(item.avgPrice, item.pricePrecision) : '--', // 成交均价\n                item.open === 'CLOSE' ? _this.$t('futures.order.yes') : _this.$t('futures.order.no'), // 只减仓\n                [{\n                  type: 'button',\n                  text: _this.$t('futures.order.cancel'),\n                  // 撤单\n                  eventType: 'cancelOrder'\n                }]]\n              });\n            });\n          }\n\n          _this.tabelList = list;\n          _this.paginationObj.total = count;\n        }\n      });\n    },\n    // 获取计划委托\n    getPlanData: function getPlanData() {\n      var _this2 = this;\n\n      this.axios({\n        url: 'order/trigger_order_list',\n        hostType: 'co',\n        method: 'post',\n        params: {\n          type: this.axiosType,\n          // side: this.side,\n          limit: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          contractId: this.contract\n        }\n      }).then(function (data) {\n        if (_this2.nowType !== 2) return;\n        _this2.tabelLoading = false;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var _data$data2 = data.data,\n              trigOrderList = _data$data2.trigOrderList,\n              count = _data$data2.count;\n\n          if (trigOrderList && trigOrderList.length) {\n            trigOrderList.forEach(function (item) {\n              var open = item.open === 'OPEN' ? _this2.$t('futures.order.open') : _this2.$t('futures.order.close');\n\n              var side = _this2.$t('futures.order.sell');\n\n              if (item.open === 'OPEN' && item.side === 'BUY' || item.open === 'CLOSE' && item.side === 'SELL') {\n                side = _this2.$t('futures.order.buy');\n              }\n\n              var price = null;\n              var unit = null;\n              var volume = null;\n\n              if (item.type === 2 && Number(item.price) === 0) {\n                price = _this2.$t('futures.order.currentPrice');\n\n                if (item.open === 'OPEN') {\n                  if (_this2.contractListMap) {\n                    unit = _this2.contractListMap[item.contractName].marginCoin;\n                    volume = fixD(item.volume, _this2.contractListMap[item.contractName].mCionFix);\n                  }\n                } else {\n                  volume = item.volume;\n                  unit = _this2.$t('futures.order.per');\n                }\n              } else {\n                volume = item.volume;\n                price = fixD(item.price, item.pricePrecision);\n                unit = _this2.$t('futures.order.per');\n              }\n\n              list.push({\n                id: JSON.stringify(item),\n                data: [item.symbol, // 合约\n                formatTime(item.ctime), // 时间\n                _this2.typeStatus(item.type), open + side, fixD(item.triggerPrice, item.pricePrecision), // 触发价\n                price, // 委托价格\n                \"\".concat(volume, \" \").concat(unit), // 委托数量\n                // item.dealVolume, // 成交数量\n                // fixD(item.avgPrice, item.pricePrecision), // 成交均价\n                item.open === 'CLOSE' ? _this2.$t('futures.order.yes') : _this2.$t('futures.order.no'), // 只减仓\n                formatTime(item.expireTime), // 过期时间\n                [{\n                  type: 'button',\n                  text: _this2.$t('futures.order.cancel'),\n                  // 撤单\n                  eventType: 'cancelOrder'\n                }]]\n              });\n            });\n          }\n\n          _this2.tabelList = list;\n          _this2.paginationObj.total = count;\n        }\n      });\n    },\n    // 获取历史委托\n    getHisData: function getHisData() {\n      var _this3 = this;\n\n      this.axios({\n        url: 'order/history_order_list',\n        hostType: 'co',\n        method: 'post',\n        params: {\n          type: this.axiosType,\n          limit: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          contractId: this.contract,\n          beginTime: new Date(this.start).getTime(),\n          endTime: new Date(this.end).getTime()\n        }\n      }).then(function (data) {\n        if (_this3.nowType !== 3) return;\n        _this3.tabelLoading = false;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var _data$data3 = data.data,\n              orderList = _data$data3.orderList,\n              count = _data$data3.count;\n\n          if (orderList && orderList.length) {\n            orderList.forEach(function (item, index) {\n              var open = item.open === 'OPEN' ? _this3.$t('futures.order.open') : _this3.$t('futures.order.close');\n\n              var side = _this3.$t('futures.order.sell');\n\n              if (item.open === 'OPEN' && item.side === 'BUY' || item.open === 'CLOSE' && item.side === 'SELL') {\n                side = _this3.$t('futures.order.buy');\n              }\n\n              var price = null;\n              var unit = null;\n              var volume = null;\n\n              if (item.type === 2 && Number(item.price) === 0) {\n                price = _this3.$t('futures.order.currentPrice');\n\n                if (item.open === 'OPEN') {\n                  if (_this3.contractListMap) {\n                    unit = _this3.contractListMap[item.contractName].marginCoin;\n                    volume = fixD(item.volume, _this3.contractListMap[item.contractName].mCionFix);\n                  }\n                } else {\n                  volume = item.volume;\n                  unit = _this3.$t('futures.order.per');\n                }\n              } else {\n                volume = item.volume;\n                price = fixD(item.price, item.pricePrecision);\n                unit = _this3.$t('futures.order.per');\n              }\n\n              var lastClass = null;\n\n              if (index > 3) {\n                lastClass = 'position-bottom';\n              }\n\n              list.push({\n                id: JSON.stringify(item),\n                data: [item.symbol, // 合约\n                formatTime(item.ctime), // 时间\n                // this.typeStatus(item.type),\n                item.liqPositionMsg ? [{\n                  text: \"<div class=\\\"cancel_cause cancel_cause_right\\\">\\n                      \".concat(_this3.typeStatus(item.type), \"\\n                      <span class=\\\"cancel_cause-btn\\\">\\n                        <svg aria-hidden=\\\"true\\\" class=\\\"icon icon-16\\\">\\n                          <use xlink:href=\\\"#icon-a_15\\\"></use>\\n                        </svg>\\n                        <div class=\\\"cancel_cause_text a-5-bg b-1-cl a-3-bd \").concat(lastClass, \"\\\">\\n                        \").concat(_this3.replaceAll(item.liqPositionMsg), \"\\n                        </div>\\n                      </span>\\n                    </div>\"),\n                  type: 'html'\n                }] : _this3.typeStatus(item.type), open + side, item.type === 6 ? '--' : price, // 委托价格\n                \"\".concat(volume, \" \").concat(unit), // 委托数量\n                item.dealVolume, // 成交数量\n                !item.avgPrice || item.type === 6 ? '--' : fixD(item.avgPrice, item.pricePrecision), // 成交均价\n                \"\".concat(fixD(item.tradeFee, item.pricePrecision), \" \").concat(_this3.contractListMap[item.contractName].marginCoin), /// 手续费\n                item.open === 'CLOSE' ? _this3.$t('futures.order.yes') : _this3.$t('futures.order.no'), // 只减仓\n                // this.getStatus(item.status), // 状态\n                // 状态\n                item.status === 4 && item.memo ? [{\n                  text: \"<div class=\\\"cancel_cause\\\">\\n                      \".concat(_this3.getStatus(item.status), \"\\n                      <span class=\\\"cancel_cause-btn\\\">\\n                        <svg aria-hidden=\\\"true\\\" class=\\\"icon icon-16\\\">\\n                          <use xlink:href=\\\"#icon-a_15\\\"></use>\\n                        </svg>\\n\\n                        <div class=\\\"cancel_cause_text a-7-bg b-1-cl a-3-bd \").concat(lastClass, \"\\\">\\n                          \").concat(_this3.historyMemoText[item.memo - 1], \"\\n                        </div>\\n                      </span>\\n                    </div>\"),\n                  type: 'html'\n                }] : _this3.getStatus(item.status)]\n              });\n            });\n          }\n\n          _this3.tabelList = list;\n          _this3.paginationObj.total = count;\n        }\n      });\n    },\n    // 获取历史计划委托\n    getHisPlanData: function getHisPlanData() {\n      var _this4 = this;\n\n      this.axios({\n        url: 'order/history_trigger_order_list',\n        hostType: 'co',\n        method: 'post',\n        params: {\n          type: this.axiosType,\n          limit: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          contractId: this.contract,\n          beginTime: new Date(this.start).getTime(),\n          endTime: new Date(this.end).getTime()\n        }\n      }).then(function (data) {\n        if (_this4.nowType !== 4) return;\n        _this4.tabelLoading = false;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var _data$data4 = data.data,\n              trigOrderList = _data$data4.trigOrderList,\n              count = _data$data4.count;\n\n          if (trigOrderList && trigOrderList.length) {\n            trigOrderList.forEach(function (item, index) {\n              var open = item.open === 'OPEN' ? _this4.$t('futures.order.open') : _this4.$t('futures.order.close');\n\n              var side = _this4.$t('futures.order.sell');\n\n              if (item.open === 'OPEN' && item.side === 'BUY' || item.open === 'CLOSE' && item.side === 'SELL') {\n                side = _this4.$t('futures.order.buy');\n              }\n\n              var price = null;\n              var unit = null;\n              var volume = null;\n\n              if (item.type === 2 && Number(item.price) === 0) {\n                price = _this4.$t('futures.order.currentPrice');\n\n                if (item.open === 'OPEN') {\n                  if (_this4.contractListMap) {\n                    unit = _this4.contractListMap[item.contractName].marginCoin;\n                    volume = fixD(item.volume, _this4.contractListMap[item.contractName].mCionFix);\n                  }\n                } else {\n                  volume = item.volume;\n                  unit = _this4.$t('futures.order.per');\n                }\n              } else {\n                volume = item.volume;\n                price = fixD(item.price, item.pricePrecision);\n                unit = _this4.$t('futures.order.per');\n              }\n\n              var lastClass = null;\n\n              if (index > 3) {\n                lastClass = 'position-bottom';\n              }\n\n              list.push({\n                id: JSON.stringify(item),\n                data: [item.symbol, // 合约\n                open + side, // 方向\n                fixD(item.triggerPrice, item.pricePrecision), // 触发价格\n                price, // 委托价格\n                \"\".concat(volume, \" \").concat(unit), // 委托数量\n                item.open === 'CLOSE' ? _this4.$t('futures.order.yes') : _this4.$t('futures.order.no'), // 只减仓\n                // this.statusText(item.status), // 状态\n                item.status === 4 && item.memo ? [{\n                  text: \"<div class=\\\"cancel_cause\\\">\\n                      \".concat(_this4.statusText(item.status), \"\\n                      <span class=\\\"cancel_cause-btn\\\">\\n                        <svg aria-hidden=\\\"true\\\" class=\\\"icon icon-16\\\">\\n                          <use xlink:href=\\\"#icon-a_15\\\"></use>\\n                        </svg>\\n                        <div class=\\\"cancel_cause_text a-7-bg b-1-cl a-3-bd \").concat(lastClass, \"\\\">\\n                          \").concat(_this4.memoText(item), \"\\n                        </div>\\n                      </span>\\n                    </div>\"),\n                  type: 'html'\n                }] : _this4.statusText(item.status), formatTime(item.ctime), // 提交委托时间\n                formatTime(item.mtime) // 触发时间\n                ]\n              });\n            });\n          }\n\n          _this4.tabelList = list;\n          _this4.paginationObj.total = count;\n        }\n      });\n    },\n    replaceAll: function replaceAll(str) {\n      return str.replace(/\\\\n/g, '<br/>');\n    },\n    // 取消原因\n    memoText: function memoText(data) {\n      var _this5 = this;\n\n      var type = '';\n      this.sideList.forEach(function (item) {\n        if (_this5.side === item.code) {\n          type = item.value;\n        }\n      });\n\n      if (data.memo === 1) {\n        return this.$t('futures.order.memoText1'); // '用户取消';\n      }\n\n      if (data.memo === 2) {\n        return this.$t('futures.order.memoText2'); // '超过有效期';\n      }\n\n      if (data.memo === 3) {\n        // 最新价格达到\n        return \"\".concat(formatTime(data.mtime)).concat(data.symbol).concat(type, \" \").concat(this.$t('futures.order.memoText3'), \"\\n        \").concat(fixD(data.triggerPrice, data.pricePrecision), \"\\n        \").concat(this.$t('futures.order.memoText4')); // 触发计划委托，因账户保证金余额不足，委托无法提交，执行失败\n      }\n\n      if (data.memo === 4) {\n        return \"\".concat(formatTime(data.mtime)).concat(data.symbol).concat(type, \" \").concat(this.$t('futures.order.memoText3'), \"\\n        \").concat(fixD(data.triggerPrice, data.pricePrecision), \"\\n        \").concat(this.$t('futures.order.memoText5')); // 触发计划委托，因仓位可平数量不足，无法提交委托，执行失败`;\n      }\n\n      if (data.memo === 5) {\n        return \"\".concat(formatTime(data.mtime)).concat(data.symbol).concat(type, \" \").concat(this.$t('futures.order.memoText3'), \"\\n        \").concat(fixD(data.triggerPrice, data.pricePrecision), \"\\n        \").concat(this.$t('futures.order.memoText6')); // 触发计划委托，因仓位发生强平，无法提交委托，执行失败`;\n      }\n\n      if (data.memo === 6) {\n        return \"\".concat(formatTime(data.mtime)).concat(data.symbol).concat(type, \" \").concat(this.$t('futures.order.memoText3'), \"\\n        \").concat(fixD(data.triggerPrice, data.pricePrecision), \"\\n        \").concat(this.$t('futures.order.memoText7')); // 触发计划委托，因该合约已被暂停交易，无法提交委托，执行失败`;\n      }\n\n      return null;\n    },\n    // 获取历史成交\n    getHisDealData: function getHisDealData() {\n      var _this6 = this;\n\n      this.axios({\n        url: 'order/his_trade_list',\n        hostType: 'co',\n        method: 'post',\n        params: {\n          type: this.axiosType,\n          limit: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          contractId: this.contract,\n          beginTime: new Date(this.start).getTime(),\n          endTime: new Date(this.end).getTime()\n        }\n      }).then(function (data) {\n        if (_this6.nowType !== 5) return;\n        _this6.tabelLoading = false;\n\n        if (data.code.toString() === '0') {\n          var list = [];\n          var _data$data5 = data.data,\n              tradeHisList = _data$data5.tradeHisList,\n              count = _data$data5.count;\n\n          if (tradeHisList && tradeHisList.length) {\n            tradeHisList.forEach(function (item) {\n              var open = item.open === 'OPEN' ? _this6.$t('futures.order.open') : _this6.$t('futures.order.close');\n\n              var side = _this6.$t('futures.order.sell');\n\n              if (item.open === 'OPEN' && item.side === 'BUY' || item.open === 'CLOSE' && item.side === 'SELL') {\n                side = _this6.$t('futures.order.buy');\n              }\n\n              list.push({\n                id: JSON.stringify(item),\n                data: [item.symbol, // 合约\n                formatTime(item.ctime), // 时间\n                open + side, item.role, item.volume, // 成交数量\n                fixD(item.price, item.pricePrecision), // 成交价格\n                \"\".concat(fixD(item.fee, item.feeCoinPrecision), \" \").concat(item.feeCoin) // 手续费\n                ]\n              });\n            });\n          }\n\n          _this6.tabelList = list;\n          _this6.paginationObj.total = count;\n        }\n      });\n    },\n    outExcela: function outExcela() {// outExcela(url, params, type) {\n      // return new Promise((resolve) => {\n      //   this.axios({\n      //     url,\n      //     params,\n      //     hostType: type,\n      //     responseType: 'arraybuffer',\n      //     mustAll: true,\n      //   }).then(({ data, headers }) => {\n      //     console.log(data, headers);\n      //     const content = data;\n      //     const blob = new Blob([content]);\n      //     if (decodeURI(headers['content-disposition']) !== 'undefined') {\n      //       const fileName = decodeURI(headers['content-disposition'].split('\"')[1]);\n      //       // const fileName = 'as.xlsx';\n      //       // 非IE下载\n      //       if ('download' in document.createElement('a')) {\n      //         const elink = document.createElement('a');\n      //         elink.download = fileName;\n      //         elink.style.display = 'none';\n      //         elink.href = URL.createObjectURL(blob);\n      //         document.body.appendChild(elink);\n      //         elink.click();\n      //         URL.revokeObjectURL(elink.href); // 释放URL 对象\n      //         document.body.removeChild(elink);\n      //       } else { // IE10+下载\n      //         navigator.msSaveBlob(blob, fileName);\n      //       }\n      //     }\n      //     const enc = new TextDecoder('utf-8');\n      //     const res = null;\n      //     if (decodeURI(headers['content-disposition']) !== 'undefined') {\n      //       res = { code: '0' }; // 转化成json对象\n      //     } else {\n      //       res = JSON.parse(enc.decode(new Uint8Array(data))); // 转化成json对象\n      //     }\n      //     resolve(res);\n      //   });\n      // });\n    },\n    // 导出CSV\n    exportCSV: function exportCSV() {// let exporturl = '';\n      // if (this.nowType === 3) {\n      //   exporturl = 'order/export/his_order_list_saas';\n      // } else if (this.nowType === 4) {\n      //   exporturl = 'order/export/trigger_order_list';\n      //   this.axiosType = '';\n      // }\n      // const data = {\n      //   type: this.axiosType,\n      //   limit: this.paginationObj.display, // 每页条数\n      //   page: this.paginationObj.currentPage, // 页码\n      //   contractId: this.contract,\n      //   beginTime: new Date(this.start).getTime(),\n      //   endTime: new Date(this.end).getTime(),\n      // };\n      // this.outExcela('order/export/his_order_list_saas', data, 'co').then((datas) => {\n      //   // this.outFlagImport = true;\n      //   if (datas.code === '0') {\n      //     this.$bus.$emit('alert', { type: 'success', message: '导出成功' }); // 导出成功\n      //   } else {\n      //     this.$bus.$emit('alert', { type: 'error', message: datas.msg }); // 导出失败\n      //   }\n      // });\n    },\n    // 切换tab\n    currentType: function currentType(item) {\n      if (this.nowType === item.index) {\n        return;\n      }\n\n      this.resetTime();\n      this.nowType = item.index;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.getData();\n    },\n    // 切换交割类型\n    sideChange: function sideChange(item) {\n      if (this.side === item.code) {\n        return;\n      }\n\n      this.side = item.code;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.getContractList();\n    },\n    // 切换合约类型\n    contractTypeChange: function contractTypeChange(item) {\n      if (this.contractType === item.code) {\n        return;\n      }\n\n      this.contractType = item.code;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.getContractList();\n    },\n    // 切换合约\n    contractChange: function contractChange(item) {\n      if (this.contract === item.code) {\n        return;\n      }\n\n      this.contract = item.code;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.getData();\n    },\n    // 切换订单类型\n    orderTypeChange: function orderTypeChange(item) {\n      if (this.orderType === item.code) {\n        return;\n      }\n\n      this.orderType = item.code;\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.getData();\n    },\n    // 撤销订单\n    tableClick: function tableClick(type, v) {\n      var _this7 = this;\n\n      if (type === 'cancelOrder') {\n        var obj = JSON.parse(v);\n        this.revokeList.push(obj.id);\n        var isConditionOrder = this.nowType === 2;\n        this.axios({\n          url: 'order/order_cancel',\n          hostType: 'co',\n          method: 'post',\n          params: {\n            orderId: obj.id,\n            contractId: this.contract,\n            isConditionOrder: isConditionOrder\n          }\n        }).then(function (data) {\n          var ind = _this7.revokeList.indexOf(obj.id);\n\n          _this7.revokeList.splice(ind, 1);\n\n          if (data.code.toString() === '0') {\n            _this7.$bus.$emit('tip', {\n              text: _this7.$t('contract.cancel_success'),\n              type: 'success'\n            }); // let sId = 0;\n            // this.tabelList.forEach((item, i) => {\n            //   if (item.id === id) {\n            //     sId = i;\n            //   }\n            // });\n            // this.tabelList.splice(sId, 1);\n\n\n            _this7.getData();\n          } else {\n            _this7.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    },\n    // 撤销全部订单\n    cancelAll: function cancelAll() {\n      var _this8 = this;\n\n      if (this.tabelList.length) {\n        var isConditionOrder = this.nowType === 2;\n        this.axios({\n          url: 'order/order_cancel',\n          hostType: 'co',\n          method: 'post',\n          params: {\n            contractId: this.contract,\n            isConditionOrder: isConditionOrder\n          }\n        }).then(function (data) {\n          if (data.code.toString() === '0') {\n            _this8.$bus.$emit('tip', {\n              text: _this8.$t('contract.cancel_success'),\n              type: 'success'\n            });\n\n            _this8.getData();\n          } else {\n            _this8.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    },\n    search: function search() {\n      this.paginationObj.currentPage = 1; // 页码\n\n      this.paginationObj.total = 0; // 总条数\n\n      this.tabelList = [];\n      this.tabelLoading = true;\n      this.getData();\n    },\n    // 选择时间\n    startTimeSelect: function startTimeSelect(v) {\n      this.startTime = v;\n      this.start = \"\".concat(this.startTime, \" 00:00:00\");\n      this.end = \"\".concat(this.endTime, \" 23:59:59\"); // this.loading = true;\n      // this.listPage.page = 1;\n      // this.getData();\n    },\n    endTimeSelect: function endTimeSelect(v) {\n      this.endTime = v;\n      this.start = \"\".concat(this.startTime, \" 00:00:00\");\n      this.end = \"\".concat(this.endTime, \" 23:59:59\"); // this.loading = true;\n      // this.listPage.page = 1;\n      // this.getData();\n    },\n    pagechange: function pagechange(v) {\n      this.paginationObj.currentPage = v;\n      this.getData();\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/order/coOrder/coOrder.js"],"names":["fixD","formatTime","imgMap","colorMap","name","data","switchFlag","tabelLoading","tabelList","startTime","endTime","nowType","contractList","side","contractType","contract","orderType","paginationObj","total","display","currentPage","revokeList","watch","sideList","v","length","contractTypeList","orderTypeList","contractListAll","newVal","getContractList","oldVal","getData","computed","startTimeNum","Date","replace","getTime","toString","endTimeNum","$store","state","future","contractListMap","coPublicInfo","baseData","navTab","$t","index","code","value","axiosType","columns","list","title","width","align","historyMemoText","methods","init","resetTime","timestamp","t","getNowTime","start","end","time","date","year","getFullYear","month","getMonth","day","getDate","forEach","item","coType","contractSide","push","id","symbol","getNowData","getPlanData","getHisData","getHisPlanData","getHisDealData","typeStatus","status","str","getStatus","getContractType","type","statusText","axios","url","hostType","method","params","limit","page","contractId","then","orderList","count","open","price","Number","pricePrecision","JSON","stringify","ctime","volume","dealVolume","avgPrice","text","eventType","trigOrderList","unit","contractName","marginCoin","mCionFix","triggerPrice","expireTime","beginTime","lastClass","liqPositionMsg","replaceAll","tradeFee","memo","memoText","mtime","tradeHisList","role","fee","feeCoinPrecision","feeCoin","outExcela","exportCSV","currentType","sideChange","contractTypeChange","contractChange","orderTypeChange","tableClick","obj","parse","isConditionOrder","orderId","ind","indexOf","splice","$bus","$emit","msg","cancelAll","search","startTimeSelect","endTimeSelect","pagechange"],"mappings":"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","sourcesContent":["import {\r\n  fixD,\r\n  formatTime,\r\n  imgMap,\r\n  colorMap,\r\n} from '@/utils';\r\n\r\nexport default {\r\n  name: 'page-otcOrder',\r\n  data() {\r\n    return {\r\n      imgMap,\r\n      colorMap,\r\n      switchFlag: false,\r\n      tabelLoading: true,\r\n      tabelList: [],\r\n      startTime: '',\r\n      endTime: '',\r\n      nowType: 1, // 1为当前委托 2\b计划委托 3\b历史委托 4\b历史成交\r\n      contractList: [], // 合约\r\n      side: '', // 当前方向\r\n      contractType: '', // 合约类型\r\n      contract: '', // 当前合约\r\n      orderType: '', // 订单类型\r\n      paginationObj: {\r\n        total: 0, // 数据总条数\r\n        display: 20, // 每页显示条数\r\n        currentPage: 1, // 当前页码\r\n      },\r\n      revokeList: [], // 撤销队列\r\n    };\r\n  },\r\n  watch: {\r\n    sideList(v) {\r\n      if (v && v.length) {\r\n        this.side = 1;\r\n      }\r\n    },\r\n    contractTypeList(v) {\r\n      if (v && v.length) {\r\n        this.contractType = 1;\r\n      }\r\n    },\r\n    orderTypeList(v) {\r\n      if (v && v.length) {\r\n        this.orderType = 'all';\r\n      }\r\n    },\r\n    contractListAll(newVal) {\r\n      if (newVal && newVal.length) {\r\n        this.getContractList();\r\n      }\r\n    },\r\n    startTime(newVal, oldVal) {\r\n      if (oldVal) {\r\n        this.getData();\r\n      }\r\n    },\r\n    endTime(newVal, oldVal) {\r\n      if (oldVal) {\r\n        this.getData();\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    startTimeNum() {\r\n      return (new Date(this.startTime.replace(/-/g, '/')).getTime() / 1000).toString();\r\n    },\r\n    endTimeNum() {\r\n      return (new Date(this.endTime.replace(/-/g, '/')).getTime() / 1000).toString();\r\n    },\r\n    // 合约列表\r\n    contractListAll() {\r\n      if (this.$store.state.future) {\r\n        return this.$store.state.future.contractList;\r\n      }\r\n      return [];\r\n    },\r\n    // 合约列表 MAP\r\n    contractListMap() {\r\n      if (this.$store.state.future) {\r\n        return this.$store.state.future.contractListMap;\r\n      }\r\n      return {};\r\n    },\r\n    coPublicInfo() { return this.$store.state.baseData.coPublicInfo; },\r\n    navTab() {\r\n      return [\r\n        // 当前委托\r\n        { name: this.$t('futures.order.title1'), index: 1 },\r\n        // \b计划委托\r\n        { name: this.$t('futures.order.title2'), index: 2 },\r\n        // \b历史委托\r\n        { name: this.$t('futures.order.title3'), index: 3 },\r\n        // \b历史计划委托\r\n        { name: this.$t('futures.order.title4'), index: 4 },\r\n        // \b历史成交\r\n        { name: this.$t('futures.order.title5'), index: 5 },\r\n      ];\r\n    },\r\n    sideList() {\r\n      return [ // 交割类型列表\r\n        // 永续合约\r\n        { code: 1, value: this.$t('futures.order.typeList1') },\r\n        // 模拟合约\r\n        { code: 2, value: this.$t('futures.order.typeList2') },\r\n        // 混合合约\r\n        { code: 3, value: this.$t('futures.order.typeList3') },\r\n      ];\r\n    },\r\n    // 合约类型\r\n    contractTypeList() {\r\n      return [ // 合约类型列表\r\n        // USDT合约\r\n        { code: 1, value: this.$t('futures.order.sideType1') },\r\n        // 币本位合约\r\n        { code: 0, value: this.$t('futures.order.sideType2') },\r\n        // // 混合合约\r\n        // { code: 2, value: '混合合约' },\r\n      ];\r\n    },\r\n    // 订单类型\r\n    orderTypeList() {\r\n      return [ // 订单类型列表\r\n        // 全部\r\n        { code: 'all', value: this.$t('futures.order.all') },\r\n        // 限价单\r\n        { code: 1, value: this.$t('futures.order.orderType1') },\r\n        // 市价单\r\n        { code: 2, value: this.$t('futures.order.orderType2') },\r\n        // PostOnly\r\n        { code: 3, value: this.$t('futures.order.orderType3') },\r\n        // IOC\r\n        { code: 4, value: this.$t('futures.order.orderType4') },\r\n        // FOK\r\n        { code: 5, value: this.$t('futures.order.orderType5') },\r\n      ];\r\n    },\r\n    //\r\n    axiosType() {\r\n      if (this.orderType === 'all') {\r\n        return '';\r\n      }\r\n      return this.orderType;\r\n    },\r\n    // 表格title\r\n    columns() {\r\n      let list = [];\r\n      if (this.nowType === 1) {\r\n        list = [\r\n          { title: this.$t('futures.order.contract'), width: '10%', align: 'left' }, // 合约\r\n          { title: this.$t('futures.order.time'), width: '10%' }, // 时间\r\n          { title: this.$t('futures.order.orderType'), width: '10%' }, // 订单类型\r\n          { title: this.$t('futures.order.side'), width: '10%' }, // 方向\r\n          { title: this.$t('futures.order.intrustPrice'), width: '10%' }, // 委托价格\r\n          { title: this.$t('futures.order.intrustVolume'), width: '10%' }, // 委托数量\r\n          { title: this.$t('futures.order.dealVolume'), width: '10%' }, // 成交数量\r\n          { title: this.$t('futures.order.dealPrice'), width: '10%' }, // 成交均价\r\n          { title: this.$t('futures.order.onlyCut'), width: '10%' }, // 只减仓\r\n          { title: this.$t('futures.order.opera'), width: '10%' }, // 操作\r\n        ];\r\n      }\r\n      if (this.nowType === 2) {\r\n        list = [\r\n          { title: this.$t('futures.order.contract'), width: '10%', align: 'left' }, // 合约\r\n          { title: this.$t('futures.order.time'), width: '10%' }, // 时间\r\n          { title: this.$t('futures.order.orderType'), width: '10%' }, // 订单类型\r\n          { title: this.$t('futures.order.side'), width: '10%' }, // 方向\r\n          { title: this.$t('futures.order.triggerPrice'), width: '10%' }, // 触发价\r\n          { title: this.$t('futures.order.intrustPrice'), width: '10%' }, // 委托价格\r\n          { title: this.$t('futures.order.intrustVolumeOrNum'), width: '10%' }, // 委托数量/价值\r\n          // { title: '成交数量(张)', width: '10%' }, // 价值\r\n          // { title: '成交均价', width: '10%' }, // 成交均价\r\n          { title: this.$t('futures.order.onlyCut'), width: '10%' }, // 只减仓\r\n          { title: this.$t('futures.order.overTime'), width: '10%' }, // 只减仓\r\n          { title: this.$t('futures.order.opera'), width: '10%' }, // 操作\r\n        ];\r\n      }\r\n      if (this.nowType === 3) {\r\n        list = [\r\n          { title: this.$t('futures.order.contract'), width: '8%', align: 'left' }, // 合约\r\n          { title: this.$t('futures.order.time'), width: '10%' }, // 时间\r\n          { title: this.$t('futures.order.orderType'), width: '10%' }, // 订单类型(张)\r\n          { title: this.$t('futures.order.side'), width: '10%' }, // 方向\r\n          { title: this.$t('futures.order.intrustPrice'), width: '10%' }, // 委托价格\r\n          { title: this.$t('futures.order.intrustVolumeOrNum'), width: '10%' }, // 委托数量/价值\r\n          { title: this.$t('futures.order.dealVolume'), width: '10%' }, // 成交数量\r\n          { title: this.$t('futures.order.dealPrice'), width: '8%' }, // 成交均价\r\n          { title: this.$t('futures.order.fee'), width: '8%' }, // 手续费\r\n          { title: this.$t('futures.order.onlyCut'), width: '8%' }, // 只减仓\r\n          { title: this.$t('futures.order.status'), width: '8%' }, // 状态\r\n        ];\r\n      }\r\n      if (this.nowType === 4) {\r\n        list = [\r\n          { title: this.$t('futures.order.contract'), width: '10%', align: 'left' }, // 合约\r\n          { title: this.$t('futures.order.side'), width: '10%' }, // 方向\r\n          { title: this.$t('futures.order.triggerPrice'), width: '15%' }, // 触发价格\r\n          { title: this.$t('futures.order.intrustPrice'), width: '15%' }, // 委托价格\r\n          { title: this.$t('futures.order.intrustVolumeOrNum'), width: '10%' }, // 委托数量/价值\r\n          { title: this.$t('futures.order.onlyCut'), width: '10%' }, // 只减仓\r\n          { title: this.$t('futures.order.status'), width: '10%' }, // 状态\r\n          { title: this.$t('futures.order.submitTime'), width: '10%' }, // 提交委托时间\r\n          { title: this.$t('futures.order.triggerTime'), width: '10%' }, // 触发时间\r\n        ];\r\n      }\r\n      if (this.nowType === 5) {\r\n        list = [\r\n          { title: this.$t('futures.order.contract'), width: '10%', align: 'left' }, // 合约\r\n          { title: this.$t('futures.order.time'), width: '15%' }, // 时间\r\n          { title: this.$t('futures.order.side'), width: '15%' }, // 方向\r\n          { title: this.$t('futures.order.roles'), width: '15%' }, // 角色\r\n          { title: this.$t('futures.order.dealVolume'), width: '15%' }, // 成交数量\r\n          { title: this.$t('futures.order.priceDeal'), width: '15%' }, // 成交价格\r\n          { title: this.$t('futures.order.fee'), width: '15%' }, // 手续费\r\n        ];\r\n      }\r\n      return list;\r\n    },\r\n    // 历史委托\r\n    historyMemoText() {\r\n      return [\r\n        this.$t('futures.orderList.memoText1'),\r\n        this.$t('futures.orderList.memoText2'),\r\n        this.$t('futures.orderList.memoText3'),\r\n        this.$t('futures.orderList.memoText4'),\r\n        this.$t('futures.orderList.memoText5'),\r\n        this.$t('futures.orderList.memoText6'),\r\n        this.$t('futures.orderList.memoText7'),\r\n        this.$t('futures.orderList.memoText8'),\r\n      ];\r\n      // return [\r\n      //   '用户撤销',\r\n      //   '订单异常，被系统撤销',\r\n      //   '仓位发生强平，未成交委托被系统撤销',\r\n      //   '对手盘不足，委托被系统取消',\r\n      //   'FOK订单，无法全部成交时被系统撤销',\r\n      //   'IOC订单，无法立即成交时部分委托被系统撤销',\r\n      //   '被动委托, 被动委托，撮合时为taker部分被系统撤销',\r\n      // ];\r\n    },\r\n  },\r\n  methods: {\r\n    init() {\r\n      if (this.sideList[0].value) {\r\n        this.side = 1;\r\n      }\r\n      if (this.contractTypeList[0].value) {\r\n        this.contractType = 1;\r\n      }\r\n      if (this.orderTypeList[0].value) {\r\n        this.orderType = 'all';\r\n      }\r\n      if (this.contractListAll) {\r\n        this.getContractList();\r\n      }\r\n      this.resetTime();\r\n    },\r\n    // 重置时间\r\n    resetTime() {\r\n      const timestamp = new Date().getTime();\r\n      const t = 60 * 60 * 24 * 1000 * 2;\r\n      this.startTime = this.getNowTime(timestamp - t);\r\n      this.endTime = this.getNowTime(timestamp);\r\n      this.start = `${this.startTime} 00:00:00`;\r\n      this.end = `${this.endTime} 23:59:59`;\r\n    },\r\n    getNowTime(time = '') {\r\n      const date = new Date(time);\r\n      const year = date.getFullYear();\r\n      const month = date.getMonth() + 1;\r\n      const day = date.getDate();\r\n      return `${year}-${month}-${day}`;\r\n    },\r\n    getContractList() {\r\n      let side = '';\r\n      if (this.side) {\r\n        if (this.side === 1) {\r\n          side = 'E';\r\n        } else if (this.side === 2) {\r\n          side = 'S';\r\n        } else {\r\n          side = 'H';\r\n        }\r\n      } else {\r\n        side = 'E';\r\n      }\r\n      let contractType = '';\r\n      if (this.contractType !== '') {\r\n        contractType = this.contractType;\r\n      } else {\r\n        contractType = 1;\r\n      }\r\n      const list = [];\r\n      this.contract = null;\r\n      this.contractListAll.forEach((item) => {\r\n        if (item.coType === side && item.contractSide === contractType) {\r\n          list.push(\r\n            {\r\n              code: item.id,\r\n              value: item.symbol.replace('-', ''),\r\n            },\r\n          );\r\n        }\r\n      });\r\n      this.contractList = list;\r\n      if (list.length) {\r\n        this.contract = list[0].code;\r\n        this.tabelLoading = true;\r\n        this.getData();\r\n      } else {\r\n        this.paginationObj.currentPage = 1; // 页码\r\n        this.paginationObj.total = 0; // 总条数\r\n        this.tabelList = [];\r\n        this.tabelLoading = false;\r\n      }\r\n    },\r\n    // initContractList() {\r\n    //   const { market } = this.coPublicInfo;\r\n    //   const list = [];\r\n    //   Object.keys(market).forEach((vitem) => {\r\n    //     market[vitem].forEach((item) => {\r\n    //       const {\r\n    //         baseSymbol, quoteSymbol, contractType, settleTime, maxLeverageLevel,\r\n    //       } = item;\r\n    //       let time = '';\r\n    //       if (contractType) {\r\n    //         const t = settleTime.split(' ')[0].split('-');\r\n    //         time = t[1] + t[2];\r\n    //       }\r\n    //       const msg = `${this.getContractType(contractType)} · ${time} (${maxLeverageLevel}X)`;\r\n    //       const str = `${baseSymbol}${quoteSymbol} - ${msg}`;\r\n    //       list.push(\r\n    //         {\r\n    //           code: item.id,\r\n    //           value: str,\r\n    //         },\r\n    //       );\r\n    //     });\r\n    //   });\r\n    //   this.contractList = list;\r\n    //   if (list.length) {\r\n    //     this.contract = list[0].code;\r\n    //     this.getData();\r\n    //   }\r\n    // },\r\n    // switchChange() {\r\n    //   this.switchFlag = !this.switchFlag;\r\n    //   this.getData();\r\n    // },\r\n    getData() {\r\n      if (this.nowType === 1) {\r\n        this.getNowData();\r\n      } else if (this.nowType === 2) {\r\n        this.getPlanData();\r\n      } else if (this.nowType === 3) {\r\n        this.getHisData();\r\n      } else if (this.nowType === 4) {\r\n        this.getHisPlanData();\r\n      } else if (this.nowType === 5) {\r\n        this.getHisDealData();\r\n      }\r\n    },\r\n    typeStatus(status) {\r\n      let str = '';\r\n      switch (status) {\r\n        case 1:\r\n          str = this.$t('futures.order.orderType1'); // '限价单';\r\n          break;\r\n        case 2:\r\n          str = this.$t('futures.order.orderType2'); // '市价单';\r\n          break;\r\n        case 3:\r\n          str = this.$t('futures.order.orderType4'); // 'IOC';\r\n          break;\r\n        case 4:\r\n          str = this.$t('futures.order.orderType5'); // 'FOK';\r\n          break;\r\n        case 5:\r\n          str = this.$t('futures.order.orderType3'); // 'POST_ONLY';\r\n          break;\r\n        case 6:\r\n          str = this.$t('futures.order.orderType6'); // '强制减仓';\r\n          break;\r\n        case 7:\r\n          str = this.$t('futures.order.orderType7'); // '仓位合并';\r\n          break;\r\n        default:\r\n          str = '';\r\n      }\r\n      return str;\r\n    },\r\n    getStatus(status) {\r\n      let str = '';\r\n      switch (status) {\r\n        case 0:\r\n          str = this.$t('futures.order.status1'); // '新订单';\r\n          break;\r\n        case 1:\r\n          str = this.$t('futures.order.status1'); // '新订单';\r\n          break;\r\n        case 2:\r\n          str = this.$t('futures.order.status2'); // '完全成交';\r\n          break;\r\n        case 3:\r\n          str = this.$t('futures.order.status3'); // '部分成交';\r\n          break;\r\n        case 4:\r\n          str = this.$t('futures.order.status4'); // '已取消';\r\n          break;\r\n        case 5:\r\n          str = this.$t('futures.order.status5'); // '待撤销';\r\n          break;\r\n        case 6:\r\n          str = this.$t('futures.order.status6'); // '异常订单';\r\n          break;\r\n        case 7:\r\n          str = this.$t('futures.order.status7'); // '部分成交已撤销';\r\n          break;\r\n        default:\r\n          str = '';\r\n      }\r\n      return str;\r\n    },\r\n    getContractType(contractType) {\r\n      let type = '';\r\n      switch (contractType) {\r\n        case 0:\r\n          type = this.$t('futures.order.contractType1'); // '永续';\r\n          break;\r\n        case 1:\r\n          type = this.$t('futures.order.contractType2'); // '当周';\r\n          break;\r\n        case 2:\r\n          type = this.$t('futures.order.contractType3'); // '次周';\r\n          break;\r\n        case 3:\r\n          type = this.$t('futures.order.contractType4'); // '月度';\r\n          break;\r\n        case 4:\r\n          type = this.$t('futures.order.contractType5'); // '季度';\r\n          break;\r\n        default:\r\n          type = '';\r\n      }\r\n      return type;\r\n    },\r\n    statusText(status) {\r\n      let str = '';\r\n      switch (status) {\r\n        case 0:\r\n          str = this.$t('futures.order.statusText1'); // '有效';\r\n          break;\r\n        case 1:\r\n          str = this.$t('futures.order.statusText2'); // '已过期';\r\n          break;\r\n        case 2:\r\n          str = this.$t('futures.order.statusText3'); // '已完成';\r\n          break;\r\n        case 3:\r\n          str = this.$t('futures.order.statusText4'); // '触发失败';\r\n          break;\r\n        case 4:\r\n          str = this.$t('futures.order.status4'); // '已取消';\r\n          break;\r\n        default:\r\n          str = '';\r\n      }\r\n      return str;\r\n    },\r\n    // 获取当前委托\r\n    getNowData() {\r\n      this.axios({\r\n        url: 'order/current_order_list',\r\n        hostType: 'co',\r\n        method: 'post',\r\n        params: {\r\n          type: this.axiosType,\r\n          // side: this.side,\r\n          limit: this.paginationObj.display, // 每页条数\r\n          page: this.paginationObj.currentPage, // 页码\r\n          contractId: this.contract,\r\n        },\r\n      }).then((data) => {\r\n        if (this.nowType !== 1) return;\r\n        this.tabelLoading = false;\r\n        if (data.code.toString() === '0') {\r\n          const list = [];\r\n          const { orderList, count } = data.data;\r\n          if (orderList && orderList.length) {\r\n            orderList.forEach((item) => {\r\n              const open = item.open === 'OPEN' ? this.$t('futures.order.open') : this.$t('futures.order.close');\r\n              let side = this.$t('futures.order.sell');\r\n              if ((item.open === 'OPEN' && item.side === 'BUY')\r\n              || (item.open === 'CLOSE' && item.side === 'SELL')) {\r\n                side = this.$t('futures.order.buy');\r\n              }\r\n              let price = null;\r\n              if (item.type === 2 && Number(item.price) === 0) {\r\n                price = this.$t('futures.order.currentPrice');\r\n              } else {\r\n                price = fixD(item.price, item.pricePrecision);\r\n              }\r\n              list.push({\r\n                id: JSON.stringify(item),\r\n                data: [\r\n                  item.symbol, // 合约\r\n                  formatTime(item.ctime), // 时间\r\n                  this.typeStatus(item.type),\r\n                  open + side,\r\n                  price, // 委托价格\r\n                  item.volume, // 委托数量\r\n                  item.dealVolume, // 成交数量\r\n                  item.avgPrice ? fixD(item.avgPrice, item.pricePrecision) : '--', // 成交均价\r\n                  item.open === 'CLOSE'\r\n                    ? this.$t('futures.order.yes')\r\n                    : this.$t('futures.order.no'), // 只减仓\r\n                  [\r\n                    {\r\n                      type: 'button',\r\n                      text: this.$t('futures.order.cancel'), // 撤单\r\n                      eventType: 'cancelOrder',\r\n                    },\r\n                  ],\r\n                ],\r\n              });\r\n            });\r\n          }\r\n          this.tabelList = list;\r\n          this.paginationObj.total = count;\r\n        }\r\n      });\r\n    },\r\n    // 获取计划委托\r\n    getPlanData() {\r\n      this.axios({\r\n        url: 'order/trigger_order_list',\r\n        hostType: 'co',\r\n        method: 'post',\r\n        params: {\r\n          type: this.axiosType,\r\n          // side: this.side,\r\n          limit: this.paginationObj.display, // 每页条数\r\n          page: this.paginationObj.currentPage, // 页码\r\n          contractId: this.contract,\r\n        },\r\n      }).then((data) => {\r\n        if (this.nowType !== 2) return;\r\n        this.tabelLoading = false;\r\n        if (data.code.toString() === '0') {\r\n          const list = [];\r\n          const { trigOrderList, count } = data.data;\r\n          if (trigOrderList && trigOrderList.length) {\r\n            trigOrderList.forEach((item) => {\r\n              const open = item.open === 'OPEN' ? this.$t('futures.order.open') : this.$t('futures.order.close');\r\n              let side = this.$t('futures.order.sell');\r\n              if ((item.open === 'OPEN' && item.side === 'BUY')\r\n              || (item.open === 'CLOSE' && item.side === 'SELL')) {\r\n                side = this.$t('futures.order.buy');\r\n              }\r\n              let price = null;\r\n              let unit = null;\r\n              let volume = null;\r\n              if (item.type === 2 && Number(item.price) === 0) {\r\n                price = this.$t('futures.order.currentPrice');\r\n                if (item.open === 'OPEN') {\r\n                  if (this.contractListMap) {\r\n                    unit = this.contractListMap[item.contractName].marginCoin;\r\n                    volume = fixD(item.volume, this.contractListMap[item.contractName].mCionFix);\r\n                  }\r\n                } else {\r\n                  volume = item.volume;\r\n                  unit = this.$t('futures.order.per');\r\n                }\r\n              } else {\r\n                volume = item.volume;\r\n                price = fixD(item.price, item.pricePrecision);\r\n                unit = this.$t('futures.order.per');\r\n              }\r\n              list.push({\r\n                id: JSON.stringify(item),\r\n                data: [\r\n                  item.symbol, // 合约\r\n                  formatTime(item.ctime), // 时间\r\n                  this.typeStatus(item.type),\r\n                  open + side,\r\n                  fixD(item.triggerPrice, item.pricePrecision), // 触发价\r\n                  price, // 委托价格\r\n                  `${volume} ${unit}`, // 委托数量\r\n                  // item.dealVolume, // 成交数量\r\n                  // fixD(item.avgPrice, item.pricePrecision), // 成交均价\r\n                  item.open === 'CLOSE'\r\n                    ? this.$t('futures.order.yes')\r\n                    : this.$t('futures.order.no'), // 只减仓\r\n                  formatTime(item.expireTime), // 过期时间\r\n                  [\r\n                    {\r\n                      type: 'button',\r\n                      text: this.$t('futures.order.cancel'), // 撤单\r\n                      eventType: 'cancelOrder',\r\n                    },\r\n                  ],\r\n                ],\r\n              });\r\n            });\r\n          }\r\n          this.tabelList = list;\r\n          this.paginationObj.total = count;\r\n        }\r\n      });\r\n    },\r\n    // 获取历史委托\r\n    getHisData() {\r\n      this.axios({\r\n        url: 'order/history_order_list',\r\n        hostType: 'co',\r\n        method: 'post',\r\n        params: {\r\n          type: this.axiosType,\r\n          limit: this.paginationObj.display, // 每页条数\r\n          page: this.paginationObj.currentPage, // 页码\r\n          contractId: this.contract,\r\n          beginTime: new Date(this.start).getTime(),\r\n          endTime: new Date(this.end).getTime(),\r\n        },\r\n      }).then((data) => {\r\n        if (this.nowType !== 3) return;\r\n        this.tabelLoading = false;\r\n        if (data.code.toString() === '0') {\r\n          const list = [];\r\n          const { orderList, count } = data.data;\r\n          if (orderList && orderList.length) {\r\n            orderList.forEach((item, index) => {\r\n              const open = item.open === 'OPEN' ? this.$t('futures.order.open') : this.$t('futures.order.close');\r\n              let side = this.$t('futures.order.sell');\r\n              if ((item.open === 'OPEN' && item.side === 'BUY')\r\n              || (item.open === 'CLOSE' && item.side === 'SELL')) {\r\n                side = this.$t('futures.order.buy');\r\n              }\r\n              let price = null;\r\n              let unit = null;\r\n              let volume = null;\r\n              if (item.type === 2 && Number(item.price) === 0) {\r\n                price = this.$t('futures.order.currentPrice');\r\n                if (item.open === 'OPEN') {\r\n                  if (this.contractListMap) {\r\n                    unit = this.contractListMap[item.contractName].marginCoin;\r\n                    volume = fixD(item.volume, this.contractListMap[item.contractName].mCionFix);\r\n                  }\r\n                } else {\r\n                  volume = item.volume;\r\n                  unit = this.$t('futures.order.per');\r\n                }\r\n              } else {\r\n                volume = item.volume;\r\n                price = fixD(item.price, item.pricePrecision);\r\n                unit = this.$t('futures.order.per');\r\n              }\r\n              let lastClass = null;\r\n              if (index > 3) {\r\n                lastClass = 'position-bottom';\r\n              }\r\n              list.push({\r\n                id: JSON.stringify(item),\r\n                data: [\r\n                  item.symbol, // 合约\r\n                  formatTime(item.ctime), // 时间\r\n                  // this.typeStatus(item.type),\r\n                  item.liqPositionMsg ? [\r\n                    {\r\n                      text: `<div class=\"cancel_cause cancel_cause_right\">\r\n                      ${this.typeStatus(item.type)}\r\n                      <span class=\"cancel_cause-btn\">\r\n                        <svg aria-hidden=\"true\" class=\"icon icon-16\">\r\n                          <use xlink:href=\"#icon-a_15\"></use>\r\n                        </svg>\r\n                        <div class=\"cancel_cause_text a-5-bg b-1-cl a-3-bd ${lastClass}\">\r\n                        ${this.replaceAll(item.liqPositionMsg)}\r\n                        </div>\r\n                      </span>\r\n                    </div>`,\r\n                      type: 'html',\r\n                    },\r\n                  ] : this.typeStatus(item.type),\r\n                  open + side,\r\n                  item.type === 6 ? '--' : price, // 委托价格\r\n                  `${volume} ${unit}`, // 委托数量\r\n                  item.dealVolume, // 成交数量\r\n                  (!item.avgPrice || item.type === 6) ? '--' : fixD(item.avgPrice, item.pricePrecision), // 成交均价\r\n                  `${fixD(item.tradeFee, item.pricePrecision)} ${this.contractListMap[item.contractName].marginCoin}`, /// 手续费\r\n                  item.open === 'CLOSE'\r\n                    ? this.$t('futures.order.yes')\r\n                    : this.$t('futures.order.no'), // 只减仓\r\n                  // this.getStatus(item.status), // 状态\r\n                  // 状态\r\n                  item.status === 4 && item.memo ? [\r\n                    {\r\n                      text: `<div class=\"cancel_cause\">\r\n                      ${this.getStatus(item.status)}\r\n                      <span class=\"cancel_cause-btn\">\r\n                        <svg aria-hidden=\"true\" class=\"icon icon-16\">\r\n                          <use xlink:href=\"#icon-a_15\"></use>\r\n                        </svg>\r\n\r\n                        <div class=\"cancel_cause_text a-7-bg b-1-cl a-3-bd ${lastClass}\">\r\n                          ${this.historyMemoText[item.memo - 1]}\r\n                        </div>\r\n                      </span>\r\n                    </div>`,\r\n                      type: 'html',\r\n                    },\r\n                  ] : this.getStatus(item.status),\r\n                ],\r\n              });\r\n            });\r\n          }\r\n          this.tabelList = list;\r\n          this.paginationObj.total = count;\r\n        }\r\n      });\r\n    },\r\n    // 获取历史计划委托\r\n    getHisPlanData() {\r\n      this.axios({\r\n        url: 'order/history_trigger_order_list',\r\n        hostType: 'co',\r\n        method: 'post',\r\n        params: {\r\n          type: this.axiosType,\r\n          limit: this.paginationObj.display, // 每页条数\r\n          page: this.paginationObj.currentPage, // 页码\r\n          contractId: this.contract,\r\n          beginTime: new Date(this.start).getTime(),\r\n          endTime: new Date(this.end).getTime(),\r\n        },\r\n      }).then((data) => {\r\n        if (this.nowType !== 4) return;\r\n        this.tabelLoading = false;\r\n        if (data.code.toString() === '0') {\r\n          const list = [];\r\n          const { trigOrderList, count } = data.data;\r\n          if (trigOrderList && trigOrderList.length) {\r\n            trigOrderList.forEach((item, index) => {\r\n              const open = item.open === 'OPEN' ? this.$t('futures.order.open') : this.$t('futures.order.close');\r\n              let side = this.$t('futures.order.sell');\r\n              if ((item.open === 'OPEN' && item.side === 'BUY')\r\n              || (item.open === 'CLOSE' && item.side === 'SELL')) {\r\n                side = this.$t('futures.order.buy');\r\n              }\r\n              let price = null;\r\n              let unit = null;\r\n              let volume = null;\r\n              if (item.type === 2 && Number(item.price) === 0) {\r\n                price = this.$t('futures.order.currentPrice');\r\n                if (item.open === 'OPEN') {\r\n                  if (this.contractListMap) {\r\n                    unit = this.contractListMap[item.contractName].marginCoin;\r\n                    volume = fixD(item.volume, this.contractListMap[item.contractName].mCionFix);\r\n                  }\r\n                } else {\r\n                  volume = item.volume;\r\n                  unit = this.$t('futures.order.per');\r\n                }\r\n              } else {\r\n                volume = item.volume;\r\n                price = fixD(item.price, item.pricePrecision);\r\n                unit = this.$t('futures.order.per');\r\n              }\r\n              let lastClass = null;\r\n              if (index > 3) {\r\n                lastClass = 'position-bottom';\r\n              }\r\n              list.push({\r\n                id: JSON.stringify(item),\r\n                data: [\r\n                  item.symbol, // 合约\r\n                  open + side, // 方向\r\n                  fixD(item.triggerPrice, item.pricePrecision), // 触发价格\r\n                  price, // 委托价格\r\n                  `${volume} ${unit}`, // 委托数量\r\n                  item.open === 'CLOSE'\r\n                    ? this.$t('futures.order.yes')\r\n                    : this.$t('futures.order.no'), // 只减仓\r\n                  // this.statusText(item.status), // 状态\r\n                  item.status === 4 && item.memo ? [\r\n                    {\r\n                      text: `<div class=\"cancel_cause\">\r\n                      ${this.statusText(item.status)}\r\n                      <span class=\"cancel_cause-btn\">\r\n                        <svg aria-hidden=\"true\" class=\"icon icon-16\">\r\n                          <use xlink:href=\"#icon-a_15\"></use>\r\n                        </svg>\r\n                        <div class=\"cancel_cause_text a-7-bg b-1-cl a-3-bd ${lastClass}\">\r\n                          ${this.memoText(item)}\r\n                        </div>\r\n                      </span>\r\n                    </div>`,\r\n                      type: 'html',\r\n                    },\r\n                  ] : this.statusText(item.status),\r\n\r\n                  formatTime(item.ctime), // 提交委托时间\r\n                  formatTime(item.mtime), // 触发时间\r\n                ],\r\n              });\r\n            });\r\n          }\r\n          this.tabelList = list;\r\n          this.paginationObj.total = count;\r\n        }\r\n      });\r\n    },\r\n    replaceAll(str) {\r\n      return str.replace(/\\\\n/g, '<br/>');\r\n    },\r\n    // 取消原因\r\n    memoText(data) {\r\n      let type = '';\r\n      this.sideList.forEach((item) => {\r\n        if (this.side === item.code) {\r\n          type = item.value;\r\n        }\r\n      });\r\n      if (data.memo === 1) {\r\n        return this.$t('futures.order.memoText1'); // '用户取消';\r\n      }\r\n      if (data.memo === 2) {\r\n        return this.$t('futures.order.memoText2'); // '超过有效期';\r\n      }\r\n      if (data.memo === 3) {\r\n        // 最新价格达到\r\n        return `${formatTime(data.mtime)}${data.symbol}${type} ${this.$t('futures.order.memoText3')}\r\n        ${fixD(data.triggerPrice, data.pricePrecision)}\r\n        ${this.$t('futures.order.memoText4')}`;\r\n        // 触发计划委托，因账户保证金余额不足，委托无法提交，执行失败\r\n      }\r\n      if (data.memo === 4) {\r\n        return `${formatTime(data.mtime)}${data.symbol}${type} ${this.$t('futures.order.memoText3')}\r\n        ${fixD(data.triggerPrice, data.pricePrecision)}\r\n        ${this.$t('futures.order.memoText5')}`;\r\n        // 触发计划委托，因仓位可平数量不足，无法提交委托，执行失败`;\r\n      }\r\n      if (data.memo === 5) {\r\n        return `${formatTime(data.mtime)}${data.symbol}${type} ${this.$t('futures.order.memoText3')}\r\n        ${fixD(data.triggerPrice, data.pricePrecision)}\r\n        ${this.$t('futures.order.memoText6')}`;\r\n        // 触发计划委托，因仓位发生强平，无法提交委托，执行失败`;\r\n      }\r\n      if (data.memo === 6) {\r\n        return `${formatTime(data.mtime)}${data.symbol}${type} ${this.$t('futures.order.memoText3')}\r\n        ${fixD(data.triggerPrice, data.pricePrecision)}\r\n        ${this.$t('futures.order.memoText7')}`;\r\n        // 触发计划委托，因该合约已被暂停交易，无法提交委托，执行失败`;\r\n      }\r\n      return null;\r\n    },\r\n    // 获取历史成交\r\n    getHisDealData() {\r\n      this.axios({\r\n        url: 'order/his_trade_list',\r\n        hostType: 'co',\r\n        method: 'post',\r\n        params: {\r\n          type: this.axiosType,\r\n          limit: this.paginationObj.display, // 每页条数\r\n          page: this.paginationObj.currentPage, // 页码\r\n          contractId: this.contract,\r\n          beginTime: new Date(this.start).getTime(),\r\n          endTime: new Date(this.end).getTime(),\r\n        },\r\n      }).then((data) => {\r\n        if (this.nowType !== 5) return;\r\n        this.tabelLoading = false;\r\n        if (data.code.toString() === '0') {\r\n          const list = [];\r\n          const { tradeHisList, count } = data.data;\r\n          if (tradeHisList && tradeHisList.length) {\r\n            tradeHisList.forEach((item) => {\r\n              const open = item.open === 'OPEN' ? this.$t('futures.order.open') : this.$t('futures.order.close');\r\n              let side = this.$t('futures.order.sell');\r\n              if ((item.open === 'OPEN' && item.side === 'BUY')\r\n              || (item.open === 'CLOSE' && item.side === 'SELL')) {\r\n                side = this.$t('futures.order.buy');\r\n              }\r\n              list.push({\r\n                id: JSON.stringify(item),\r\n                data: [\r\n                  item.symbol, // 合约\r\n                  formatTime(item.ctime), // 时间\r\n                  open + side,\r\n                  item.role,\r\n                  item.volume, // 成交数量\r\n                  fixD(item.price, item.pricePrecision), // 成交价格\r\n                  `${fixD(item.fee, item.feeCoinPrecision)} ${item.feeCoin}`, // 手续费\r\n                ],\r\n              });\r\n            });\r\n          }\r\n          this.tabelList = list;\r\n          this.paginationObj.total = count;\r\n        }\r\n      });\r\n    },\r\n    outExcela() {\r\n    // outExcela(url, params, type) {\r\n      // return new Promise((resolve) => {\r\n      //   this.axios({\r\n      //     url,\r\n      //     params,\r\n      //     hostType: type,\r\n      //     responseType: 'arraybuffer',\r\n      //     mustAll: true,\r\n      //   }).then(({ data, headers }) => {\r\n      //     console.log(data, headers);\r\n      //     const content = data;\r\n      //     const blob = new Blob([content]);\r\n      //     if (decodeURI(headers['content-disposition']) !== 'undefined') {\r\n      //       const fileName = decodeURI(headers['content-disposition'].split('\"')[1]);\r\n      //       // const fileName = 'as.xlsx';\r\n      //       // 非IE下载\r\n      //       if ('download' in document.createElement('a')) {\r\n      //         const elink = document.createElement('a');\r\n      //         elink.download = fileName;\r\n      //         elink.style.display = 'none';\r\n      //         elink.href = URL.createObjectURL(blob);\r\n      //         document.body.appendChild(elink);\r\n      //         elink.click();\r\n      //         URL.revokeObjectURL(elink.href); // 释放URL 对象\r\n      //         document.body.removeChild(elink);\r\n      //       } else { // IE10+下载\r\n      //         navigator.msSaveBlob(blob, fileName);\r\n      //       }\r\n      //     }\r\n      //     const enc = new TextDecoder('utf-8');\r\n      //     const res = null;\r\n      //     if (decodeURI(headers['content-disposition']) !== 'undefined') {\r\n      //       res = { code: '0' }; // 转化成json对象\r\n      //     } else {\r\n      //       res = JSON.parse(enc.decode(new Uint8Array(data))); // 转化成json对象\r\n      //     }\r\n      //     resolve(res);\r\n      //   });\r\n      // });\r\n    },\r\n    // 导出CSV\r\n    exportCSV() {\r\n      // let exporturl = '';\r\n      // if (this.nowType === 3) {\r\n      //   exporturl = 'order/export/his_order_list_saas';\r\n      // } else if (this.nowType === 4) {\r\n      //   exporturl = 'order/export/trigger_order_list';\r\n      //   this.axiosType = '';\r\n      // }\r\n      // const data = {\r\n      //   type: this.axiosType,\r\n      //   limit: this.paginationObj.display, // 每页条数\r\n      //   page: this.paginationObj.currentPage, // 页码\r\n      //   contractId: this.contract,\r\n      //   beginTime: new Date(this.start).getTime(),\r\n      //   endTime: new Date(this.end).getTime(),\r\n      // };\r\n      // this.outExcela('order/export/his_order_list_saas', data, 'co').then((datas) => {\r\n      //   // this.outFlagImport = true;\r\n      //   if (datas.code === '0') {\r\n      //     this.$bus.$emit('alert', { type: 'success', message: '导出成功' }); // 导出成功\r\n      //   } else {\r\n      //     this.$bus.$emit('alert', { type: 'error', message: datas.msg }); // 导出失败\r\n      //   }\r\n      // });\r\n    },\r\n    // 切换tab\r\n    currentType(item) {\r\n      if (this.nowType === item.index) { return; }\r\n      this.resetTime();\r\n      this.nowType = item.index;\r\n      this.paginationObj.currentPage = 1; // 页码\r\n      this.paginationObj.total = 0; // 总条数\r\n      this.tabelList = [];\r\n      this.tabelLoading = true;\r\n      this.getData();\r\n    },\r\n    // 切换交割类型\r\n    sideChange(item) {\r\n      if (this.side === item.code) { return; }\r\n      this.side = item.code;\r\n      this.paginationObj.currentPage = 1; // 页码\r\n      this.paginationObj.total = 0; // 总条数\r\n      this.tabelList = [];\r\n      this.tabelLoading = true;\r\n      this.getContractList();\r\n    },\r\n    // 切换合约类型\r\n    contractTypeChange(item) {\r\n      if (this.contractType === item.code) { return; }\r\n      this.contractType = item.code;\r\n      this.paginationObj.currentPage = 1; // 页码\r\n      this.paginationObj.total = 0; // 总条数\r\n      this.tabelList = [];\r\n      this.tabelLoading = true;\r\n      this.getContractList();\r\n    },\r\n    // 切换合约\r\n    contractChange(item) {\r\n      if (this.contract === item.code) { return; }\r\n      this.contract = item.code;\r\n      this.paginationObj.currentPage = 1; // 页码\r\n      this.paginationObj.total = 0; // 总条数\r\n      this.tabelList = [];\r\n      this.tabelLoading = true;\r\n      this.getData();\r\n    },\r\n    // 切换订单类型\r\n    orderTypeChange(item) {\r\n      if (this.orderType === item.code) { return; }\r\n      this.orderType = item.code;\r\n      this.paginationObj.currentPage = 1; // 页码\r\n      this.paginationObj.total = 0; // 总条数\r\n      this.tabelList = [];\r\n      this.tabelLoading = true;\r\n      this.getData();\r\n    },\r\n    // 撤销订单\r\n    tableClick(type, v) {\r\n      if (type === 'cancelOrder') {\r\n        const obj = JSON.parse(v);\r\n        this.revokeList.push(obj.id);\r\n        const isConditionOrder = this.nowType === 2;\r\n        this.axios({\r\n          url: 'order/order_cancel',\r\n          hostType: 'co',\r\n          method: 'post',\r\n          params: {\r\n            orderId: obj.id,\r\n            contractId: this.contract,\r\n            isConditionOrder,\r\n          },\r\n        }).then((data) => {\r\n          const ind = this.revokeList.indexOf(obj.id);\r\n          this.revokeList.splice(ind, 1);\r\n          if (data.code.toString() === '0') {\r\n            this.$bus.$emit('tip', { text: this.$t('contract.cancel_success'), type: 'success' });\r\n            // let sId = 0;\r\n            // this.tabelList.forEach((item, i) => {\r\n            //   if (item.id === id) {\r\n            //     sId = i;\r\n            //   }\r\n            // });\r\n            // this.tabelList.splice(sId, 1);\r\n            this.getData();\r\n          } else {\r\n            this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n          }\r\n        });\r\n      }\r\n    },\r\n    // 撤销全部订单\r\n    cancelAll() {\r\n      if (this.tabelList.length) {\r\n        const isConditionOrder = this.nowType === 2;\r\n        this.axios({\r\n          url: 'order/order_cancel',\r\n          hostType: 'co',\r\n          method: 'post',\r\n          params: {\r\n            contractId: this.contract,\r\n            isConditionOrder,\r\n          },\r\n        }).then((data) => {\r\n          if (data.code.toString() === '0') {\r\n            this.$bus.$emit('tip', { text: this.$t('contract.cancel_success'), type: 'success' });\r\n            this.getData();\r\n          } else {\r\n            this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n          }\r\n        });\r\n      }\r\n    },\r\n    search() {\r\n      this.paginationObj.currentPage = 1; // 页码\r\n      this.paginationObj.total = 0; // 总条数\r\n      this.tabelList = [];\r\n      this.tabelLoading = true;\r\n      this.getData();\r\n    },\r\n    // 选择时间\r\n    startTimeSelect(v) {\r\n      this.startTime = v;\r\n      this.start = `${this.startTime} 00:00:00`;\r\n      this.end = `${this.endTime} 23:59:59`;\r\n      // this.loading = true;\r\n      // this.listPage.page = 1;\r\n      // this.getData();\r\n    },\r\n    endTimeSelect(v) {\r\n      this.endTime = v;\r\n      this.start = `${this.startTime} 00:00:00`;\r\n      this.end = `${this.endTime} 23:59:59`;\r\n      // this.loading = true;\r\n      // this.listPage.page = 1;\r\n      // this.getData();\r\n    },\r\n    pagechange(v) {\r\n      this.paginationObj.currentPage = v;\r\n      this.getData();\r\n    },\r\n  },\r\n};\r\n"]}]}