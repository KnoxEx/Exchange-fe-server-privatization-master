{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/innovation/view/view.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/innovation/view/view.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { fixD, formatTime, fixInput, nul, fixFloat as _fixFloat, thousandsComma as _thousandsComma, colorMap, imgMap } from '@/utils';\nexport default {\n  name: 'InnovationList',\n  data: function data() {\n    return {\n      bannerImg: null,\n      imgMap: imgMap,\n      colorMap: colorMap,\n      bannerTitle: '',\n      nowType: 1,\n      errorFlag: false,\n      errorHave: false,\n      pageId: null,\n      pageData: {},\n      amount: '',\n      dialogFlag: false,\n      // 弹窗flag\n      dialogConfirmLoading: false,\n      // 用于弹窗按钮loading效果\n      checkValue: '',\n      // 验证码value\n      googleVlaue: '',\n      // 谷歌验证码\n      checkErrorText: '',\n      googleErrorText: '',\n      dbclick: true,\n      captchaObj: null,\n      verifyFlag: false,\n      verifyObj: null,\n      precision: 4,\n      emailCheckValue: ''\n    };\n  },\n  watch: {\n    sendEmailCode: function sendEmailCode(_sendEmailCode) {\n      if (_sendEmailCode !== null) {\n        if (_sendEmailCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendEmailCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendEmailCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n          this.$bus.$emit('getCode-clear', 'EmailCode');\n        }\n      }\n    },\n    amount: function amount(value) {\n      this.amount = fixInput(value, this.showPrecision(this.pageData.coinSymbol));\n    },\n    checkValue: function checkValue(value) {\n      this.checkValue = fixInput(value, 0);\n    },\n    emailCheckValue: function emailCheckValue(value) {\n      this.emailCheckValue = fixInput(value, 0);\n    },\n    googleVlaue: function googleVlaue(value) {\n      this.googleVlaue = fixInput(value, 0);\n    }\n  },\n  computed: {\n    sendEmailCode: function sendEmailCode() {\n      return this.$store.state.personal.sendEmailCode;\n    },\n    enforceGoogleAuth: function enforceGoogleAuth() {\n      return this.$store.state.baseData.is_enforce_google_auth || 0;\n    },\n    // 全部币种列表\n    coinList: function coinList() {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n\n      return null;\n    },\n    spendWarning: function spendWarning() {\n      if (this.is_newcoin_project_entrance) {\n        if (Number(this.pageData.u_entranceSymbol_account) < Number(this.pageData.entranceAmount)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    is_newcoin_project_entrance: function is_newcoin_project_entrance() {\n      return this.$store.state.baseData.is_newcoin_project_entrance;\n    },\n    verificationType: function verificationType() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var type = '0';\n\n      if (publicInfo && publicInfo.switch && publicInfo.switch.verificationType) {\n        type = publicInfo.switch.verificationType;\n      }\n\n      return type;\n    },\n    statusList: function statusList() {\n      return [this.$t('innov.have'), // 进行中\n      this.$t('innov.financing'), // 募集成功\n      this.$t('innov.end') // 募集结束\n      ];\n    },\n    promptText: function promptText() {\n      return this.$t('innov.numbre'); // '数量';\n    },\n    userInfo: function userInfo() {\n      if (this.$store.state.baseData.userInfo) {\n        return this.$store.state.baseData.userInfo;\n      }\n\n      return {};\n    },\n    googleStatus: function googleStatus() {\n      if (this.userInfo) {\n        return this.userInfo.googleStatus;\n      }\n\n      return null;\n    },\n    isOpenMobileCheck: function isOpenMobileCheck() {\n      if (this.userInfo) {\n        return this.userInfo.isOpenMobileCheck;\n      }\n\n      return null;\n    },\n    emailAuthOpen: function emailAuthOpen() {\n      if (this.userInfo) {\n        return this.userInfo.email;\n      }\n\n      return null;\n    },\n    submitDisabled: function submitDisabled() {\n      if (this.pageData.isAuthRealname && this.userInfo.authLevel !== 1) {\n        return true;\n      }\n\n      if ((this.pageData.status === 2 || this.pageData.status === 3) && this.amount && this.amount <= this.pageData.u_coinSymbol_amount) {\n        return false;\n      }\n\n      return true;\n    },\n    amountDisabled: function amountDisabled() {\n      if (this.pageData.isAuthRealname && this.userInfo.authLevel !== 1) {\n        return true;\n      }\n\n      if (this.pageData.u_coinSymbol_amount < this.pageData.singleMinRaiseMoney || this.pageData.singleMaxRaiseMoney === 0 || this.pageData.money - this.pageData.raisedMoney === 0) {\n        return true;\n      }\n\n      if (this.pageData.status === 2 || this.pageData.status === 3) {\n        return false;\n      }\n\n      return true;\n    },\n    speed: function speed() {\n      if (this.pageData.raisedMoney) {\n        var speed = this.pageData.raisedMoney / this.pageData.money * 100;\n        return fixD(speed, 2);\n      }\n\n      return 0;\n    },\n    // 二次验证弹层 text展示文字 havacode是否有获取验证码\n    checkPhione: function checkPhione() {\n      return {\n        text: this.$t('login.phoneCode'),\n        haveCode: true\n      };\n    },\n    googleVlaueForm: function googleVlaueForm() {\n      return {\n        text: this.$t('login.googleCode'),\n        haveCode: false\n      };\n    },\n    emailVlaueForm: function emailVlaueForm() {\n      return {\n        text: this.$t('login.emailCode'),\n        haveCode: true\n      };\n    },\n    // checkValue 是否复合正则验证\n    checkFlag: function checkFlag() {\n      return this.$store.state.regExp.verification.test(this.checkValue);\n    },\n    // checkValueEmail 是否复合正则验证\n    checkFlagEamil: function checkFlagEamil() {\n      return this.$store.state.regExp.verification.test(this.emailCheckValue);\n    },\n    // googleVlaue 是否复合正则验证\n    googleFlag: function googleFlag() {\n      return this.$store.state.regExp.verification.test(this.googleVlaue);\n    },\n    // 验证框是否为错误\n    checkErrorFlag: function checkErrorFlag() {\n      if (this.checkValue.length !== 0 && !this.checkFlag) return true;\n      return false;\n    },\n    checkEmailErrorFlag: function checkEmailErrorFlag() {\n      if (this.emailCheckValue.length !== 0 && !this.checkFlagEamil) {\n        return true;\n      }\n\n      return false;\n    },\n    // 验证框是否为错误\n    googleErrorFlag: function googleErrorFlag() {\n      if (this.googleVlaue.length !== 0 && !this.googleFlag) return true;\n      return false;\n    },\n    // 二次确认按钮是否开启\n    confirmBtnFlag: function confirmBtnFlag() {\n      if (this.googleStatus === 1) {\n        if (this.googleErrorFlag || this.googleVlaue.length === 0) {\n          return true;\n        }\n      }\n\n      if (this.isOpenMobileCheck === 1) {\n        if (this.checkValue.length === 0 || this.checkErrorFlag) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  },\n  methods: {\n    init: function init() {\n      this.pageId = this.$route.params.id;\n      this.getData();\n    },\n    fixFloat: function fixFloat(num, precision) {\n      return _fixFloat(num, precision);\n    },\n    thousandsComma: function thousandsComma(num) {\n      return _thousandsComma(num);\n    },\n    getCaptchaObj: function getCaptchaObj(captchaObj) {\n      this.captchaObj = captchaObj;\n    },\n    verifyCallBack: function verifyCallBack(parameter) {\n      this.verifyObj = {\n        geetest_challenge: parameter.geetest_challenge,\n        geetest_seccode: parameter.geetest_seccode,\n        geetest_validate: parameter.geetest_validate\n      };\n      this.verifyFlag = true;\n      this.dialogFlag = true;\n    },\n    countScale: function countScale(a, b) {\n      return !a || !b ? 0 : nul(a, b);\n    },\n    fixDFun: function fixDFun(val, symbol) {\n      if (this.showPrecision(symbol)) {\n        return fixD(val, this.showPrecision(symbol));\n      }\n\n      return val;\n    },\n    showPrecision: function showPrecision(symbol) {\n      if (this.$store.state.baseData && this.$store.state.baseData.market && this.$store.state.baseData.market.coinList) {\n        var coinList = this.$store.state.baseData.market.coinList;\n\n        if (coinList[symbol]) {\n          var precision = coinList[symbol].showPrecision;\n\n          if (precision) {\n            return precision;\n          }\n        }\n      }\n\n      return 4;\n    },\n    setStatusText: function setStatusText(data) {\n      var text = '';\n\n      switch (data.status) {\n        case 2:\n          text = this.$t('innov.status1'); // '预热中';\n\n          break;\n\n        case 3:\n          text = this.$t('innov.status2'); // '进行中';\n\n          break;\n\n        case 4:\n          text = this.$t('innov.status3'); // '募集完成';\n\n          break;\n\n        case 5:\n          text = this.$t('innov.status4'); // '发放TOKEN';\n\n          break;\n\n        default:\n          text = this.$t('innov.status5');\n        // '退还申购基金';\n      }\n\n      return text;\n    },\n    // tab切换\n    currentType: function currentType(item) {\n      this.nowType = item.index;\n    },\n    submit: function submit() {\n      // 兑换金额不能小于单次购买最小额度\n      if (this.amount < this.pageData.singleMinRaiseMoney) {\n        this.$bus.$emit('tip', {\n          text: \"\".concat(this.$t('innov.lowerThanMinAmount')).concat(this.pageData.singleMinRaiseMoney),\n          type: 'error'\n        });\n        return;\n      } // 单笔兑换金额不能大于单次兑换最大额度\n\n\n      if (this.amount > this.pageData.singleMaxRaiseMoney) {\n        this.$bus.$emit('tip', {\n          text: \"\".concat(this.$t('innov.higherThanMaxAmount')).concat(this.pageData.singleMaxRaiseMoney),\n          type: 'error'\n        });\n        return;\n      } // 接受币种余额不足\n\n\n      if (this.amount > this.pageData.u_coinSymbol_amount) {\n        this.$bus.$emit('tip', {\n          text: \"\".concat(this.pageData.coinSymbol).concat(this.$t('innov.balanceNotEnough')),\n          type: 'error'\n        });\n        return;\n      } // 输入额度超出我的剩余可兑换额度\n\n\n      if (this.pageData.level_amount !== null && this.amount > this.pageData.level_amount) {\n        this.$bus.$emit('tip', {\n          text: \"\".concat(this.$t('innov.surplusExchangeAmount'), \":\").concat(this.pageData.level_amount),\n          type: 'error'\n        });\n        return;\n      } // 判断如果没有谷歌验证 没有手机验证  没有邮箱验证 或者 没有绑定邮箱的时候提示去绑定手机号或者谷歌\n\n\n      if (this.googleStatus !== 1 && this.isOpenMobileCheck !== 1 && (!this.pageData.email_validate_open || !this.emailAuthOpen)) {\n        this.$bus.$emit('tip', {\n          text: this.$t('innov.binding'),\n          type: 'error'\n        });\n        return;\n      } // 谷歌强制认证开启的时候 判断有没有谷歌没有的话 提示去绑定\n\n\n      if (this.googleStatus !== 1 && this.enforceGoogleAuth) {\n        this.$bus.$emit('tip', {\n          text: this.$t('assets.withdraw.bindGoogle'),\n          type: 'error'\n        });\n        return;\n      }\n\n      if (this.verificationType === '2') {\n        this.captchaObj.verify();\n      } else {\n        this.dialogFlag = true;\n      }\n    },\n    inputChanges: function inputChanges(value, name) {\n      this[name] = value;\n    },\n    formatTimeFn: function formatTimeFn(date) {\n      return formatTime(date);\n    },\n    // 关闭弹窗\n    dialogClose: function dialogClose() {\n      this.dialogFlag = false;\n      this.checkValue = '';\n      this.googleVlaue = '';\n      this.emailCheckValue = '';\n    },\n    // 发送验证码组件点击button\n    getCodeClick: function getCodeClick() {\n      this.sendCode();\n    },\n    postEmailCode: function postEmailCode() {\n      // this.$bus.$emit('getCode-start', 'EmailCode');\n      var info = {\n        operationType: 21\n      };\n      this.$store.dispatch('sendEmailCode', info);\n    },\n    // 发送验证码\n    sendCode: function sendCode() {\n      var _this = this;\n\n      this.axios({\n        url: 'v4/common/smsValidCode',\n        method: 'post',\n        header: {},\n        params: {\n          operationType: 28\n        }\n      }).then(function (data) {\n        if (data.code.toString() !== '0') {\n          // 倒计时重置\n          _this.$bus.$emit('getCode-clear', 'loginGetcode'); // tip框提示错误\n\n\n          _this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        } else {\n          // 邮件已发送，请注意查收\n          _this.$bus.$emit('tip', {\n            text: '验证码已发送，请注意查收',\n            type: 'success'\n          });\n        }\n      }).catch(function () {});\n    },\n    dialogConfirm: function dialogConfirm() {\n      var _this2 = this;\n\n      if (this.dbclick) {\n        var params = {\n          verificationType: this.verificationType,\n          amount: this.amount,\n          projectId: this.pageData.id,\n          smsValidCode: this.checkValue,\n          googleCode: this.googleVlaue,\n          symbol: this.pageData.coinSymbol,\n          percent: this.pageData.speed,\n          emailValidCode: this.emailCheckValue\n        };\n\n        if (this.verificationType === '2') {\n          params = Object.assign(params, this.verifyObj);\n        }\n\n        this.dbclick = false;\n        this.axios({\n          url: this.$store.state.url.common.newcoin_purchase,\n          headers: {},\n          params: params,\n          method: 'post'\n        }).then(function (data) {\n          _this2.dialogClose();\n\n          _this2.dbclick = true;\n\n          if (data.code.toString() === '0') {\n            // '申购成功，募集完成后可获得项目Token'\n            _this2.amount = '';\n\n            _this2.$bus.$emit('tip', {\n              text: _this2.$t('innov.token'),\n              type: 'success'\n            });\n\n            window.location.reload();\n          } else {\n            _this2.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    },\n    // 请求数据\n    getData: function getData() {\n      var _this3 = this;\n\n      this.axios({\n        url: this.$store.state.url.common.newcoin_project_detail,\n        params: {\n          projectId: Number(this.pageId)\n        },\n        method: 'post'\n      }).then(function (data) {\n        if (data.code === '0') {\n          var status = data.data.status;\n\n          if (status === 0 || status === 1 || status === 7) {\n            _this3.$router.replace('/innovation');\n          } // data.data.email_validate_open = 0;\n\n\n          _this3.pageData = data.data;\n          _this3.bannerImg = data.data.banner;\n        }\n      });\n    },\n    // goTrade\n    goTrade: function goTrade() {\n      this.$router.push('/trade');\n    }\n  }\n};",null]}