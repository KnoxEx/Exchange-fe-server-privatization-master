{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/assets/otcAccount/otcAccount.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/assets/otcAccount/otcAccount.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-nan\";\nimport _defineProperty from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { myStorage, fixD, fixRate, fixInput, colorMap, imgMap, getCoinShowName } from '@/utils';\nvar defaultIcon = imgMap.f_1;\nexport default {\n  name: 'page-otcAccount',\n  data: function data() {\n    return {\n      otcHeader: \"background: url(\".concat(imgMap.zc_otc, \")\"),\n      imgMap: imgMap,\n      colorMap: colorMap,\n      transferObj: null,\n      // 当前划转币种的信息\n      transferSide: '1',\n      // 划转方向 1 为从现货到场外  2 为场外到现货\n      dialogConfirmLoading: false,\n      // 弹窗的确认按钮loading\n      dialogFlag: false,\n      // 对话框\n      transferValue: '',\n      // 划转数量input\n      tabelLoading: true,\n      // 表格 loading\n      dataList: [],\n      // 表格 数据\n      totalBalance: '--',\n      // 资产折合\n      totalBalanceSymbol: '',\n      // 资产折合币种\n      totalRate: '--',\n      // 资产折合汇率\n      canvasPages: [],\n      // canvas\n      switchFlag: false,\n      // 是否隐藏零资产\n      findValue: '',\n      // 搜索币种\n      colors: ['rgba(255, 255, 255, 1)', 'rgba(255, 255, 255, 0.8)', 'rgba(255, 255, 255, 0.6)', 'rgba(255, 255, 255, 0.4)', 'rgba(255, 255, 255, 0.25)', 'rgba(255, 255, 255, 0.1)']\n    };\n  },\n  computed: {\n    isCoOpen: function isCoOpen() {\n      var base = this.$store.state.baseData.publicInfo;\n\n      if (base && base.switch && base.switch.indep_co_switch === '1') {\n        return true;\n      }\n\n      return false;\n    },\n    side: function side() {\n      var ex = this.isCoOpen ? this.$t('assets.index.coExchangeAccount') : this.$t('assets.index.exchangeAccount');\n      var otc = this.$t('assets.otcAccount.otcAccount');\n      var from = '';\n      var to = '';\n\n      if (this.transferSide === '1') {\n        from = ex;\n        to = otc;\n      } else {\n        from = otc;\n        to = ex;\n      }\n\n      return {\n        from: from,\n        to: to\n      };\n    },\n    // input框警示文案\n    transferWarningText: function transferWarningText() {\n      var text = this.$t('assets.otcAccount.can'); // 可转\n\n      var _this$transferData = this.transferData,\n          coin = _this$transferData.coin,\n          exNormal = _this$transferData.exNormal,\n          otcNormal = _this$transferData.otcNormal;\n      var num = this.transferSide === '1' ? exNormal : otcNormal;\n      return text + num + this.getShowCoin(coin);\n    },\n    // 饼图 数据（包含饼图 和 指标）\n    canvasPagesFilter: function canvasPagesFilter() {\n      var _this = this;\n\n      var arr = []; // 去除零资产\n\n      var list = this.canvasPages.filter(function (item) {\n        return parseFloat(item.spk) > 0;\n      }); // 排序\n\n      list.sort(this.compare('spk')); // 非0资产的币种少于6种时\n\n      if (list.length < 6) {\n        list.forEach(function (item, index) {\n          arr.push(_objectSpread(_objectSpread({}, item), {}, {\n            color: _this.colors[index]\n          }));\n        }); // 非0资产的币种多于等于6种时\n      } else if (list.length >= 6) {\n        var evenSum = 0; // 选出前五个\n\n        list.forEach(function (item, index) {\n          if (index < 5) {\n            arr.push(_objectSpread(_objectSpread({}, item), {}, {\n              color: _this.colors[index]\n            }));\n          } else {\n            evenSum += item.spk;\n          }\n        }); // 剩余币种归纳为其他\n\n        arr.push({\n          symbol: this.$t('assets.otcAccount.other'),\n          spk: evenSum,\n          color: this.colors[5]\n        });\n      }\n\n      return arr;\n    },\n    // 弹窗是否可点击\n    dialogConfirmDisabled: function dialogConfirmDisabled() {\n      if (this.dialogConfirmLoading) {\n        return false;\n      }\n\n      var flag = true;\n\n      if (parseFloat(this.transferValue) > 0 && !this.transferError) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    transferError: function transferError() {\n      var flag = false; // 限制最大数量\n\n      if (this.transferSide === '1') {\n        if (parseFloat(this.transferValue) > parseFloat(this.transferData.exNormal)) {\n          flag = true;\n        }\n      } else if (this.transferSide === '2') {\n        if (parseFloat(this.transferValue) > parseFloat(this.transferData.otcNormal)) {\n          flag = true;\n        }\n      }\n\n      return flag;\n    },\n    transferData: function transferData() {\n      var coin = '',\n          exNormal = '--',\n          otcNormal = '--';\n\n      if (this.transferObj) {\n        coin = this.transferObj.coinSymbol;\n        var coinList = this.market.coinList;\n        var fix = coinList[coin] && coinList[coin].showPrecision || 0; // 现货可用\n\n        if (!Number.isNaN(parseFloat(fixD(this.transferObj.exchangeNormal, fix)))) {\n          exNormal = fixD(this.transferObj.exchangeNormal, fix);\n        } // 场外可用\n\n\n        if (!Number.isNaN(parseFloat(fixD(this.transferObj.normal, fix)))) {\n          otcNormal = fixD(this.transferObj.normal, fix);\n        }\n      }\n\n      return {\n        coin: coin,\n        exNormal: exNormal,\n        otcNormal: otcNormal\n      };\n    },\n    // 表格title\n    columns: function columns() {\n      return [{\n        title: this.$t('assets.otcAccount.coin'),\n        width: '20%'\n      }, // 币种\n      {\n        title: this.$t('assets.otcAccount.Available'),\n        width: '30%'\n      }, // 可用\n      {\n        title: this.$t('assets.otcAccount.freeze'),\n        width: '30%'\n      }, // 冻结\n      {\n        title: this.$t('assets.otcAccount.options'),\n        width: '20%'\n      } // 操作\n      ];\n    },\n    market: function market() {\n      return this.$store.state.baseData.market;\n    },\n    // 资金列表展示到页面数据\n    dataListFilter: function dataListFilter() {\n      var _this2 = this;\n\n      // 隐藏零资产功能过滤数据\n      var list = [];\n\n      if (this.switchFlag) {\n        this.dataList.forEach(function (item) {\n          if (parseFloat(item.btcValuation) >= 0.0001) {\n            list.push(item);\n          }\n        });\n      } else {\n        list = this.dataList;\n      } // 搜索框功能过滤数据\n\n\n      var newList = [];\n      list.forEach(function (item) {\n        if (item.data[0][1].text.toUpperCase().indexOf(_this2.findValue.toUpperCase()) !== -1) {\n          newList.push(item);\n        }\n      });\n      return newList;\n    }\n  },\n  watch: {\n    market: function market(v) {\n      if (v) {\n        this.sendOtcAxios();\n      }\n    },\n    transferValue: function transferValue(v) {\n      var coinList = this.market.coinList;\n      var coin = this.transferData.coin;\n      var fix = coinList[coin] && coinList[coin].showPrecision || 0; // 限制精度和不非数字字符\n\n      this.transferValue = fixInput(v, fix);\n    },\n    canvasPagesFilter: function canvasPagesFilter(v) {\n      if (v.length === 0) {\n        this.canvasInit();\n      } else {\n        this.canvasMap();\n      }\n    }\n  },\n  methods: {\n    getShowCoin: function getShowCoin(v) {\n      var str = v;\n\n      if (this.market && this.market.coinList) {\n        str = getCoinShowName(v, this.market.coinList);\n      }\n\n      return str;\n    },\n    init: function init() {\n      if (myStorage.get('assetsSwitch')) {\n        this.switchFlag = myStorage.get('assetsSwitch');\n      }\n\n      if (this.market) {\n        this.sendOtcAxios();\n      }\n\n      this.canvasInit();\n    },\n    compare: function compare(property) {\n      return function fn(a, b) {\n        var value1 = a[property];\n        var value2 = b[property];\n        return value2 - value1;\n      };\n    },\n    // 全部划转\n    allTransfer: function allTransfer() {\n      if (this.transferSide === '1') {\n        if (this.transferData.exNormal === '--') {\n          return;\n        }\n\n        this.transferValue = this.transferData.exNormal;\n      } else if (this.transferSide === '2') {\n        if (this.transferData.exNormal === '--') {\n          return;\n        }\n\n        this.transferValue = this.transferData.otcNormal;\n      }\n    },\n    // 修改划转方向\n    setTransferSide: function setTransferSide() {\n      if (this.transferSide === '1') {\n        this.transferSide = '2';\n      } else if (this.transferSide === '2') {\n        this.transferSide = '1';\n      }\n\n      this.transferValue = ''; // 重置划转数量\n    },\n    inputLineChange: function inputLineChange(value, name) {\n      this[name] = value;\n    },\n    dialogClose: function dialogClose() {\n      this.transferSide = '1'; // 重置划转方向\n\n      this.transferValue = ''; // 重置划转数量\n\n      this.transferObj = null; // 重置划转对象\n\n      this.dialogFlag = false; // 关闭弹窗\n    },\n    dialogConfirm: function dialogConfirm() {\n      var _this3 = this;\n\n      this.dialogConfirmLoading = true;\n      this.axios({\n        url: 'finance/otc_transfer',\n        params: {\n          fromAccount: this.transferSide === '1' ? '1' : '2',\n          toAccount: this.transferSide === '1' ? '2' : '1',\n          amount: this.transferValue,\n          coinSymbol: this.transferData.coin\n        },\n        method: 'post'\n      }).then(function (data) {\n        _this3.dialogConfirmLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this3.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this3.transferSide = '1'; // 重置划转方向\n\n          _this3.transferValue = ''; // 重置划转数量\n\n          _this3.transferObj = null; // 重置划转对象\n\n          _this3.dialogFlag = false;\n          _this3.tabelLoading = true;\n\n          _this3.sendOtcAxios(); // 重新获取数据\n\n        } else {\n          _this3.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 获取列表\n    sendOtcAxios: function sendOtcAxios() {\n      var _this4 = this;\n\n      this.axios({\n        url: 'finance/v4/otc_account_list'\n      }).then(function (data) {\n        _this4.tabelLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this4.setData(data.data);\n        } else {\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 处理列表数据\n    setData: function setData(_ref) {\n      var _this5 = this;\n\n      var totalBalance = _ref.totalBalance,\n          totalBalanceSymbol = _ref.totalBalanceSymbol,\n          allCoinMap = _ref.allCoinMap;\n      var _this$market = this.market,\n          coinList = _this$market.coinList,\n          rate = _this$market.rate;\n      var FFix = coinList[totalBalanceSymbol] && coinList[totalBalanceSymbol].showPrecision || 0;\n      this.totalBalance = fixD(totalBalance, FFix); // 折合资产\n\n      this.totalBalanceSymbol = totalBalanceSymbol; // 折合币种\n\n      this.totalRate = fixRate(totalBalance, rate, totalBalanceSymbol); // 折合法币\n\n      var btcFix = coinList[totalBalanceSymbol] && coinList[totalBalanceSymbol].showPrecision || 0;\n      var list = [];\n      var canvasList = [];\n      allCoinMap.forEach(function (item) {\n        canvasList.push({\n          symbol: item.coinSymbol,\n          spk: item.btcValuation / totalBalance\n        });\n        var fix = coinList[item.coinSymbol] && coinList[item.coinSymbol].showPrecision || 0;\n        var coinImg = defaultIcon;\n\n        if (coinList[item.coinSymbol] && coinList[item.coinSymbol].icon.length) {\n          coinImg = coinList[item.coinSymbol].icon;\n        }\n\n        list.push({\n          id: JSON.stringify(item),\n          btcValuation: fixD(item.btcValuation, btcFix),\n          data: [[{\n            type: 'icon',\n            // 'link' ' button' ,'html', 'label', 'icon' ‘str’\n            iconSvg: \"<div class=\\\"coinIcon\\\"><img src=\\\"\".concat(coinImg, \"\\\"/></div>\"),\n            eventType: 'goTradeIn',\n            classes: ['coinBox']\n          }, {\n            text: getCoinShowName(item.coinSymbol, coinList)\n          }], fixD(item.normal, fix), fixD(item.lock, fix), [{\n            type: 'button',\n            // 'link' ' button' ,'html', 'label', 'icon' ‘str’\n            text: _this5.$t('assets.otcAccount.optionCapitalTransfer'),\n            // 资金划转\n            eventType: 'transfer'\n          }]]\n        });\n      });\n      this.canvasPages = canvasList;\n      this.dataList = list;\n    },\n    canvasMap: function canvasMap() {\n      var ctx = this.$refs.canvas.getContext('2d');\n      this.$refs.canvas.width = 100;\n      this.$refs.canvas.height = 100;\n      var start = 0;\n      this.canvasPagesFilter.forEach(function (item) {\n        var spk = start + item.spk * 2;\n\n        if (start >= 2) {\n          return;\n        } // 防止 2-xx的值\n\n\n        if (spk > 2) {\n          spk = 2;\n        } // 防止 1.x - 2.x的值\n\n\n        ctx.beginPath();\n        ctx.moveTo(50, 50);\n        ctx.fillStyle = item.color;\n        ctx.arc(50, 50, 50, Math.PI * start, Math.PI * spk);\n        ctx.closePath();\n        ctx.fill();\n        start = spk;\n      });\n      ctx.beginPath();\n      ctx.moveTo(50, 50);\n      ctx.fillStyle = '#4a3dd8';\n      ctx.arc(50, 50, 35, Math.PI * 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.fill();\n    },\n    // canvas初始化\n    canvasInit: function canvasInit() {\n      var ctx = this.$refs.canvas.getContext('2d');\n      this.$refs.canvas.width = 100;\n      this.$refs.canvas.height = 100;\n      ctx.beginPath();\n      ctx.moveTo(50, 50);\n      ctx.fillStyle = '#e0e0e0';\n      ctx.arc(50, 50, 50, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.fill();\n      ctx.beginPath();\n      ctx.moveTo(50, 50);\n      ctx.fillStyle = '#4a3dd8';\n      ctx.arc(50, 50, 35, Math.PI * 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.fill();\n    },\n    // 隐藏零资产\n    findChanges: function findChanges(v) {\n      this.findValue = v;\n    },\n    switchChange: function switchChange() {\n      this.switchFlag = !this.switchFlag;\n      myStorage.set('assetsSwitch', this.switchFlag);\n    },\n    tableClick: function tableClick(type, data) {\n      if (type === 'transfer') {\n        this.transferObj = JSON.parse(data);\n        this.dialogFlag = true;\n      }\n    }\n  }\n};",null]}