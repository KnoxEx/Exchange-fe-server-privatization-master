{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/trade/tradeForm/internationalTradeForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/trade/tradeForm/internationalTradeForm.vue","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport 'BlockChain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/internationalTradeForm/internationalTradeForm.styl';\nimport mixin from 'BlockChain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/internationalTradeForm/internationalTradeForm';\nimport { myStorage, fixD, division, cut, nul, getCoinShowName } from 'BlockChain-ui-privatization/utils';\nimport tradeInput from \"./tradeInput.vue\";\nimport GridTradeInput from \"./GridTradeInput.vue\";\nexport default {\n  mixins: [mixin],\n  components: {\n    tradeInput: tradeInput,\n    GridTradeInput: GridTradeInput\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  data: function data() {\n    return {\n      marketData: [],\n      tradeIsSell: 1,\n      gridTabType: 0,\n      gridType: 1,\n      // 专业版选择自定义或者ai\n      setType: 1,\n      // 类型1等差2 等比\n      gridSetFormFlag: false,\n      gridAiFormFlag: false,\n      minimumOrderQuantity: 0,\n      // 最小下单金额\n      // 七日年化收益率\n      sevenDay: '--',\n      gridAiMin: '--',\n      // 最大利润率\n      gridAiMax: '--',\n      // 最小利润率\n      gridAiMinPrice: '--',\n      // Ai 最小值\n      gridAiMaxPrice: '--',\n      // Ai 最大值\n      fee: null,\n      // 手续费\n      // set代表自定义\n      gridSetMin: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: ''\n      },\n      gridSetMax: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: ''\n      },\n      // 数量\n      gridSetNum: {\n        units: '',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: ''\n      },\n      // 资产\n      gridSetAccount: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 53%',\n        errorHeight: '-30px',\n        value: ''\n      },\n      // 止盈价格\n      gridSetMaxBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 53%',\n        errorHeight: '-30px',\n        value: ''\n      },\n      // 止损价格\n      gridSetMinBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 53%',\n        errorHeight: '-30px',\n        value: ''\n      },\n      gridAiBlance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: true,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: ''\n      },\n      gridAiNum: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: true,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: ''\n      },\n      gridAiAccount: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 53%',\n        errorHeight: '-30px',\n        value: ''\n      },\n      gridAiMaxBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 53%',\n        errorHeight: '-30px',\n        value: ''\n      },\n      gridAiMinBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 53%',\n        errorHeight: '-30px',\n        value: ''\n      }\n    };\n  },\n  computed: {\n    //  是否开启了 网格\n    gridTradeFlag: function gridTradeFlag() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var str = 1;\n\n      if (publicInfo && publicInfo.switch && publicInfo.switch.grid_trade_switch) {\n        str = Number(publicInfo.switch.grid_trade_switch);\n      }\n\n      return str;\n    },\n    // 该币对是否开启网格\n    showGridFlag: function showGridFlag() {\n      var flag = false;\n\n      if (this.symbolAll && this.symbolCurrent) {\n        var symbol = this.symbolAll[this.symbolCurrent];\n\n        if (symbol && symbol.is_grid_open) {\n          flag = true;\n        }\n      }\n\n      return flag;\n    },\n    // 按钮信息\n    gridbuttosContent: function gridbuttosContent() {\n      return {\n        gridButton: {\n          // 开启网格交易\n          text: this.isLogin ? this.$t('gridTrade.btn1') : this.$t('trade.loginReg'),\n          // '登录/注册',\n          class: this.isLogin ? 'u-1-bg buyBtn u-16-cl' : 'u-8-bg buyBtn u-16-cl'\n        },\n        // 开启AI网格策略\n        gridAiButton: {\n          text: this.isLogin ? this.$t('gridTrade.btn2') : this.$t('trade.loginReg'),\n          // '登录/注册',\n          class: this.isLogin ? 'u-1-bg buyBtn u-16-cl' : 'u-8-bg buyBtn u-16-cl'\n        }\n      };\n    },\n    // 等差网格（动态利润）： min ~ max\n    // max =（（最高价-最低价）/ （网格数量 - 1）/ 最低价）  - 买入手续费率 - 卖出手续费率\n    // min =（ (最高价-最低价）/ （网格数量 - 1））/ （最高价 - （ (最高价-最低价）/ （网格数量 - 1）））  - 买入手续费率 - 卖出手续费率\n    // 最低利润\n    gridSetMinProfits: function gridSetMinProfits() {\n      // 1: 等差 2 等比\n      var val = null;\n\n      if (this.gridSetMax.value && this.gridSetMin.value && this.gridSetNum.value) {\n        if (this.setType === 1) {\n          var card = division(cut(this.gridSetMax.value, this.gridSetMin.value), this.gridSetNum.value - 1);\n          val = nul(cut(cut(division(card, cut(this.gridSetMax.value, card)), this.fee), this.fee), 100);\n        }\n      }\n\n      if (val === Infinity || val === -Infinity) {\n        val = null;\n      }\n\n      return fixD(val, 2) || '--';\n    },\n    // 最高利润\n    gridSetMaxProfits: function gridSetMaxProfits() {\n      // 1: 等差 2 等比\n      var val = null;\n\n      if (this.gridSetMax.value && this.gridSetMin.value && this.gridSetNum.value) {\n        if (this.setType === 1) {\n          val = nul(cut(cut(division(division(cut(this.gridSetMax.value, this.gridSetMin.value), this.gridSetNum.value - 1), this.gridSetMin.value), this.fee), this.fee), 100); // 等比网格（固定利润）=（（最高价/最低价）开（网格数量-1）次方） - 手续费率*2-1\n        } else if (this.setType === 2) {\n          val = nul(cut(cut(Math.pow(division(this.gridSetMax.value, this.gridSetMin.value), 1 / (this.gridSetNum.value - 1)), nul(this.fee, 2)), 1), 100);\n        }\n      }\n\n      if (val === Infinity || val === -Infinity) {\n        val = null;\n      }\n\n      return fixD(val, 2) || '--';\n    },\n    setNumVal: function setNumVal() {\n      return this.gridSetNum.value;\n    },\n    symbolsData: function symbolsData() {\n      if (this.marketData[this.symbolCurrent]) {\n        return this.marketData[this.symbolCurrent];\n      }\n\n      return {\n        name: '--',\n        symbol: {\n          symbol: '--',\n          unit: '--'\n        },\n        close: {\n          class: '',\n          data: 0,\n          price: '--'\n        },\n        amount: '--',\n        rose: {\n          class: '',\n          data: '--'\n        }\n      };\n    }\n  },\n  watch: {\n    // 切换自定义和ai\n    gridType: function gridType() {\n      this.clearGridValue();\n      this.getAiData();\n    },\n    // 切换 限价交易 和 市价交易\n    transactionType: function transactionType(val) {\n      // 2 市价交易\n      this.$bus.$emit('tradeType', false);\n\n      if (val === 2) {\n        this.formData_1.disabled = true;\n        this.formData_1.disabledText = this.$t('trade.mPriceBuy'); // 以市场最优价买入\n\n        this.formData_2.title = this.$t('trade.dealMoney'); // '交易额';\n\n        this.formData_2.units = this.symbolUnit.units;\n        this.formData_3.disabled = true;\n        this.formData_3.disabledText = this.$t('trade.mPriceSell'); // 以市场最优价卖出\n      } else if (val === 1) {\n        this.formData_1.disabled = false;\n        this.formData_1.disabledText = '';\n        this.formData_2.title = this.$t('trade.number'); // '数量';\n\n        this.formData_2.units = this.symbolUnit.symbol;\n        this.formData_3.disabled = false;\n        this.formData_3.disabledText = '';\n      } else if (val === 4) {\n        this.clearGridValue();\n        this.getAiData(); // 改变父组件样式\n\n        this.$bus.$emit('tradeType', 'grid');\n      }\n    },\n    setNumVal: function setNumVal(v) {\n      var _this = this;\n\n      if (v) {\n        this.$nextTick(function () {\n          _this.gridSetNum.value = fixD(v, 0);\n        });\n      }\n    },\n    // 各个输入框的 单位\n    symbolUnit: function symbolUnit(val) {\n      this.formData_1.units = val.units;\n      this.formData_2.units = val.symbol;\n      this.formData_3.units = val.units;\n      this.formData_4.units = val.symbol; // this.formData_5.units = val.symbol;\n      // this.formData_6.units = val.symbol;\n\n      this.gridSetMin.units = val.units;\n      this.gridSetMax.units = val.units;\n      this.gridSetAccount.units = val.units;\n      this.gridSetMaxBalance.units = val.units;\n      this.gridSetMinBalance.units = val.units;\n      this.gridAiAccount.units = val.units;\n      this.gridAiMaxBalance.units = val.units;\n      this.gridAiMinBalance.units = val.units;\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this2 = this;\n\n      // 两秒让报错消失\n      this.$bus.$on('errorMsg', function () {\n        var formKey = ['gridAiAccount', 'gridAiMaxBalance', 'gridAiMinBalance', 'gridAiNum', 'gridSetMin', 'gridSetMax', 'gridSetNum', 'gridSetAccount', 'gridSetMaxBalance', 'gridSetMinBalance'];\n        formKey.forEach(function (item) {\n          _this2[item].isError = false;\n        });\n      }); // 监听 当前货币对切换\n\n      this.$bus.$on('SYMBOL_CURRENT', function (val) {\n        _this2.clearValue();\n\n        _this2.clearGridValue();\n\n        _this2.symbolCurrent = val;\n\n        if (!_this2.gridTradeFlag || !_this2.showGridFlag) {\n          _this2.tradeIsSell = 1;\n        }\n\n        if (_this2.gridType === 2) {\n          _this2.getAiData();\n        }\n      });\n\n      if (this.isLogin) {\n        this.$store.dispatch('assetsExchangeData', {\n          auto: false,\n          coinSymbols: this.coinSymbols\n        });\n      } // 监听 市场（最新价格） 数据\n\n\n      this.$bus.$on('MARKET_DATA', function (data) {\n        _this2.marketData = JSON.parse(JSON.stringify(data));\n      }); // 监听 价格点击\n\n      this.$bus.$on('HANDEL_PRICE', function (data) {\n        if (data) {\n          // const obj = {name: 'formData_1', data };\n          var arr = ['formData_1', 'formData_3'];\n          arr.forEach(function (item) {\n            _this2.onChaneForm({\n              name: item,\n              value: data\n            });\n          }); // onChaneForm\n          // this.formData_1.value = data;\n          // this.formData_3.value = data;\n        }\n      });\n    },\n    switchGrid: function switchGrid() {\n      this.clearValue();\n      this.clearGridValue();\n      this.getAiData();\n      this.tradeIsSell = 3;\n    },\n    gradSub: function gradSub(type) {\n      var _this3 = this;\n\n      if (!this.isLogin) {\n        this.$router.push('/login');\n      } else {\n        if (!this.submitGridFormKey(type)) return;\n\n        var _this$submitGridFormK = this.submitGridFormKey(type),\n            formKey = _this$submitGridFormK.formKey,\n            lowestPrice = _this$submitGridFormK.lowestPrice,\n            highestPrice = _this$submitGridFormK.highestPrice,\n            gridNumber = _this$submitGridFormK.gridNumber,\n            totalQuoteAmount = _this$submitGridFormK.totalQuoteAmount,\n            stopHighPrice = _this$submitGridFormK.stopHighPrice,\n            stopLowPrice = _this$submitGridFormK.stopLowPrice,\n            quantType = _this$submitGridFormK.quantType,\n            flag = _this$submitGridFormK.flag,\n            useOwnBase = _this$submitGridFormK.useOwnBase,\n            totalBaseAmount = _this$submitGridFormK.totalBaseAmount,\n            gridLineType = _this$submitGridFormK.gridLineType;\n\n        var fal = true;\n        var lan = this.$store.state.baseData.lan;\n        var lang = lan;\n\n        if (lan !== 'zh_CN') {\n          lang = 'en_US';\n        }\n\n        if (lang === 'en_US') {\n          var arrs = ['gridSetNum', 'gridAiNum', 'gridSetAccount', 'gridAiAccount'];\n          arrs.forEach(function (item) {\n            _this3[item].errorHeight = '-40px';\n          });\n        }\n\n        if (formKey.length) {\n          formKey.forEach(function (item) {\n            var value = _this3[item].value;\n\n            if (!value) {\n              _this3[item].errorText = \"\".concat(_this3.$t('trade.pleaseInput'));\n              _this3[item].isError = true;\n              fal = false;\n            }\n\n            if (parseFloat(value) <= 0) {\n              _this3[item].errorText = \"\".concat(_this3.$t('trade.inputError')); // 输入有误\n\n              _this3[item].isError = true;\n              fal = false;\n            }\n          });\n\n          if (this.fal && fal && flag) {\n            // 单格利润过小，请重新设置ai\n            if (type !== 'gradTrad') {\n              if (this.gridAiMax === '--' || this.gridAiMax <= 0 || this.gridAiMin === '--' || this.gridAiMin <= 0) {\n                fal = false;\n                this.$bus.$emit('tip', {\n                  text: this.$t('gridTrade.error9')\n                });\n                return;\n              }\n            } else if (type === 'gradTrad') {\n              // 单格利润过小，请重新设置自定义\n              if (gridLineType === 1) {\n                // 等差\n                if (this.gridSetMinProfits === '--' || this.gridSetMinProfits <= 0 || this.gridSetMaxProfits === '--' || this.gridSetMaxProfits <= 0) {\n                  this.$bus.$emit('tip', {\n                    text: this.$t('gridTrade.error9')\n                  });\n                  fal = false;\n                  return;\n                }\n              } else if (gridLineType === 2) {\n                // 等比只校验最大\n                if (this.gridSetMaxProfits === '--' || this.gridSetMaxProfits <= 0) {\n                  this.$bus.$emit('tip', {\n                    text: this.$t('gridTrade.error9')\n                  });\n                  fal = false;\n                  return;\n                }\n              }\n            }\n\n            if (Number(stopHighPrice) && Number(stopHighPrice) <= Number(highestPrice)) {\n              // 止盈价格必须高于网格最高价\n              this.$bus.$emit('tip', {\n                text: this.$t('gridTrade.error5')\n              });\n              fal = false;\n            } else if (Number(stopHighPrice) && Number(stopHighPrice) <= Number(this.symbolsData.close.data)) {\n              this.$bus.$emit('tip', {\n                text: this.$t('gridTrade.error7')\n              });\n              fal = false;\n            } else if (Number(stopLowPrice) && Number(stopLowPrice) >= Number(lowestPrice)) {\n              // 止损价格必须低于网格最低价\n              this.$bus.$emit('tip', {\n                text: this.$t('gridTrade.error6')\n              });\n              fal = false;\n            } else if (Number(stopLowPrice) && Number(stopLowPrice) >= Number(this.symbolsData.close.data)) {\n              console.log(this.symbolsData.close.data);\n              this.$bus.$emit('tip', {\n                text: this.$t('gridTrade.error8')\n              });\n              fal = false;\n            }\n          }\n\n          if (this.fal && fal && flag) {\n            this.fal = false;\n            var submitData = {\n              symbol: this.symbolCurrent,\n              lowestPrice: lowestPrice,\n              highestPrice: highestPrice,\n              gridNumber: gridNumber,\n              totalQuoteAmount: totalQuoteAmount,\n              stopHighPrice: stopHighPrice,\n              stopLowPrice: stopLowPrice,\n              quantType: quantType,\n              useOwnBase: useOwnBase,\n              totalBaseAmount: totalBaseAmount,\n              gridLineType: gridLineType,\n              // 网格类型 1:等差 2:等比\n              fee: this.fee\n            };\n\n            if (useOwnBase) {\n              submitData.currentPrice = this.symbolsData.close.data;\n\n              if (submitData.currentPrice) {\n                this.gridCancelEvent(submitData);\n              }\n            } else {\n              this.gridSubData(submitData);\n            }\n          }\n        }\n      }\n    },\n    submitGridFormKey: function submitGridFormKey(type) {\n      var formKey = [];\n      var lowestPrice = null;\n      var highestPrice = null;\n      var gridNumber = null;\n      var totalQuoteAmount = null;\n      var stopHighPrice = null;\n      var stopLowPrice = null;\n      var quantType = null;\n      var flag = true;\n      var gridLineType = 1;\n      var useOwnBase = 0;\n\n      if (type === 'gradTrad') {\n        formKey = ['gridSetMin', 'gridSetMax', 'gridSetNum', 'gridSetAccount'];\n        lowestPrice = fixD(this.gridSetMin.value, this.fixValue.priceFix);\n        highestPrice = fixD(this.gridSetMax.value, this.fixValue.priceFix);\n        gridNumber = fixD(this.gridSetNum.value, this.fixValue.volumeFix);\n        totalQuoteAmount = fixD(this.gridSetAccount.value, this.fixValue.priceFix);\n        stopHighPrice = this.gridSetMaxBalance.value ? fixD(this.gridSetMaxBalance.value, this.fixValue.priceFix) : 0;\n        stopLowPrice = this.gridSetMinBalance.value ? fixD(this.gridSetMinBalance.value, this.fixValue.priceFix) : 0;\n        quantType = 1; // 网格\n\n        gridLineType = this.setType;\n        useOwnBase = this.gridSetFormFlag ? 1 : 0; // 判断最高价不能低于最低价的1.02倍。如低于，则提示：价格区间过小，请重新设置\n\n        if (Number(highestPrice) < nul(lowestPrice, 1.02)) {\n          this.$bus.$emit('tip', {\n            text: this.$t('gridTrade.error1')\n          });\n          return false;\n        }\n\n        if (Number(gridNumber) < 2 || Number(gridNumber) > 100) {\n          // 数量区间为：2-100\n          this.$bus.$emit('tip', {\n            text: this.$t('gridTrade.error2')\n          });\n          return false;\n        } // 判断投入资金是否有足够余额，如无，则提示：USDT余额不足\n\n\n        if (Number(totalQuoteAmount) > Number(this.currenTaccount.unitsAccoubt)) {\n          // USDT余额不足\n          this.$bus.$emit('tip', {\n            text: \"\".concat(getCoinShowName(this.symbolUnit.units, this.coinList), \" \").concat(this.$t('gridTrade.error3'))\n          });\n          return false; // 总投入资金/网格数量，不能小于当前币对的最小下单金额\n        }\n\n        if (division(Number(totalQuoteAmount), gridNumber) < Number(this.minimumOrderQuantity)) {\n          // 每格投入资金小于当前币对的最小下单金额\n          this.$bus.$emit('tip', {\n            text: this.$t('gridTrade.error4')\n          });\n          return false;\n        }\n      } else {\n        formKey = ['gridAiAccount'];\n        lowestPrice = this.gridAiMinPrice;\n        highestPrice = this.gridAiMaxPrice;\n        gridNumber = this.gridAiNum.value;\n        totalQuoteAmount = fixD(this.gridAiAccount.value, this.fixValue.priceFix);\n        stopHighPrice = this.gridAiMaxBalance.value ? fixD(this.gridAiMaxBalance.value, this.fixValue.priceFix) : 0;\n        stopLowPrice = this.gridAiMinBalance.value ? fixD(this.gridAiMinBalance.value, this.fixValue.priceFix) : 0;\n        quantType = 1; // 网格\n\n        gridLineType = 1;\n        useOwnBase = this.gridAiFormFlag ? 1 : 0; // 是否使用Base资产 0:不使用 1:使用\n        // 单格利润过小，请重新设置\n        // 判断最高价不能低于最低价的1.02倍。如低于，则提示：价格区间过小，请重新设置\n\n        if (Number(highestPrice) < nul(lowestPrice, 1.02)) {\n          this.$bus.$emit('tip', {\n            text: this.$t('gridTrade.error1')\n          });\n          return false;\n        }\n\n        if (Number(gridNumber) < 2 || Number(gridNumber) > 100) {\n          // 数量区间为：2-100\n          this.$bus.$emit('tip', {\n            text: this.$t('gridTrade.error2')\n          });\n        } // 判断投入资金是否有足够余额，如无，则提示：USDT余额不足\n\n\n        if (Number(totalQuoteAmount) > Number(this.currenTaccount.unitsAccoubt)) {\n          this.$bus.$emit('tip', {\n            text: \"\".concat(getCoinShowName(this.symbolUnit.units, this.coinList), \" \").concat(this.$t('gridTrade.error3'))\n          });\n          return false; // 总投入资金/网格数量，不能小于当前币对的最小下单金额\n        }\n\n        if (division(Number(totalQuoteAmount), gridNumber) < Number(this.minimumOrderQuantity)) {\n          // 每格投入资金小于当前币对的最小下单金额\n          this.$bus.$emit('tip', {\n            text: this.$t('gridTrade.error4')\n          });\n          return false;\n        }\n      }\n\n      return {\n        formKey: formKey,\n        lowestPrice: lowestPrice,\n        highestPrice: highestPrice,\n        gridNumber: gridNumber,\n        totalQuoteAmount: totalQuoteAmount,\n        stopHighPrice: stopHighPrice,\n        stopLowPrice: stopLowPrice,\n        quantType: quantType,\n        flag: flag,\n        useOwnBase: useOwnBase,\n        totalBaseAmount: useOwnBase ? this.currenTaccount.symbolAccoubt : 0,\n        gridLineType: gridLineType\n      };\n    },\n    // 清空 表单数据\n    clearGridValue: function clearGridValue() {\n      var _this4 = this;\n\n      var formKey = ['gridAiAccount', 'gridAiMaxBalance', 'gridAiMinBalance', 'gridAiNum', 'gridSetMin', 'gridSetMax', 'gridSetNum', 'gridSetAccount', 'gridSetMaxBalance', 'gridSetMinBalance'];\n      formKey.forEach(function (item) {\n        _this4[item].value = '';\n        _this4[item].isError = false;\n        _this4[item].subText = null;\n      });\n    },\n    // 请求ai数据\n    getAiData: function getAiData() {\n      var _this5 = this;\n\n      this.axios({\n        url: 'noToken/quant/getAIStrategyInfo',\n        hostType: 'quant',\n        params: {\n          symbol: this.symbolCurrent\n        },\n        method: 'post'\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          if (data.data && data.data.configParamMap) {\n            _this5.gridAiMinPrice = fixD(data.data.configParamMap.lowestPrice, _this5.fixValue.priceFix);\n            _this5.gridAiMaxPrice = fixD(data.data.configParamMap.highestPrice, _this5.fixValue.priceFix);\n            _this5.gridAiBlance.disabledText = \"\".concat(_this5.gridAiMinPrice, \" ~ \").concat(_this5.gridAiMaxPrice);\n            _this5.gridAiNum.disabledText = fixD(data.data.configParamMap.gridNumber, 0);\n            _this5.gridAiNum.value = fixD(data.data.configParamMap.gridNumber, 0);\n            _this5.gridAiMin = fixD(data.data.everyProfitMin, 2);\n            _this5.gridAiMax = fixD(data.data.everyProfitMax, 2);\n            _this5.fee = data.data.makerFee; // 最小下单数量\n\n            _this5.minimumOrderQuantity = data.data.minimumOrderQuantity;\n            _this5.sevenDay = fixD(data.data.sevenAnnualizedYield, 2); // 7日年华收益\n          }\n        } else {\n          _this5.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 给服务端传参数和当前行情用于判断是否够每格消耗\n    gridCancelEvent: function gridCancelEvent(params) {\n      var _this6 = this;\n\n      this.axios({\n        url: 'quant/calBaseAmount',\n        hostType: 'quant',\n        method: 'post',\n        params: params\n      }).then(function (req) {\n        if (req.code.toString() === '0' && req.data) {\n          if (Number(req.data.baseAmount) > Number(_this6.currenTaccount.symbolAccoubt)) {\n            _this6.$bus.$emit('tip', {\n              text: \"\".concat(_this6.$t('gridTrade.least')).concat(req.data.baseAmount, \" \").concat(getCoinShowName(_this6.symbolUnit.symbol, _this6.coinList)),\n              type: 'error'\n            });\n\n            _this6.fal = true;\n          } else {\n            var obj = _objectSpread(_objectSpread({}, params), {}, {\n              totalBaseAmount: Number(req.data.baseAmount)\n            });\n\n            _this6.gridSubData(obj);\n          }\n        } else {\n          _this6.$bus.$emit('tip', {\n            text: req.msg,\n            type: 'error'\n          });\n\n          _this6.fal = true;\n        }\n      });\n    },\n    gridSubData: function gridSubData(params) {\n      var _this7 = this;\n\n      this.axios({\n        url: 'quant/saveStrategy',\n        hostType: 'quant',\n        params: params,\n        method: 'post'\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          // 清空表单\n          _this7.clearGridValue(); // 重新请求资产\n\n\n          _this7.$store.dispatch('assetsExchangeData', {\n            auto: false,\n            coinSymbols: _this7.coinSymbols\n          });\n\n          _this7.getAiData(); // 发送下单成功的事件\n\n\n          _this7.$bus.$emit('ORDER_CREATE', {\n            type: 'success'\n          }); // 提示成功 下单成功\n\n\n          _this7.$bus.$emit('tip', {\n            text: _this7.$t('trade.dealCussess'),\n            type: 'success'\n          });\n\n          _this7.fal = true;\n        } else {\n          _this7.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n\n          _this7.fal = true;\n        }\n      }).catch(function () {\n        _this7.fal = true;\n      });\n    }\n  },\n  // 组价离开前执行\n  beforeDestroy: function beforeDestroy() {\n    clearInterval(this.assetsInter);\n  }\n};",{"version":3,"sources":["internationalTradeForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsdA,OAAA,wHAAA;AACA,OAAA,KAAA,MAAA,mHAAA;AACA,SACA,SADA,EACA,IADA,EACA,QADA,EACA,GADA,EACA,GADA,EACA,eADA,QAEA,mCAFA;AAGA,OAAA,UAAA;AACA,OAAA,cAAA;AAGA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,KAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,cAAA,EAAA;AAFA,GAFA;AAMA,EAAA,OANA,qBAMA;AACA,SAAA,IAAA;AACA,GARA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,CAFA;AAGA,MAAA,WAAA,EAAA,CAHA;AAIA,MAAA,QAAA,EAAA,CAJA;AAIA;AACA,MAAA,OAAA,EAAA,CALA;AAKA;AACA,MAAA,eAAA,EAAA,KANA;AAOA,MAAA,cAAA,EAAA,KAPA;AAQA,MAAA,oBAAA,EAAA,CARA;AAQA;AACA;AACA,MAAA,QAAA,EAAA,IAVA;AAWA,MAAA,SAAA,EAAA,IAXA;AAWA;AACA,MAAA,SAAA,EAAA,IAZA;AAYA;AACA,MAAA,cAAA,EAAA,IAbA;AAaA;AACA,MAAA,cAAA,EAAA,IAdA;AAcA;AACA,MAAA,GAAA,EAAA,IAfA;AAeA;AACA;AACA,MAAA,UAAA,EAAA;AACA,QAAA,KAAA,EAAA,SAAA,CAAA,GAAA,CAAA,aAAA,IAAA,SAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,MADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,KAHA;AAIA,QAAA,QAAA,EAAA,KAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,WAAA,EAAA,OANA;AAOA,QAAA,KAAA,EAAA;AAPA,OAjBA;AA0BA,MAAA,UAAA,EAAA;AACA,QAAA,KAAA,EAAA,SAAA,CAAA,GAAA,CAAA,aAAA,IAAA,SAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,MADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,KAHA;AAIA,QAAA,QAAA,EAAA,KAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,WAAA,EAAA,OANA;AAOA,QAAA,KAAA,EAAA;AAPA,OA1BA;AAmCA;AACA,MAAA,UAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,KAHA;AAIA,QAAA,QAAA,EAAA,KAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,WAAA,EAAA,OANA;AAOA,QAAA,KAAA,EAAA;AAPA,OApCA;AA6CA;AACA,MAAA,cAAA,EAAA;AACA,QAAA,KAAA,EAAA,SAAA,CAAA,GAAA,CAAA,aAAA,IAAA,SAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,MADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,KAHA;AAIA,QAAA,QAAA,EAAA,KAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA,YANA;AAOA,QAAA,WAAA,EAAA,OAPA;AAQA,QAAA,KAAA,EAAA;AARA,OA9CA;AAwDA;AACA,MAAA,iBAAA,EAAA;AACA,QAAA,KAAA,EAAA,SAAA,CAAA,GAAA,CAAA,aAAA,IAAA,SAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,MADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,KAHA;AAIA,QAAA,QAAA,EAAA,KAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA,YANA;AAOA,QAAA,WAAA,EAAA,OAPA;AAQA,QAAA,KAAA,EAAA;AARA,OAzDA;AAmEA;AACA,MAAA,iBAAA,EAAA;AACA,QAAA,KAAA,EAAA,SAAA,CAAA,GAAA,CAAA,aAAA,IAAA,SAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,MADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,KAHA;AAIA,QAAA,QAAA,EAAA,KAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA,YANA;AAOA,QAAA,WAAA,EAAA,OAPA;AAQA,QAAA,KAAA,EAAA;AARA,OApEA;AA8EA,MAAA,YAAA,EAAA;AACA,QAAA,KAAA,EAAA,SAAA,CAAA,GAAA,CAAA,aAAA,IAAA,SAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,MADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,KAHA;AAIA,QAAA,QAAA,EAAA,IAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,WAAA,EAAA,OANA;AAOA,QAAA,KAAA,EAAA;AAPA,OA9EA;AAuFA,MAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA,SAAA,CAAA,GAAA,CAAA,aAAA,IAAA,SAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,MADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,KAHA;AAIA,QAAA,QAAA,EAAA,IAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,WAAA,EAAA,OANA;AAOA,QAAA,KAAA,EAAA;AAPA,OAvFA;AAgGA,MAAA,aAAA,EAAA;AACA,QAAA,KAAA,EAAA,SAAA,CAAA,GAAA,CAAA,aAAA,IAAA,SAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,MADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,KAHA;AAIA,QAAA,QAAA,EAAA,KAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA,YANA;AAOA,QAAA,WAAA,EAAA,OAPA;AAQA,QAAA,KAAA,EAAA;AARA,OAhGA;AA0GA,MAAA,gBAAA,EAAA;AACA,QAAA,KAAA,EAAA,SAAA,CAAA,GAAA,CAAA,aAAA,IAAA,SAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,MADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,KAHA;AAIA,QAAA,QAAA,EAAA,KAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA,YANA;AAOA,QAAA,WAAA,EAAA,OAPA;AAQA,QAAA,KAAA,EAAA;AARA,OA1GA;AAoHA,MAAA,gBAAA,EAAA;AACA,QAAA,KAAA,EAAA,SAAA,CAAA,GAAA,CAAA,aAAA,IAAA,SAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,MADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,KAHA;AAIA,QAAA,QAAA,EAAA,KAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA,YANA;AAOA,QAAA,WAAA,EAAA,OAPA;AAQA,QAAA,KAAA,EAAA;AARA;AApHA,KAAA;AA+HA,GAzIA;AA0IA,EAAA,QAAA,EAAA;AACA;AACA,IAAA,aAFA,2BAEA;AACA,UAAA,UAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,UAAA;AACA,UAAA,GAAA,GAAA,CAAA;;AACA,UAAA,UAAA,IAAA,UAAA,CAAA,MAAA,IAAA,UAAA,CAAA,MAAA,CAAA,iBAAA,EAAA;AACA,QAAA,GAAA,GAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,iBAAA,CAAA;AACA;;AACA,aAAA,GAAA;AACA,KATA;AAUA;AACA,IAAA,YAXA,0BAWA;AACA,UAAA,IAAA,GAAA,KAAA;;AACA,UAAA,KAAA,SAAA,IAAA,KAAA,aAAA,EAAA;AACA,YAAA,MAAA,GAAA,KAAA,SAAA,CAAA,KAAA,aAAA,CAAA;;AAEA,YAAA,MAAA,IAAA,MAAA,CAAA,YAAA,EAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA;AACA;;AACA,aAAA,IAAA;AACA,KArBA;AAsBA;AACA,IAAA,iBAvBA,+BAuBA;AACA,aAAA;AACA,QAAA,UAAA,EAAA;AACA;AACA,UAAA,IAAA,EAAA,KAAA,OAAA,GACA,KAAA,EAAA,CAAA,gBAAA,CADA,GAEA,KAAA,EAAA,CAAA,gBAAA,CAJA;AAIA;AACA,UAAA,KAAA,EAAA,KAAA,OAAA,GAAA,uBAAA,GAAA;AALA,SADA;AAQA;AACA,QAAA,YAAA,EAAA;AACA,UAAA,IAAA,EAAA,KAAA,OAAA,GACA,KAAA,EAAA,CAAA,gBAAA,CADA,GAEA,KAAA,EAAA,CAAA,gBAAA,CAHA;AAGA;AACA,UAAA,KAAA,EAAA,KAAA,OAAA,GAAA,uBAAA,GAAA;AAJA;AATA,OAAA;AAgBA,KAxCA;AAyCA;AAEA;AAEA;AAEA;AACA,IAAA,iBAhDA,+BAgDA;AACA;AACA,UAAA,GAAA,GAAA,IAAA;;AACA,UAAA,KAAA,UAAA,CAAA,KAAA,IACA,KAAA,UAAA,CAAA,KADA,IAEA,KAAA,UAAA,CAAA,KAFA,EAEA;AACA,YAAA,KAAA,OAAA,KAAA,CAAA,EAAA;AACA,cAAA,IAAA,GAAA,QAAA,CACA,GAAA,CAAA,KAAA,UAAA,CAAA,KAAA,EAAA,KAAA,UAAA,CAAA,KAAA,CADA,EAEA,KAAA,UAAA,CAAA,KAAA,GAAA,CAFA,CAAA;AAIA,UAAA,GAAA,GAAA,GAAA,CAAA,GAAA,CACA,GAAA,CACA,QAAA,CACA,IADA,EAEA,GAAA,CACA,KAAA,UAAA,CAAA,KADA,EAEA,IAFA,CAFA,CADA,EAQA,KAAA,GARA,CADA,EAWA,KAAA,GAXA,CAAA,EAYA,GAZA,CAAA;AAaA;AACA;;AACA,UAAA,GAAA,KAAA,QAAA,IAAA,GAAA,KAAA,CAAA,QAAA,EAAA;AACA,QAAA,GAAA,GAAA,IAAA;AACA;;AACA,aAAA,IAAA,CAAA,GAAA,EAAA,CAAA,CAAA,IAAA,IAAA;AACA,KA9EA;AA+EA;AACA,IAAA,iBAhFA,+BAgFA;AACA;AACA,UAAA,GAAA,GAAA,IAAA;;AACA,UAAA,KAAA,UAAA,CAAA,KAAA,IACA,KAAA,UAAA,CAAA,KADA,IAEA,KAAA,UAAA,CAAA,KAFA,EAEA;AACA,YAAA,KAAA,OAAA,KAAA,CAAA,EAAA;AACA,UAAA,GAAA,GAAA,GAAA,CAAA,GAAA,CACA,GAAA,CACA,QAAA,CACA,QAAA,CACA,GAAA,CAAA,KAAA,UAAA,CAAA,KAAA,EAAA,KAAA,UAAA,CAAA,KAAA,CADA,EAEA,KAAA,UAAA,CAAA,KAAA,GAAA,CAFA,CADA,EAIA,KAAA,UAAA,CAAA,KAJA,CADA,EAOA,KAAA,GAPA,CADA,EAUA,KAAA,GAVA,CAAA,EAWA,GAXA,CAAA,CADA,CAaA;AACA,SAdA,MAcA,IAAA,KAAA,OAAA,KAAA,CAAA,EAAA;AACA,UAAA,GAAA,GAAA,GAAA,CAAA,GAAA,CACA,GAAA,UACA,QAAA,CACA,KAAA,UAAA,CAAA,KADA,EAEA,KAAA,UAAA,CAAA,KAFA,CADA,EAKA,KAAA,KAAA,UAAA,CAAA,KAAA,GAAA,CAAA,CALA,GAMA,GAAA,CAAA,KAAA,GAAA,EAAA,CAAA,CANA,CADA,EASA,CATA,CAAA,EAUA,GAVA,CAAA;AAWA;AACA;;AACA,UAAA,GAAA,KAAA,QAAA,IAAA,GAAA,KAAA,CAAA,QAAA,EAAA;AACA,QAAA,GAAA,GAAA,IAAA;AACA;;AACA,aAAA,IAAA,CAAA,GAAA,EAAA,CAAA,CAAA,IAAA,IAAA;AACA,KAtHA;AAuHA,IAAA,SAvHA,uBAuHA;AACA,aAAA,KAAA,UAAA,CAAA,KAAA;AACA,KAzHA;AA0HA,IAAA,WA1HA,yBA0HA;AACA,UAAA,KAAA,UAAA,CAAA,KAAA,aAAA,CAAA,EAAA;AACA,eAAA,KAAA,UAAA,CAAA,KAAA,aAAA,CAAA;AACA;;AACA,aAAA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,MAAA,EAAA;AACA,UAAA,MAAA,EAAA,IADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAFA;AAMA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA,EADA;AAEA,UAAA,IAAA,EAAA,CAFA;AAGA,UAAA,KAAA,EAAA;AAHA,SANA;AAWA,QAAA,MAAA,EAAA,IAXA;AAYA,QAAA,IAAA,EAAA;AACA,UAAA,KAAA,EAAA,EADA;AAEA,UAAA,IAAA,EAAA;AAFA;AAZA,OAAA;AAiBA;AA/IA,GA1IA;AA2RA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,QAFA,sBAEA;AACA,WAAA,cAAA;AACA,WAAA,SAAA;AACA,KALA;AAMA;AACA,IAAA,eAPA,2BAOA,GAPA,EAOA;AACA;AACA,WAAA,IAAA,CAAA,KAAA,CAAA,WAAA,EAAA,KAAA;;AACA,UAAA,GAAA,KAAA,CAAA,EAAA;AACA,aAAA,UAAA,CAAA,QAAA,GAAA,IAAA;AACA,aAAA,UAAA,CAAA,YAAA,GAAA,KAAA,EAAA,CAAA,iBAAA,CAAA,CAFA,CAEA;;AACA,aAAA,UAAA,CAAA,KAAA,GAAA,KAAA,EAAA,CAAA,iBAAA,CAAA,CAHA,CAGA;;AACA,aAAA,UAAA,CAAA,KAAA,GAAA,KAAA,UAAA,CAAA,KAAA;AACA,aAAA,UAAA,CAAA,QAAA,GAAA,IAAA;AACA,aAAA,UAAA,CAAA,YAAA,GAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,CANA,CAMA;AACA,OAPA,MAOA,IAAA,GAAA,KAAA,CAAA,EAAA;AACA,aAAA,UAAA,CAAA,QAAA,GAAA,KAAA;AACA,aAAA,UAAA,CAAA,YAAA,GAAA,EAAA;AACA,aAAA,UAAA,CAAA,KAAA,GAAA,KAAA,EAAA,CAAA,cAAA,CAAA,CAHA,CAGA;;AACA,aAAA,UAAA,CAAA,KAAA,GAAA,KAAA,UAAA,CAAA,MAAA;AACA,aAAA,UAAA,CAAA,QAAA,GAAA,KAAA;AACA,aAAA,UAAA,CAAA,YAAA,GAAA,EAAA;AACA,OAPA,MAOA,IAAA,GAAA,KAAA,CAAA,EAAA;AACA,aAAA,cAAA;AACA,aAAA,SAAA,GAFA,CAGA;;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,WAAA,EAAA,MAAA;AACA;AACA,KA9BA;AA+BA,IAAA,SA/BA,qBA+BA,CA/BA,EA+BA;AAAA;;AACA,UAAA,CAAA,EAAA;AACA,aAAA,SAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,UAAA,CAAA,KAAA,GAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,SAFA;AAGA;AACA,KArCA;AAsCA;AACA,IAAA,UAvCA,sBAuCA,GAvCA,EAuCA;AACA,WAAA,UAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA,WAAA,UAAA,CAAA,KAAA,GAAA,GAAA,CAAA,MAAA;AACA,WAAA,UAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA,WAAA,UAAA,CAAA,KAAA,GAAA,GAAA,CAAA,MAAA,CAJA,CAKA;AACA;;AACA,WAAA,UAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA,WAAA,UAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA,WAAA,cAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA,WAAA,iBAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA,WAAA,iBAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA,WAAA,aAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA,WAAA,gBAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA,WAAA,gBAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA;AAtDA,GA3RA;AAmVA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AACA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,UAAA,EAAA,YAAA;AACA,YAAA,OAAA,GAAA,CACA,eADA,EAEA,kBAFA,EAGA,kBAHA,EAIA,WAJA,EAKA,YALA,EAMA,YANA,EAOA,YAPA,EAQA,gBARA,EASA,mBATA,EAUA,mBAVA,CAAA;AAYA,QAAA,OAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,CAAA,OAAA,GAAA,KAAA;AACA,SAFA;AAGA,OAhBA,EAFA,CAmBA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,UAAA;;AACA,QAAA,MAAA,CAAA,cAAA;;AACA,QAAA,MAAA,CAAA,aAAA,GAAA,GAAA;;AACA,YAAA,CAAA,MAAA,CAAA,aAAA,IAAA,CAAA,MAAA,CAAA,YAAA,EAAA;AACA,UAAA,MAAA,CAAA,WAAA,GAAA,CAAA;AACA;;AACA,YAAA,MAAA,CAAA,QAAA,KAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,SAAA;AACA;AACA,OAVA;;AAWA,UAAA,KAAA,OAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,oBAAA,EAAA;AACA,UAAA,IAAA,EAAA,KADA;AAEA,UAAA,WAAA,EAAA,KAAA;AAFA,SAAA;AAIA,OApCA,CAqCA;;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,aAAA,EAAA,UAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CAAA;AACA,OAFA,EAtCA,CAyCA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,cAAA,EAAA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,EAAA;AACA;AACA,cAAA,GAAA,GAAA,CAAA,YAAA,EAAA,YAAA,CAAA;AACA,UAAA,GAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,MAAA,CAAA,WAAA,CAAA;AAAA,cAAA,IAAA,EAAA,IAAA;AAAA,cAAA,KAAA,EAAA;AAAA,aAAA;AACA,WAFA,EAHA,CAMA;AACA;AACA;AACA;AACA,OAXA;AAYA,KAvDA;AAwDA,IAAA,UAxDA,wBAwDA;AACA,WAAA,UAAA;AACA,WAAA,cAAA;AACA,WAAA,SAAA;AACA,WAAA,WAAA,GAAA,CAAA;AACA,KA7DA;AA8DA,IAAA,OA9DA,mBA8DA,IA9DA,EA8DA;AAAA;;AACA,UAAA,CAAA,KAAA,OAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,OAFA,MAEA;AACA,YAAA,CAAA,KAAA,iBAAA,CAAA,IAAA,CAAA,EAAA;;AACA,oCAaA,KAAA,iBAAA,CAAA,IAAA,CAbA;AAAA,YACA,OADA,yBACA,OADA;AAAA,YAEA,WAFA,yBAEA,WAFA;AAAA,YAGA,YAHA,yBAGA,YAHA;AAAA,YAIA,UAJA,yBAIA,UAJA;AAAA,YAKA,gBALA,yBAKA,gBALA;AAAA,YAMA,aANA,yBAMA,aANA;AAAA,YAOA,YAPA,yBAOA,YAPA;AAAA,YAQA,SARA,yBAQA,SARA;AAAA,YASA,IATA,yBASA,IATA;AAAA,YAUA,UAVA,yBAUA,UAVA;AAAA,YAWA,eAXA,yBAWA,eAXA;AAAA,YAYA,YAZA,yBAYA,YAZA;;AAcA,YAAA,GAAA,GAAA,IAAA;AACA,YAAA,GAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,GAAA;AACA,YAAA,IAAA,GAAA,GAAA;;AACA,YAAA,GAAA,KAAA,OAAA,EAAA;AACA,UAAA,IAAA,GAAA,OAAA;AACA;;AACA,YAAA,IAAA,KAAA,OAAA,EAAA;AACA,cAAA,IAAA,GAAA,CAAA,YAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,eAAA,CAAA;AACA,UAAA,IAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA,CAAA,WAAA,GAAA,OAAA;AACA,WAFA;AAGA;;AACA,YAAA,OAAA,CAAA,MAAA,EAAA;AACA,UAAA,OAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,gBAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,CAAA,KAAA;;AACA,gBAAA,CAAA,KAAA,EAAA;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,CAAA,SAAA,aAAA,MAAA,CAAA,EAAA,CAAA,mBAAA,CAAA;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,CAAA,OAAA,GAAA,IAAA;AACA,cAAA,GAAA,GAAA,KAAA;AACA;;AACA,gBAAA,UAAA,CAAA,KAAA,CAAA,IAAA,CAAA,EAAA;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,CAAA,SAAA,aAAA,MAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,EADA,CACA;;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,CAAA,OAAA,GAAA,IAAA;AACA,cAAA,GAAA,GAAA,KAAA;AACA;AACA,WAZA;;AAaA,cAAA,KAAA,GAAA,IAAA,GAAA,IAAA,IAAA,EAAA;AACA;AACA,gBAAA,IAAA,KAAA,UAAA,EAAA;AACA,kBAAA,KAAA,SAAA,KAAA,IAAA,IAAA,KAAA,SAAA,IAAA,CAAA,IAAA,KAAA,SAAA,KAAA,IAAA,IAAA,KAAA,SAAA,IAAA,CAAA,EAAA;AACA,gBAAA,GAAA,GAAA,KAAA;AACA,qBAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,kBAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,iBAAA;AACA;AACA;AACA,aANA,MAMA,IAAA,IAAA,KAAA,UAAA,EAAA;AAAA;AACA,kBAAA,YAAA,KAAA,CAAA,EAAA;AAAA;AACA,oBAAA,KAAA,iBAAA,KAAA,IAAA,IAAA,KAAA,iBAAA,IAAA,CAAA,IAAA,KAAA,iBAAA,KAAA,IAAA,IAAA,KAAA,iBAAA,IAAA,CAAA,EAAA;AACA,uBAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,oBAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,mBAAA;AACA,kBAAA,GAAA,GAAA,KAAA;AACA;AACA;AACA,eANA,MAMA,IAAA,YAAA,KAAA,CAAA,EAAA;AAAA;AACA,oBAAA,KAAA,iBAAA,KAAA,IAAA,IAAA,KAAA,iBAAA,IAAA,CAAA,EAAA;AACA,uBAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,oBAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,mBAAA;AACA,kBAAA,GAAA,GAAA,KAAA;AACA;AACA;AACA;AACA;;AACA,gBAAA,MAAA,CAAA,aAAA,CAAA,IAAA,MAAA,CAAA,aAAA,CAAA,IAAA,MAAA,CAAA,YAAA,CAAA,EAAA;AACA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,gBAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,eAAA;AACA,cAAA,GAAA,GAAA,KAAA;AACA,aAJA,MAIA,IAAA,MAAA,CAAA,aAAA,CAAA,IACA,MAAA,CAAA,aAAA,CAAA,IAAA,MAAA,CAAA,KAAA,WAAA,CAAA,KAAA,CAAA,IAAA,CADA,EACA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,gBAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,eAAA;AACA,cAAA,GAAA,GAAA,KAAA;AACA,aAJA,MAIA,IAAA,MAAA,CAAA,YAAA,CAAA,IACA,MAAA,CAAA,YAAA,CAAA,IAAA,MAAA,CAAA,WAAA,CADA,EACA;AACA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,gBAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,eAAA;AACA,cAAA,GAAA,GAAA,KAAA;AACA,aALA,MAKA,IAAA,MAAA,CAAA,YAAA,CAAA,IACA,MAAA,CAAA,YAAA,CAAA,IAAA,MAAA,CAAA,KAAA,WAAA,CAAA,KAAA,CAAA,IAAA,CADA,EACA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,KAAA,WAAA,CAAA,KAAA,CAAA,IAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,gBAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,eAAA;AACA,cAAA,GAAA,GAAA,KAAA;AACA;AACA;;AACA,cAAA,KAAA,GAAA,IAAA,GAAA,IAAA,IAAA,EAAA;AACA,iBAAA,GAAA,GAAA,KAAA;AACA,gBAAA,UAAA,GAAA;AACA,cAAA,MAAA,EAAA,KAAA,aADA;AAEA,cAAA,WAAA,EAAA,WAFA;AAGA,cAAA,YAAA,EAAA,YAHA;AAIA,cAAA,UAAA,EAAA,UAJA;AAKA,cAAA,gBAAA,EAAA,gBALA;AAMA,cAAA,aAAA,EAAA,aANA;AAOA,cAAA,YAAA,EAAA,YAPA;AAQA,cAAA,SAAA,EAAA,SARA;AASA,cAAA,UAAA,EAAA,UATA;AAUA,cAAA,eAAA,EAAA,eAVA;AAWA,cAAA,YAAA,EAAA,YAXA;AAWA;AACA,cAAA,GAAA,EAAA,KAAA;AAZA,aAAA;;AAcA,gBAAA,UAAA,EAAA;AACA,cAAA,UAAA,CAAA,YAAA,GAAA,KAAA,WAAA,CAAA,KAAA,CAAA,IAAA;;AACA,kBAAA,UAAA,CAAA,YAAA,EAAA;AACA,qBAAA,eAAA,CAAA,UAAA;AACA;AACA,aALA,MAKA;AACA,mBAAA,WAAA,CAAA,UAAA;AACA;AACA;AACA;AACA;AACA,KAjLA;AAkLA,IAAA,iBAlLA,6BAkLA,IAlLA,EAkLA;AACA,UAAA,OAAA,GAAA,EAAA;AACA,UAAA,WAAA,GAAA,IAAA;AACA,UAAA,YAAA,GAAA,IAAA;AACA,UAAA,UAAA,GAAA,IAAA;AACA,UAAA,gBAAA,GAAA,IAAA;AACA,UAAA,aAAA,GAAA,IAAA;AACA,UAAA,YAAA,GAAA,IAAA;AACA,UAAA,SAAA,GAAA,IAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,YAAA,GAAA,CAAA;AACA,UAAA,UAAA,GAAA,CAAA;;AACA,UAAA,IAAA,KAAA,UAAA,EAAA;AACA,QAAA,OAAA,GAAA,CAAA,YAAA,EAAA,YAAA,EAAA,YAAA,EAAA,gBAAA,CAAA;AACA,QAAA,WAAA,GAAA,IAAA,CAAA,KAAA,UAAA,CAAA,KAAA,EAAA,KAAA,QAAA,CAAA,QAAA,CAAA;AACA,QAAA,YAAA,GAAA,IAAA,CAAA,KAAA,UAAA,CAAA,KAAA,EAAA,KAAA,QAAA,CAAA,QAAA,CAAA;AACA,QAAA,UAAA,GAAA,IAAA,CAAA,KAAA,UAAA,CAAA,KAAA,EAAA,KAAA,QAAA,CAAA,SAAA,CAAA;AACA,QAAA,gBAAA,GAAA,IAAA,CAAA,KAAA,cAAA,CAAA,KAAA,EAAA,KAAA,QAAA,CAAA,QAAA,CAAA;AACA,QAAA,aAAA,GAAA,KAAA,iBAAA,CAAA,KAAA,GACA,IAAA,CAAA,KAAA,iBAAA,CAAA,KAAA,EAAA,KAAA,QAAA,CAAA,QAAA,CADA,GACA,CADA;AAEA,QAAA,YAAA,GAAA,KAAA,iBAAA,CAAA,KAAA,GACA,IAAA,CAAA,KAAA,iBAAA,CAAA,KAAA,EAAA,KAAA,QAAA,CAAA,QAAA,CADA,GACA,CADA;AAEA,QAAA,SAAA,GAAA,CAAA,CAVA,CAUA;;AACA,QAAA,YAAA,GAAA,KAAA,OAAA;AACA,QAAA,UAAA,GAAA,KAAA,eAAA,GAAA,CAAA,GAAA,CAAA,CAZA,CAcA;;AACA,YAAA,MAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,WAAA,EAAA,IAAA,CAAA,EAAA;AACA,eAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,YAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,WAAA;AACA,iBAAA,KAAA;AACA;;AACA,YAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,IAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,EAAA;AACA;AACA,eAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,YAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,WAAA;AACA,iBAAA,KAAA;AACA,SAvBA,CAyBA;;;AACA,YAAA,MAAA,CAAA,gBAAA,CAAA,GAAA,MAAA,CAAA,KAAA,cAAA,CAAA,YAAA,CAAA,EAAA;AACA;AACA,eAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,YAAA,IAAA,YAAA,eAAA,CAAA,KAAA,UAAA,CAAA,KAAA,EAAA,KAAA,QAAA,CAAA,cAAA,KAAA,EAAA,CAAA,kBAAA,CAAA;AAAA,WAAA;AACA,iBAAA,KAAA,CAHA,CAIA;AACA;;AAAA,YACA,QAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,EAAA,UAAA,CAAA,GACA,MAAA,CAAA,KAAA,oBAAA,CAFA,EAGA;AACA;AACA,eAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,YAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,WAAA;AACA,iBAAA,KAAA;AACA;AACA,OAvCA,MAuCA;AACA,QAAA,OAAA,GAAA,CAAA,eAAA,CAAA;AACA,QAAA,WAAA,GAAA,KAAA,cAAA;AACA,QAAA,YAAA,GAAA,KAAA,cAAA;AACA,QAAA,UAAA,GAAA,KAAA,SAAA,CAAA,KAAA;AACA,QAAA,gBAAA,GAAA,IAAA,CAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,QAAA,CAAA,QAAA,CAAA;AACA,QAAA,aAAA,GAAA,KAAA,gBAAA,CAAA,KAAA,GACA,IAAA,CAAA,KAAA,gBAAA,CAAA,KAAA,EAAA,KAAA,QAAA,CAAA,QAAA,CADA,GACA,CADA;AAEA,QAAA,YAAA,GAAA,KAAA,gBAAA,CAAA,KAAA,GACA,IAAA,CAAA,KAAA,gBAAA,CAAA,KAAA,EAAA,KAAA,QAAA,CAAA,QAAA,CADA,GACA,CADA;AAEA,QAAA,SAAA,GAAA,CAAA,CAVA,CAUA;;AACA,QAAA,YAAA,GAAA,CAAA;AACA,QAAA,UAAA,GAAA,KAAA,cAAA,GAAA,CAAA,GAAA,CAAA,CAZA,CAYA;AACA;AACA;;AACA,YAAA,MAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,WAAA,EAAA,IAAA,CAAA,EAAA;AACA,eAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,YAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,WAAA;AACA,iBAAA,KAAA;AACA;;AAEA,YAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,IAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,EAAA;AACA;AACA,eAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,YAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,WAAA;AACA,SAvBA,CAyBA;;;AACA,YAAA,MAAA,CAAA,gBAAA,CAAA,GAAA,MAAA,CAAA,KAAA,cAAA,CAAA,YAAA,CAAA,EAAA;AACA,eAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,YAAA,IAAA,YAAA,eAAA,CAAA,KAAA,UAAA,CAAA,KAAA,EAAA,KAAA,QAAA,CAAA,cAAA,KAAA,EAAA,CAAA,kBAAA,CAAA;AAAA,WAAA;AACA,iBAAA,KAAA,CAFA,CAGA;AACA;;AAAA,YACA,QAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,EAAA,UAAA,CAAA,GAAA,MAAA,CAAA,KAAA,oBAAA,CADA,EAEA;AACA;AACA,eAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,YAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAAA,WAAA;AACA,iBAAA,KAAA;AACA;AACA;;AACA,aAAA;AACA,QAAA,OAAA,EAAA,OADA;AAEA,QAAA,WAAA,EAAA,WAFA;AAGA,QAAA,YAAA,EAAA,YAHA;AAIA,QAAA,UAAA,EAAA,UAJA;AAKA,QAAA,gBAAA,EAAA,gBALA;AAMA,QAAA,aAAA,EAAA,aANA;AAOA,QAAA,YAAA,EAAA,YAPA;AAQA,QAAA,SAAA,EAAA,SARA;AASA,QAAA,IAAA,EAAA,IATA;AAUA,QAAA,UAAA,EAAA,UAVA;AAWA,QAAA,eAAA,EAAA,UAAA,GAAA,KAAA,cAAA,CAAA,aAAA,GAAA,CAXA;AAYA,QAAA,YAAA,EAAA;AAZA,OAAA;AAcA,KAzRA;AA0RA;AACA,IAAA,cA3RA,4BA2RA;AAAA;;AACA,UAAA,OAAA,GAAA,CACA,eADA,EAEA,kBAFA,EAGA,kBAHA,EAIA,WAJA,EAKA,YALA,EAMA,YANA,EAOA,YAPA,EAQA,gBARA,EASA,mBATA,EAUA,mBAVA,CAAA;AAYA,MAAA,OAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,CAAA,OAAA,GAAA,KAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,CAAA,OAAA,GAAA,IAAA;AACA,OAJA;AAKA,KA7SA;AA8SA;AACA,IAAA,SA/SA,uBA+SA;AAAA;;AACA,WAAA,KAAA,CAAA;AACA,QAAA,GAAA,EAAA,iCADA;AAEA,QAAA,QAAA,EAAA,OAFA;AAGA,QAAA,MAAA,EAAA;AACA,UAAA,MAAA,EAAA,KAAA;AADA,SAHA;AAMA,QAAA,MAAA,EAAA;AANA,OAAA,EAOA,IAPA,CAOA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,IAAA,CAAA,QAAA,OAAA,GAAA,EAAA;AACA,cAAA,IAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AACA,YAAA,MAAA,CAAA,cAAA,GAAA,IAAA,CACA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,WADA,EACA,MAAA,CAAA,QAAA,CAAA,QADA,CAAA;AAGA,YAAA,MAAA,CAAA,cAAA,GAAA,IAAA,CACA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,YADA,EACA,MAAA,CAAA,QAAA,CAAA,QADA,CAAA;AAGA,YAAA,MAAA,CAAA,YAAA,CAAA,YAAA,aAAA,MAAA,CAAA,cAAA,gBAAA,MAAA,CAAA,cAAA;AACA,YAAA,MAAA,CAAA,SAAA,CAAA,YAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AACA,YAAA,MAAA,CAAA,SAAA,CAAA,KAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AACA,YAAA,MAAA,CAAA,SAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,cAAA,EAAA,CAAA,CAAA;AACA,YAAA,MAAA,CAAA,SAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,cAAA,EAAA,CAAA,CAAA;AACA,YAAA,MAAA,CAAA,GAAA,GAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAZA,CAaA;;AACA,YAAA,MAAA,CAAA,oBAAA,GAAA,IAAA,CAAA,IAAA,CAAA,oBAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,oBAAA,EAAA,CAAA,CAAA,CAfA,CAeA;AACA;AACA,SAlBA,MAkBA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,YAAA,IAAA,EAAA,IAAA,CAAA,GAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;AACA;AACA,OA7BA;AA8BA,KA9UA;AA+UA;AACA,IAAA,eAhVA,2BAgVA,MAhVA,EAgVA;AAAA;;AACA,WAAA,KAAA,CAAA;AACA,QAAA,GAAA,EAAA,qBADA;AAEA,QAAA,QAAA,EAAA,OAFA;AAGA,QAAA,MAAA,EAAA,MAHA;AAIA,QAAA,MAAA,EAAA;AAJA,OAAA,EAKA,IALA,CAKA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,QAAA,OAAA,GAAA,IAAA,GAAA,CAAA,IAAA,EAAA;AACA,cAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,MAAA,CAAA,MAAA,CAAA,cAAA,CAAA,aAAA,CAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,cAAA,IAAA,YAAA,MAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,SAAA,GAAA,CAAA,IAAA,CAAA,UAAA,cAAA,eAAA,CAAA,MAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,QAAA,CAAA,CAAA;AAAA,cAAA,IAAA,EAAA;AAAA,aAAA;;AACA,YAAA,MAAA,CAAA,GAAA,GAAA,IAAA;AACA,WAHA,MAGA;AACA,gBAAA,GAAA,mCAAA,MAAA;AAAA,cAAA,eAAA,EAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,UAAA;AAAA,cAAA;;AACA,YAAA,MAAA,CAAA,WAAA,CAAA,GAAA;AACA;AACA,SARA,MAQA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,YAAA,IAAA,EAAA,GAAA,CAAA,GAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;;AACA,UAAA,MAAA,CAAA,GAAA,GAAA,IAAA;AACA;AACA,OAlBA;AAmBA,KApWA;AAqWA,IAAA,WArWA,uBAqWA,MArWA,EAqWA;AAAA;;AACA,WAAA,KAAA,CAAA;AACA,QAAA,GAAA,EAAA,oBADA;AAEA,QAAA,QAAA,EAAA,OAFA;AAGA,QAAA,MAAA,EAAA,MAHA;AAIA,QAAA,MAAA,EAAA;AAJA,OAAA,EAKA,IALA,CAKA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,IAAA,CAAA,QAAA,OAAA,GAAA,EAAA;AACA;AACA,UAAA,MAAA,CAAA,cAAA,GAFA,CAGA;;;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,oBAAA,EAAA;AACA,YAAA,IAAA,EAAA,KADA;AAEA,YAAA,WAAA,EAAA,MAAA,CAAA;AAFA,WAAA;;AAIA,UAAA,MAAA,CAAA,SAAA,GARA,CASA;;;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,cAAA,EAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA,EAVA,CAWA;;;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,YAAA,IAAA,EAAA,MAAA,CAAA,EAAA,CAAA,mBAAA,CAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;;AACA,UAAA,MAAA,CAAA,GAAA,GAAA,IAAA;AACA,SAdA,MAcA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA;AAAA,YAAA,IAAA,EAAA,IAAA,CAAA,GAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;;AACA,UAAA,MAAA,CAAA,GAAA,GAAA,IAAA;AACA;AACA,OAxBA,EAwBA,KAxBA,CAwBA,YAAA;AACA,QAAA,MAAA,CAAA,GAAA,GAAA,IAAA;AACA,OA1BA;AA2BA;AAjYA,GAnVA;AAstBA;AACA,EAAA,aAvtBA,2BAutBA;AACA,IAAA,aAAA,CAAA,KAAA,WAAA,CAAA;AACA;AAztBA,CAAA","sourcesContent":["<!-- 币币交易 下单 -->\n<template>\n  <div class=\"trade-box internationalTradeForm b-2-cl\">\n    <div class=\"title-block a-21-bg a-3-bd\">\n      <span\n        class=\"tab\"\n        @click=\"switchTradeSellorBuy(1)\"\n        :class=\"{ 'a-12-bd b-1-cl': tradeIsSell === 1 }\"\n      >\n        <!-- 限价交易 -->\n        {{ $t(\"trade.buy\") }}\n      </span>\n      <span\n        class=\"tab\"\n        @click=\"switchTradeSellorBuy(2)\"\n        :class=\"{ 'a-12-bd b-1-cl': tradeIsSell === 2 }\"\n      >\n        <!-- 市价交易 -->\n        {{ $t(\"trade.sell\") }}\n      </span>\n      <span class=\"tab\"\n        v-if=\"gridTradeFlag && showGridFlag\"\n        @click=\"switchGrid\"\n        :class=\"{'a-12-bd b-1-cl': tradeIsSell === 3}\">\n        <!-- 网格交易 -->\n        {{$t('gridTrade.title')}}\n      </span>\n    </div>\n    <div\n    v-if=\"tradeIsSell !== 3\"\n      class=\"switch-trade-type a-21-bg a-3-bd b-1-cl\"\n      @mouseleave=\"hideSelectModal\"\n    >\n      <div class=\"content\">\n        <span @mouseenter=\"handMouseenter\">{{\n          transactionType == 1\n            ? $t(\"trade.limitPriceTrade\")\n            : $t(\"trade.marketPriceTrade\")\n        }}</span>\n        <svg class=\"icon icon-14\" aria-hidden=\"true\">\n          <use xlink:href=\"#icon-a_13\"></use>\n        </svg>\n        <div class=\"header-sub-nav a-5-bg x-2-cl\" v-show=\"selectModalState\">\n          <ul class=\"header-user-text\">\n            <li class=\"g-3-cl-h\">\n              <span\n                @click=\"switchTradeType(1)\"\n                :class=\"langHover === 'limitPriceTrade' ? 'a-4-bg b-1-cl' : ''\"\n                @mouseenter=\"handMouseenter('limitPriceTrade')\"\n                @mouseout=\"handMouseleave('limitPriceTrade')\"\n              >\n                <!-- 限价交易 -->\n                {{ $t(\"trade.limitPriceTrade\") }}\n              </span>\n            </li>\n            <li class=\"g-3-cl-h\">\n              <span\n                @click=\"switchTradeType(2)\"\n                :class=\"langHover === 'marketPriceTrade' ? 'a-4-bg b-1-cl' : ''\"\n                @mouseenter=\"handMouseenter('marketPriceTrade')\"\n                @mouseout=\"handMouseleave('marketPriceTrade')\"\n              >\n                <!-- 市价交易 -->\n                {{ $t(\"trade.marketPriceTrade\") }}\n              </span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <!-- 选择ai或者自定义 -->\n    <div\n      v-if=\"tradeIsSell === 3\"\n      class=\"grid-switch switch-trade-type a-21-bg a-3-bd b-1-cl clearfix\"\n      @mouseleave=\"hideSelectModal\"\n      :style=\"gridType == 2 ? 'padding: 0 16px;' : 'padding: 0 0 0 16px;'\"\n    >\n      <div class=\"content\">\n        <span @mouseenter=\"handMouseenter\"><!-- 自定义策略 -->{{\n          gridType == 1\n            ? $t('gridTrade.type1')\n            : $t('gridTrade.type2')\n        }}</span>\n        <svg class=\"icon icon-14\" aria-hidden=\"true\">\n          <use xlink:href=\"#icon-a_13\"></use>\n        </svg>\n        <div class=\"header-sub-nav a-5-bg x-2-cl\" v-show=\"selectModalState\">\n          <ul class=\"header-user-text\">\n            <li class=\"g-3-cl-h\">\n              <span\n                @click=\"() => this.gridType = 1\"\n                :class=\"langHover === 'gridSet' ? 'a-4-bg b-1-cl' : ''\"\n                @mouseenter=\"handMouseenter('gridSet')\"\n                @mouseout=\"handMouseleave('gridSet')\"\n              >\n                <!-- 自定义策略 -->\n                {{ $t('gridTrade.type1') }}\n              </span>\n            </li>\n            <li class=\"g-3-cl-h\">\n              <span\n                @click=\"() => this.gridType = 2\"\n                :class=\"langHover === 'gridAi' ? 'a-4-bg b-1-cl' : ''\"\n                @mouseenter=\"handMouseenter('gridAi')\"\n                @mouseout=\"handMouseleave('gridAi')\"\n              >\n                <!-- Ai策略 -->\n                {{ $t('gridTrade.type2') }}\n              </span>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <!-- <p class=\"priceUser\">\n        <span class=\"lov\">\n          <span class=\"lovText mr-text\">{{$t('gridTrade.setText1')}}:\n            {{currenTaccount.unitsAccoubt}}\n            {{symbolUnit.units | getCoinShowName(coinList)}}\n          </span>\n          <span class=\"lovText\">{{currenTaccount.symbolAccoubt}}\n            {{symbolUnit.symbol | getCoinShowName(coinList)}}\n          </span>\n        </span>\n      </p> -->\n    </div>\n    <div class=\"trade-form\" v-if=\"tradeIsSell !== 3\">\n      <div class=\"trade-block\" v-if=\"tradeIsSell === 1\">\n        <div class=\"form-block\">\n          <div class=\"top-mag\">\n            <!-- <span class=\"trade-type\">\n              <span>{{$t('trade.balance')}}</span>\n              <span class=\"lovText b-1-cl\">{{ currenTaccount.unitsAccoubt }}\n                 {{symbolUnit.units | getCoinShowName(coinList)}}\n               </span>\n            </span> -->\n            <span class=\"lov b-1-cl\">\n              <c-button\n                type=\"text\"\n                class=\"lovButton\"\n                v-if=\"\n                  this.isLogin && currenTaccount.unitsOpen.toString() === '1'\n                \"\n                @click=\"goCz(symbolUnit.units)\"\n                >{{ $t(\"manageFinances.goRecharge\") }}</c-button\n              >\n            </span>\n          </div>\n          <trade-input\n            v-model=\"formData_1.value\"\n            :fixValue=\"fixValue.priceFix\"\n            @onChanes=\"onChaneForm\"\n            name=\"formData_1\"\n            :datas=\"formData_1\"\n          />\n          <trade-input\n            v-model=\"formData_2.value\"\n            :fixValue=\"formData2Fix\"\n            @onChanes=\"onChaneForm\"\n            name=\"formData_2\"\n            :datas=\"formData_2\"\n          />\n          <div class=\"percentage\">\n            <span\n              v-for=\"(item, index) in perArr\"\n              :key=\"index + 'buy'\"\n              :class=\"perBuyClass(item)\"\n              @click=\"setPerNumber('buy', item)\"\n              class=\"per-item\"\n              >{{ item }}%</span\n            >\n          </div>\n          <div class=\"volume-trade\">\n            <div v-if=\"transactionType === 1\">\n              <!-- 交易额: -->\n              {{ $t(\"trade.dealMoney\") }}\n              <span class=\"vol\" v-if=\"tradeVolumeBuy !== '--'\"\n                >{{ tradeVolumeBuy }}\n                {{ symbolUnit.units | getCoinShowName(coinList)}}\n                </span\n              >\n            </div>\n          </div>\n          <c-button\n            :defaultColorClass=\"buttosContent.buyButton.class\"\n            :hoverColorClass=\"buttosContent.buyButton.class\"\n            :activeColorClass=\"buttosContent.buyButton.class\"\n            @click=\"submit('BUY')\"\n            width=\"100%\"\n            >{{ buttosContent.buyButton.text }}</c-button\n          >\n        </div>\n      </div>\n      <div class=\"trade-block\" v-if=\"tradeIsSell === 2\">\n        <div class=\"form-block\">\n          <div class=\"top-mag\">\n            <!-- <span class=\"trade-type\">\n              <span>{{$t('trade.balance')}}</span>\n              <span class=\"lovText b-1-cl\">\n                  {{currenTaccount.symbolAccoubt}}\n                  {{symbolUnit.symbol | getCoinShowName(coinList)}}\n                </span\n              >\n            </span> -->\n            <span class=\"lov b-1-cl\">\n              <c-button\n                type=\"text\"\n                class=\"lovButton\"\n                v-if=\"\n                  this.isLogin && currenTaccount.unitsOpen.toString() === '1'\n                \"\n                @click=\"goCz(symbolUnit.units)\"\n                >{{ $t(\"manageFinances.goRecharge\") }}</c-button\n              >\n            </span>\n          </div>\n          <trade-input\n            v-model=\"formData_3.value\"\n            @onChanes=\"onChaneForm\"\n            name=\"formData_3\"\n            :fixValue=\"fixValue.priceFix\"\n            :datas=\"formData_3\"\n          />\n          <trade-input\n            v-model=\"formData_4.value\"\n            @onChanes=\"onChaneForm\"\n            name=\"formData_4\"\n            :fixValue=\"fixValue.volumeFix\"\n            :datas=\"formData_4\"\n          />\n          <div class=\"percentage\">\n            <span\n              v-for=\"(item, index) in perArr\"\n              :key=\"index + 'sell'\"\n              @click=\"setPerNumber('sell', item)\"\n              class=\"per-item\"\n              :class=\"perSellClass(item)\"\n              >{{ item }}%</span\n            >\n          </div>\n          <div class=\"volume-trade\">\n            <div v-if=\"transactionType === 1\">\n              <!-- 交易额: -->\n              {{ $t(\"trade.dealMoney\") }}\n              <span\n                class=\"vol\"\n                :class=\"\n                  volumeTradeClass(\n                    tradeVolumeSell,\n                    currenTaccount.symbolAccoubt\n                  )\n                \"\n                v-if=\"tradeVolumeSell !== '--'\">\n                {{ tradeVolumeSell }}\n                {{symbolUnit.units | getCoinShowName(coinList)}}\n              </span>\n            </div>\n          </div>\n          <c-button\n            :defaultColorClass=\"buttosContent.sellButton.class\"\n            :hoverColorClass=\"buttosContent.sellButton.class\"\n            :activeColorClass=\"buttosContent.sellButton.class\"\n            @click=\"submit('SELL')\"\n            width=\"100%\"\n            >{{ buttosContent.sellButton.text }}</c-button\n          >\n        </div>\n      </div>\n    </div>\n    <div class=\"trade-form trade-grid\" v-else>\n      <div class=\"trade-block trade_block_width\" v-if=\"gridType === 1\">\n          <div class=\"form-block\">\n            <p style=\"lineHeight: 16px;\">\n              {{$t('gridTrade.setText2')}}:\n            </p>\n            <div class=\"input-inline-box clearfix\">\n              <div class=\"input-inline-item\">\n                <grid-trade-input\n                  v-model=\"gridSetMin.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridSetMin\"\n                  :fixValue='fixValue.priceFix'\n                  :placeText=\"$t('gridTrade.setText3')\"\n                  :datas=\"gridSetMin\"/>\n              </div>\n              <b class=\"a-3-bd\"></b>\n              <div class=\"input-inline-item\">\n                <grid-trade-input\n                  v-model=\"gridSetMax.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridSetMax\"\n                  :fixValue='fixValue.priceFix'\n                  :placeText=\"$t('gridTrade.setText4')\"\n                  :datas=\"gridSetMax\"/>\n              </div>\n            </div>\n            <p>{{$t('gridTrade.setText5')}}: </p>\n            <div class=\"input-inline-box clearfix\">\n              <div class=\"input-inline-item input-inline-item_width\">\n                <grid-trade-input\n                  v-model=\"gridSetNum.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridSetNum\"\n                  :fixValue='fixValue.priceFix'\n                  :placeText=\"'2-100'\"\n                  :datas=\"gridSetNum\"/>\n              </div>\n              <div style=\"width: 10px;\"></div>\n              <div class=\"input-inline-item clearfix set-type\">\n                <div class=\"set-type-btn\"\n                :class=\"setType === 1 ? 'u-8-bd u-8-cl' : 'a-3-bd'\" @click=\"() => this.setType = 1\">\n                  {{$t('gridTrade.setText6')}}\n                </div>\n                <div class=\"set-type-btn\"\n                :class=\"setType === 2 ? 'u-8-bd u-8-cl' : 'a-3-bd'\" @click=\"() => this.setType = 2\">\n                  {{$t('gridTrade.setText7')}}\n                </div>\n              </div>\n            </div>\n            <p>{{$t('gridTrade.setText8')}}\n              {{setType === 1 ? `${gridSetMinProfits}%～${gridSetMaxProfits}`\n              : gridSetMaxProfits}}%({{$t('gridTrade.setText9')}})</p>\n            <div class=\"set-num clearfix\">\n              <div class=\"setn-num-list\">\n                <p>{{$t('gridTrade.setText10')}}</p>\n                <grid-trade-input\n                  v-model=\"gridSetAccount.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridSetAccount\"\n                  :fixValue='fixValue.priceFix'\n                  :datas=\"gridSetAccount\"/>\n              </div>\n              <div class=\"setn-num-list\">\n                <p>{{$t('gridTrade.setText12')}}({{$t('gridTrade.optional')}})</p>\n                <grid-trade-input\n                  v-model=\"gridSetMinBalance.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridSetMinBalance\"\n                  :fixValue='fixValue.priceFix'\n                  :datas=\"gridSetMinBalance\"/>\n              </div>\n              <div class=\"setn-num-list\">\n                <p>{{$t('gridTrade.setText11')}}({{$t('gridTrade.optional')}})</p>\n                <grid-trade-input\n                  v-model=\"gridSetMaxBalance.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridSetMaxBalance\"\n                  :fixValue='fixValue.priceFix'\n                  :datas=\"gridSetMaxBalance\"/>\n              </div>\n            </div>\n            <div class=\"set-btc\">\n                <span>\n                  {{$t('gridTrade.setText13')}} {{symbolUnit.symbol | getCoinShowName(coinList)}}\n                </span>\n                <div class=\"switch-inline\">\n                  <c-switch :value=\"gridSetFormFlag\"\n                  @click=\"() => this.gridSetFormFlag = !this.gridSetFormFlag\"/>\n                </div>\n              </div>\n            <c-button\n              @click=\"gradSub('gradTrad')\"\n              height=\"35px\"\n              width=\"100%\">\n              {{gridbuttosContent.gridButton.text}}\n            </c-button>\n          </div>\n        </div>\n        <div class=\"trade-block trade_block_width\" v-if=\"gridType === 2\">\n          <div class=\"form-block\">\n            <p class=\"fee_love\">\n              <span>\n                {{$t('gridTrade.setText2')}}:\n              </span>\n              <b></b>\n              <label for=\"\">\n                <b>\n                  {{$t('gridTrade.aiText1')}}\n                </b>\n                &nbsp;&nbsp;\n                <span class=\"u-1-cl\">\n                  {{sevenDay}} %\n                </span>\n              </label>\n            </p>\n            <div class=\"input-inline-box clearfix\">\n              <div class=\"input-inline-item\">\n                <grid-trade-input\n                  v-model=\"gridAiBlance.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridAiBlance\"\n                  :fixValue='fixValue.priceFix'\n                  :placeholder=\"$t('gridTrade.setText2')\"\n                  :datas=\"gridAiBlance\"/>\n              </div>\n            </div>\n            <p>{{$t('gridTrade.setText5')}}: </p>\n            <div class=\"input-inline-box clearfix\">\n              <div class=\"input-inline-item\">\n                <grid-trade-input\n                  v-model=\"gridAiNum.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridAiNum\"\n                  :fixValue='fixValue.priceFix'\n                  :placeholder=\"$t('gridTrade.setText5')\"\n                  :datas=\"gridAiNum\"/>\n              </div>\n            </div>\n            <p>{{$t('gridTrade.setText8')}}\n              {{gridAiMin}}%～{{gridAiMax}}%({{$t('gridTrade.setText9')}})</p>\n            <div class=\"set-num clearfix\">\n              <div class=\"setn-num-list\">\n                <p>{{$t('gridTrade.setText10')}}</p>\n                <grid-trade-input\n                  v-model=\"gridAiAccount.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridAiAccount\"\n                  :fixValue='fixValue.priceFix'\n                  :datas=\"gridAiAccount\"/>\n              </div>\n              <div class=\"setn-num-list\">\n                <p>{{$t('gridTrade.setText12')}}({{$t('gridTrade.optional')}})</p>\n                <grid-trade-input\n                  v-model=\"gridAiMinBalance.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridAiMinBalance\"\n                  :fixValue='fixValue.priceFix'\n                  :datas=\"gridAiMinBalance\"/>\n              </div>\n              <div class=\"setn-num-list\">\n                <p>{{$t('gridTrade.setText11')}}({{$t('gridTrade.optional')}})</p>\n                <grid-trade-input\n                  v-model=\"gridAiMaxBalance.value\"\n                  @onChanes=\"onChaneForm\"\n                  name=\"gridAiMaxBalance\"\n                  :fixValue='fixValue.priceFix'\n                  :datas=\"gridAiMaxBalance\"/>\n              </div>\n            </div>\n            <div class=\"set-btc\">\n                <span>\n                 {{$t('gridTrade.setText13')}} {{symbolUnit.symbol | getCoinShowName(coinList)}}\n                </span>\n                <div class=\"switch-inline\">\n                  <c-switch :value=\"gridAiFormFlag\"\n                  @click=\"() => this.gridAiFormFlag = !this.gridAiFormFlag\"/>\n                </div>\n              </div>\n            <c-button\n              @click=\"gradSub('GridAi')\"\n              height=\"35px\"\n              width=\"100%\">\n              {{gridbuttosContent.gridAiButton.text}}\n            </c-button>\n          </div>\n        </div>\n    </div>\n    <!-- 未认证 提示框 -->\n    <c-alert :showFlag=\"notAuthShowDialog\"\n        :buttonText=\"$t('otcRelease.DeCertification')\"\n        :imgMap=\"imgMap\"\n        @close=\"dialogClose\"\n        @confirm=\"gotoAuth\">\n      <div class=\"ts-content-text\">\n        <span v-if=\"tsTexttype === 1\">{{$t('personal.exccAuthForm.text18')}}</span>\n        <span v-else>{{$t('personal.exccAuthForm.text19')}}</span>\n      </div>\n    </c-alert>\n  </div>\n</template>\n<script>\nimport 'BlockChain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/internationalTradeForm/internationalTradeForm.styl';\nimport mixin from 'BlockChain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/internationalTradeForm/internationalTradeForm';\nimport {\n  myStorage, fixD, division, cut, nul, getCoinShowName,\n} from 'BlockChain-ui-privatization/utils';\nimport tradeInput from './tradeInput.vue';\nimport GridTradeInput from './GridTradeInput.vue';\n\n\nexport default {\n  mixins: [mixin],\n  components: {\n    tradeInput,\n    GridTradeInput,\n  },\n  mounted() {\n    this.init();\n  },\n  data() {\n    return {\n      marketData: [],\n      tradeIsSell: 1,\n      gridTabType: 0,\n      gridType: 1, // 专业版选择自定义或者ai\n      setType: 1, // 类型1等差2 等比\n      gridSetFormFlag: false,\n      gridAiFormFlag: false,\n      minimumOrderQuantity: 0, // 最小下单金额\n      // 七日年化收益率\n      sevenDay: '--',\n      gridAiMin: '--', // 最大利润率\n      gridAiMax: '--', // 最小利润率\n      gridAiMinPrice: '--', // Ai 最小值\n      gridAiMaxPrice: '--', // Ai 最大值\n      fee: null, // 手续费\n      // set代表自定义\n      gridSetMin: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridSetMax: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      // 数量\n      gridSetNum: {\n        units: '',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      // 资产\n      gridSetAccount: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 53%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      // 止盈价格\n      gridSetMaxBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 53%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      // 止损价格\n      gridSetMinBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 53%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiBlance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: true,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiNum: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: true,\n        disabledText: '',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiAccount: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 53%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiMaxBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 53%',\n        errorHeight: '-30px',\n        value: '',\n      },\n      gridAiMinBalance: {\n        units: myStorage.get('sSymbolName') ? myStorage.get('sSymbolName').split('/')[1] : 'USDT',\n        errorText: '',\n        isError: false,\n        disabled: false,\n        disabledText: '',\n        style: 'width: 53%',\n        errorHeight: '-30px',\n        value: '',\n      },\n    };\n  },\n  computed: {\n    //  是否开启了 网格\n    gridTradeFlag() {\n      const { publicInfo } = this.$store.state.baseData;\n      let str = 1;\n      if (publicInfo && publicInfo.switch && publicInfo.switch.grid_trade_switch) {\n        str = Number(publicInfo.switch.grid_trade_switch);\n      }\n      return str;\n    },\n    // 该币对是否开启网格\n    showGridFlag() {\n      let flag = false;\n      if (this.symbolAll && this.symbolCurrent) {\n        const symbol = this.symbolAll[this.symbolCurrent];\n\n        if (symbol && symbol.is_grid_open) {\n          flag = true;\n        }\n      }\n      return flag;\n    },\n    // 按钮信息\n    gridbuttosContent() {\n      return {\n        gridButton: {\n          // 开启网格交易\n          text: this.isLogin\n            ? this.$t('gridTrade.btn1')\n            : this.$t('trade.loginReg'), // '登录/注册',\n          class: this.isLogin ? 'u-1-bg buyBtn u-16-cl' : 'u-8-bg buyBtn u-16-cl',\n        },\n        // 开启AI网格策略\n        gridAiButton: {\n          text: this.isLogin\n            ? this.$t('gridTrade.btn2')\n            : this.$t('trade.loginReg'), // '登录/注册',\n          class: this.isLogin ? 'u-1-bg buyBtn u-16-cl' : 'u-8-bg buyBtn u-16-cl',\n        },\n      };\n    },\n    // 等差网格（动态利润）： min ~ max\n\n    // max =（（最高价-最低价）/ （网格数量 - 1）/ 最低价）  - 买入手续费率 - 卖出手续费率\n\n    // min =（ (最高价-最低价）/ （网格数量 - 1））/ （最高价 - （ (最高价-最低价）/ （网格数量 - 1）））  - 买入手续费率 - 卖出手续费率\n\n    // 最低利润\n    gridSetMinProfits() {\n      // 1: 等差 2 等比\n      let val = null;\n      if (this.gridSetMax.value\n        && this.gridSetMin.value\n        && this.gridSetNum.value) {\n        if (this.setType === 1) {\n          const card = division(\n            cut(this.gridSetMax.value, this.gridSetMin.value),\n            (this.gridSetNum.value - 1),\n          );\n          val = nul(cut(\n            cut(\n              division(\n                card,\n                cut(\n                  this.gridSetMax.value,\n                  card,\n                ),\n              ),\n              this.fee,\n            ),\n            this.fee,\n          ), 100);\n        }\n      }\n      if (val === Infinity || val === -Infinity) {\n        val = null;\n      }\n      return fixD(val, 2) || '--';\n    },\n    // 最高利润\n    gridSetMaxProfits() {\n      // 1: 等差 2 等比\n      let val = null;\n      if (this.gridSetMax.value\n        && this.gridSetMin.value\n        && this.gridSetNum.value) {\n        if (this.setType === 1) {\n          val = nul(cut(\n            cut(\n              division(\n                division(\n                  cut(this.gridSetMax.value, this.gridSetMin.value),\n                  (this.gridSetNum.value - 1),\n                ), this.gridSetMin.value,\n              ),\n              this.fee,\n            ),\n            this.fee,\n          ), 100);\n          // 等比网格（固定利润）=（（最高价/最低价）开（网格数量-1）次方） - 手续费率*2-1\n        } else if (this.setType === 2) {\n          val = nul(cut(\n            cut(\n              division(\n                this.gridSetMax.value,\n                this.gridSetMin.value,\n              )\n                ** (1 / (this.gridSetNum.value - 1)),\n              nul(this.fee, 2),\n            ),\n            1,\n          ), 100);\n        }\n      }\n      if (val === Infinity || val === -Infinity) {\n        val = null;\n      }\n      return fixD(val, 2) || '--';\n    },\n    setNumVal() {\n      return this.gridSetNum.value;\n    },\n    symbolsData() {\n      if (this.marketData[this.symbolCurrent]) {\n        return this.marketData[this.symbolCurrent];\n      }\n      return {\n        name: '--',\n        symbol: {\n          symbol: '--',\n          unit: '--',\n        },\n        close: {\n          class: '',\n          data: 0,\n          price: '--',\n        },\n        amount: '--',\n        rose: {\n          class: '',\n          data: '--',\n        },\n      };\n    },\n  },\n  watch: {\n    // 切换自定义和ai\n    gridType() {\n      this.clearGridValue();\n      this.getAiData();\n    },\n    // 切换 限价交易 和 市价交易\n    transactionType(val) {\n      // 2 市价交易\n      this.$bus.$emit('tradeType', false);\n      if (val === 2) {\n        this.formData_1.disabled = true;\n        this.formData_1.disabledText = this.$t('trade.mPriceBuy'); // 以市场最优价买入\n        this.formData_2.title = this.$t('trade.dealMoney'); // '交易额';\n        this.formData_2.units = this.symbolUnit.units;\n        this.formData_3.disabled = true;\n        this.formData_3.disabledText = this.$t('trade.mPriceSell'); // 以市场最优价卖出\n      } else if (val === 1) {\n        this.formData_1.disabled = false;\n        this.formData_1.disabledText = '';\n        this.formData_2.title = this.$t('trade.number'); // '数量';\n        this.formData_2.units = this.symbolUnit.symbol;\n        this.formData_3.disabled = false;\n        this.formData_3.disabledText = '';\n      } else if (val === 4) {\n        this.clearGridValue();\n        this.getAiData();\n        // 改变父组件样式\n        this.$bus.$emit('tradeType', 'grid');\n      }\n    },\n    setNumVal(v) {\n      if (v) {\n        this.$nextTick(() => {\n          this.gridSetNum.value = fixD(v, 0);\n        });\n      }\n    },\n    // 各个输入框的 单位\n    symbolUnit(val) {\n      this.formData_1.units = val.units;\n      this.formData_2.units = val.symbol;\n      this.formData_3.units = val.units;\n      this.formData_4.units = val.symbol;\n      // this.formData_5.units = val.symbol;\n      // this.formData_6.units = val.symbol;\n      this.gridSetMin.units = val.units;\n      this.gridSetMax.units = val.units;\n      this.gridSetAccount.units = val.units;\n      this.gridSetMaxBalance.units = val.units;\n      this.gridSetMinBalance.units = val.units;\n      this.gridAiAccount.units = val.units;\n      this.gridAiMaxBalance.units = val.units;\n      this.gridAiMinBalance.units = val.units;\n    },\n  },\n  methods: {\n    init() {\n      // 两秒让报错消失\n      this.$bus.$on('errorMsg', () => {\n        const formKey = [\n          'gridAiAccount',\n          'gridAiMaxBalance',\n          'gridAiMinBalance',\n          'gridAiNum',\n          'gridSetMin',\n          'gridSetMax',\n          'gridSetNum',\n          'gridSetAccount',\n          'gridSetMaxBalance',\n          'gridSetMinBalance',\n        ];\n        formKey.forEach((item) => {\n          this[item].isError = false;\n        });\n      });\n      // 监听 当前货币对切换\n      this.$bus.$on('SYMBOL_CURRENT', (val) => {\n        this.clearValue();\n        this.clearGridValue();\n        this.symbolCurrent = val;\n        if (!this.gridTradeFlag || !this.showGridFlag) {\n          this.tradeIsSell = 1;\n        }\n        if (this.gridType === 2) {\n          this.getAiData();\n        }\n      });\n      if (this.isLogin) {\n        this.$store.dispatch('assetsExchangeData', {\n          auto: false,\n          coinSymbols: this.coinSymbols,\n        });\n      }\n      // 监听 市场（最新价格） 数据\n      this.$bus.$on('MARKET_DATA', (data) => {\n        this.marketData = JSON.parse(JSON.stringify(data));\n      });\n      // 监听 价格点击\n      this.$bus.$on('HANDEL_PRICE', (data) => {\n        if (data) {\n        // const obj = {name: 'formData_1', data };\n          const arr = ['formData_1', 'formData_3'];\n          arr.forEach((item) => {\n            this.onChaneForm({ name: item, value: data });\n          });\n        // onChaneForm\n        // this.formData_1.value = data;\n        // this.formData_3.value = data;\n        }\n      });\n    },\n    switchGrid() {\n      this.clearValue();\n      this.clearGridValue();\n      this.getAiData();\n      this.tradeIsSell = 3;\n    },\n    gradSub(type) {\n      if (!this.isLogin) {\n        this.$router.push('/login');\n      } else {\n        if (!this.submitGridFormKey(type)) return;\n        const {\n          formKey,\n          lowestPrice,\n          highestPrice,\n          gridNumber,\n          totalQuoteAmount,\n          stopHighPrice,\n          stopLowPrice,\n          quantType,\n          flag,\n          useOwnBase,\n          totalBaseAmount,\n          gridLineType,\n        } = this.submitGridFormKey(type);\n        let fal = true;\n        const { lan } = this.$store.state.baseData;\n        let lang = lan;\n        if (lan !== 'zh_CN') {\n          lang = 'en_US';\n        }\n        if (lang === 'en_US') {\n          const arrs = ['gridSetNum', 'gridAiNum', 'gridSetAccount', 'gridAiAccount'];\n          arrs.forEach((item) => {\n            this[item].errorHeight = '-40px';\n          });\n        }\n        if (formKey.length) {\n          formKey.forEach((item) => {\n            const { value } = this[item];\n            if (!value) {\n              this[item].errorText = `${this.$t('trade.pleaseInput')}`;\n              this[item].isError = true;\n              fal = false;\n            }\n            if (parseFloat(value) <= 0) {\n              this[item].errorText = `${this.$t('trade.inputError')}`; // 输入有误\n              this[item].isError = true;\n              fal = false;\n            }\n          });\n          if (this.fal && fal && flag) {\n            // 单格利润过小，请重新设置ai\n            if (type !== 'gradTrad') {\n              if (this.gridAiMax === '--' || this.gridAiMax <= 0 || this.gridAiMin === '--' || this.gridAiMin <= 0) {\n                fal = false;\n                this.$bus.$emit('tip', { text: this.$t('gridTrade.error9') });\n                return;\n              }\n            } else if (type === 'gradTrad') { // 单格利润过小，请重新设置自定义\n              if (gridLineType === 1) { // 等差\n                if (this.gridSetMinProfits === '--' || this.gridSetMinProfits <= 0 || this.gridSetMaxProfits === '--' || this.gridSetMaxProfits <= 0) {\n                  this.$bus.$emit('tip', { text: this.$t('gridTrade.error9') });\n                  fal = false;\n                  return;\n                }\n              } else if (gridLineType === 2) { // 等比只校验最大\n                if (this.gridSetMaxProfits === '--' || this.gridSetMaxProfits <= 0) {\n                  this.$bus.$emit('tip', { text: this.$t('gridTrade.error9') });\n                  fal = false;\n                  return;\n                }\n              }\n            }\n            if (Number(stopHighPrice) && Number(stopHighPrice) <= Number(highestPrice)) {\n              // 止盈价格必须高于网格最高价\n              this.$bus.$emit('tip', { text: this.$t('gridTrade.error5') });\n              fal = false;\n            } else if (Number(stopHighPrice)\n            && Number(stopHighPrice) <= Number(this.symbolsData.close.data)) {\n              this.$bus.$emit('tip', { text: this.$t('gridTrade.error7') });\n              fal = false;\n            } else if (Number(stopLowPrice)\n            && Number(stopLowPrice) >= Number(lowestPrice)) {\n              // 止损价格必须低于网格最低价\n              this.$bus.$emit('tip', { text: this.$t('gridTrade.error6') });\n              fal = false;\n            } else if (Number(stopLowPrice)\n            && Number(stopLowPrice) >= Number(this.symbolsData.close.data)) {\n              console.log(this.symbolsData.close.data);\n              this.$bus.$emit('tip', { text: this.$t('gridTrade.error8') });\n              fal = false;\n            }\n          }\n          if (this.fal && fal && flag) {\n            this.fal = false;\n            const submitData = {\n              symbol: this.symbolCurrent,\n              lowestPrice,\n              highestPrice,\n              gridNumber,\n              totalQuoteAmount,\n              stopHighPrice,\n              stopLowPrice,\n              quantType,\n              useOwnBase,\n              totalBaseAmount,\n              gridLineType, // 网格类型 1:等差 2:等比\n              fee: this.fee,\n            };\n            if (useOwnBase) {\n              submitData.currentPrice = this.symbolsData.close.data;\n              if (submitData.currentPrice) {\n                this.gridCancelEvent(submitData);\n              }\n            } else {\n              this.gridSubData(submitData);\n            }\n          }\n        }\n      }\n    },\n    submitGridFormKey(type) {\n      let formKey = [];\n      let lowestPrice = null;\n      let highestPrice = null;\n      let gridNumber = null;\n      let totalQuoteAmount = null;\n      let stopHighPrice = null;\n      let stopLowPrice = null;\n      let quantType = null;\n      const flag = true;\n      let gridLineType = 1;\n      let useOwnBase = 0;\n      if (type === 'gradTrad') {\n        formKey = ['gridSetMin', 'gridSetMax', 'gridSetNum', 'gridSetAccount'];\n        lowestPrice = fixD(this.gridSetMin.value, this.fixValue.priceFix);\n        highestPrice = fixD(this.gridSetMax.value, this.fixValue.priceFix);\n        gridNumber = fixD(this.gridSetNum.value, this.fixValue.volumeFix);\n        totalQuoteAmount = fixD(this.gridSetAccount.value, this.fixValue.priceFix);\n        stopHighPrice = this.gridSetMaxBalance.value\n          ? fixD(this.gridSetMaxBalance.value, this.fixValue.priceFix) : 0;\n        stopLowPrice = this.gridSetMinBalance.value\n          ? fixD(this.gridSetMinBalance.value, this.fixValue.priceFix) : 0;\n        quantType = 1; // 网格\n        gridLineType = this.setType;\n        useOwnBase = this.gridSetFormFlag ? 1 : 0;\n\n        // 判断最高价不能低于最低价的1.02倍。如低于，则提示：价格区间过小，请重新设置\n        if (Number(highestPrice) < nul(lowestPrice, 1.02)) {\n          this.$bus.$emit('tip', { text: this.$t('gridTrade.error1') });\n          return false;\n        }\n        if (Number(gridNumber) < 2 || Number(gridNumber) > 100) {\n          // 数量区间为：2-100\n          this.$bus.$emit('tip', { text: this.$t('gridTrade.error2') });\n          return false;\n        }\n\n        // 判断投入资金是否有足够余额，如无，则提示：USDT余额不足\n        if (Number(totalQuoteAmount) > Number(this.currenTaccount.unitsAccoubt)) {\n          // USDT余额不足\n          this.$bus.$emit('tip', { text: `${getCoinShowName(this.symbolUnit.units, this.coinList)} ${this.$t('gridTrade.error3')}` });\n          return false;\n          // 总投入资金/网格数量，不能小于当前币对的最小下单金额\n        } if (\n          division(Number(totalQuoteAmount), gridNumber)\n         < Number(this.minimumOrderQuantity)\n        ) {\n          // 每格投入资金小于当前币对的最小下单金额\n          this.$bus.$emit('tip', { text: this.$t('gridTrade.error4') });\n          return false;\n        }\n      } else {\n        formKey = ['gridAiAccount'];\n        lowestPrice = this.gridAiMinPrice;\n        highestPrice = this.gridAiMaxPrice;\n        gridNumber = this.gridAiNum.value;\n        totalQuoteAmount = fixD(this.gridAiAccount.value, this.fixValue.priceFix);\n        stopHighPrice = this.gridAiMaxBalance.value\n          ? fixD(this.gridAiMaxBalance.value, this.fixValue.priceFix) : 0;\n        stopLowPrice = this.gridAiMinBalance.value\n          ? fixD(this.gridAiMinBalance.value, this.fixValue.priceFix) : 0;\n        quantType = 1; // 网格\n        gridLineType = 1;\n        useOwnBase = this.gridAiFormFlag ? 1 : 0; // 是否使用Base资产 0:不使用 1:使用\n        // 单格利润过小，请重新设置\n        // 判断最高价不能低于最低价的1.02倍。如低于，则提示：价格区间过小，请重新设置\n        if (Number(highestPrice) < nul(lowestPrice, 1.02)) {\n          this.$bus.$emit('tip', { text: this.$t('gridTrade.error1') });\n          return false;\n        }\n\n        if (Number(gridNumber) < 2 || Number(gridNumber) > 100) {\n          // 数量区间为：2-100\n          this.$bus.$emit('tip', { text: this.$t('gridTrade.error2') });\n        }\n\n        // 判断投入资金是否有足够余额，如无，则提示：USDT余额不足\n        if (Number(totalQuoteAmount) > Number(this.currenTaccount.unitsAccoubt)) {\n          this.$bus.$emit('tip', { text: `${getCoinShowName(this.symbolUnit.units, this.coinList)} ${this.$t('gridTrade.error3')}` });\n          return false;\n          // 总投入资金/网格数量，不能小于当前币对的最小下单金额\n        } if (\n          division(Number(totalQuoteAmount), gridNumber) < Number(this.minimumOrderQuantity)\n        ) {\n          // 每格投入资金小于当前币对的最小下单金额\n          this.$bus.$emit('tip', { text: this.$t('gridTrade.error4') });\n          return false;\n        }\n      }\n      return {\n        formKey,\n        lowestPrice,\n        highestPrice,\n        gridNumber,\n        totalQuoteAmount,\n        stopHighPrice,\n        stopLowPrice,\n        quantType,\n        flag,\n        useOwnBase,\n        totalBaseAmount: useOwnBase ? this.currenTaccount.symbolAccoubt : 0,\n        gridLineType,\n      };\n    },\n    // 清空 表单数据\n    clearGridValue() {\n      const formKey = [\n        'gridAiAccount',\n        'gridAiMaxBalance',\n        'gridAiMinBalance',\n        'gridAiNum',\n        'gridSetMin',\n        'gridSetMax',\n        'gridSetNum',\n        'gridSetAccount',\n        'gridSetMaxBalance',\n        'gridSetMinBalance',\n      ];\n      formKey.forEach((item) => {\n        this[item].value = '';\n        this[item].isError = false;\n        this[item].subText = null;\n      });\n    },\n    // 请求ai数据\n    getAiData() {\n      this.axios({\n        url: 'noToken/quant/getAIStrategyInfo',\n        hostType: 'quant',\n        params: {\n          symbol: this.symbolCurrent,\n        },\n        method: 'post',\n      }).then((data) => {\n        if (data.code.toString() === '0') {\n          if (data.data && data.data.configParamMap) {\n            this.gridAiMinPrice = fixD(\n              data.data.configParamMap.lowestPrice, this.fixValue.priceFix,\n            );\n            this.gridAiMaxPrice = fixD(\n              data.data.configParamMap.highestPrice, this.fixValue.priceFix,\n            );\n            this.gridAiBlance.disabledText = `${this.gridAiMinPrice} ~ ${this.gridAiMaxPrice}`;\n            this.gridAiNum.disabledText = fixD(data.data.configParamMap.gridNumber, 0);\n            this.gridAiNum.value = fixD(data.data.configParamMap.gridNumber, 0);\n            this.gridAiMin = fixD(data.data.everyProfitMin, 2);\n            this.gridAiMax = fixD(data.data.everyProfitMax, 2);\n            this.fee = data.data.makerFee;\n            // 最小下单数量\n            this.minimumOrderQuantity = data.data.minimumOrderQuantity;\n            this.sevenDay = fixD(data.data.sevenAnnualizedYield, 2); // 7日年华收益\n          }\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n        }\n      });\n    },\n    // 给服务端传参数和当前行情用于判断是否够每格消耗\n    gridCancelEvent(params) {\n      this.axios({\n        url: 'quant/calBaseAmount',\n        hostType: 'quant',\n        method: 'post',\n        params,\n      }).then((req) => {\n        if (req.code.toString() === '0' && req.data) {\n          if (Number(req.data.baseAmount) > Number(this.currenTaccount.symbolAccoubt)) {\n            this.$bus.$emit('tip', { text: `${this.$t('gridTrade.least')}${req.data.baseAmount} ${getCoinShowName(this.symbolUnit.symbol, this.coinList)}`, type: 'error' });\n            this.fal = true;\n          } else {\n            const obj = { ...params, totalBaseAmount: Number(req.data.baseAmount) };\n            this.gridSubData(obj);\n          }\n        } else {\n          this.$bus.$emit('tip', { text: req.msg, type: 'error' });\n          this.fal = true;\n        }\n      });\n    },\n    gridSubData(params) {\n      this.axios({\n        url: 'quant/saveStrategy',\n        hostType: 'quant',\n        params,\n        method: 'post',\n      }).then((data) => {\n        if (data.code.toString() === '0') {\n          // 清空表单\n          this.clearGridValue();\n          // 重新请求资产\n          this.$store.dispatch('assetsExchangeData', {\n            auto: false,\n            coinSymbols: this.coinSymbols,\n          });\n          this.getAiData();\n          // 发送下单成功的事件\n          this.$bus.$emit('ORDER_CREATE', { type: 'success' });\n          // 提示成功 下单成功\n          this.$bus.$emit('tip', { text: this.$t('trade.dealCussess'), type: 'success' });\n          this.fal = true;\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n          this.fal = true;\n        }\n      }).catch(() => {\n        this.fal = true;\n      });\n    },\n  },\n  // 组价离开前执行\n  beforeDestroy() {\n    clearInterval(this.assetsInter);\n  },\n};\n</script>\n\n<style>\n.input-inline-box .input-inline-item.input-inline-item_width {\n  flex: none;\n  width: 80px;\n}\n.set-type {\n  position: relative;\n  top: -2px;\n}\n.trade-grid .trade-input.trade-input-china-container .input-item {\n  padding: 0 10px;\n}\n.trade-grid .set-num .setn-num-list{\n  padding-right: 6px;\n}\n.trade-grid .set-num .setn-num-list .trade-input.trade-input-china-container .input-item {\n  padding: 8px 5px 0 5px;\n}\n  .trade-grid .input-inline-box {\n    width: 100%;\n  }\n  .trade-box.internationalTradeForm .trade-form.trade-grid {\n    padding: 12px;\n  }\n  .priceUser {\n    display: inline;\n  }\n  .grid-switch {\n    cursor: default;\n  }\n  .grid-switch .content {\n    float: left;\n    cursor: pointer;\n  }\n  .grid-switch>p {\n    float: right;\n  }\n  .input-inline-item.set-type {\n    margin-bottom: 0;\n  }\n  .set-type .set-type-btn {\n    width: 47.5%;\n  }\n</style>\n"],"sourceRoot":"app/view/src/components/modules/trade/tradeForm"}]}