{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/personal/kycAuth/kycAuth.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/personal/kycAuth/kycAuth.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nexport default {\n  name: 'common-keyAuth',\n  data: function data() {\n    return {\n      loading: true,\n      // 页面loading\n      qrCode: '',\n      // 二维码\n      time: 0,\n      // 倒计时\n      timeReload: false,\n      statusLoading: false,\n      // 认证状态的loading\n      forceAuto: false,\n      // 是否强制审核\n      goIDauthLoading: false // 选择人工的loading\n\n    };\n  },\n  computed: {\n    publicInfo: function publicInfo() {\n      return this.$store.state.baseData.publicInfo;\n    },\n    showTime: function showTime() {\n      if (this.time) {\n        var min = Math.floor(this.time / 60);\n        var sec = this.time - 60 * min;\n        var str = '';\n\n        if (min) {\n          str += \"\".concat(min).concat(this.$t('personal.kyc.kycMin'));\n        }\n\n        str += \"\".concat(sec).concat(this.$t('personal.kyc.kycSec'));\n        return str;\n      }\n\n      return '';\n    }\n  },\n  methods: {\n    init: function init() {\n      this.getData();\n    },\n    // 获取页面信息\n    getData: function getData() {\n      var _this = this;\n\n      this.axios({\n        url: '/kyc/Api/get_Valid_QRcode'\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          _this.loading = false;\n\n          _this.setData(data.data);\n        } else {\n          _this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 选择人工\n    goIDauth: function goIDauth() {\n      var _this2 = this;\n\n      if (this.goIDauthLoading) return;\n      this.goIDauthLoading = true; // 判断开关是否开启\n\n      var customConfigData = this.publicInfo.custom_config;\n      var kycSingaporeOpen = null;\n      var customConfig = null;\n\n      if (customConfigData) {\n        try {\n          customConfig = JSON.parse(customConfigData);\n        } catch (error) {}\n\n        kycSingaporeOpen = customConfig ? customConfig.kyc_singapore_open : null;\n      }\n\n      this.axios({\n        url: '/kyc/Api/get_Valid_QRcode'\n      }).then(function (data) {\n        _this2.goIDauthLoading = false;\n\n        if (data.code.toString() === '0') {\n          // 需求5.2.2 否，则跳转至账号管理界面，界面右上角显示提示语提示：“已存在实名认证信息”。\n          if (data.data.authStatus === '1') {\n            _this2.$bus.$emit('tip', {\n              text: _this2.$t('personal.kyc.kycAuth7'),\n              type: 'warning'\n            });\n\n            _this2.$router.push('/personal/userManagement'); // 需求5.2.1 是，则跳转至实名认证页_中国界面进行人工审核模式提交实名认证\n\n          } else if (kycSingaporeOpen && kycSingaporeOpen !== '0') {\n            _this2.$store.dispatch('exccKycConfig', {});\n          } else {\n            _this2.$router.push('/personal/idAuth?kycPhone=86');\n          }\n        } else {\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 获取当前认证结果\n    getStatus: function getStatus() {\n      var _this3 = this;\n\n      this.statusLoading = true;\n      this.axios({\n        url: '/kyc/Api/get_Database_Authentication_result'\n      }).then(function (data) {\n        _this3.statusLoading = false;\n\n        if (data.code.toString() === '0') {\n          var authStatus = data.data.authStatus; // 需求4.2.1 存在，则跳转至该用户的账号管理界面，提示语提示：“已存在实名认证信息”。\n\n          if (authStatus && authStatus.toString() === '1') {\n            _this3.$bus.$emit('tip', {\n              text: _this3.$t('personal.kyc.kycAuth7'),\n              type: 'warning'\n            });\n\n            _this3.$router.push('/personal/userManagement'); // 需求4.2.2 不存在，则停留在当前界面，提示语提示：“请扫描二维码完成认证”\n\n          } else {\n            _this3.$bus.$emit('tip', {\n              text: _this3.$t('personal.kyc.kycAuth8'),\n              type: 'warning'\n            });\n          }\n        } else {\n          _this3.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    setData: function setData(_ref) {\n      var _this4 = this;\n\n      var openAuto = _ref.openAuto,\n          limitFlag = _ref.limitFlag,\n          authStatus = _ref.authStatus,\n          qrCode = _ref.qrCode,\n          validSecond = _ref.validSecond,\n          forceAuto = _ref.forceAuto;\n\n      // 需求3.1.1 如果未开启自动审核 则跳转到人工审核\n      // 需求3.4.1 当日平台、个人超出当日自动审核限制 则跳转到人工审核\n      if (openAuto && openAuto.toString() === '0' || limitFlag && limitFlag.toString() === '1') {\n        this.$bus.$emit('tip', {\n          text: this.$t('personal.kyc.kycAuth9'),\n          type: 'warning'\n        }); // this.$router.push('/personal/idAuth?kycPhone=86');\n\n        this.$store.dispatch('exccKycConfig', {});\n        return;\n      } // 需求3.2.1 判断该用户存在未审核或已通过的实名信息 则跳转到账号管理\n\n\n      if (authStatus && authStatus.toString() === '1') {\n        this.$bus.$emit('tip', {\n          text: this.$t('personal.kyc.kycAuth7'),\n          type: 'warning'\n        });\n        this.$router.push('/personal/userManagement');\n        return;\n      } // 需求5.1 本段文只有在后台配置了非强制自动审核时才会显示\n\n\n      if (forceAuto && forceAuto.toString() === '0') {\n        this.forceAuto = true;\n      } // 需求1 展示二维码\n\n\n      this.qrCode = qrCode; // 需求2 倒计时\n\n      if (validSecond) {\n        // 需求2.1 有效时长根据数据库存储的该用户的token过期时间计算，文案需倒数动态显示\n        var timer = null;\n        this.time = validSecond;\n        timer = setInterval(function () {\n          _this4.time -= 1;\n\n          if (_this4.time === 0) {\n            clearInterval(timer); // 需求2.2 倒计时结束后，文案变为红色字体提示：“二维码已过期，请刷新页面重新获取”\n\n            _this4.timeReload = true;\n          }\n        }, 1000);\n      }\n    }\n  }\n};",null]}