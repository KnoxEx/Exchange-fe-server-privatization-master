{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/personal/broker/broker/broker.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/personal/broker/broker/broker.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport { fixD, getCoinShowName, colorMap, imgMap } from '@/utils';\nexport default {\n  name: 'broker',\n  data: function data() {\n    return {\n      headClasses: '',\n      bodyClasses: '',\n      tableLoading: true,\n      imgMap: imgMap,\n      colorMap: colorMap,\n      backgroundImg: \"background: url(\".concat(imgMap.jjrNeaderBg, \")  center bottom no-repeat #0E1A2E\"),\n      backgroundImg2: \"background: url(\".concat(imgMap.broker_title_bg, \") center bottom no-repeat #0E1A2E;background-size: 100% 70%;\"),\n      tableData: {},\n      tableType: 'agent_data',\n      searchValue: '',\n      calendarData: null,\n      // 筛选币种\n      coinValue: '',\n      typeValue: null,\n      // 直接邀请人数\n      userCount: 0,\n      // 间接邀请人数\n      indirect: 0,\n      isDiractShow: false,\n      // 本月总收入\n      allBonusAmount: null,\n      allBonusCoin: 'BTC',\n      errorHave: false,\n      pagination: {\n        // 翻页数据\n        count: 0,\n        // 总数量\n        pageSize: 10,\n        // 每页显示条数\n        page: 1 // 当前页数\n\n      },\n      symbolType: this.$t('broker.symbolType'),\n      type: this.$t('broker.type'),\n      vuserName: '' // 用户名称\n\n    };\n  },\n  watch: {\n    userInfo: {\n      immediate: true,\n      handler: function handler(v) {\n        if (v) {\n          this.userInfoReady();\n        }\n      }\n    },\n    // isLogin(val) {\n    //   if (val) {\n    //     this.getData();\n    //   }\n    // },\n    coinOPtion: function coinOPtion(value) {\n      if (value.length) {\n        this.coinValue = 'USDT';\n      }\n    },\n    coinValue: function coinValue(value) {\n      if (value) {\n        this.getData();\n      }\n    },\n    typeValue: function typeValue(value) {\n      if (value && this.searchValue) {\n        this.getData();\n      }\n    }\n  },\n  computed: {\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    promptText: function promptText() {\n      switch (this.typeValue) {\n        case 1:\n          return this.$t('broker.promptText1');\n        // '请输入UID';\n\n        case 2:\n          return this.$t('broker.promptText2');\n        // '请输入手机号';\n\n        default:\n          return this.$t('broker.promptText3');\n        // '请输入邮箱';\n      }\n    },\n    timeText: function timeText() {\n      return this.$t('broker.time');\n    },\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    username: function username() {\n      if (this.$store.state.baseData.userInfo) {\n        return this.$store.state.baseData.userInfo.agentRoleName;\n      }\n\n      return false;\n    },\n    coinList: function coinList() {\n      if (this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n\n      return null;\n    },\n    coinOPtion: function coinOPtion() {\n      var _this = this;\n\n      var arr = [];\n\n      if (this.coinList) {\n        var coinList = Object.keys(this.coinList);\n        coinList.forEach(function (item) {\n          arr.push({\n            value: getCoinShowName(_this.coinList[item].name, _this.coinList),\n            code: _this.coinList[item].name\n          });\n        });\n        return arr;\n      }\n\n      return [];\n    },\n    typeOption: function typeOption() {\n      return [{\n        value: 'UID',\n        code: 1\n      }, {\n        value: this.$t('broker.phoneeNumber'),\n        code: 2\n      }, {\n        value: this.$t('broker.email'),\n        code: 3\n      }];\n    },\n    tabList: function tabList() {\n      return [{\n        key: 'agent_data',\n        text: this.$t('broker.remaid')\n      }, {\n        key: 'agent_account',\n        text: this.$t('broker.agentAccount')\n      }];\n    },\n    columns: function columns() {\n      if (this.tableType === 'agent_data') {\n        return [{\n          title: 'UID',\n          width: '100px'\n        }, {\n          title: this.$t('broker.phoneeNumber'),\n          width: '260px'\n        }, {\n          title: this.$t('broker.email'),\n          width: '260px'\n        }, {\n          title: this.$t('broker.tier'),\n          width: '100px'\n        }, {\n          title: \"\".concat(this.$t('broker.fee'), \"(\").concat(getCoinShowName(this.coinValue, this.coinList), \")\"),\n          width: '150px'\n        }, {\n          title: \"\".concat(this.$t('broker.amount'), \"(\").concat(getCoinShowName(this.allBonusCoin, this.coinList), \")\"),\n          width: '150px'\n        }, {\n          title: this.$t('broker.opera'),\n          width: '160px',\n          classes: 'lastTh'\n        }];\n      }\n\n      return [{\n        title: 'UID',\n        width: '8%'\n      }, {\n        title: this.$t('broker.phoneeNumber'),\n        width: '22%'\n      }, {\n        title: this.$t('broker.email'),\n        width: '26%'\n      }, {\n        title: this.$t('broker.tier'),\n        width: '22%'\n      }, {\n        title: \"\".concat(this.$t('broker.ccNumber'), \"(\").concat(getCoinShowName(this.coinValue, this.coinList), \")\"),\n        width: '22%'\n      }];\n    },\n    dataList: function dataList() {\n      var _this2 = this;\n\n      if (this.tableData && this.tableData.length) {\n        var dataArr = [];\n        this.tableData.forEach(function (item) {\n          if (_this2.tableType === 'agent_data') {\n            dataArr.push({\n              id: item.uid,\n              data: [item.uid, !item.mobileNumber ? '/' : item.mobileNumber, !item.email ? '/' : item.email, item.level, _this2.fixDFun(item.feeAmount, _this2.coinValue), _this2.fixDFun(item.bonusAmount, _this2.coinValue), [{\n                type: 'button',\n                text: _this2.$t('broker.view'),\n                iconClass: [''],\n                eventType: 'view',\n                classes: []\n              }]]\n            });\n          } else {\n            dataArr.push({\n              id: item.uid,\n              data: [item.uid, // UID\n              !item.mobileNumber ? '/' : item.mobileNumber, // 手机号\n              !item.email ? '/' : item.email, // 邮箱\n              item.level, // 层级\n              _this2.fixDFun(item.amount, _this2.coinValue) // 持仓量\n              ]\n            });\n          }\n        });\n        return dataArr;\n      }\n\n      return [];\n    }\n  },\n  methods: {\n    init: function init() {\n      if (this.coinOPtion) {\n        this.coinValue = 'USDT';\n      }\n\n      this.getData();\n    },\n    fixDFun: function fixDFun(val, symbol) {\n      if (this.showPrecision(symbol)) {\n        return fixD(val, this.showPrecision(symbol));\n      }\n\n      return val;\n    },\n    showPrecision: function showPrecision(symbol) {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        var coinList = this.$store.state.baseData.market.coinList;\n\n        if (coinList[symbol]) {\n          var precision = coinList[symbol].showPrecision;\n\n          if (precision) {\n            return precision;\n          }\n        }\n      }\n\n      return 4;\n    },\n    userInfoReady: function userInfoReady() {\n      this.vuserName = this.userInfo.mobileNumber !== '' ? this.userInfo.mobileNumber : this.userInfo.email; // 有电话号码显示电话号码,无则显示邮箱\n    },\n    // 翻页事件\n    pagechange: function pagechange(num) {\n      this.pagination.page = num;\n      this.getData();\n    },\n    // 请求数据\n    getData: function getData(search) {\n      var _this3 = this;\n\n      if (search) {\n        this.pagination.page = 1;\n      }\n\n      this.tableLoading = true;\n      var url = this.$store.state.url.common.agent_data_query;\n      var params = {\n        pageNum: this.pagination.page,\n        coinName: this.coinValue || 'USDT',\n        keyword_type: this.typeValue || 1,\n        keyword: this.searchValue\n      };\n\n      if (this.tableType === 'agent_account') {\n        url = this.$store.state.url.common.agent_account_query;\n        params.dayTime = this.calendarData.replace(/\\//g, '-');\n      }\n\n      this.axios({\n        url: url,\n        params: params,\n        method: 'post'\n      }).then(function (data) {\n        if (data.code === '0') {\n          _this3.tableData = data.data.mapList;\n          _this3.pagination.count = data.data.count;\n\n          if (_this3.tableType === 'agent_data') {\n            _this3.userCount = data.data.userCount;\n\n            if (data.data.inviteNum || data.data.inviteNum === 0) {\n              if (data.data.inviteNum !== -1) {\n                _this3.indirect = data.data.inviteNum;\n                _this3.isDiractShow = true;\n              }\n            }\n\n            _this3.allBonusAmount = data.data.allBonusAmount;\n            _this3.allBonusCoin = data.data.allBonusCoin;\n          }\n        }\n\n        _this3.tableLoading = false;\n      });\n    },\n    // 切换类型\n    switcherType: function switcherType(type) {\n      this.tableType = type;\n      this.typeValue = '';\n      this.searchValue = '';\n      this.coinValue = 'USDT';\n      this.calendarData = '';\n      this.pagination.page = 1;\n      this.getData();\n    },\n    // 搜索输入事件\n    inputLineChange: function inputLineChange(value, name) {\n      this[name] = value;\n\n      if (this.typeValue) {\n        this.getData(true);\n      }\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    // 搜索输入框回车事件\n\n    /*      inputKeyup() {\r\n        if (this.typeValue) {\r\n          this.getData(true);\r\n        }\r\n      }, */\n    // 选择时间\n    onChangeCalendar: function onChangeCalendar(data) {\n      this.calendarData = data;\n    },\n    // select 选择事件\n    selectOnChange: function selectOnChange(data, name) {\n      this[name] = data.code;\n    },\n    goViewPage: function goViewPage(type, data) {\n      this.$router.push(\"/broker/\".concat(data));\n    }\n  }\n};",null]}