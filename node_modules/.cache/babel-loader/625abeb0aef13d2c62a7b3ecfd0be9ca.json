{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/login/login.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/login/login.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _toConsumableArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { myStorage, setCookie, imgMap, colorMap } from '@/utils';\nexport default {\n  name: 'page-login',\n  data: function data() {\n    return {\n      imgMap: imgMap,\n      colorMap: colorMap,\n      userValue: '',\n      // 账号value\n      passValue: '',\n      // 密码value\n      checkValue: '',\n      // 验证码value\n      checkType: '0',\n      // 验证码类型( '1'-谷歌 '2'-手机 '3'-邮箱 )\n      verifyObj: {},\n      // 滑动返回对象\n      verifyFlag: false,\n      // 滑动是否通过\n      dialogFlag: false,\n      // 弹窗flag\n      submitLoading: false,\n      // input框\n      userToken: null,\n      // 服务端第一次校验返回\n      dialogConfirmLoading: false,\n      // 用于弹窗按钮loading效果\n      selectValue: 'google',\n      addHoverclass: 0,\n      singPassDialogFlag: false,\n      thirdListShow: false,\n      loginMode: null\n    };\n  },\n  watch: {\n    checkValue: function checkValue(newV) {\n      var _this = this;\n\n      if (newV.length === 6) {\n        this.$nextTick(function () {\n          _this.$bus.$emit('button-click', 'dialogConfirm');\n        });\n      }\n    },\n    loginFlag: function loginFlag(v) {\n      if (v) {\n        this.goHome();\n      }\n    },\n    // 第三方登录信息\n    thirdPartyLoginData: function thirdPartyLoginData(data) {\n      if (data !== null) {\n        this.loading = false;\n\n        if (data.text === 'success') {\n          // 打开 singPass 弹框\n          this.singPassDialogFlag = true;\n        } else {\n          this.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      }\n    }\n  },\n  computed: {\n    // 登录按钮文案\n    loginButtonText: function loginButtonText() {\n      if (this.loginMode === 'SingPass') {\n        return this.$t('singPassLogin.mainText13'); // '登录并关联SingPass账号';\n      }\n\n      if (this.singPassCode && this.singpassState && this.singpassSource === 'reg') {\n        return this.$t('singPassLogin.mainText13'); // '登录并关联SingPass账号';\n      }\n\n      return this.$t('login.login');\n    },\n    loginPageTitle: function loginPageTitle() {\n      if (this.loginMode === 'SingPass') {\n        return this.$t('singPassLogin.mainText2'); // 'SingPass第三方登录';\n      }\n\n      if (this.singPassCode && this.singpassState && this.singpassSource === 'reg') {\n        return this.$t('singPassLogin.mainText2'); // 'SingPass第三方登录';\n      }\n\n      return this.$t('login.WelcomeToLogin');\n    },\n    // user框 PromptText\n    isInternationTem: function isInternationTem() {\n      return this.$store.state.baseData.templateLayoutType === '2';\n    },\n    userInputPrompt: function userInputPrompt() {\n      var str = '';\n\n      switch (this.loginRegistType) {\n        case '1':\n          str = this.$t('login.phoneOrEmail');\n          break;\n\n        case '2':\n          str = this.$t('resetPass.phone');\n          break;\n\n        case '3':\n          str = this.$t('resetPass.email');\n          break;\n\n        default:\n          str = this.$t('login.phoneOrEmail');\n      }\n\n      return str;\n    },\n    // 开启验证方式\n    loginRegistType: function loginRegistType() {\n      // const { publicInfo } = this.$store.state.baseData;\n      var str = '1'; // 1 手机/邮箱， 2 仅手机， 3 仅邮箱\n      // if (publicInfo && publicInfo.switch && publicInfo.switch.login_regist_type) {\n      //   str = publicInfo.switch.login_regist_type.toString();\n      // }\n\n      return str;\n    },\n    selectOptions: function selectOptions() {\n      var arr = [{\n        value: this.$t('login.GoogleAuthenticator'),\n        code: 'google'\n      }];\n\n      if (this.loginRegistType === '2') {\n        arr.push({\n          value: this.$t('login.MobilePhoneVerification'),\n          code: 'phone'\n        });\n      } else if (this.loginRegistType === '3') {\n        arr.push({\n          value: this.$t('login.MailboxValidation'),\n          code: 'email'\n        });\n      } else {\n        arr.push({\n          value: this.$t('login.MobilePhoneVerification'),\n          code: 'phone'\n        });\n        arr.push({\n          value: this.$t('login.MailboxValidation'),\n          code: 'email'\n        });\n      }\n\n      return arr;\n    },\n    loginFlag: function loginFlag() {\n      var _this$$store$state$ba = this.$store.state.baseData,\n          isLogin = _this$$store$state$ba.isLogin,\n          userInfoIsReady = _this$$store$state$ba.userInfoIsReady;\n\n      if (isLogin && userInfoIsReady) {\n        return true;\n      }\n\n      return false;\n    },\n    checkText: function checkText() {\n      switch (this.checkType) {\n        case '1':\n          // 请输入6位数字谷歌验证码\n          return this.$t('login.googleCodeError');\n\n        case '2':\n          // 请输入6位数字手机验证码\n          return this.$t('login.phoneCodeError');\n\n        case '3':\n          // 请输入6位数字邮箱验证码\n          return this.$t('login.emailCodeError');\n\n        default:\n          // 请输入6位数字验证码\n          return this.$t('login.codeError');\n      }\n    },\n    serverName: function serverName() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var code = '';\n\n      if (publicInfo && publicInfo.msg && publicInfo.msg.company_name) {\n        code = publicInfo.msg.company_name;\n      }\n\n      return code;\n    },\n    // userValue 是否复合正则验证\n    userFlag: function userFlag() {\n      var _this$$store$state$re = this.$store.state.regExp,\n          phone = _this$$store$state$re.phone,\n          email = _this$$store$state$re.email;\n\n      if (this.loginRegistType === '2') {\n        if (phone.test(this.userValue)) {\n          return true;\n        }\n      } else if (this.loginRegistType === '3') {\n        if (email.test(this.userValue)) {\n          return true;\n        }\n      } else {\n        if (phone.test(this.userValue)) {\n          return true;\n        }\n\n        if (email.test(this.userValue)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    // passValue 是否复合正则验证\n    passFlag: function passFlag() {\n      return this.$store.state.regExp.passWord.test(this.passValue);\n    },\n    // checkValue 是否复合正则验证\n    checkFlag: function checkFlag() {\n      return this.$store.state.regExp.verification.test(this.checkValue);\n    },\n    // 二次验证弹层 text展示文字 havacode是否有获取验证码\n    checkOptions: function checkOptions() {\n      switch (this.checkType) {\n        case '1':\n          // 谷歌验证码\n          return {\n            text: this.$t('login.googleCode'),\n            haveCode: false\n          };\n\n        case '2':\n          // 手机验证码\n          return {\n            text: this.$t('login.phoneCode'),\n            haveCode: true\n          };\n\n        case '3':\n          // 邮箱验证码\n          return {\n            text: this.$t('login.emailCode'),\n            haveCode: true\n          };\n\n        default:\n          // 验证码\n          return {\n            text: this.$t('login.code'),\n            haveCode: false\n          };\n      }\n    },\n    // user框是否为错误状态\n    userErrorFlag: function userErrorFlag() {\n      if (this.userValue.length !== 0 && !this.userFlag) return true;\n      return false;\n    },\n    // pass框是否为错误状态\n    passErrorFlag: function passErrorFlag() {\n      if (this.passValue.length !== 0 && !this.passFlag) return true;\n      return false;\n    },\n    // 验证框是否为错误\n    checkErrorFlag: function checkErrorFlag() {\n      if (this.checkValue.length !== 0 && !this.checkFlag) return true;\n      return false;\n    },\n    // 登录button 禁用状态\n    submitDisabled: function submitDisabled() {\n      var userFlag = this.userFlag,\n          passFlag = this.passFlag,\n          verifyFlag = this.verifyFlag,\n          submitLoading = this.submitLoading;\n\n      if (userFlag && passFlag && verifyFlag || submitLoading) {\n        return false;\n      }\n\n      return true;\n    },\n    dialogConfirmDisabled: function dialogConfirmDisabled() {\n      if (!this.checkFlag && !this.dialogConfirmLoading) return true;\n      return false;\n    },\n    // 是否开启验证方式\n    openLoginVerificationMode: function openLoginVerificationMode() {\n      // const { publicInfo } = this.$store.state.baseData;\n      // if (publicInfo && publicInfo.switch\n      // && publicInfo.switch.openLoginVerificationMode === '1') {\n      //   return true;\n      // }\n      return false;\n    },\n    publicInfo: function publicInfo() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      return publicInfo;\n    },\n    companyName: function companyName() {\n      if (this.publicInfo && this.publicInfo.msg) {\n        return this.publicInfo.msg.company_name;\n      }\n\n      return '';\n    },\n    thirdList: function thirdList() {\n      if (this.publicInfo && this.publicInfo.thirdInfo && this.publicInfo.thirdInfo.length > 0) {\n        var arr = [];\n        this.publicInfo.thirdInfo.forEach(function (item) {\n          arr.push({\n            value: item.name,\n            img: item.logoAddress,\n            code: item.pcThirdUrl,\n            sort: item.sort,\n            pcJump: item.pcJump\n          });\n        });\n        var newArr = this.sortKey(arr, 'sort');\n        return newArr;\n      }\n\n      return null;\n    },\n    thirdPartyLoginData: function thirdPartyLoginData() {\n      return this.$store.state.baseData.thirdPartyLoginData;\n    },\n    singPassCode: function singPassCode() {\n      return this.$route.query.code;\n    },\n    singpassState: function singpassState() {\n      return this.$route.query.state;\n    },\n    singpassSource: function singpassSource() {\n      return this.$route.query.source;\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this2 = this;\n\n      if (this.loginFlag) {\n        this.goHome();\n      }\n\n      this.$bus.$off('emailCode');\n      this.$bus.$on('emailCode', function (data) {\n        var newData = JSON.parse(JSON.stringify(data));\n        newData.callback = undefined;\n\n        _this2.axios({\n          url: 'v4/common/emailValidCode',\n          method: 'post',\n          header: {},\n          params: newData\n        }).then(function (info) {\n          data.callback(info);\n        }).catch(function () {});\n      });\n      this.$bus.$off('phoneCode');\n      this.$bus.$on('phoneCode', function (data) {\n        var newData = JSON.parse(JSON.stringify(data));\n        newData.callback = undefined;\n\n        _this2.axios({\n          url: 'v4/common/smsValidCode',\n          method: 'post',\n          header: {},\n          params: newData\n        }).then(function (info) {\n          data.callback(info);\n        }).catch(function () {// console.log(info);\n        });\n      });\n      this.$bus.$on('closeSingPassDialog', function () {\n        _this2.singPassDialogFlag = false;\n      });\n      this.$bus.$on('setLoginMode', function (info) {\n        _this2.loginMode = info;\n      });\n    },\n    sortKey: function sortKey(array, key) {\n      return array.sort(function (a, b) {\n        var x = a[key];\n        var y = b[key];\n        return x - y; // 从小到大排序\n      });\n    },\n    changeThird: function changeThird(item) {\n      if (item.pcJump === '1') {\n        window.open(item.code, '_blank');\n      }\n    },\n    addHover: function addHover(num) {\n      this.addHoverclass = num;\n      this.thirdListShow = true;\n    },\n    removeHover: function removeHover() {\n      this.addHoverclass = null; // setTimeout(() => {\n      //   this.thirdListShow = false;\n      // });\n    },\n    goUrl: function goUrl(url) {\n      // 如果是第三方登录 跳转到注册也是第三方注册\n      if (url === '/register' && this.singPassCode && this.singpassState) {\n        this.$router.push(\"\".concat(url, \"?singPassCode=\").concat(this.singPassCode, \"&singPassState=\").concat(this.singpassState));\n      } else {\n        this.$router.push(url);\n      }\n    },\n    goHome: function goHome() {\n      window.location.href = '/';\n    },\n    // input onchanges事件\n    inputChanges: function inputChanges(value, name) {\n      this[name] = value;\n    },\n    selectChange: function selectChange(item) {\n      this.selectValue = item.code;\n    },\n    submit: function submit() {\n      var _this3 = this;\n\n      var params = _objectSpread(_objectSpread({}, this.verifyObj), {\n        mobileNumber: this.userValue,\n        loginPword: this.passValue,\n        nc: null // type: this.selectValue,\n\n      });\n\n      this.submitLoading = true;\n      this.axios({\n        url: 'user/login_in',\n        headers: {},\n        params: params,\n        method: 'post'\n      }).then(function (data) {\n        _this3.verifyObj.nc.reset(); // 滑动重置\n\n\n        _this3.verifyFlag = false; // 验证通过置未未通过\n\n        _this3.submitLoading = false; // button按钮loading取消\n\n        if (data.code.toString() === '0') {\n          _this3.dialogFlag = true; // 打开弹窗\n\n          _this3.checkType = data.data.type; // '1'-谷歌 '2'-手机 '3'-邮箱\n\n          _this3.userToken = data.data.token;\n\n          _this3.$nextTick(function () {\n            // 验证码input获取焦点\n            _this3.$bus.$emit('inputLine-focus', 'checkValue'); // 触发发送验证码button\n\n\n            _this3.$bus.$emit('button-click', 'loginGetcodeBtn');\n          });\n        } else {\n          _this3.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 极验滑动通过\n    verifyCallBack: function verifyCallBack(parameter) {\n      this.verifyObj = parameter;\n      this.verifyFlag = true;\n    },\n    // 二次校验\n    dialogConfirm: function dialogConfirm() {\n      var _this4 = this;\n\n      this.dialogConfirmLoading = true;\n      var params = {\n        token: this.userToken,\n        authCode: this.checkValue,\n        type: this.selectValue\n      }; // 判断是否是 第三方 登录\n\n      if (this.singPassCode && this.singpassState) {\n        params.singPassCode = this.singPassCode;\n      }\n\n      this.axios({\n        url: 'user/confirm_login',\n        method: 'post',\n        params: params\n      }).then(function (data) {\n        _this4.dialogConfirmLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this4.dialogClose(); // 关闭弹窗\n\n\n          setCookie('token', _this4.userToken); // 存储cookie\n          // 登录成功\n\n          _this4.$bus.$emit('tip', {\n            text: _this4.$t('login.loginSuccess'),\n            type: 'success'\n          }); // 获取 userinfo\n\n\n          _this4.$store.dispatch('getUserInfo');\n\n          _this4.getMySymbol();\n\n          window.location.href = '/';\n        } else {\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 关闭弹窗\n    dialogClose: function dialogClose() {\n      this.dialogFlag = false;\n      this.checkValue = '';\n    },\n    // 发送验证码组件点击button\n    getCodeClick: function getCodeClick() {\n      this.sendCode();\n    },\n    // 发送验证码\n    sendCode: function sendCode() {\n      var _this5 = this;\n\n      if (this.checkType === '2') {\n        this.$bus.$emit('phoneCode', {\n          token: this.userToken,\n          operationType: '25',\n          callback: function callback(data) {\n            if (data.code.toString() !== '0') {\n              // 倒计时重置\n              _this5.$bus.$emit('getCode-clear', 'loginGetcode'); // tip框提示错误\n\n\n              _this5.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'error'\n              });\n            } else {\n              // 短信已发送，请注意查收\n              _this5.$bus.$emit('tip', {\n                text: _this5.$t('login.phoneSendSuccess'),\n                type: 'success'\n              });\n            }\n          }\n        });\n      } else if (this.checkType === '3') {\n        this.$bus.$emit('emailCode', {\n          token: this.userToken,\n          operationType: '4',\n          callback: function callback(data) {\n            if (data.code.toString() !== '0') {\n              // 倒计时重置\n              _this5.$bus.$emit('getCode-clear', 'loginGetcode'); // tip框提示错误\n\n\n              _this5.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'error'\n              });\n            } else {\n              // 邮件已发送，请注意查收\n              _this5.$bus.$emit('tip', {\n                text: _this5.$t('login.emailSendSuccess'),\n                type: 'success'\n              });\n            }\n          }\n        });\n      }\n    },\n    // 获取服务端自选币对\n    getMySymbol: function getMySymbol() {\n      var _this6 = this;\n\n      this.axios({\n        url: 'optional/list_symbol',\n        params: {},\n        method: 'post'\n      }).then(function (data) {\n        if (data.code === '0') {\n          var storageMySymbol = myStorage.get('mySymbol') || [];\n          var webMySymbol = data.data.symbols.filter(function (x) {\n            return x !== '';\n          }) || [];\n          var sumMySymbolList = Array.from(new Set([].concat(_toConsumableArray(storageMySymbol), _toConsumableArray(webMySymbol))));\n          var diffMySymbolList = storageMySymbol.filter(function (x) {\n            return !webMySymbol.includes(x);\n          }); // 同步本地自选币对和服务端币对\n          // sync_status 0需要同步 1不需要同步\n\n          if (diffMySymbolList.length !== 0 && data.data.sync_status === '0') {\n            myStorage.set('mySymbol', sumMySymbolList);\n\n            _this6.axios({\n              url: _this6.$store.state.url.common.optional_symbol,\n              headers: {},\n              params: {\n                operationType: diffMySymbolList.length > '1' ? '0' : '1',\n                // 0批量添加 1单个添加 2单个删除\n                symbols: diffMySymbolList.join(',')\n              },\n              method: 'post'\n            }).then(function () {});\n          } else {\n            myStorage.set('mySymbol', webMySymbol);\n          }\n        } else {\n          _this6.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 点击第三方登录\n    goThirdUrl: function goThirdUrl(data) {\n      // 直接跳转至第三方\n      if (data.pcJump === '1') {\n        window.open(data.code, '_blank');\n      } else {\n        // 请求第三方登录信息\n        this.$store.dispatch('thirdPartyLoginData', {\n          url: data.code,\n          data: {}\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/login/login.js"],"names":["myStorage","setCookie","imgMap","colorMap","name","data","userValue","passValue","checkValue","checkType","verifyObj","verifyFlag","dialogFlag","submitLoading","userToken","dialogConfirmLoading","selectValue","addHoverclass","singPassDialogFlag","thirdListShow","loginMode","watch","newV","length","$nextTick","$bus","$emit","loginFlag","v","goHome","thirdPartyLoginData","loading","text","msg","type","computed","loginButtonText","$t","singPassCode","singpassState","singpassSource","loginPageTitle","isInternationTem","$store","state","baseData","templateLayoutType","userInputPrompt","str","loginRegistType","selectOptions","arr","value","code","push","isLogin","userInfoIsReady","checkText","serverName","publicInfo","company_name","userFlag","regExp","phone","email","test","passFlag","passWord","checkFlag","verification","checkOptions","haveCode","userErrorFlag","passErrorFlag","checkErrorFlag","submitDisabled","dialogConfirmDisabled","openLoginVerificationMode","companyName","thirdList","thirdInfo","forEach","item","img","logoAddress","pcThirdUrl","sort","pcJump","newArr","sortKey","$route","query","source","methods","init","$off","$on","newData","JSON","parse","stringify","callback","undefined","axios","url","method","header","params","then","info","catch","array","key","a","b","x","y","changeThird","window","open","addHover","num","removeHover","goUrl","$router","location","href","inputChanges","selectChange","submit","mobileNumber","loginPword","nc","headers","reset","toString","token","verifyCallBack","parameter","dialogConfirm","authCode","dialogClose","dispatch","getMySymbol","getCodeClick","sendCode","operationType","storageMySymbol","get","webMySymbol","symbols","filter","sumMySymbolList","Array","from","Set","diffMySymbolList","includes","sync_status","set","common","optional_symbol","join","goThirdUrl"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SACEA,SADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,SALP;AAOA,eAAe;AACbC,EAAAA,IAAI,EAAE,YADO;AAEbC,EAAAA,IAFa,kBAEN;AACL,WAAO;AACLH,MAAAA,MAAM,EAANA,MADK;AAELC,MAAAA,QAAQ,EAARA,QAFK;AAGLG,MAAAA,SAAS,EAAE,EAHN;AAGU;AACfC,MAAAA,SAAS,EAAE,EAJN;AAIU;AACfC,MAAAA,UAAU,EAAE,EALP;AAKW;AAChBC,MAAAA,SAAS,EAAE,GANN;AAMW;AAChBC,MAAAA,SAAS,EAAE,EAPN;AAOU;AACfC,MAAAA,UAAU,EAAE,KARP;AAQc;AACnBC,MAAAA,UAAU,EAAE,KATP;AASc;AACnBC,MAAAA,aAAa,EAAE,KAVV;AAUiB;AACtBC,MAAAA,SAAS,EAAE,IAXN;AAWY;AACjBC,MAAAA,oBAAoB,EAAE,KAZjB;AAYwB;AAC7BC,MAAAA,WAAW,EAAE,QAbR;AAcLC,MAAAA,aAAa,EAAE,CAdV;AAeLC,MAAAA,kBAAkB,EAAE,KAff;AAgBLC,MAAAA,aAAa,EAAE,KAhBV;AAiBLC,MAAAA,SAAS,EAAE;AAjBN,KAAP;AAmBD,GAtBY;AAuBbC,EAAAA,KAAK,EAAE;AACLb,IAAAA,UADK,sBACMc,IADN,EACY;AAAA;;AACf,UAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAKC,SAAL,CAAe,YAAM;AACnB,UAAA,KAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,cAAhB,EAAgC,eAAhC;AACD,SAFD;AAGD;AACF,KAPI;AAQLC,IAAAA,SARK,qBAQKC,CARL,EAQQ;AAAE,UAAIA,CAAJ,EAAO;AAAE,aAAKC,MAAL;AAAgB;AAAE,KARrC;AASL;AACAC,IAAAA,mBAVK,+BAUezB,IAVf,EAUqB;AACxB,UAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,aAAK0B,OAAL,GAAe,KAAf;;AACA,YAAI1B,IAAI,CAAC2B,IAAL,KAAc,SAAlB,EAA6B;AAC3B;AACA,eAAKd,kBAAL,GAA0B,IAA1B;AACD,SAHD,MAGO;AACL,eAAKO,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEM,YAAAA,IAAI,EAAE3B,IAAI,CAAC4B,GAAb;AAAkBC,YAAAA,IAAI,EAAE;AAAxB,WAAvB;AACD;AACF;AACF;AApBI,GAvBM;AA6CbC,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,eAFQ,6BAEU;AAChB,UAAI,KAAKhB,SAAL,KAAmB,UAAvB,EAAmC;AACjC,eAAO,KAAKiB,EAAL,CAAQ,0BAAR,CAAP,CADiC,CACW;AAC7C;;AACD,UAAI,KAAKC,YAAL,IAAqB,KAAKC,aAA1B,IAA2C,KAAKC,cAAL,KAAwB,KAAvE,EAA8E;AAC5E,eAAO,KAAKH,EAAL,CAAQ,0BAAR,CAAP,CAD4E,CAChC;AAC7C;;AACD,aAAO,KAAKA,EAAL,CAAQ,aAAR,CAAP;AACD,KAVO;AAWRI,IAAAA,cAXQ,4BAWS;AACf,UAAI,KAAKrB,SAAL,KAAmB,UAAvB,EAAmC;AACjC,eAAO,KAAKiB,EAAL,CAAQ,yBAAR,CAAP,CADiC,CACU;AAC5C;;AACD,UAAI,KAAKC,YAAL,IAAqB,KAAKC,aAA1B,IAA2C,KAAKC,cAAL,KAAwB,KAAvE,EAA8E;AAC5E,eAAO,KAAKH,EAAL,CAAQ,yBAAR,CAAP,CAD4E,CACjC;AAC5C;;AACD,aAAO,KAAKA,EAAL,CAAQ,sBAAR,CAAP;AACD,KAnBO;AAoBR;AACAK,IAAAA,gBArBQ,8BAqBW;AACjB,aAAO,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2BC,kBAA3B,KAAkD,GAAzD;AACD,KAvBO;AAwBRC,IAAAA,eAxBQ,6BAwBU;AAChB,UAAIC,GAAG,GAAG,EAAV;;AACA,cAAQ,KAAKC,eAAb;AACE,aAAK,GAAL;AACED,UAAAA,GAAG,GAAG,KAAKX,EAAL,CAAQ,oBAAR,CAAN;AACA;;AACF,aAAK,GAAL;AACEW,UAAAA,GAAG,GAAG,KAAKX,EAAL,CAAQ,iBAAR,CAAN;AACA;;AACF,aAAK,GAAL;AACEW,UAAAA,GAAG,GAAG,KAAKX,EAAL,CAAQ,iBAAR,CAAN;AACA;;AACF;AACEW,UAAAA,GAAG,GAAG,KAAKX,EAAL,CAAQ,oBAAR,CAAN;AAXJ;;AAaA,aAAOW,GAAP;AACD,KAxCO;AAyCR;AACAC,IAAAA,eA1CQ,6BA0CU;AAChB;AACA,UAAMD,GAAG,GAAG,GAAZ,CAFgB,CAEC;AACjB;AACA;AACA;;AACA,aAAOA,GAAP;AACD,KAjDO;AAkDRE,IAAAA,aAlDQ,2BAkDQ;AACd,UAAMC,GAAG,GAAG,CAAC;AAAEC,QAAAA,KAAK,EAAE,KAAKf,EAAL,CAAQ,2BAAR,CAAT;AAA+CgB,QAAAA,IAAI,EAAE;AAArD,OAAD,CAAZ;;AACA,UAAI,KAAKJ,eAAL,KAAyB,GAA7B,EAAkC;AAChCE,QAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEF,UAAAA,KAAK,EAAE,KAAKf,EAAL,CAAQ,+BAAR,CAAT;AAAmDgB,UAAAA,IAAI,EAAE;AAAzD,SAAT;AACD,OAFD,MAEO,IAAI,KAAKJ,eAAL,KAAyB,GAA7B,EAAkC;AACvCE,QAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEF,UAAAA,KAAK,EAAE,KAAKf,EAAL,CAAQ,yBAAR,CAAT;AAA6CgB,UAAAA,IAAI,EAAE;AAAnD,SAAT;AACD,OAFM,MAEA;AACLF,QAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEF,UAAAA,KAAK,EAAE,KAAKf,EAAL,CAAQ,+BAAR,CAAT;AAAmDgB,UAAAA,IAAI,EAAE;AAAzD,SAAT;AACAF,QAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEF,UAAAA,KAAK,EAAE,KAAKf,EAAL,CAAQ,yBAAR,CAAT;AAA6CgB,UAAAA,IAAI,EAAE;AAAnD,SAAT;AACD;;AACD,aAAOF,GAAP;AACD,KA7DO;AA8DRxB,IAAAA,SA9DQ,uBA8DI;AACV,kCAAqC,KAAKgB,MAAL,CAAYC,KAAZ,CAAkBC,QAAvD;AAAA,UAAQU,OAAR,yBAAQA,OAAR;AAAA,UAAiBC,eAAjB,yBAAiBA,eAAjB;;AACA,UAAID,OAAO,IAAIC,eAAf,EAAgC;AAC9B,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KApEO;AAqERC,IAAAA,SArEQ,uBAqEI;AACV,cAAQ,KAAKhD,SAAb;AACE,aAAK,GAAL;AACE;AACA,iBAAO,KAAK4B,EAAL,CAAQ,uBAAR,CAAP;;AACF,aAAK,GAAL;AACE;AACA,iBAAO,KAAKA,EAAL,CAAQ,sBAAR,CAAP;;AACF,aAAK,GAAL;AACE;AACA,iBAAO,KAAKA,EAAL,CAAQ,sBAAR,CAAP;;AACF;AACE;AACA,iBAAO,KAAKA,EAAL,CAAQ,iBAAR,CAAP;AAZJ;AAcD,KApFO;AAqFRqB,IAAAA,UArFQ,wBAqFK;AACX,UAAQC,UAAR,GAAuB,KAAKhB,MAAL,CAAYC,KAAZ,CAAkBC,QAAzC,CAAQc,UAAR;AACA,UAAIN,IAAI,GAAG,EAAX;;AACA,UAAIM,UAAU,IAAIA,UAAU,CAAC1B,GAAzB,IAAgC0B,UAAU,CAAC1B,GAAX,CAAe2B,YAAnD,EAAiE;AAC/DP,QAAAA,IAAI,GAAGM,UAAU,CAAC1B,GAAX,CAAe2B,YAAtB;AACD;;AACD,aAAOP,IAAP;AACD,KA5FO;AA6FR;AACAQ,IAAAA,QA9FQ,sBA8FG;AACT,kCAAyB,KAAKlB,MAAL,CAAYC,KAAZ,CAAkBkB,MAA3C;AAAA,UAAQC,KAAR,yBAAQA,KAAR;AAAA,UAAeC,KAAf,yBAAeA,KAAf;;AACA,UAAI,KAAKf,eAAL,KAAyB,GAA7B,EAAkC;AAChC,YAAIc,KAAK,CAACE,IAAN,CAAW,KAAK3D,SAAhB,CAAJ,EAAgC;AAAE,iBAAO,IAAP;AAAc;AACjD,OAFD,MAEO,IAAI,KAAK2C,eAAL,KAAyB,GAA7B,EAAkC;AACvC,YAAIe,KAAK,CAACC,IAAN,CAAW,KAAK3D,SAAhB,CAAJ,EAAgC;AAAE,iBAAO,IAAP;AAAc;AACjD,OAFM,MAEA;AACL,YAAIyD,KAAK,CAACE,IAAN,CAAW,KAAK3D,SAAhB,CAAJ,EAAgC;AAAE,iBAAO,IAAP;AAAc;;AAChD,YAAI0D,KAAK,CAACC,IAAN,CAAW,KAAK3D,SAAhB,CAAJ,EAAgC;AAAE,iBAAO,IAAP;AAAc;AACjD;;AACD,aAAO,KAAP;AACD,KAzGO;AA0GR;AACA4D,IAAAA,QA3GQ,sBA2GG;AAAE,aAAO,KAAKvB,MAAL,CAAYC,KAAZ,CAAkBkB,MAAlB,CAAyBK,QAAzB,CAAkCF,IAAlC,CAAuC,KAAK1D,SAA5C,CAAP;AAAgE,KA3GrE;AA4GR;AACA6D,IAAAA,SA7GQ,uBA6GI;AAAE,aAAO,KAAKzB,MAAL,CAAYC,KAAZ,CAAkBkB,MAAlB,CAAyBO,YAAzB,CAAsCJ,IAAtC,CAA2C,KAAKzD,UAAhD,CAAP;AAAqE,KA7G3E;AA8GR;AACA8D,IAAAA,YA/GQ,0BA+GO;AACb,cAAQ,KAAK7D,SAAb;AACE,aAAK,GAAL;AACE;AACA,iBAAO;AAAEuB,YAAAA,IAAI,EAAE,KAAKK,EAAL,CAAQ,kBAAR,CAAR;AAAqCkC,YAAAA,QAAQ,EAAE;AAA/C,WAAP;;AACF,aAAK,GAAL;AACE;AACA,iBAAO;AAAEvC,YAAAA,IAAI,EAAE,KAAKK,EAAL,CAAQ,iBAAR,CAAR;AAAoCkC,YAAAA,QAAQ,EAAE;AAA9C,WAAP;;AACF,aAAK,GAAL;AACE;AACA,iBAAO;AAAEvC,YAAAA,IAAI,EAAE,KAAKK,EAAL,CAAQ,iBAAR,CAAR;AAAoCkC,YAAAA,QAAQ,EAAE;AAA9C,WAAP;;AACF;AACE;AACA,iBAAO;AAAEvC,YAAAA,IAAI,EAAE,KAAKK,EAAL,CAAQ,YAAR,CAAR;AAA+BkC,YAAAA,QAAQ,EAAE;AAAzC,WAAP;AAZJ;AAcD,KA9HO;AA+HR;AACAC,IAAAA,aAhIQ,2BAgIQ;AACd,UAAI,KAAKlE,SAAL,CAAeiB,MAAf,KAA0B,CAA1B,IAA+B,CAAC,KAAKsC,QAAzC,EAAmD,OAAO,IAAP;AACnD,aAAO,KAAP;AACD,KAnIO;AAoIR;AACAY,IAAAA,aArIQ,2BAqIQ;AACd,UAAI,KAAKlE,SAAL,CAAegB,MAAf,KAA0B,CAA1B,IAA+B,CAAC,KAAK2C,QAAzC,EAAmD,OAAO,IAAP;AACnD,aAAO,KAAP;AACD,KAxIO;AAyIR;AACAQ,IAAAA,cA1IQ,4BA0IS;AACf,UAAI,KAAKlE,UAAL,CAAgBe,MAAhB,KAA2B,CAA3B,IAAgC,CAAC,KAAK6C,SAA1C,EAAqD,OAAO,IAAP;AACrD,aAAO,KAAP;AACD,KA7IO;AA8IR;AACAO,IAAAA,cA/IQ,4BA+IS;AACf,UACEd,QADF,GAEI,IAFJ,CACEA,QADF;AAAA,UACYK,QADZ,GAEI,IAFJ,CACYA,QADZ;AAAA,UACsBvD,UADtB,GAEI,IAFJ,CACsBA,UADtB;AAAA,UACkCE,aADlC,GAEI,IAFJ,CACkCA,aADlC;;AAGA,UAAKgD,QAAQ,IAAIK,QAAZ,IAAwBvD,UAAzB,IAAwCE,aAA5C,EAA2D;AACzD,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KAvJO;AAwJR+D,IAAAA,qBAxJQ,mCAwJgB;AACtB,UAAI,CAAC,KAAKR,SAAN,IAAmB,CAAC,KAAKrD,oBAA7B,EAAmD,OAAO,IAAP;AACnD,aAAO,KAAP;AACD,KA3JO;AA4JR;AACA8D,IAAAA,yBA7JQ,uCA6JoB;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAO,KAAP;AACD,KApKO;AAqKRlB,IAAAA,UArKQ,wBAqKK;AACX,UAAQA,UAAR,GAAuB,KAAKhB,MAAL,CAAYC,KAAZ,CAAkBC,QAAzC,CAAQc,UAAR;AACA,aAAOA,UAAP;AACD,KAxKO;AAyKRmB,IAAAA,WAzKQ,yBAyKM;AACZ,UAAI,KAAKnB,UAAL,IAAmB,KAAKA,UAAL,CAAgB1B,GAAvC,EAA4C;AAC1C,eAAO,KAAK0B,UAAL,CAAgB1B,GAAhB,CAAoB2B,YAA3B;AACD;;AACD,aAAO,EAAP;AACD,KA9KO;AA+KRmB,IAAAA,SA/KQ,uBA+KI;AACV,UAAI,KAAKpB,UAAL,IAAmB,KAAKA,UAAL,CAAgBqB,SAAnC,IAAgD,KAAKrB,UAAL,CAAgBqB,SAAhB,CAA0BzD,MAA1B,GAAmC,CAAvF,EAA0F;AACxF,YAAM4B,GAAG,GAAG,EAAZ;AACA,aAAKQ,UAAL,CAAgBqB,SAAhB,CAA0BC,OAA1B,CAAkC,UAACC,IAAD,EAAU;AAC1C/B,UAAAA,GAAG,CAACG,IAAJ,CAAS;AACPF,YAAAA,KAAK,EAAE8B,IAAI,CAAC9E,IADL;AAEP+E,YAAAA,GAAG,EAAED,IAAI,CAACE,WAFH;AAGP/B,YAAAA,IAAI,EAAE6B,IAAI,CAACG,UAHJ;AAIPC,YAAAA,IAAI,EAAEJ,IAAI,CAACI,IAJJ;AAKPC,YAAAA,MAAM,EAAEL,IAAI,CAACK;AALN,WAAT;AAOD,SARD;AASA,YAAMC,MAAM,GAAG,KAAKC,OAAL,CAAatC,GAAb,EAAkB,MAAlB,CAAf;AACA,eAAOqC,MAAP;AACD;;AACD,aAAO,IAAP;AACD,KA/LO;AAgMR1D,IAAAA,mBAhMQ,iCAgMc;AACpB,aAAO,KAAKa,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2Bf,mBAAlC;AACD,KAlMO;AAmMRQ,IAAAA,YAnMQ,0BAmMO;AACb,aAAO,KAAKoD,MAAL,CAAYC,KAAZ,CAAkBtC,IAAzB;AACD,KArMO;AAsMRd,IAAAA,aAtMQ,2BAsMQ;AACd,aAAO,KAAKmD,MAAL,CAAYC,KAAZ,CAAkB/C,KAAzB;AACD,KAxMO;AAyMRJ,IAAAA,cAzMQ,4BAyMS;AACf,aAAO,KAAKkD,MAAL,CAAYC,KAAZ,CAAkBC,MAAzB;AACD;AA3MO,GA7CG;AA0PbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IADO,kBACA;AAAA;;AACL,UAAI,KAAKnE,SAAT,EAAoB;AAAE,aAAKE,MAAL;AAAgB;;AACtC,WAAKJ,IAAL,CAAUsE,IAAV,CAAe,WAAf;AACA,WAAKtE,IAAL,CAAUuE,GAAV,CAAc,WAAd,EAA2B,UAAC3F,IAAD,EAAU;AACnC,YAAM4F,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe/F,IAAf,CAAX,CAAhB;AACA4F,QAAAA,OAAO,CAACI,QAAR,GAAmBC,SAAnB;;AACA,QAAA,MAAI,CAACC,KAAL,CAAW;AACTC,UAAAA,GAAG,EAAE,0BADI;AAETC,UAAAA,MAAM,EAAE,MAFC;AAGTC,UAAAA,MAAM,EAAE,EAHC;AAITC,UAAAA,MAAM,EAAEV;AAJC,SAAX,EAKGW,IALH,CAKQ,UAACC,IAAD,EAAU;AAChBxG,UAAAA,IAAI,CAACgG,QAAL,CAAcQ,IAAd;AACD,SAPD,EAOGC,KAPH,CAOS,YAAM,CACd,CARD;AASD,OAZD;AAaA,WAAKrF,IAAL,CAAUsE,IAAV,CAAe,WAAf;AACA,WAAKtE,IAAL,CAAUuE,GAAV,CAAc,WAAd,EAA2B,UAAC3F,IAAD,EAAU;AACnC,YAAM4F,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe/F,IAAf,CAAX,CAAhB;AACA4F,QAAAA,OAAO,CAACI,QAAR,GAAmBC,SAAnB;;AACA,QAAA,MAAI,CAACC,KAAL,CAAW;AACTC,UAAAA,GAAG,EAAE,wBADI;AAETC,UAAAA,MAAM,EAAE,MAFC;AAGTC,UAAAA,MAAM,EAAE,EAHC;AAITC,UAAAA,MAAM,EAAEV;AAJC,SAAX,EAKGW,IALH,CAKQ,UAACC,IAAD,EAAU;AAChBxG,UAAAA,IAAI,CAACgG,QAAL,CAAcQ,IAAd;AACD,SAPD,EAOGC,KAPH,CAOS,YAAM,CACb;AACD,SATD;AAUD,OAbD;AAcA,WAAKrF,IAAL,CAAUuE,GAAV,CAAc,qBAAd,EAAqC,YAAM;AACzC,QAAA,MAAI,CAAC9E,kBAAL,GAA0B,KAA1B;AACD,OAFD;AAGA,WAAKO,IAAL,CAAUuE,GAAV,CAAc,cAAd,EAA8B,UAACa,IAAD,EAAU;AACtC,QAAA,MAAI,CAACzF,SAAL,GAAiByF,IAAjB;AACD,OAFD;AAGD,KAtCM;AAuCPpB,IAAAA,OAvCO,mBAuCCsB,KAvCD,EAuCQC,GAvCR,EAuCa;AAClB,aAAOD,KAAK,CAACzB,IAAN,CAAW,UAAC2B,CAAD,EAAIC,CAAJ,EAAU;AAC1B,YAAMC,CAAC,GAAGF,CAAC,CAACD,GAAD,CAAX;AACA,YAAMI,CAAC,GAAGF,CAAC,CAACF,GAAD,CAAX;AACA,eAAQG,CAAC,GAAGC,CAAZ,CAH0B,CAGV;AACjB,OAJM,CAAP;AAKD,KA7CM;AA8CPC,IAAAA,WA9CO,uBA8CKnC,IA9CL,EA8CW;AAChB,UAAIA,IAAI,CAACK,MAAL,KAAgB,GAApB,EAAyB;AACvB+B,QAAAA,MAAM,CAACC,IAAP,CAAYrC,IAAI,CAAC7B,IAAjB,EAAuB,QAAvB;AACD;AACF,KAlDM;AAmDPmE,IAAAA,QAnDO,oBAmDEC,GAnDF,EAmDO;AACZ,WAAKxG,aAAL,GAAqBwG,GAArB;AACA,WAAKtG,aAAL,GAAqB,IAArB;AACD,KAtDM;AAuDPuG,IAAAA,WAvDO,yBAuDO;AACZ,WAAKzG,aAAL,GAAqB,IAArB,CADY,CAEZ;AACA;AACA;AACD,KA5DM;AA6DP0G,IAAAA,KA7DO,iBA6DDnB,GA7DC,EA6DI;AACT;AACA,UAAIA,GAAG,KAAK,WAAR,IAAuB,KAAKlE,YAA5B,IAA4C,KAAKC,aAArD,EAAoE;AAClE,aAAKqF,OAAL,CAAatE,IAAb,WAAqBkD,GAArB,2BAAyC,KAAKlE,YAA9C,4BAA4E,KAAKC,aAAjF;AACD,OAFD,MAEO;AACL,aAAKqF,OAAL,CAAatE,IAAb,CAAkBkD,GAAlB;AACD;AACF,KApEM;AAqEP3E,IAAAA,MArEO,oBAqEE;AAAEyF,MAAAA,MAAM,CAACO,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AAA6B,KArEjC;AAsEP;AACAC,IAAAA,YAvEO,wBAuEM3E,KAvEN,EAuEahD,IAvEb,EAuEmB;AACxB,WAAKA,IAAL,IAAagD,KAAb;AACD,KAzEM;AA0EP4E,IAAAA,YA1EO,wBA0EM9C,IA1EN,EA0EY;AACjB,WAAKlE,WAAL,GAAmBkE,IAAI,CAAC7B,IAAxB;AACD,KA5EM;AA6EP4E,IAAAA,MA7EO,oBA6EE;AAAA;;AACP,UAAMtB,MAAM,mCACP,KAAKjG,SADE,GAEP;AACDwH,QAAAA,YAAY,EAAE,KAAK5H,SADlB;AAED6H,QAAAA,UAAU,EAAE,KAAK5H,SAFhB;AAGD6H,QAAAA,EAAE,EAAE,IAHH,CAID;;AAJC,OAFO,CAAZ;;AASA,WAAKvH,aAAL,GAAqB,IAArB;AACA,WAAK0F,KAAL,CAAW;AACTC,QAAAA,GAAG,EAAE,eADI;AAET6B,QAAAA,OAAO,EAAE,EAFA;AAGT1B,QAAAA,MAAM,EAANA,MAHS;AAITF,QAAAA,MAAM,EAAE;AAJC,OAAX,EAKGG,IALH,CAKQ,UAACvG,IAAD,EAAU;AAChB,QAAA,MAAI,CAACK,SAAL,CAAe0H,EAAf,CAAkBE,KAAlB,GADgB,CACW;;;AAC3B,QAAA,MAAI,CAAC3H,UAAL,GAAkB,KAAlB,CAFgB,CAES;;AACzB,QAAA,MAAI,CAACE,aAAL,GAAqB,KAArB,CAHgB,CAGY;;AAC5B,YAAIR,IAAI,CAACgD,IAAL,CAAUkF,QAAV,OAAyB,GAA7B,EAAkC;AAChC,UAAA,MAAI,CAAC3H,UAAL,GAAkB,IAAlB,CADgC,CACR;;AACxB,UAAA,MAAI,CAACH,SAAL,GAAiBJ,IAAI,CAACA,IAAL,CAAU6B,IAA3B,CAFgC,CAEC;;AACjC,UAAA,MAAI,CAACpB,SAAL,GAAiBT,IAAI,CAACA,IAAL,CAAUmI,KAA3B;;AACA,UAAA,MAAI,CAAChH,SAAL,CAAe,YAAM;AACnB;AACA,YAAA,MAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,iBAAhB,EAAmC,YAAnC,EAFmB,CAGnB;;;AACA,YAAA,MAAI,CAACD,IAAL,CAAUC,KAAV,CAAgB,cAAhB,EAAgC,iBAAhC;AACD,WALD;AAMD,SAVD,MAUO;AACL,UAAA,MAAI,CAACD,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEM,YAAAA,IAAI,EAAE3B,IAAI,CAAC4B,GAAb;AAAkBC,YAAAA,IAAI,EAAE;AAAxB,WAAvB;AACD;AACF,OAtBD;AAuBD,KA/GM;AAgHP;AACAuG,IAAAA,cAjHO,0BAiHQC,SAjHR,EAiHmB;AACxB,WAAKhI,SAAL,GAAiBgI,SAAjB;AACA,WAAK/H,UAAL,GAAkB,IAAlB;AACD,KApHM;AAqHP;AACAgI,IAAAA,aAtHO,2BAsHS;AAAA;;AACd,WAAK5H,oBAAL,GAA4B,IAA5B;AACA,UAAM4F,MAAM,GAAG;AACb6B,QAAAA,KAAK,EAAE,KAAK1H,SADC;AAEb8H,QAAAA,QAAQ,EAAE,KAAKpI,UAFF;AAGb0B,QAAAA,IAAI,EAAE,KAAKlB;AAHE,OAAf,CAFc,CAOd;;AACA,UAAI,KAAKsB,YAAL,IAAqB,KAAKC,aAA9B,EAA6C;AAC3CoE,QAAAA,MAAM,CAACrE,YAAP,GAAsB,KAAKA,YAA3B;AACD;;AACD,WAAKiE,KAAL,CAAW;AACTC,QAAAA,GAAG,EAAE,oBADI;AAETC,QAAAA,MAAM,EAAE,MAFC;AAGTE,QAAAA,MAAM,EAANA;AAHS,OAAX,EAIGC,IAJH,CAIQ,UAACvG,IAAD,EAAU;AAChB,QAAA,MAAI,CAACU,oBAAL,GAA4B,KAA5B;;AACA,YAAIV,IAAI,CAACgD,IAAL,CAAUkF,QAAV,OAAyB,GAA7B,EAAkC;AAChC,UAAA,MAAI,CAACM,WAAL,GADgC,CACZ;;;AACpB5I,UAAAA,SAAS,CAAC,OAAD,EAAU,MAAI,CAACa,SAAf,CAAT,CAFgC,CAEI;AACpC;;AACA,UAAA,MAAI,CAACW,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEM,YAAAA,IAAI,EAAE,MAAI,CAACK,EAAL,CAAQ,oBAAR,CAAR;AAAuCH,YAAAA,IAAI,EAAE;AAA7C,WAAvB,EAJgC,CAKhC;;;AACA,UAAA,MAAI,CAACS,MAAL,CAAYmG,QAAZ,CAAqB,aAArB;;AACA,UAAA,MAAI,CAACC,WAAL;;AACAzB,UAAAA,MAAM,CAACO,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,SATD,MASO;AACL,UAAA,MAAI,CAACrG,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEM,YAAAA,IAAI,EAAE3B,IAAI,CAAC4B,GAAb;AAAkBC,YAAAA,IAAI,EAAE;AAAxB,WAAvB;AACD;AACF,OAlBD;AAmBD,KApJM;AAqJP;AACA2G,IAAAA,WAtJO,yBAsJO;AACZ,WAAKjI,UAAL,GAAkB,KAAlB;AACA,WAAKJ,UAAL,GAAkB,EAAlB;AACD,KAzJM;AA0JP;AACAwI,IAAAA,YA3JO,0BA2JQ;AACb,WAAKC,QAAL;AACD,KA7JM;AA8JP;AACAA,IAAAA,QA/JO,sBA+JI;AAAA;;AACT,UAAI,KAAKxI,SAAL,KAAmB,GAAvB,EAA4B;AAC1B,aAAKgB,IAAL,CAAUC,KAAV,CAAgB,WAAhB,EAA6B;AAC3B8G,UAAAA,KAAK,EAAE,KAAK1H,SADe;AAE3BoI,UAAAA,aAAa,EAAE,IAFY;AAG3B7C,UAAAA,QAAQ,EAAE,kBAAChG,IAAD,EAAU;AAClB,gBAAIA,IAAI,CAACgD,IAAL,CAAUkF,QAAV,OAAyB,GAA7B,EAAkC;AAChC;AACA,cAAA,MAAI,CAAC9G,IAAL,CAAUC,KAAV,CAAgB,eAAhB,EAAiC,cAAjC,EAFgC,CAGhC;;;AACA,cAAA,MAAI,CAACD,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEM,gBAAAA,IAAI,EAAE3B,IAAI,CAAC4B,GAAb;AAAkBC,gBAAAA,IAAI,EAAE;AAAxB,eAAvB;AACD,aALD,MAKO;AACL;AACA,cAAA,MAAI,CAACT,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEM,gBAAAA,IAAI,EAAE,MAAI,CAACK,EAAL,CAAQ,wBAAR,CAAR;AAA2CH,gBAAAA,IAAI,EAAE;AAAjD,eAAvB;AACD;AACF;AAb0B,SAA7B;AAeD,OAhBD,MAgBO,IAAI,KAAKzB,SAAL,KAAmB,GAAvB,EAA4B;AACjC,aAAKgB,IAAL,CAAUC,KAAV,CAAgB,WAAhB,EAA6B;AAC3B8G,UAAAA,KAAK,EAAE,KAAK1H,SADe;AAE3BoI,UAAAA,aAAa,EAAE,GAFY;AAG3B7C,UAAAA,QAAQ,EAAE,kBAAChG,IAAD,EAAU;AAClB,gBAAIA,IAAI,CAACgD,IAAL,CAAUkF,QAAV,OAAyB,GAA7B,EAAkC;AAChC;AACA,cAAA,MAAI,CAAC9G,IAAL,CAAUC,KAAV,CAAgB,eAAhB,EAAiC,cAAjC,EAFgC,CAGhC;;;AACA,cAAA,MAAI,CAACD,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEM,gBAAAA,IAAI,EAAE3B,IAAI,CAAC4B,GAAb;AAAkBC,gBAAAA,IAAI,EAAE;AAAxB,eAAvB;AACD,aALD,MAKO;AACL;AACA,cAAA,MAAI,CAACT,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEM,gBAAAA,IAAI,EAAE,MAAI,CAACK,EAAL,CAAQ,wBAAR,CAAR;AAA2CH,gBAAAA,IAAI,EAAE;AAAjD,eAAvB;AACD;AACF;AAb0B,SAA7B;AAeD;AACF,KAjMM;AAkMP;AACA6G,IAAAA,WAnMO,yBAmMO;AAAA;;AACZ,WAAKxC,KAAL,CAAW;AACTC,QAAAA,GAAG,EAAE,sBADI;AAETG,QAAAA,MAAM,EAAE,EAFC;AAGTF,QAAAA,MAAM,EAAE;AAHC,OAAX,EAIGG,IAJH,CAIQ,UAACvG,IAAD,EAAU;AAChB,YAAIA,IAAI,CAACgD,IAAL,KAAc,GAAlB,EAAuB;AACrB,cAAM8F,eAAe,GAAGnJ,SAAS,CAACoJ,GAAV,CAAc,UAAd,KAA6B,EAArD;AACA,cAAMC,WAAW,GAAGhJ,IAAI,CAACA,IAAL,CAAUiJ,OAAV,CAAkBC,MAAlB,CAAyB,UAACpC,CAAD;AAAA,mBAAOA,CAAC,KAAK,EAAb;AAAA,WAAzB,KAA6C,EAAjE;AACA,cAAMqC,eAAe,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,8BAAYR,eAAZ,sBAAgCE,WAAhC,GAAX,CAAxB;AACA,cAAMO,gBAAgB,GAAGT,eAAe,CAACI,MAAhB,CAAuB,UAACpC,CAAD;AAAA,mBAAO,CAACkC,WAAW,CAACQ,QAAZ,CAAqB1C,CAArB,CAAR;AAAA,WAAvB,CAAzB,CAJqB,CAKrB;AACA;;AACA,cAAIyC,gBAAgB,CAACrI,MAAjB,KAA4B,CAA5B,IAAiClB,IAAI,CAACA,IAAL,CAAUyJ,WAAV,KAA0B,GAA/D,EAAoE;AAClE9J,YAAAA,SAAS,CAAC+J,GAAV,CAAc,UAAd,EAA0BP,eAA1B;;AACA,YAAA,MAAI,CAACjD,KAAL,CAAW;AACTC,cAAAA,GAAG,EAAE,MAAI,CAAC7D,MAAL,CAAYC,KAAZ,CAAkB4D,GAAlB,CAAsBwD,MAAtB,CAA6BC,eADzB;AAET5B,cAAAA,OAAO,EAAE,EAFA;AAGT1B,cAAAA,MAAM,EAAE;AACNuC,gBAAAA,aAAa,EAAEU,gBAAgB,CAACrI,MAAjB,GAA0B,GAA1B,GAAgC,GAAhC,GAAsC,GAD/C;AACoD;AAC1D+H,gBAAAA,OAAO,EAAEM,gBAAgB,CAACM,IAAjB,CAAsB,GAAtB;AAFH,eAHC;AAOTzD,cAAAA,MAAM,EAAE;AAPC,aAAX,EAQGG,IARH,CAQQ,YAAM,CAAE,CARhB;AASD,WAXD,MAWO;AACL5G,YAAAA,SAAS,CAAC+J,GAAV,CAAc,UAAd,EAA0BV,WAA1B;AACD;AACF,SArBD,MAqBO;AACL,UAAA,MAAI,CAAC5H,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEM,YAAAA,IAAI,EAAE3B,IAAI,CAAC4B,GAAb;AAAkBC,YAAAA,IAAI,EAAE;AAAxB,WAAvB;AACD;AACF,OA7BD;AA8BD,KAlOM;AAmOP;AACAiI,IAAAA,UApOO,sBAoOI9J,IApOJ,EAoOU;AACf;AACA,UAAIA,IAAI,CAACkF,MAAL,KAAgB,GAApB,EAAyB;AACvB+B,QAAAA,MAAM,CAACC,IAAP,CAAYlH,IAAI,CAACgD,IAAjB,EAAuB,QAAvB;AACD,OAFD,MAEO;AACL;AACA,aAAKV,MAAL,CAAYmG,QAAZ,CAAqB,qBAArB,EAA4C;AAC1CtC,UAAAA,GAAG,EAAEnG,IAAI,CAACgD,IADgC;AAE1ChD,UAAAA,IAAI,EAAE;AAFoC,SAA5C;AAID;AACF;AA/OM;AA1PI,CAAf","sourcesContent":["import {\r\n  myStorage,\r\n  setCookie,\r\n  imgMap,\r\n  colorMap,\r\n} from '@/utils';\r\n\r\nexport default {\r\n  name: 'page-login',\r\n  data() {\r\n    return {\r\n      imgMap,\r\n      colorMap,\r\n      userValue: '', // 账号value\r\n      passValue: '', // 密码value\r\n      checkValue: '', // 验证码value\r\n      checkType: '0', // 验证码类型( '1'-谷歌 '2'-手机 '3'-邮箱 )\r\n      verifyObj: {}, // 滑动返回对象\r\n      verifyFlag: false, // 滑动是否通过\r\n      dialogFlag: false, // 弹窗flag\r\n      submitLoading: false, // input框\r\n      userToken: null, // 服务端第一次校验返回\r\n      dialogConfirmLoading: false, // 用于弹窗按钮loading效果\r\n      selectValue: 'google',\r\n      addHoverclass: 0,\r\n      singPassDialogFlag: false,\r\n      thirdListShow: false,\r\n      loginMode: null,\r\n    };\r\n  },\r\n  watch: {\r\n    checkValue(newV) {\r\n      if (newV.length === 6) {\r\n        this.$nextTick(() => {\r\n          this.$bus.$emit('button-click', 'dialogConfirm');\r\n        });\r\n      }\r\n    },\r\n    loginFlag(v) { if (v) { this.goHome(); } },\r\n    // 第三方登录信息\r\n    thirdPartyLoginData(data) {\r\n      if (data !== null) {\r\n        this.loading = false;\r\n        if (data.text === 'success') {\r\n          // 打开 singPass 弹框\r\n          this.singPassDialogFlag = true;\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    // 登录按钮文案\r\n    loginButtonText() {\r\n      if (this.loginMode === 'SingPass') {\r\n        return this.$t('singPassLogin.mainText13'); // '登录并关联SingPass账号';\r\n      }\r\n      if (this.singPassCode && this.singpassState && this.singpassSource === 'reg') {\r\n        return this.$t('singPassLogin.mainText13'); // '登录并关联SingPass账号';\r\n      }\r\n      return this.$t('login.login');\r\n    },\r\n    loginPageTitle() {\r\n      if (this.loginMode === 'SingPass') {\r\n        return this.$t('singPassLogin.mainText2'); // 'SingPass第三方登录';\r\n      }\r\n      if (this.singPassCode && this.singpassState && this.singpassSource === 'reg') {\r\n        return this.$t('singPassLogin.mainText2'); // 'SingPass第三方登录';\r\n      }\r\n      return this.$t('login.WelcomeToLogin');\r\n    },\r\n    // user框 PromptText\r\n    isInternationTem() {\r\n      return this.$store.state.baseData.templateLayoutType === '2';\r\n    },\r\n    userInputPrompt() {\r\n      let str = '';\r\n      switch (this.loginRegistType) {\r\n        case '1':\r\n          str = this.$t('login.phoneOrEmail');\r\n          break;\r\n        case '2':\r\n          str = this.$t('resetPass.phone');\r\n          break;\r\n        case '3':\r\n          str = this.$t('resetPass.email');\r\n          break;\r\n        default:\r\n          str = this.$t('login.phoneOrEmail');\r\n      }\r\n      return str;\r\n    },\r\n    // 开启验证方式\r\n    loginRegistType() {\r\n      // const { publicInfo } = this.$store.state.baseData;\r\n      const str = '1'; // 1 手机/邮箱， 2 仅手机， 3 仅邮箱\r\n      // if (publicInfo && publicInfo.switch && publicInfo.switch.login_regist_type) {\r\n      //   str = publicInfo.switch.login_regist_type.toString();\r\n      // }\r\n      return str;\r\n    },\r\n    selectOptions() {\r\n      const arr = [{ value: this.$t('login.GoogleAuthenticator'), code: 'google' }];\r\n      if (this.loginRegistType === '2') {\r\n        arr.push({ value: this.$t('login.MobilePhoneVerification'), code: 'phone' });\r\n      } else if (this.loginRegistType === '3') {\r\n        arr.push({ value: this.$t('login.MailboxValidation'), code: 'email' });\r\n      } else {\r\n        arr.push({ value: this.$t('login.MobilePhoneVerification'), code: 'phone' });\r\n        arr.push({ value: this.$t('login.MailboxValidation'), code: 'email' });\r\n      }\r\n      return arr;\r\n    },\r\n    loginFlag() {\r\n      const { isLogin, userInfoIsReady } = this.$store.state.baseData;\r\n      if (isLogin && userInfoIsReady) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    checkText() {\r\n      switch (this.checkType) {\r\n        case '1':\r\n          // 请输入6位数字谷歌验证码\r\n          return this.$t('login.googleCodeError');\r\n        case '2':\r\n          // 请输入6位数字手机验证码\r\n          return this.$t('login.phoneCodeError');\r\n        case '3':\r\n          // 请输入6位数字邮箱验证码\r\n          return this.$t('login.emailCodeError');\r\n        default:\r\n          // 请输入6位数字验证码\r\n          return this.$t('login.codeError');\r\n      }\r\n    },\r\n    serverName() {\r\n      const { publicInfo } = this.$store.state.baseData;\r\n      let code = '';\r\n      if (publicInfo && publicInfo.msg && publicInfo.msg.company_name) {\r\n        code = publicInfo.msg.company_name;\r\n      }\r\n      return code;\r\n    },\r\n    // userValue 是否复合正则验证\r\n    userFlag() {\r\n      const { phone, email } = this.$store.state.regExp;\r\n      if (this.loginRegistType === '2') {\r\n        if (phone.test(this.userValue)) { return true; }\r\n      } else if (this.loginRegistType === '3') {\r\n        if (email.test(this.userValue)) { return true; }\r\n      } else {\r\n        if (phone.test(this.userValue)) { return true; }\r\n        if (email.test(this.userValue)) { return true; }\r\n      }\r\n      return false;\r\n    },\r\n    // passValue 是否复合正则验证\r\n    passFlag() { return this.$store.state.regExp.passWord.test(this.passValue); },\r\n    // checkValue 是否复合正则验证\r\n    checkFlag() { return this.$store.state.regExp.verification.test(this.checkValue); },\r\n    // 二次验证弹层 text展示文字 havacode是否有获取验证码\r\n    checkOptions() {\r\n      switch (this.checkType) {\r\n        case '1':\r\n          // 谷歌验证码\r\n          return { text: this.$t('login.googleCode'), haveCode: false };\r\n        case '2':\r\n          // 手机验证码\r\n          return { text: this.$t('login.phoneCode'), haveCode: true };\r\n        case '3':\r\n          // 邮箱验证码\r\n          return { text: this.$t('login.emailCode'), haveCode: true };\r\n        default:\r\n          // 验证码\r\n          return { text: this.$t('login.code'), haveCode: false };\r\n      }\r\n    },\r\n    // user框是否为错误状态\r\n    userErrorFlag() {\r\n      if (this.userValue.length !== 0 && !this.userFlag) return true;\r\n      return false;\r\n    },\r\n    // pass框是否为错误状态\r\n    passErrorFlag() {\r\n      if (this.passValue.length !== 0 && !this.passFlag) return true;\r\n      return false;\r\n    },\r\n    // 验证框是否为错误\r\n    checkErrorFlag() {\r\n      if (this.checkValue.length !== 0 && !this.checkFlag) return true;\r\n      return false;\r\n    },\r\n    // 登录button 禁用状态\r\n    submitDisabled() {\r\n      const {\r\n        userFlag, passFlag, verifyFlag, submitLoading,\r\n      } = this;\r\n      if ((userFlag && passFlag && verifyFlag) || submitLoading) {\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    dialogConfirmDisabled() {\r\n      if (!this.checkFlag && !this.dialogConfirmLoading) return true;\r\n      return false;\r\n    },\r\n    // 是否开启验证方式\r\n    openLoginVerificationMode() {\r\n      // const { publicInfo } = this.$store.state.baseData;\r\n      // if (publicInfo && publicInfo.switch\r\n      // && publicInfo.switch.openLoginVerificationMode === '1') {\r\n      //   return true;\r\n      // }\r\n      return false;\r\n    },\r\n    publicInfo() {\r\n      const { publicInfo } = this.$store.state.baseData;\r\n      return publicInfo;\r\n    },\r\n    companyName() {\r\n      if (this.publicInfo && this.publicInfo.msg) {\r\n        return this.publicInfo.msg.company_name;\r\n      }\r\n      return '';\r\n    },\r\n    thirdList() {\r\n      if (this.publicInfo && this.publicInfo.thirdInfo && this.publicInfo.thirdInfo.length > 0) {\r\n        const arr = [];\r\n        this.publicInfo.thirdInfo.forEach((item) => {\r\n          arr.push({\r\n            value: item.name,\r\n            img: item.logoAddress,\r\n            code: item.pcThirdUrl,\r\n            sort: item.sort,\r\n            pcJump: item.pcJump,\r\n          });\r\n        });\r\n        const newArr = this.sortKey(arr, 'sort');\r\n        return newArr;\r\n      }\r\n      return null;\r\n    },\r\n    thirdPartyLoginData() {\r\n      return this.$store.state.baseData.thirdPartyLoginData;\r\n    },\r\n    singPassCode() {\r\n      return this.$route.query.code;\r\n    },\r\n    singpassState() {\r\n      return this.$route.query.state;\r\n    },\r\n    singpassSource() {\r\n      return this.$route.query.source;\r\n    },\r\n  },\r\n  methods: {\r\n    init() {\r\n      if (this.loginFlag) { this.goHome(); }\r\n      this.$bus.$off('emailCode');\r\n      this.$bus.$on('emailCode', (data) => {\r\n        const newData = JSON.parse(JSON.stringify(data));\r\n        newData.callback = undefined;\r\n        this.axios({\r\n          url: 'v4/common/emailValidCode',\r\n          method: 'post',\r\n          header: {},\r\n          params: newData,\r\n        }).then((info) => {\r\n          data.callback(info);\r\n        }).catch(() => {\r\n        });\r\n      });\r\n      this.$bus.$off('phoneCode');\r\n      this.$bus.$on('phoneCode', (data) => {\r\n        const newData = JSON.parse(JSON.stringify(data));\r\n        newData.callback = undefined;\r\n        this.axios({\r\n          url: 'v4/common/smsValidCode',\r\n          method: 'post',\r\n          header: {},\r\n          params: newData,\r\n        }).then((info) => {\r\n          data.callback(info);\r\n        }).catch(() => {\r\n          // console.log(info);\r\n        });\r\n      });\r\n      this.$bus.$on('closeSingPassDialog', () => {\r\n        this.singPassDialogFlag = false;\r\n      });\r\n      this.$bus.$on('setLoginMode', (info) => {\r\n        this.loginMode = info;\r\n      });\r\n    },\r\n    sortKey(array, key) {\r\n      return array.sort((a, b) => {\r\n        const x = a[key];\r\n        const y = b[key];\r\n        return (x - y); // 从小到大排序\r\n      });\r\n    },\r\n    changeThird(item) {\r\n      if (item.pcJump === '1') {\r\n        window.open(item.code, '_blank');\r\n      }\r\n    },\r\n    addHover(num) {\r\n      this.addHoverclass = num;\r\n      this.thirdListShow = true;\r\n    },\r\n    removeHover() {\r\n      this.addHoverclass = null;\r\n      // setTimeout(() => {\r\n      //   this.thirdListShow = false;\r\n      // });\r\n    },\r\n    goUrl(url) {\r\n      // 如果是第三方登录 跳转到注册也是第三方注册\r\n      if (url === '/register' && this.singPassCode && this.singpassState) {\r\n        this.$router.push(`${url}?singPassCode=${this.singPassCode}&singPassState=${this.singpassState}`);\r\n      } else {\r\n        this.$router.push(url);\r\n      }\r\n    },\r\n    goHome() { window.location.href = '/'; },\r\n    // input onchanges事件\r\n    inputChanges(value, name) {\r\n      this[name] = value;\r\n    },\r\n    selectChange(item) {\r\n      this.selectValue = item.code;\r\n    },\r\n    submit() {\r\n      const params = {\r\n        ...this.verifyObj,\r\n        ...{\r\n          mobileNumber: this.userValue,\r\n          loginPword: this.passValue,\r\n          nc: null,\r\n          // type: this.selectValue,\r\n        },\r\n      };\r\n      this.submitLoading = true;\r\n      this.axios({\r\n        url: 'user/login_in',\r\n        headers: {},\r\n        params,\r\n        method: 'post',\r\n      }).then((data) => {\r\n        this.verifyObj.nc.reset(); // 滑动重置\r\n        this.verifyFlag = false; // 验证通过置未未通过\r\n        this.submitLoading = false; // button按钮loading取消\r\n        if (data.code.toString() === '0') {\r\n          this.dialogFlag = true; // 打开弹窗\r\n          this.checkType = data.data.type; // '1'-谷歌 '2'-手机 '3'-邮箱\r\n          this.userToken = data.data.token;\r\n          this.$nextTick(() => {\r\n            // 验证码input获取焦点\r\n            this.$bus.$emit('inputLine-focus', 'checkValue');\r\n            // 触发发送验证码button\r\n            this.$bus.$emit('button-click', 'loginGetcodeBtn');\r\n          });\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    // 极验滑动通过\r\n    verifyCallBack(parameter) {\r\n      this.verifyObj = parameter;\r\n      this.verifyFlag = true;\r\n    },\r\n    // 二次校验\r\n    dialogConfirm() {\r\n      this.dialogConfirmLoading = true;\r\n      const params = {\r\n        token: this.userToken,\r\n        authCode: this.checkValue,\r\n        type: this.selectValue,\r\n      };\r\n      // 判断是否是 第三方 登录\r\n      if (this.singPassCode && this.singpassState) {\r\n        params.singPassCode = this.singPassCode;\r\n      }\r\n      this.axios({\r\n        url: 'user/confirm_login',\r\n        method: 'post',\r\n        params,\r\n      }).then((data) => {\r\n        this.dialogConfirmLoading = false;\r\n        if (data.code.toString() === '0') {\r\n          this.dialogClose(); // 关闭弹窗\r\n          setCookie('token', this.userToken); // 存储cookie\r\n          // 登录成功\r\n          this.$bus.$emit('tip', { text: this.$t('login.loginSuccess'), type: 'success' });\r\n          // 获取 userinfo\r\n          this.$store.dispatch('getUserInfo');\r\n          this.getMySymbol();\r\n          window.location.href = '/';\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    // 关闭弹窗\r\n    dialogClose() {\r\n      this.dialogFlag = false;\r\n      this.checkValue = '';\r\n    },\r\n    // 发送验证码组件点击button\r\n    getCodeClick() {\r\n      this.sendCode();\r\n    },\r\n    // 发送验证码\r\n    sendCode() {\r\n      if (this.checkType === '2') {\r\n        this.$bus.$emit('phoneCode', {\r\n          token: this.userToken,\r\n          operationType: '25',\r\n          callback: (data) => {\r\n            if (data.code.toString() !== '0') {\r\n              // 倒计时重置\r\n              this.$bus.$emit('getCode-clear', 'loginGetcode');\r\n              // tip框提示错误\r\n              this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n            } else {\r\n              // 短信已发送，请注意查收\r\n              this.$bus.$emit('tip', { text: this.$t('login.phoneSendSuccess'), type: 'success' });\r\n            }\r\n          },\r\n        });\r\n      } else if (this.checkType === '3') {\r\n        this.$bus.$emit('emailCode', {\r\n          token: this.userToken,\r\n          operationType: '4',\r\n          callback: (data) => {\r\n            if (data.code.toString() !== '0') {\r\n              // 倒计时重置\r\n              this.$bus.$emit('getCode-clear', 'loginGetcode');\r\n              // tip框提示错误\r\n              this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n            } else {\r\n              // 邮件已发送，请注意查收\r\n              this.$bus.$emit('tip', { text: this.$t('login.emailSendSuccess'), type: 'success' });\r\n            }\r\n          },\r\n        });\r\n      }\r\n    },\r\n    // 获取服务端自选币对\r\n    getMySymbol() {\r\n      this.axios({\r\n        url: 'optional/list_symbol',\r\n        params: {},\r\n        method: 'post',\r\n      }).then((data) => {\r\n        if (data.code === '0') {\r\n          const storageMySymbol = myStorage.get('mySymbol') || [];\r\n          const webMySymbol = data.data.symbols.filter((x) => x !== '') || [];\r\n          const sumMySymbolList = Array.from(new Set([...storageMySymbol, ...webMySymbol]));\r\n          const diffMySymbolList = storageMySymbol.filter((x) => !webMySymbol.includes(x));\r\n          // 同步本地自选币对和服务端币对\r\n          // sync_status 0需要同步 1不需要同步\r\n          if (diffMySymbolList.length !== 0 && data.data.sync_status === '0') {\r\n            myStorage.set('mySymbol', sumMySymbolList);\r\n            this.axios({\r\n              url: this.$store.state.url.common.optional_symbol,\r\n              headers: {},\r\n              params: {\r\n                operationType: diffMySymbolList.length > '1' ? '0' : '1', // 0批量添加 1单个添加 2单个删除\r\n                symbols: diffMySymbolList.join(','),\r\n              },\r\n              method: 'post',\r\n            }).then(() => {});\r\n          } else {\r\n            myStorage.set('mySymbol', webMySymbol);\r\n          }\r\n        } else {\r\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    // 点击第三方登录\r\n    goThirdUrl(data) {\r\n      // 直接跳转至第三方\r\n      if (data.pcJump === '1') {\r\n        window.open(data.code, '_blank');\r\n      } else {\r\n        // 请求第三方登录信息\r\n        this.$store.dispatch('thirdPartyLoginData', {\r\n          url: data.code,\r\n          data: {},\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n"]}]}