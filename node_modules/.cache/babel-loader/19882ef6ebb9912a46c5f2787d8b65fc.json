{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/Downloads/BlockChain-ui-privatization/PC/common-mixin/personal/kycAuthselect/kycAuthselect.js","dependencies":[{"path":"/Users/h/Downloads/BlockChain-ui-privatization/PC/common-mixin/personal/kycAuthselect/kycAuthselect.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n// @ is an alias to /src\nimport { imgMap } from '@/utils';\nimport exccAuthType1s from '@/assets/images/1/exccAuthType1.png';\nimport exccAuthType2s from '@/assets/images/1/exccAuthType2.png';\nvar imgExccAuthType1 = imgMap.exccAuthType1;\nvar imgExccAuthType2 = imgMap.exccAuthType2;\nexport default {\n  name: 'kycAuthselect',\n  props: {\n    countryVal: {\n      default: '',\n      type: String\n    },\n    countryKeyCodeVal: {\n      default: '',\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      kycLoading: false,\n      imgExccAuthType1: imgExccAuthType1 || exccAuthType1s,\n      imgExccAuthType2: imgExccAuthType2 || exccAuthType2s,\n      kycExccFlag: false,\n      exccAuthType: '1',\n      state: 'KYC_AUTH'\n    };\n  },\n  watch: {\n    exccKycConfig: function exccKycConfig(_exccKycConfig) {\n      if (_exccKycConfig && _exccKycConfig.text) {\n        this.kycLoading = false;\n\n        if (_exccKycConfig.text === 'success') {\n          var fromPath = 'idAuth';\n\n          if (_exccKycConfig.data) {\n            if (_exccKycConfig.data.openSingPass === '0') {\n              if (_exccKycConfig.data.verfyTemplet === '2') {\n                fromPath = 'exccAuthForm';\n              }\n\n              this.$router.push(\"/personal/\".concat(fromPath, \"?country=\").concat(this.countryVal, \"&countryKeyCode=\").concat(this.countryKeyCodeVal));\n            } else {\n              this.kycExccFlag = true;\n            }\n          }\n        } else {\n          this.$bus.$emit('tip', {\n            text: _exccKycConfig.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    }\n  },\n  computed: {\n    exccKycConfig: function exccKycConfig() {\n      return this.$store.state.personal.exccKycConfig;\n    }\n  },\n  methods: {\n    init: function init() {\n      var pathsArr = this.$route.path.split('/');\n      var paths = pathsArr[pathsArr.length - 1];\n      this.query = this.$route.query;\n\n      if (this.$route.query.state === this.state && this.$route.query.code) {\n        this.$router.push(\"/personal/exccAuthorization?code=\".concat(this.$route.query.code));\n      } else if (this.$route.query.state === this.state && this.$route.query.error) {\n        this.$bus.$emit('tip', {\n          text: this.$t('personal.exccAuth.errorText1'),\n          type: 'error'\n        });\n        this.$router.push(\"/personal/userManagement?kycError=\".concat(this.$route.query.error, \"&state=\").concat(this.state));\n      } else if (!this.countryVal && !this.countryKeyCodeVal && paths === 'kycAuth') {\n        this.$router.push('/personal/userManagement');\n      }\n    },\n    kycExccClose: function kycExccClose() {\n      this.kycExccFlag = false;\n    },\n    callAuthoriseApi: function callAuthoriseApi() {\n      var _ref = this.exccKycConfig ? this.exccKycConfig.data : null,\n          SingPassConfig = _ref.SingPassConfig;\n\n      if (SingPassConfig && SingPassConfig.url) {\n        // const purpose = JSON.stringify(new Date().getTime());\n        var authoriseUrl = \"\".concat(SingPassConfig.url, \"?client_id=\").concat(SingPassConfig.clientId, \"&attributes=\").concat(SingPassConfig.attributes, \"&purpose=\").concat(SingPassConfig.purpose, \"&state=\").concat(this.state, \"&redirect_uri=\").concat(SingPassConfig.returnUrl);\n        window.open(authoriseUrl);\n      } else {\n        this.$bus.$emit('tip', {\n          text: '接口异常，请联系管理员',\n          type: 'error'\n        });\n      }\n    },\n    kycExccConfirm: function kycExccConfirm() {\n      if (this.exccAuthType === '1') {\n        var fromPath = 'idAuth';\n\n        if (this.exccKycConfig && this.exccKycConfig.data && this.exccKycConfig.data.verfyTemplet === '2') {\n          fromPath = 'exccAuthForm';\n        }\n\n        this.$router.push(\"/personal/\".concat(fromPath, \"?country=\").concat(this.countryVal, \"&countryKeyCode=\").concat(this.countryKeyCodeVal));\n      } else {\n        this.callAuthoriseApi();\n      }\n    },\n    clickSlectType: function clickSlectType(id) {\n      this.exccAuthType = id;\n    }\n  }\n};",{"version":3,"sources":["/Users/h/Downloads/BlockChain-ui-privatization/PC/common-mixin/personal/kycAuthselect/kycAuthselect.js"],"names":["imgMap","exccAuthType1s","exccAuthType2s","imgExccAuthType1","exccAuthType1","imgExccAuthType2","exccAuthType2","name","props","countryVal","default","type","String","countryKeyCodeVal","data","kycLoading","kycExccFlag","exccAuthType","state","watch","exccKycConfig","text","fromPath","openSingPass","verfyTemplet","$router","push","$bus","$emit","msg","$store","dispatch","computed","personal","methods","init","pathsArr","$route","path","split","paths","length","query","code","error","$t","kycExccClose","callAuthoriseApi","SingPassConfig","url","authoriseUrl","clientId","attributes","purpose","returnUrl","window","open","kycExccConfirm","clickSlectType","id"],"mappings":";AAAA;AACA,SAASA,MAAT,QAAuB,SAAvB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AAEA,IAAMC,gBAAgB,GAAGH,MAAM,CAACI,aAAhC;AACA,IAAMC,gBAAgB,GAAGL,MAAM,CAACM,aAAhC;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,eADO;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,IAAI,EAAEC;AAArB,KADP;AAELC,IAAAA,iBAAiB,EAAE;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,IAAI,EAAEC;AAArB;AAFd,GAFM;AAMbE,EAAAA,IANa,kBAMN;AACL,WAAO;AACLC,MAAAA,UAAU,EAAE,KADP;AAELZ,MAAAA,gBAAgB,EAAEA,gBAAgB,IAAIF,cAFjC;AAGLI,MAAAA,gBAAgB,EAAEA,gBAAgB,IAAIH,cAHjC;AAILc,MAAAA,WAAW,EAAE,KAJR;AAKLC,MAAAA,YAAY,EAAE,GALT;AAMLC,MAAAA,KAAK,EAAE;AANF,KAAP;AAQD,GAfY;AAgBbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aADK,yBACSA,cADT,EACwB;AAC3B,UAAIA,cAAa,IAAIA,cAAa,CAACC,IAAnC,EAAyC;AACvC,aAAKN,UAAL,GAAkB,KAAlB;;AACA,YAAIK,cAAa,CAACC,IAAd,KAAuB,SAA3B,EAAsC;AACpC,cAAIC,QAAQ,GAAG,QAAf;;AACA,cAAIF,cAAa,CAACN,IAAlB,EAAwB;AACtB,gBAAIM,cAAa,CAACN,IAAd,CAAmBS,YAAnB,KAAoC,GAAxC,EAA6C;AAC3C,kBAAIH,cAAa,CAACN,IAAd,CAAmBU,YAAnB,KAAoC,GAAxC,EAA6C;AAC3CF,gBAAAA,QAAQ,GAAG,cAAX;AACD;;AACD,mBAAKG,OAAL,CAAaC,IAAb,qBAA+BJ,QAA/B,sBAAmD,KAAKb,UAAxD,6BAAqF,KAAKI,iBAA1F;AACD,aALD,MAKO;AACL,mBAAKG,WAAL,GAAmB,IAAnB;AACD;AACF;AACF,SAZD,MAYO;AACL,eAAKW,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEP,YAAAA,IAAI,EAAED,cAAa,CAACS,GAAtB;AAA2BlB,YAAAA,IAAI,EAAE;AAAjC,WAAvB;AACA,eAAKmB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;AACF;AACF;AArBI,GAhBM;AAuCbC,EAAAA,QAAQ,EAAE;AACRZ,IAAAA,aADQ,2BACQ;AACd,aAAO,KAAKU,MAAL,CAAYZ,KAAZ,CAAkBe,QAAlB,CAA2Bb,aAAlC;AACD;AAHO,GAvCG;AA4Cbc,EAAAA,OAAO,EAAE;AAEPC,IAAAA,IAFO,kBAEA;AACL,UAAMC,QAAQ,GAAG,KAAKC,MAAL,CAAYC,IAAZ,CAAiBC,KAAjB,CAAuB,GAAvB,CAAjB;AACA,UAAMC,KAAK,GAAGJ,QAAQ,CAACA,QAAQ,CAACK,MAAT,GAAkB,CAAnB,CAAtB;AACA,WAAKC,KAAL,GAAa,KAAKL,MAAL,CAAYK,KAAzB;;AACA,UAAI,KAAKL,MAAL,CAAYK,KAAZ,CAAkBxB,KAAlB,KAA4B,KAAKA,KAAjC,IAA0C,KAAKmB,MAAL,CAAYK,KAAZ,CAAkBC,IAAhE,EAAsE;AACpE,aAAKlB,OAAL,CAAaC,IAAb,4CAAsD,KAAKW,MAAL,CAAYK,KAAZ,CAAkBC,IAAxE;AACD,OAFD,MAEO,IAAI,KAAKN,MAAL,CAAYK,KAAZ,CAAkBxB,KAAlB,KAA4B,KAAKA,KAAjC,IAA0C,KAAKmB,MAAL,CAAYK,KAAZ,CAAkBE,KAAhE,EAAuE;AAC5E,aAAKjB,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEP,UAAAA,IAAI,EAAE,KAAKwB,EAAL,CAAQ,8BAAR,CAAR;AAAiDlC,UAAAA,IAAI,EAAE;AAAvD,SAAvB;AACA,aAAKc,OAAL,CAAaC,IAAb,6CAAuD,KAAKW,MAAL,CAAYK,KAAZ,CAAkBE,KAAzE,oBAAwF,KAAK1B,KAA7F;AACD,OAHM,MAGA,IAAI,CAAC,KAAKT,UAAN,IAAoB,CAAC,KAAKI,iBAA1B,IAA+C2B,KAAK,KAAK,SAA7D,EAAwE;AAC7E,aAAKf,OAAL,CAAaC,IAAb,CAAkB,0BAAlB;AACD;AACF,KAdM;AAePoB,IAAAA,YAfO,0BAeQ;AACb,WAAK9B,WAAL,GAAmB,KAAnB;AACD,KAjBM;AAkBP+B,IAAAA,gBAlBO,8BAkBY;AACjB,iBAA2B,KAAK3B,aAAL,GAAqB,KAAKA,aAAL,CAAmBN,IAAxC,GAA+C,IAA1E;AAAA,UAAQkC,cAAR,QAAQA,cAAR;;AACA,UAAIA,cAAc,IAAIA,cAAc,CAACC,GAArC,EAA0C;AACxC;AACA,YAAMC,YAAY,aAAMF,cAAc,CAACC,GAArB,wBAAsCD,cAAc,CAACG,QAArD,yBAA4EH,cAAc,CAACI,UAA3F,sBAAiHJ,cAAc,CAACK,OAAhI,oBAAiJ,KAAKnC,KAAtJ,2BAA4K8B,cAAc,CAACM,SAA3L,CAAlB;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAYN,YAAZ;AACD,OAJD,MAIO;AACL,aAAKvB,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEP,UAAAA,IAAI,EAAE,aAAR;AAAuBV,UAAAA,IAAI,EAAE;AAA7B,SAAvB;AACD;AACF,KA3BM;AA4BP8C,IAAAA,cA5BO,4BA4BU;AACf,UAAI,KAAKxC,YAAL,KAAsB,GAA1B,EAA+B;AAC7B,YAAIK,QAAQ,GAAG,QAAf;;AACA,YAAI,KAAKF,aAAL,IAAsB,KAAKA,aAAL,CAAmBN,IAAzC,IAAiD,KAAKM,aAAL,CAAmBN,IAAnB,CAAwBU,YAAxB,KAAyC,GAA9F,EAAmG;AACjGF,UAAAA,QAAQ,GAAG,cAAX;AACD;;AACD,aAAKG,OAAL,CAAaC,IAAb,qBAA+BJ,QAA/B,sBAAmD,KAAKb,UAAxD,6BAAqF,KAAKI,iBAA1F;AACD,OAND,MAMO;AACL,aAAKkC,gBAAL;AACD;AACF,KAtCM;AAuCPW,IAAAA,cAvCO,0BAuCQC,EAvCR,EAuCY;AACjB,WAAK1C,YAAL,GAAoB0C,EAApB;AACD;AAzCM;AA5CI,CAAf","sourcesContent":["// @ is an alias to /src\r\nimport { imgMap } from '@/utils';\r\nimport exccAuthType1s from '@/assets/images/1/exccAuthType1.png';\r\nimport exccAuthType2s from '@/assets/images/1/exccAuthType2.png';\r\n\r\nconst imgExccAuthType1 = imgMap.exccAuthType1;\r\nconst imgExccAuthType2 = imgMap.exccAuthType2;\r\n\r\nexport default {\r\n  name: 'kycAuthselect',\r\n  props: {\r\n    countryVal: { default: '', type: String },\r\n    countryKeyCodeVal: { default: '', type: String },\r\n  },\r\n  data() {\r\n    return {\r\n      kycLoading: false,\r\n      imgExccAuthType1: imgExccAuthType1 || exccAuthType1s,\r\n      imgExccAuthType2: imgExccAuthType2 || exccAuthType2s,\r\n      kycExccFlag: false,\r\n      exccAuthType: '1',\r\n      state: 'KYC_AUTH',\r\n    };\r\n  },\r\n  watch: {\r\n    exccKycConfig(exccKycConfig) {\r\n      if (exccKycConfig && exccKycConfig.text) {\r\n        this.kycLoading = false;\r\n        if (exccKycConfig.text === 'success') {\r\n          let fromPath = 'idAuth';\r\n          if (exccKycConfig.data) {\r\n            if (exccKycConfig.data.openSingPass === '0') {\r\n              if (exccKycConfig.data.verfyTemplet === '2') {\r\n                fromPath = 'exccAuthForm';\r\n              }\r\n              this.$router.push(`/personal/${fromPath}?country=${this.countryVal}&countryKeyCode=${this.countryKeyCodeVal}`);\r\n            } else {\r\n              this.kycExccFlag = true;\r\n            }\r\n          }\r\n        } else {\r\n          this.$bus.$emit('tip', { text: exccKycConfig.msg, type: 'error' });\r\n          this.$store.dispatch('resetType');\r\n        }\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    exccKycConfig() {\r\n      return this.$store.state.personal.exccKycConfig;\r\n    },\r\n  },\r\n  methods: {\r\n\r\n    init() {\r\n      const pathsArr = this.$route.path.split('/');\r\n      const paths = pathsArr[pathsArr.length - 1];\r\n      this.query = this.$route.query;\r\n      if (this.$route.query.state === this.state && this.$route.query.code) {\r\n        this.$router.push(`/personal/exccAuthorization?code=${this.$route.query.code}`);\r\n      } else if (this.$route.query.state === this.state && this.$route.query.error) {\r\n        this.$bus.$emit('tip', { text: this.$t('personal.exccAuth.errorText1'), type: 'error' });\r\n        this.$router.push(`/personal/userManagement?kycError=${this.$route.query.error}&state=${this.state}`);\r\n      } else if (!this.countryVal && !this.countryKeyCodeVal && paths === 'kycAuth') {\r\n        this.$router.push('/personal/userManagement');\r\n      }\r\n    },\r\n    kycExccClose() {\r\n      this.kycExccFlag = false;\r\n    },\r\n    callAuthoriseApi() {\r\n      const { SingPassConfig } = this.exccKycConfig ? this.exccKycConfig.data : null;\r\n      if (SingPassConfig && SingPassConfig.url) {\r\n        // const purpose = JSON.stringify(new Date().getTime());\r\n        const authoriseUrl = `${SingPassConfig.url}?client_id=${SingPassConfig.clientId}&attributes=${SingPassConfig.attributes}&purpose=${SingPassConfig.purpose}&state=${this.state}&redirect_uri=${SingPassConfig.returnUrl}`;\r\n        window.open(authoriseUrl);\r\n      } else {\r\n        this.$bus.$emit('tip', { text: '接口异常，请联系管理员', type: 'error' });\r\n      }\r\n    },\r\n    kycExccConfirm() {\r\n      if (this.exccAuthType === '1') {\r\n        let fromPath = 'idAuth';\r\n        if (this.exccKycConfig && this.exccKycConfig.data && this.exccKycConfig.data.verfyTemplet === '2') {\r\n          fromPath = 'exccAuthForm';\r\n        }\r\n        this.$router.push(`/personal/${fromPath}?country=${this.countryVal}&countryKeyCode=${this.countryKeyCodeVal}`);\r\n      } else {\r\n        this.callAuthoriseApi();\r\n      }\r\n    },\r\n    clickSlectType(id) {\r\n      this.exccAuthType = id;\r\n    },\r\n  },\r\n};\r\n"]}]}