{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/currentSymbol/currentSymbol.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/currentSymbol/currentSymbol.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport { nul, fixD, division, thousandsComma as _thousandsComma, getCookie, myStorage } from '@/utils';\nexport default {\n  name: 'currentSymbol',\n  components: {},\n  data: function data() {\n    return {\n      // 24小时行情数据\n      WsData: {},\n      // 是否显示市场\n      isShowMarket: false,\n      // 是否显示 合约设置弹框\n      setFuturesIsShow: false,\n      // 下次收取资金费率开始时间戳\n      nextStartTime: null,\n      // 下次收取资金费率开始时间倒计时\n      countDownTime: null,\n      // 倒计时\n      setIntervalTimer: null,\n      // 当前价格颜色的Class\n      activePriceClass: '',\n      // 轮训倒计时\n      timer: null,\n      // 本期结算时间\n      activeTimer: null,\n      // 下期结算时间\n      nextTimer: null,\n      // 当前合约市场id\n      contractSide: myStorage.get('futuresMarketCurrent')\n    };\n  },\n  computed: {\n    lantext: function lantext() {\n      return {\n        explain1: this.$t('futures.currentSymbol.explain1'),\n        explain4: this.$t('futures.currentSymbol.explain4')\n      };\n    },\n    // 是否登录\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    // 当前合约信息\n    contractInfo: function contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 资金费率间隔\n    capitalFrequency: function capitalFrequency() {\n      if (this.contractInfo) {\n        return this.contractInfo.capitalFrequency;\n      }\n\n      return 1;\n    },\n    // 当前合约名称\n    activeContractName: function activeContractName() {\n      var name = '';\n      var text = '';\n\n      if (this.contractInfo) {\n        var nameText = this.contractInfo.symbol ? this.contractInfo.symbol.replace('-', '') : '';\n\n        if (this.contractInfo.contractType !== 'E') {\n          text = \"-\".concat(this.contractInfo.marginCoin);\n        }\n\n        name = \"\".concat(nameText).concat(text);\n      }\n\n      return name;\n    },\n    // 当前合约面值\n    multiplier: function multiplier() {\n      return Number(this.$store.state.future.multiplier);\n    },\n    // 合约数量单位\n    coUnit: function coUnit() {\n      return this.$store.state.future.coUnit;\n    },\n    // 数量单位类型Number\n    coUnitType: function coUnitType() {\n      return this.$store.state.future.coUnitType;\n    },\n    // 合约数量精度\n    volfix: function volfix() {\n      return this.$store.state.future.volfix;\n    },\n    // 合约币对价格精度\n    pricefix: function pricefix() {\n      return this.$store.state.future.pricefix;\n    },\n    // 合约类型列表\n    contractTypeText: function contractTypeText() {\n      return this.$store.state.future.contractTypeText;\n    },\n    // 用户配置信息\n    userConfig: function userConfig() {\n      return this.$store.state.future.futureUserConfig;\n    },\n    // 当前合约保证金模式\n    marginModel: function marginModel() {\n      if (this.userConfig) {\n        // 全仓 ： 逐仓\n        return this.userConfig.marginModel === 1 ? this.$t('futures.currentSymbol.marginModel1') : this.$t('futures.currentSymbol.marginModel2');\n      }\n\n      return this.$t('futures.currentSymbol.marginModel1');\n    },\n    // 当前合约杠杆倍数\n    nowLevel: function nowLevel() {\n      if (this.userConfig) {\n        return this.userConfig.nowLevel || '20';\n      }\n\n      return '20';\n    },\n    // 获取服务器和本地的时间差\n    serveTimeDiff: function serveTimeDiff() {\n      return this.$store.state.future.serveTimeDiff;\n    },\n    // 标记价格、指数价格、资金费率\n    publicMarkertInfo: function publicMarkertInfo() {\n      var publicMarkertInfo = this.$store.state.future.publicMarkertInfo;\n\n      if (publicMarkertInfo) {\n        return {\n          // 标记价格\n          tagPrice: this.fixPrice(publicMarkertInfo.tagPrice),\n          // 资金费率下次\n          nextFundRate: this.fundRate(publicMarkertInfo.nextFundRate),\n          // 指数价格\n          indexPrice: this.fixPrice(publicMarkertInfo.indexPrice),\n          // 本期资金费率\n          currentFundRate: this.fundRate(publicMarkertInfo.currentFundRate)\n        };\n      }\n\n      return {\n        tagPrice: '--',\n        nextFundRate: '--',\n        currentFundRate: '--',\n        indexPrice: '--'\n      };\n    },\n    // 当前合约24小时行情数据\n    activeWsData: function activeWsData() {\n      var obj = {\n        close: '--',\n        rose: '--',\n        vol: '--',\n        roseClass: ''\n      };\n\n      if (this.contractInfo && this.WsData) {\n        var key = this.contractInfo.wsDatakey;\n\n        if (this.WsData[key]) {\n          var data = this.WsData[key]; // 关闭当前合约价格\n\n          this.$bus.$emit('ACTIVE_CONTRACT_PRICE', data.close);\n          var vol = data.vol;\n          var roseClass = '';\n          var slie = '';\n          var val = parseFloat(data.rose, 0);\n\n          if (val > 0) {\n            roseClass = 'u-1-bg';\n            slie = '+';\n          }\n\n          if (val < 0) {\n            roseClass = 'u-4-bg';\n            slie = '-';\n          }\n\n          if (val === 0) {\n            roseClass = 'b-2-bg';\n            slie = '-';\n          } // 标的货币\n\n\n          if (this.coUnitType === 1) {\n            vol = fixD(nul(vol, this.multiplier), 0);\n          }\n\n          obj = {\n            close: this.fixPrice(data.close),\n            rose: \"\".concat(slie).concat(this.fixdRose(data.rose)),\n            vol: vol,\n            roseClass: roseClass\n          };\n        }\n      }\n\n      return obj;\n    },\n    publicInfo: function publicInfo() {\n      if (this.$store.state && this.$store.state.baseData) {\n        return this.$store.state.baseData.publicInfo;\n      }\n\n      return null;\n    },\n    typeTabList: function typeTabList() {\n      if (this.contractSide === 1) {\n        return this.$t('futures.market.text4'); // 'USDT合约',\n      }\n\n      if (this.contractSide === 0) {\n        return this.$t('futures.market.text5'); // '币本位合约',\n      }\n\n      if (this.contractSide === 2) {\n        return this.$t('futures.market.text6'); // '混合合约',\n      }\n\n      return this.$t('futures.market.text7'); // '模拟合约',\n    },\n    // 页面标题title\n    documentTitle: function documentTitle() {\n      var lang = getCookie('lan');\n      var str = '';\n\n      if (this.publicInfo) {\n        var _this$publicInfo = this.publicInfo,\n            indexHeaderTitle = _this$publicInfo.indexHeaderTitle,\n            seo = _this$publicInfo.seo;\n        var title = '';\n\n        if (indexHeaderTitle) {\n          if (lang) {\n            title = seo.title || indexHeaderTitle[lang];\n          } else {\n            var lan = this.publicInfo.lan.defLan;\n            title = seo.title || indexHeaderTitle[lan];\n          }\n        }\n\n        str = \"\".concat(this.activeWsData.close, \"-\").concat(this.activeContractName, \" \").concat(this.typeTabList, \" | \").concat(title);\n      }\n\n      return str;\n    }\n  },\n  watch: {\n    // 页面标题title\n    documentTitle: function documentTitle(val) {\n      document.title = val;\n    },\n    // 当前价格变化\n    activeWsData: function activeWsData(val, old) {\n      if (val && old) {\n        if (val.close !== '--' || old.close !== '--') {\n          var newP = parseFloat(val.close, 0);\n          var oldP = parseFloat(old.close, 0);\n\n          if (newP > oldP) {\n            this.activePriceClass = 'u-1-cl';\n          } else if (newP < oldP) {\n            this.activePriceClass = 'u-4-cl';\n          } else if (newP !== oldP) {\n            this.activePriceClass = '';\n          }\n        } else if (val !== old) {\n          this.activePriceClass = '';\n        }\n      }\n\n      this.$bus.$emit('activeWsData', {\n        close: val.close,\n        class: this.activePriceClass\n      });\n    },\n    contractInfo: function contractInfo(val) {\n      if (val) {\n        // 设置 资金费率倒计时\n        this.setNextStartTime();\n      }\n    }\n  },\n  methods: {\n    // 新价精度\n    fixPrice: function fixPrice(value) {\n      if (value) {\n        return fixD(value, this.pricefix);\n      }\n\n      return '--';\n    },\n    // 数量精度\n    fixVol: function fixVol(value) {\n      if (value) {\n        return fixD(value, this.volfix);\n      }\n\n      return '--';\n    },\n    // 处理涨跌幅\n    fixdRose: function fixdRose(value) {\n      if (value) {\n        var num = Math.abs(value * 10000 / 100);\n        return \"\".concat(Number(num.toString().match(/^\\d+(?:\\.\\d{0,2})?/)));\n      }\n\n      return '00.00';\n    },\n    // 处理资金费率\n    fundRate: function fundRate(value) {\n      if (value === 0) {\n        return value;\n      }\n\n      if (value) {\n        var slie;\n        var val = parseFloat(value, 0);\n\n        if (val > 0) {\n          slie = '+';\n        }\n\n        if (val < 0) {\n          slie = '-';\n        }\n\n        var num = Math.abs(value * 10000 / 100); // return `${slie}${Number(num.toString().match(/^\\d+(?:\\.\\d{0,5})?/))}`;\n\n        return \"\".concat(slie).concat(fixD(num, 5));\n      }\n\n      return '--';\n    },\n    // 设置下次收取资金费率开始时间戳\n    setNextStartTime: function setNextStartTime() {\n      if (this.contractInfo) {\n        // 开始时间\n        var Time = this.contractInfo.capitalStartTime; // 一天结算次数\n\n        var Len = division(24, this.capitalFrequency); // 当前时间戳\n\n        var serverTime = new Date().getTime() + this.serveTimeDiff; // 当前时间的小时数\n\n        var NowH = new Date(serverTime).getHours(); // 当天的的0点时间戳\n\n        var TNS = new Date(new Date(serverTime).toLocaleDateString()).getTime();\n\n        for (var index = 0; index < Len; index += 1) {\n          if (NowH >= Time) {\n            Time += this.capitalFrequency;\n          }\n        } // 本期结算时间\n\n\n        this.activeTimer = Time > 9 ? \"\".concat(Time, \":00\") : \"0\".concat(Time, \":00\"); // 下期结算时间\n\n        var nextTimer = Time + this.capitalFrequency;\n\n        if (nextTimer > 24) {\n          nextTimer -= 24;\n        }\n\n        if (nextTimer < 9) {\n          nextTimer = \"0\".concat(nextTimer);\n        }\n\n        this.nextTimer = \"\".concat(nextTimer, \":00\");\n        this.nextStartTime = nul(Time, 3600000) + TNS;\n        this.countdown();\n      }\n    },\n    // 设置倒计时\n    countdown: function countdown() {\n      var _this = this;\n\n      clearInterval(this.setIntervalTimer);\n      this.setIntervalTimer = setInterval(function () {\n        // 获取当前时间\n        var nowtime = new Date().getTime() + _this.serveTimeDiff;\n\n        var lefttime = _this.nextStartTime - nowtime; // 距离结束时间的毫秒数\n\n        if (lefttime > 0) {\n          var lefth = Math.floor(division(lefttime, 3600000) % 24); // 计算小时数\n\n          var leftm = Math.floor(division(lefttime, 60000) % 60); // 计算分钟数\n\n          var lefts = Math.floor(division(lefttime, 1000) % 60); // 计算秒数\n\n          lefth = lefth < 10 ? \"0\".concat(lefth) : lefth;\n          leftm = leftm < 10 ? \"0\".concat(leftm) : leftm;\n          lefts = lefts < 10 ? \"0\".concat(lefts) : lefts;\n          _this.countDownTime = \"\".concat(lefth, \":\").concat(leftm, \":\").concat(lefts); // 返回倒计时的字符串\n        } else {\n          _this.setNextStartTime();\n        }\n      }, 1000);\n    },\n    // 开启弹框\n    showDialog: function showDialog(type) {\n      // 显示开通合约交易弹框\n      if (this.userConfig && !this.userConfig.openContract) {\n        this.$bus.$emit('OPEN_FUTURE');\n        return false;\n      }\n\n      if (this.isLogin) {\n        this.$store.dispatch('getUserConfig');\n      }\n\n      this[type] = true;\n      return false;\n    },\n    // 关闭弹窗\n    closeDialog: function closeDialog() {\n      // 关闭市场\n      this.isShowMarket = false; // 关闭合约设置弹窗\n\n      this.setFuturesIsShow = false; // 关闭杠杆弹窗\n\n      this.leverageDialogShow = false; // 关闭切换保证金模式弹框\n\n      this.depositDialogShow = false;\n    },\n    // 关闭市场\n    onClickOutside: function onClickOutside() {\n      this.isShowMarket = false;\n    },\n    // 显示 市场\n    showMarket: function showMarket() {\n      this.isShowMarket = !this.isShowMarket;\n    },\n    init: function init() {\n      var _this2 = this;\n\n      // 获取前台公共实时信息(指数价格 标记价格 资金费率)\n      clearInterval(this.timer);\n      this.timer = setInterval(function () {\n        _this2.$store.dispatch('getPublicMarkertInfo');\n      }, 5000); // 接收24小时行情数据\n\n      this.$bus.$on('FUTURE_MARKET_DATA', function (data) {\n        _this2.WsData = JSON.parse(data);\n      });\n      this.$bus.$on('futuresMarketCurrent', function (data) {\n        _this2.contractSide = data;\n      });\n      this.setNextStartTime();\n    },\n    thousandsComma: function thousandsComma(num) {\n      if (num) {\n        return _thousandsComma(num);\n      }\n\n      return num;\n    }\n  },\n  destroyed: function destroyed() {\n    this.$bus.$off('FUTURE_MARKET_DATA');\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n};",null]}