{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/register/register.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/register/register.js","mtime":1628159999000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.to-string\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getCookie, setCookie, imgMap, colorMap } from '@/utils';\nimport countryMinix from \"../countryList/countryList\";\nexport default {\n  name: 'page-register',\n  mixins: [countryMinix],\n  data: function data() {\n    return {\n      imgMap: imgMap,\n      colorMap: colorMap,\n      nowType: 'phone',\n      // phone--手机注册  email--邮箱注册\n      userValue: '',\n      // user框 (手机号/邮箱）\n      checkValue: '',\n      // 验证码框\n      passValue: '',\n      // 密码框\n      comfirmValue: '',\n      // 确认密码框\n      invitedValue: '',\n      // 邀请码\n      verifyObj: {},\n      // 滑动返回对象\n      verifyFlag: false,\n      // 滑动是否通过\n      textFlag: false,\n      // 服务条款是否通过\n      textFlag2: false,\n      // 服务条款是否通过\n      textFlag3: false,\n      // 服务条款是否通过\n      submitLoading: false,\n      // 提交按钮loading\n      getCodeHaving: false,\n      // 验证码倒计时中（true为倒计时中）\n      getCodeMustCountry: false,\n      // 用于获取验证码时 打开所在地的错误\n      getCodeMustUser: false,\n      // 用于获取验证码时 user的错误\n      error10003: false,\n      dialogFlag: false,\n      // 弹窗\n      haveOption: false,\n      // 弹窗 极验/发送验证码\n      dialogConfirmLoading: false,\n      token: null,\n      urlHasinvitedCode: false,\n      lan: getCookie('lan'),\n      channelId: getCookie('channelid') || 'vd'\n    };\n  },\n  watch: {\n    checkValue: function checkValue(newV) {\n      var _this = this;\n\n      if (newV.length === 6) {\n        this.$nextTick(function () {\n          _this.$bus.$emit('button-click', 'dialogConfirm');\n        });\n      }\n    },\n    loginFlag: function loginFlag(v) {\n      if (v) {\n        this.goHome();\n      }\n    },\n    loginRegistType: function loginRegistType(v) {\n      if (v) {\n        this.initNowType();\n      }\n    } // nowUserRegType: {\n    //   immediate: true,\n    //   handler(v) {\n    //     if (v[0] === 1) {\n    //       this.nowType = 'phone';\n    //     } else {\n    //       this.nowType = 'email';\n    //     }\n    //   },\n    // },\n\n  },\n  beforeMount: function beforeMount() {\n    if (this.$route.query.inviteCode) {\n      this.invitedValue = this.$route.query.inviteCode;\n      this.urlHasinvitedCode = true;\n    }\n\n    if (this.$route.query.email) {\n      this.userValue = this.$route.query.email;\n      this.nowType = 'email';\n    }\n\n    if (this.$route.query.phone) {\n      this.userValue = this.$route.query.phone;\n      this.nowType = 'phone';\n    }\n  },\n  computed: {\n    // userRegType() {\n    //   const { publicInfo } = this.$store.state.baseData;\n    //   let str = '{}';\n    //   if (publicInfo) {\n    //     if (publicInfo.switch && publicInfo.switch.user_reg_type) {\n    //       str = publicInfo.switch.user_reg_type;\n    //     }\n    //   }\n    //   return JSON.parse(str);\n    // },\n    // nowUserRegType() {\n    //   const lan = getCookie('lan');\n    //   let arr = [1, 2];\n    //   if (this.userRegType[lan]) {\n    //     arr = this.userRegType[lan];\n    //   }\n    //   return arr;\n    // },\n    templateType: function templateType() {\n      return this.$store.state.baseData.templateLayoutType;\n    },\n    isInternationTem: function isInternationTem() {\n      return this.$store.state.baseData.templateLayoutType === '2';\n    },\n    dialogConfirmDisabled: function dialogConfirmDisabled() {\n      if (!this.checkFlag && !this.dialogConfirmLoading) return true;\n      return false;\n    },\n    coinsKrwOpen: function coinsKrwOpen() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var str = '';\n\n      if (publicInfo) {\n        if (publicInfo.switch && publicInfo.switch.register_cms_style) {\n          str = publicInfo.switch.register_cms_style.toString();\n        } else {\n          str = '0';\n        }\n      }\n\n      return str;\n    },\n    // 是否展示tab切换\n    tabFlag: function tabFlag() {\n      var flag = false; // if (this.nowUserRegType.length !== 1) {\n\n      if (this.loginRegistType === '1') {\n        flag = true;\n      }\n\n      return flag;\n    },\n    // 开启验证方式\n    loginRegistType: function loginRegistType() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var str = '1'; // 1 手机/邮箱， 2 仅手机， 3 仅邮箱\n\n      if (publicInfo && publicInfo.switch && publicInfo.switch.login_regist_type) {\n        str = publicInfo.switch.login_regist_type.toString();\n      }\n\n      return str;\n    },\n    publicInfo: function publicInfo() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      return publicInfo;\n    },\n    tabList: function tabList() {\n      var list = [// 手机号注册\n      {\n        name: this.$t('register.phoneRegister'),\n        key: 'phone'\n      }, // 邮箱注册\n      {\n        name: this.$t('register.emailRegister'),\n        key: 'email'\n      }];\n\n      if (this.lan === 'zh_CN' || this.lan === 'el_GR') {\n        // }\n        // if (this.nowUserRegType[0] === 2) {\n        list = [// 邮箱注册\n        {\n          name: this.$t('register.emailRegister'),\n          key: 'email'\n        }, // 手机号注册\n        {\n          name: this.$t('register.phoneRegister'),\n          key: 'phone'\n        }];\n      }\n\n      return list;\n    },\n    loginFlag: function loginFlag() {\n      var _this$$store$state$ba = this.$store.state.baseData,\n          isLogin = _this$$store$state$ba.isLogin,\n          userInfoIsReady = _this$$store$state$ba.userInfoIsReady;\n\n      if (isLogin && userInfoIsReady) {\n        return true;\n      }\n\n      return false;\n    },\n    maxLength: function maxLength() {\n      var maxLength = '100';\n\n      if (this.nowType === 'phone') {\n        maxLength = '30';\n      }\n\n      return maxLength;\n    },\n    // 运营商名称\n    serverName: function serverName() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var code = '';\n\n      if (publicInfo && publicInfo.msg && publicInfo.msg.company_name) {\n        code = publicInfo.msg.company_name;\n      }\n\n      return code;\n    },\n    // 邀请码必填\n    mustInvited: function mustInvited() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var must = '0';\n\n      if (publicInfo && publicInfo.switch && publicInfo.switch.is_invitationCode_required === '1') {\n        must = '1';\n      }\n\n      return must;\n    },\n    // 是否开启滑动验证\n    mustVerify: function mustVerify() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n\n      if (this.error10003) {\n        return true;\n      }\n\n      if (publicInfo && publicInfo.switch && publicInfo.switch.regist_must_check_open === '1') {\n        return true;\n      }\n\n      return false;\n    },\n    // 所在地验证框\n    countryFlag: function countryFlag() {\n      if (this.nowType === 'phone') {\n        return this.country.length;\n      }\n\n      return true;\n    },\n    regExps: function regExps() {\n      return this.$store.state.regExp;\n    },\n    // userValue 是否复合正则验证\n    userFlag: function userFlag() {\n      var reg = this.nowType === 'phone' ? this.regExps.phone : this.regExps.email;\n      return reg.test(this.userValue);\n    },\n    // checkValue 是否复合正则验证\n    checkFlag: function checkFlag() {\n      return this.regExps.verification.test(this.checkValue);\n    },\n    // passValue 是否复合正则验证\n    passFlag: function passFlag() {\n      return this.regExps.passWord.test(this.passValue);\n    },\n    // comfirmValue 是否两次密码输入一致\n    comfirmFlag: function comfirmFlag() {\n      return this.passValue === this.comfirmValue;\n    },\n    // invitedValue 是否复合正则验证\n    invitedFlag: function invitedFlag() {\n      if (this.mustInvited === '0') {\n        return true;\n      }\n\n      return this.regExps.nonEmpty.test(this.invitedValue);\n    },\n    //\n    countryErrorFlag: function countryErrorFlag() {\n      if (this.getCodeMustCountry) {\n        if (!this.countryFlag) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    // user框是否为错误状态\n    userErrorFlag: function userErrorFlag() {\n      if (this.getCodeMustUser) {\n        if (!this.userFlag) return true;\n      } else if (this.userValue.length !== 0 && !this.userFlag) return true;\n\n      return false;\n    },\n    // 验证框是否为错误\n    checkErrorFlag: function checkErrorFlag() {\n      if (this.checkValue.length !== 0 && !this.checkFlag) return true;\n      return false;\n    },\n    // pass框是否为错误状态\n    passErrorFlag: function passErrorFlag() {\n      if (this.passValue.length !== 0 && !this.passFlag) return true;\n      return false;\n    },\n    // comfirm框是否为错误状态\n    comfirmErrorFlag: function comfirmErrorFlag() {\n      if (this.comfirmValue.length !== 0 && !this.comfirmFlag) return true;\n      return false;\n    },\n    // 验证码框是否为错误状态\n    invitedErrorFlag: function invitedErrorFlag() {\n      if (this.invitedValue.length !== 0 && !this.invitedFlag) return true;\n      return false;\n    },\n    // 是否展示获取验证码\n    isShowGetCode: function isShowGetCode() {\n      // 如果强制开启滑动验证\n      if (this.mustVerify) {\n        // 滑动验证通过 或者 正在倒计时中\n        if (this.verifyFlag || this.getCodeHaving) {\n          return true;\n        }\n\n        return false;\n      }\n\n      return true;\n    },\n    // 登录button 禁用状态\n    submitDisabled: function submitDisabled() {\n      var countryFlag = this.countryFlag,\n          userFlag = this.userFlag,\n          passFlag = this.passFlag,\n          comfirmFlag = this.comfirmFlag,\n          invitedFlag = this.invitedFlag,\n          textFlag = this.textFlag,\n          textFlag2 = this.textFlag2,\n          submitLoading = this.submitLoading;\n      var cms = textFlag;\n\n      if (this.coinsKrwOpen === '1') {\n        cms = textFlag && textFlag2;\n      }\n\n      if (countryFlag && userFlag // && checkFlag\n      && passFlag && comfirmFlag && invitedFlag && cms || submitLoading) {\n        return false;\n      }\n\n      return true;\n    },\n    domKeys: function domKeys() {\n      if (this.nowType === 'phone') {\n        return {\n          userKey: 'phone-user',\n          verifyKey: 'phone-verify',\n          checkKey: 'phone-check',\n          passKey: 'phone-pass',\n          comfirmKey: 'phone-comfirm',\n          invitedKey: 'phone-invited'\n        };\n      }\n\n      return {\n        userKey: 'email-user',\n        verifyKey: 'email-verify',\n        checkKey: 'email-check',\n        passKey: 'email-pass',\n        comfirmKey: 'email-comfirm',\n        invitedKey: 'email-invited'\n      };\n    },\n    // 用户框和验证码框 文案和错误文案\n    domTexts: function domTexts() {\n      if (this.nowType === 'phone') {\n        return {\n          userText: this.$t('register.phone'),\n          // 手机号\n          userError: this.$t('register.phoneError'),\n          // 手机号输入格式不正确\n          codeText: this.$t('register.phoneCode'),\n          // 短信验证码\n          codeError: this.$t('register.phoneCodeError') // 请输入6位数字短信验证码\n\n        };\n      }\n\n      return {\n        userText: this.$t('register.email'),\n        // 邮箱\n        userError: this.$t('register.emailError'),\n        // 邮箱输入格式不正确\n        codeText: this.$t('register.emailCode'),\n        // 邮箱验证码\n        codeError: this.$t('register.emailCodeError') // 请输入6位数字邮箱验证码\n\n      };\n    },\n    // 邀请码\n    invitedText: function invitedText() {\n      if (this.mustInvited === '0') {\n        return this.$t('register.InvitationCodeOptional'); // '邀请码(选填)\n      }\n\n      return this.$t('register.InvitationCodeIsRequired'); // 邀请码\n    },\n    companyName: function companyName() {\n      if (this.publicInfo && this.publicInfo.msg) {\n        return this.publicInfo.msg.company_name;\n      }\n\n      return '';\n    },\n    singPassCode: function singPassCode() {\n      return this.$route.query.singPassCode;\n    },\n    singpassState: function singpassState() {\n      return this.$route.query.singPassState;\n    },\n    submitButtonText: function submitButtonText() {\n      if (this.singPassCode && this.singpassState) {\n        return this.$t('singPassLogin.mainText14');\n      }\n\n      return this.$t('register.register');\n    },\n    registerPageTitle: function registerPageTitle() {\n      if (this.singPassCode && this.singpassState) {\n        return this.$t('singPassLogin.mainText15');\n      }\n\n      return this.$t('register.WelcomeToRegister');\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this2 = this;\n\n      if (this.loginFlag) {\n        this.goHome();\n      }\n\n      this.$bus.$off('emailCode');\n      this.$bus.$on('emailCode', function (data) {\n        var newData = JSON.parse(JSON.stringify(data));\n        newData.callback = undefined;\n\n        _this2.axios({\n          url: 'v4/common/emailValidCode',\n          method: 'post',\n          header: {},\n          params: newData\n        }).then(function (info) {\n          data.callback(info);\n        }).catch(function () {});\n      });\n      this.$bus.$off('phoneCode');\n      this.$bus.$on('phoneCode', function (data) {\n        var newData = JSON.parse(JSON.stringify(data));\n        newData.callback = undefined;\n\n        _this2.axios({\n          url: 'v4/common/smsValidCode',\n          method: 'post',\n          header: {},\n          params: newData\n        }).then(function (info) {\n          data.callback(info);\n        }).catch(function () {// console.log(info);\n        });\n      });\n\n      if (this.loginRegistType) {\n        this.initNowType();\n      }\n    },\n    dialogClose: function dialogClose() {\n      this.dialogFlag = false;\n      this.checkValue = '';\n      this.haveOption = false;\n    },\n    dialogConfirm: function dialogConfirm() {\n      var _this3 = this;\n\n      this.dialogConfirmLoading = true; // 渠道号处理\n\n      var channelid = this.channelId;\n      var getCode = this.$route.query.getCode; // 取地址栏参数 转为小写\n\n      var search = window.location.search.toLocaleLowerCase().substring(1);\n      var a = search.split('&');\n\n      if (this.invitedValue && getCode) {\n        channelid = this.invitedValue;\n      } else {\n        // eslint-disable-next-line no-plusplus\n        for (var i = 0; i <= a.length - 1; i++) {\n          if (a[i].indexOf('channelid=') > -1) {\n            var b = a[i].split('=')[1] || channelid;\n            channelid = b;\n          }\n        }\n      }\n\n      if (this.nowType === 'phone') {\n        var params = {\n          smsCode: this.checkValue,\n          // 验证码\n          token: this.token,\n          channelId: channelid // 渠道号\n\n        }; // 判断是否关联第三方登录账号\n\n        if (this.singPassCode && this.singpassState) {\n          params.singPassCode = this.singPassCode;\n        }\n\n        this.axios({\n          // url: 'v4/user/reg_mobile',\n          url: '/user/reg_mobile_confirm',\n          params: params,\n          headers: {},\n          method: 'post'\n        }).then(function (data) {\n          _this3.dialogConfirmLoading = false;\n\n          if (data.code.toString() === '0') {\n            if (window.location.search.indexOf('return') !== -1) {\n              var returnURL = window.location.search.substring(8);\n              window.location.href = unescape(returnURL);\n            } else if (data.data) {\n              var token = data.data.token;\n\n              if (token) {\n                // this.$router.push('/login');\n                // 登录成功，已登录\n                _this3.$bus.$emit('tip', {\n                  text: _this3.$t('register.registerSuccessQLogin'),\n                  type: 'success'\n                });\n\n                setCookie('token', token); // 存储cookie\n                // 获取 userinfo\n\n                _this3.$store.dispatch('getUserInfo');\n\n                window.location.href = window.location.origin; // this.$router.push('/');\n              } else {\n                // 注册成功, 请登录\n                _this3.$bus.$emit('tip', {\n                  text: _this3.$t('register.registerSuccess'),\n                  type: 'success'\n                });\n\n                _this3.$router.push('/login');\n              }\n            } else {\n              // 注册成功, 请登录\n              _this3.$bus.$emit('tip', {\n                text: _this3.$t('register.registerSuccess'),\n                type: 'success'\n              });\n\n              _this3.$router.push('/login');\n            }\n          } else {\n            _this3.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      } else {\n        var _params = {\n          emailCode: this.checkValue,\n          // 验证码\n          token: this.token,\n          channelId: channelid // 渠道号\n\n        }; // 判断是否关联第三方登录账号\n\n        if (this.singPassCode && this.singpassState) {\n          _params.singPassCode = this.singPassCode;\n        }\n\n        this.axios({\n          // url: 'v4/user/reg_mobile',\n          url: '/user/reg_email_confirm',\n          params: _params,\n          headers: {},\n          method: 'post'\n        }).then(function (data) {\n          _this3.dialogConfirmLoading = false;\n\n          if (data.code.toString() === '0') {\n            // 注册成功, 已登录\n            if (window.location.search.indexOf('return') !== -1) {\n              var returnURL = window.location.search.substring(8);\n              window.location.href = unescape(returnURL);\n            } else if (data.data) {\n              var token = data.data.token;\n\n              if (token) {\n                _this3.$bus.$emit('tip', {\n                  text: _this3.$t('register.registerSuccessQLogin'),\n                  type: 'success'\n                });\n\n                setCookie('token', token);\n\n                _this3.$store.dispatch('getUserInfo');\n\n                window.location.href = window.location.origin; // this.$router.push('/');\n              } else {\n                _this3.$bus.$emit('tip', {\n                  text: _this3.$t('register.registerSuccess'),\n                  type: 'success'\n                });\n\n                _this3.$router.push('/login');\n              }\n            } else {\n              _this3.$bus.$emit('tip', {\n                text: _this3.$t('register.registerSuccess'),\n                type: 'success'\n              });\n\n              _this3.$router.push('/login');\n            }\n          } else {\n            _this3.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n    },\n    buttonClick: function buttonClick() {\n      this.dialogFlag = true;\n    },\n    initNowType: function initNowType() {\n      if (this.loginRegistType === '3') {\n        this.nowType = 'email';\n      } else {\n        this.nowType = 'phone';\n      } // if (this.lan === 'zh_CN' || this.lan === 'el_GR') {\n      //   this.nowType = 'phone';\n      // } else {\n      //   this.nowType = 'email';\n      // }\n\n    },\n    goUrl: function goUrl(url) {\n      // 如果是第三方注册 跳转到登录也是第三方登录\n      if (url === '/login' && this.singPassCode && this.singpassState) {\n        this.$router.push(\"\".concat(url, \"?code=\").concat(this.singPassCode, \"&state=\").concat(this.singpassState, \"&source=reg\"));\n      } else {\n        this.$router.push(url);\n      }\n    },\n    goHome: function goHome() {\n      this.$router.push('/');\n    },\n    // tab切换\n    setNowType: function setNowType(type) {\n      if (this.submitLoading) {\n        return;\n      } // 如果正在提交禁止切换\n\n\n      if (type === this.nowType) {\n        return;\n      }\n\n      if (this.verifyObj.nc) {\n        this.verifyObj.nc.reset();\n      }\n\n      this.country = this.defaultCountryCodeReal ? this.defaultCountryCodeReal : this.countryMap[this.defaultCountryCode].code; // 所在地\n\n      this.countryKeyCode = this.defaultCountryCode ? this.defaultCountryCode : ''; // 所在地\n\n      this.userValue = ''; // user框 (手机号/邮箱）\n\n      this.checkValue = ''; // 验证码框\n\n      this.passValue = ''; // 密码框\n\n      this.comfirmValue = ''; // 确认密码框\n\n      this.invitedValue = ''; // 清楚邀请码\n\n      this.verifyObj = {}; // 滑动返回对象\n\n      this.verifyFlag = false; // 滑动是否通过\n\n      this.textFlag = false; // 清服务条款\n\n      this.nowType = type;\n      this.getCodeHaving = false;\n      this.getCodeMustCountry = false; // 获取验证码时 关闭所在地的错误\n\n      this.getCodeMustUser = false; // 获取验证码时 关闭user框的错误\n\n      this.error10003 = false;\n\n      if (this.$route.query.inviteCode) {\n        this.invitedValue = this.$route.query.inviteCode;\n      }\n\n      if (this.$route.query.email && this.nowType === 'email') {\n        this.userValue = this.$route.query.email;\n      }\n    },\n    // input onchanges事件\n    inputChanges: function inputChanges(value, name) {\n      this[name] = value;\n    },\n    // user框获取焦点\n    userFocus: function userFocus() {\n      this.getCodeMustUser = false;\n    },\n    // 手机号所在地框获取焦点\n    countryFocus: function countryFocus(v) {\n      if (v) {\n        this.getCodeMustCountry = false;\n      }\n    },\n    // 提交\n    submit: function submit() {\n      var _this4 = this;\n\n      // this.submitLoading = true;\n      var ajaxUrl = '/user/reg_email_chk_info';\n\n      var objData = _objectSpread(_objectSpread({}, this.verifyObj), {}, {\n        // 滑动验证\n        nc: undefined,\n        loginPword: this.passValue,\n        // 密码\n        newPassword: this.comfirmValue,\n        // 新密码\n        invitedCode: this.invitedValue // 邀请码\n\n      });\n\n      if (this.nowType === 'phone') {\n        ajaxUrl = '/user/reg_mobile_chk_info';\n        objData.countryCode = this.countryKeyCode; // 国家编号\n\n        objData.mobileNumber = this.userValue; // 手机号\n      } else {\n        objData.email = this.userValue; // 邮箱\n      }\n\n      this.axios({\n        // url: 'v4/user/reg_mobile',\n        url: ajaxUrl,\n        params: objData,\n        headers: {},\n        method: 'post'\n      }).then(function (data) {\n        // this.submitLoading = false;\n        if (data.code.toString() === '0') {\n          _this4.token = data.data.token;\n          _this4.haveOption = true;\n\n          _this4.$nextTick(function () {\n            _this4.getCodeClick();\n          });\n        } else {\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n\n          _this4.dialogFlag = false;\n        }\n      });\n    },\n    // 点击获取验证码\n    getCodeClick: function getCodeClick() {\n      // 发送验证码\n      this.sendCode(); // this.verifyObj = {};\n      // this.verifyFlag = false;\n      // 倒计时开始\n\n      this.$bus.$emit('getCode-start', 'registerGetcode'); // 获取验证码计时开始\n\n      this.getCodeHaving = true;\n    },\n    // 倒计时重置\n    getCodeClear: function getCodeClear() {\n      // 获取验证码计时结束\n      this.getCodeHaving = false;\n    },\n    // 发送短信/邮箱\n    sendCode: function sendCode() {\n      var _this5 = this;\n\n      if (this.nowType === 'phone') {\n        var countryCode = this.countryKeyCode; // 区号\n\n        this.$bus.$emit('phoneCode', {\n          token: this.token,\n          countryCode: countryCode,\n          // 区号\n          // mobile: this.userValue, // 手机号\n          operationType: '1',\n          // 模版\n          callback: function callback(data) {\n            if (data.code.toString() === '0') {\n              // 短信已发送，请注意查收\n              _this5.$bus.$emit('tip', {\n                text: _this5.$t('register.phoneSendSuccess'),\n                type: 'success'\n              });\n            } else if (data.code.toString() === '10003') {\n              if (_this5.error10003) {\n                _this5.$bus.$emit('tip', {\n                  text: data.msg,\n                  type: 'error'\n                });\n              } else {\n                _this5.error10003 = true; // 请滑动安全验证后再获取验证码\n\n                _this5.$bus.$emit('tip', {\n                  text: _this5.$t('register.scrollCode'),\n                  type: 'warning'\n                });\n              } // 倒计时重置\n\n\n              _this5.$bus.$emit('getCode-clear', 'registerGetcode');\n            } else {\n              // 倒计时重置\n              _this5.$bus.$emit('getCode-clear', 'registerGetcode'); // tip框提示错误\n\n\n              _this5.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'error'\n              });\n            }\n          }\n        });\n      } else if (this.nowType === 'email') {\n        this.$bus.$emit('emailCode', {\n          token: this.token,\n          // ...this.verifyObj, // 滑动验证\n          // nc: undefined,\n          // email: this.userValue, // 邮箱\n          operationType: '1',\n          callback: function callback(data) {\n            if (data.code.toString() === '0') {\n              // 邮件已发送，请注意查收\n              _this5.$bus.$emit('tip', {\n                text: _this5.$t('register.emailSendSuccess'),\n                type: 'success'\n              });\n            } else if (data.code.toString() === '10003') {\n              if (_this5.error10003) {\n                // tip框提示错误\n                _this5.$bus.$emit('tip', {\n                  text: data.msg,\n                  type: 'error'\n                });\n              } else {\n                _this5.error10003 = true; // 请滑动安全验证后再获取验证码\n\n                _this5.$bus.$emit('tip', {\n                  text: _this5.$t('register.scrollCode'),\n                  type: 'warning'\n                });\n              } // 倒计时重置\n\n\n              _this5.$bus.$emit('getCode-clear', 'registerGetcode');\n            } else {\n              // 倒计时重置\n              _this5.$bus.$emit('getCode-clear', 'registerGetcode'); // tip框提示错误\n\n\n              _this5.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'error'\n              });\n            }\n          }\n        });\n      }\n    },\n    // 滑动验证回调\n    verifyCallBack: function verifyCallBack(parameter) {\n      this.verifyObj = parameter;\n      this.verifyFlag = true;\n      this.submit();\n    },\n    // 同意服务条款\n    checkoutClick: function checkoutClick(flag) {\n      this.textFlag = flag;\n    },\n    // 同意服务条款\n    checkoutClick2: function checkoutClick2(flag) {\n      this.textFlag2 = flag;\n    },\n    // 同意服务条款\n    checkoutClick3: function checkoutClick3(flag) {\n      this.textFlag3 = flag;\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/register/register.js"],"names":["getCookie","setCookie","imgMap","colorMap","countryMinix","name","mixins","data","nowType","userValue","checkValue","passValue","comfirmValue","invitedValue","verifyObj","verifyFlag","textFlag","textFlag2","textFlag3","submitLoading","getCodeHaving","getCodeMustCountry","getCodeMustUser","error10003","dialogFlag","haveOption","dialogConfirmLoading","token","urlHasinvitedCode","lan","channelId","watch","newV","length","$nextTick","$bus","$emit","loginFlag","v","goHome","loginRegistType","initNowType","beforeMount","$route","query","inviteCode","email","phone","computed","templateType","$store","state","baseData","templateLayoutType","isInternationTem","dialogConfirmDisabled","checkFlag","coinsKrwOpen","publicInfo","str","switch","register_cms_style","toString","tabFlag","flag","login_regist_type","tabList","list","$t","key","isLogin","userInfoIsReady","maxLength","serverName","code","msg","company_name","mustInvited","must","is_invitationCode_required","mustVerify","regist_must_check_open","countryFlag","country","regExps","regExp","userFlag","reg","test","verification","passFlag","passWord","comfirmFlag","invitedFlag","nonEmpty","countryErrorFlag","userErrorFlag","checkErrorFlag","passErrorFlag","comfirmErrorFlag","invitedErrorFlag","isShowGetCode","submitDisabled","cms","domKeys","userKey","verifyKey","checkKey","passKey","comfirmKey","invitedKey","domTexts","userText","userError","codeText","codeError","invitedText","companyName","singPassCode","singpassState","singPassState","submitButtonText","registerPageTitle","methods","init","$off","$on","newData","JSON","parse","stringify","callback","undefined","axios","url","method","header","params","then","info","catch","dialogClose","dialogConfirm","channelid","getCode","search","window","location","toLocaleLowerCase","substring","a","split","i","indexOf","b","smsCode","headers","returnURL","href","unescape","text","type","dispatch","origin","$router","push","emailCode","buttonClick","goUrl","setNowType","nc","reset","defaultCountryCodeReal","countryMap","defaultCountryCode","countryKeyCode","inputChanges","value","userFocus","countryFocus","submit","ajaxUrl","objData","loginPword","newPassword","invitedCode","countryCode","mobileNumber","getCodeClick","sendCode","getCodeClear","operationType","verifyCallBack","parameter","checkoutClick","checkoutClick2","checkoutClick3"],"mappings":";;;;;;;;;;;;AAAA,SACEA,SADF,EACaC,SADb,EACwBC,MADxB,EACgCC,QADhC,QAEO,SAFP;AAGA,OAAOC,YAAP;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,eADO;AAEbC,EAAAA,MAAM,EAAE,CAACF,YAAD,CAFK;AAGbG,EAAAA,IAHa,kBAGN;AACL,WAAO;AACLL,MAAAA,MAAM,EAANA,MADK;AAELC,MAAAA,QAAQ,EAARA,QAFK;AAGLK,MAAAA,OAAO,EAAE,OAHJ;AAGa;AAClBC,MAAAA,SAAS,EAAE,EAJN;AAIU;AACfC,MAAAA,UAAU,EAAE,EALP;AAKW;AAChBC,MAAAA,SAAS,EAAE,EANN;AAMU;AACfC,MAAAA,YAAY,EAAE,EAPT;AAOa;AAClBC,MAAAA,YAAY,EAAE,EART;AAQa;AAClBC,MAAAA,SAAS,EAAE,EATN;AASU;AACfC,MAAAA,UAAU,EAAE,KAVP;AAUc;AACnBC,MAAAA,QAAQ,EAAE,KAXL;AAWY;AACjBC,MAAAA,SAAS,EAAE,KAZN;AAYa;AAClBC,MAAAA,SAAS,EAAE,KAbN;AAaa;AAClBC,MAAAA,aAAa,EAAE,KAdV;AAciB;AACtBC,MAAAA,aAAa,EAAE,KAfV;AAeiB;AACtBC,MAAAA,kBAAkB,EAAE,KAhBf;AAgBsB;AAC3BC,MAAAA,eAAe,EAAE,KAjBZ;AAiBmB;AACxBC,MAAAA,UAAU,EAAE,KAlBP;AAmBLC,MAAAA,UAAU,EAAE,KAnBP;AAmBc;AACnBC,MAAAA,UAAU,EAAE,KApBP;AAoBc;AACnBC,MAAAA,oBAAoB,EAAE,KArBjB;AAsBLC,MAAAA,KAAK,EAAE,IAtBF;AAuBLC,MAAAA,iBAAiB,EAAE,KAvBd;AAwBLC,MAAAA,GAAG,EAAE7B,SAAS,CAAC,KAAD,CAxBT;AAyBL8B,MAAAA,SAAS,EAAE9B,SAAS,CAAC,WAAD,CAAT,IAA0B;AAzBhC,KAAP;AA2BD,GA/BY;AAgCb+B,EAAAA,KAAK,EAAE;AACLrB,IAAAA,UADK,sBACMsB,IADN,EACY;AAAA;;AACf,UAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAKC,SAAL,CAAe,YAAM;AACnB,UAAA,KAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,cAAhB,EAAgC,eAAhC;AACD,SAFD;AAGD;AACF,KAPI;AAQLC,IAAAA,SARK,qBAQKC,CARL,EAQQ;AAAE,UAAIA,CAAJ,EAAO;AAAE,aAAKC,MAAL;AAAgB;AAAE,KARrC;AASLC,IAAAA,eATK,2BASWF,CATX,EASc;AACjB,UAAIA,CAAJ,EAAO;AAAE,aAAKG,WAAL;AAAqB;AAC/B,KAXI,CAYL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArBK,GAhCM;AAuDbC,EAAAA,WAvDa,yBAuDC;AACZ,QAAI,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,UAAtB,EAAkC;AAChC,WAAKhC,YAAL,GAAoB,KAAK8B,MAAL,CAAYC,KAAZ,CAAkBC,UAAtC;AACA,WAAKjB,iBAAL,GAAyB,IAAzB;AACD;;AAED,QAAI,KAAKe,MAAL,CAAYC,KAAZ,CAAkBE,KAAtB,EAA6B;AAC3B,WAAKrC,SAAL,GAAiB,KAAKkC,MAAL,CAAYC,KAAZ,CAAkBE,KAAnC;AACA,WAAKtC,OAAL,GAAe,OAAf;AACD;;AACD,QAAI,KAAKmC,MAAL,CAAYC,KAAZ,CAAkBG,KAAtB,EAA6B;AAC3B,WAAKtC,SAAL,GAAiB,KAAKkC,MAAL,CAAYC,KAAZ,CAAkBG,KAAnC;AACA,WAAKvC,OAAL,GAAe,OAAf;AACD;AACF,GArEY;AAsEbwC,EAAAA,QAAQ,EAAE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,YAnBQ,0BAmBO;AACb,aAAO,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2BC,kBAAlC;AACD,KArBO;AAsBRC,IAAAA,gBAtBQ,8BAsBW;AACjB,aAAO,KAAKJ,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2BC,kBAA3B,KAAkD,GAAzD;AACD,KAxBO;AAyBRE,IAAAA,qBAzBQ,mCAyBgB;AACtB,UAAI,CAAC,KAAKC,SAAN,IAAmB,CAAC,KAAK9B,oBAA7B,EAAmD,OAAO,IAAP;AACnD,aAAO,KAAP;AACD,KA5BO;AA6BR+B,IAAAA,YA7BQ,0BA6BO;AACb,UAAQC,UAAR,GAAuB,KAAKR,MAAL,CAAYC,KAAZ,CAAkBC,QAAzC,CAAQM,UAAR;AACA,UAAIC,GAAG,GAAG,EAAV;;AACA,UAAID,UAAJ,EAAgB;AACd,YAAIA,UAAU,CAACE,MAAX,IAAqBF,UAAU,CAACE,MAAX,CAAkBC,kBAA3C,EAA+D;AAC7DF,UAAAA,GAAG,GAAGD,UAAU,CAACE,MAAX,CAAkBC,kBAAlB,CAAqCC,QAArC,EAAN;AACD,SAFD,MAEO;AACLH,UAAAA,GAAG,GAAG,GAAN;AACD;AACF;;AACD,aAAOA,GAAP;AACD,KAxCO;AAyCR;AACAI,IAAAA,OA1CQ,qBA0CE;AACR,UAAIC,IAAI,GAAG,KAAX,CADQ,CAER;;AACA,UAAI,KAAKxB,eAAL,KAAyB,GAA7B,EAAkC;AAChCwB,QAAAA,IAAI,GAAG,IAAP;AACD;;AACD,aAAOA,IAAP;AACD,KAjDO;AAkDR;AACAxB,IAAAA,eAnDQ,6BAmDU;AAChB,UAAQkB,UAAR,GAAuB,KAAKR,MAAL,CAAYC,KAAZ,CAAkBC,QAAzC,CAAQM,UAAR;AACA,UAAIC,GAAG,GAAG,GAAV,CAFgB,CAED;;AACf,UAAID,UAAU,IAAIA,UAAU,CAACE,MAAzB,IAAmCF,UAAU,CAACE,MAAX,CAAkBK,iBAAzD,EAA4E;AAC1EN,QAAAA,GAAG,GAAGD,UAAU,CAACE,MAAX,CAAkBK,iBAAlB,CAAoCH,QAApC,EAAN;AACD;;AACD,aAAOH,GAAP;AACD,KA1DO;AA2DRD,IAAAA,UA3DQ,wBA2DK;AACX,UAAQA,UAAR,GAAuB,KAAKR,MAAL,CAAYC,KAAZ,CAAkBC,QAAzC,CAAQM,UAAR;AACA,aAAOA,UAAP;AACD,KA9DO;AA+DRQ,IAAAA,OA/DQ,qBA+DE;AACR,UAAIC,IAAI,GAAG,CACT;AACA;AAAE9D,QAAAA,IAAI,EAAE,KAAK+D,EAAL,CAAQ,wBAAR,CAAR;AAA2CC,QAAAA,GAAG,EAAE;AAAhD,OAFS,EAGT;AACA;AAAEhE,QAAAA,IAAI,EAAE,KAAK+D,EAAL,CAAQ,wBAAR,CAAR;AAA2CC,QAAAA,GAAG,EAAE;AAAhD,OAJS,CAAX;;AAMA,UAAI,KAAKxC,GAAL,KAAa,OAAb,IAAwB,KAAKA,GAAL,KAAa,OAAzC,EAAkD;AAClD;AACA;AACEsC,QAAAA,IAAI,GAAG,CACL;AACA;AAAE9D,UAAAA,IAAI,EAAE,KAAK+D,EAAL,CAAQ,wBAAR,CAAR;AAA2CC,UAAAA,GAAG,EAAE;AAAhD,SAFK,EAGL;AACA;AAAEhE,UAAAA,IAAI,EAAE,KAAK+D,EAAL,CAAQ,wBAAR,CAAR;AAA2CC,UAAAA,GAAG,EAAE;AAAhD,SAJK,CAAP;AAMD;;AACD,aAAOF,IAAP;AACD,KAjFO;AAkFR9B,IAAAA,SAlFQ,uBAkFI;AACV,kCAAqC,KAAKa,MAAL,CAAYC,KAAZ,CAAkBC,QAAvD;AAAA,UAAQkB,OAAR,yBAAQA,OAAR;AAAA,UAAiBC,eAAjB,yBAAiBA,eAAjB;;AACA,UAAID,OAAO,IAAIC,eAAf,EAAgC;AAC9B,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KAxFO;AAyFRC,IAAAA,SAzFQ,uBAyFI;AACV,UAAIA,SAAS,GAAG,KAAhB;;AACA,UAAI,KAAKhE,OAAL,KAAiB,OAArB,EAA8B;AAC5BgE,QAAAA,SAAS,GAAG,IAAZ;AACD;;AACD,aAAOA,SAAP;AACD,KA/FO;AAgGR;AACAC,IAAAA,UAjGQ,wBAiGK;AACX,UAAQf,UAAR,GAAuB,KAAKR,MAAL,CAAYC,KAAZ,CAAkBC,QAAzC,CAAQM,UAAR;AACA,UAAIgB,IAAI,GAAG,EAAX;;AACA,UAAIhB,UAAU,IAAIA,UAAU,CAACiB,GAAzB,IAAgCjB,UAAU,CAACiB,GAAX,CAAeC,YAAnD,EAAiE;AAC/DF,QAAAA,IAAI,GAAGhB,UAAU,CAACiB,GAAX,CAAeC,YAAtB;AACD;;AACD,aAAOF,IAAP;AACD,KAxGO;AAyGR;AACAG,IAAAA,WA1GQ,yBA0GM;AACZ,UAAQnB,UAAR,GAAuB,KAAKR,MAAL,CAAYC,KAAZ,CAAkBC,QAAzC,CAAQM,UAAR;AACA,UAAIoB,IAAI,GAAG,GAAX;;AACA,UAAIpB,UAAU,IAAIA,UAAU,CAACE,MAAzB,IAAmCF,UAAU,CAACE,MAAX,CAAkBmB,0BAAlB,KAAiD,GAAxF,EAA6F;AAC3FD,QAAAA,IAAI,GAAG,GAAP;AACD;;AACD,aAAOA,IAAP;AACD,KAjHO;AAkHR;AACAE,IAAAA,UAnHQ,wBAmHK;AACX,UAAQtB,UAAR,GAAuB,KAAKR,MAAL,CAAYC,KAAZ,CAAkBC,QAAzC,CAAQM,UAAR;;AACA,UAAI,KAAKnC,UAAT,EAAqB;AACnB,eAAO,IAAP;AACD;;AACD,UAAImC,UAAU,IAAIA,UAAU,CAACE,MAAzB,IAAmCF,UAAU,CAACE,MAAX,CAAkBqB,sBAAlB,KAA6C,GAApF,EAAyF;AACvF,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KA5HO;AA6HR;AACAC,IAAAA,WA9HQ,yBA8HM;AACZ,UAAI,KAAK1E,OAAL,KAAiB,OAArB,EAA8B;AAC5B,eAAO,KAAK2E,OAAL,CAAalD,MAApB;AACD;;AACD,aAAO,IAAP;AACD,KAnIO;AAoIRmD,IAAAA,OApIQ,qBAoIE;AAAE,aAAO,KAAKlC,MAAL,CAAYC,KAAZ,CAAkBkC,MAAzB;AAAkC,KApItC;AAqIR;AACAC,IAAAA,QAtIQ,sBAsIG;AACT,UAAMC,GAAG,GAAG,KAAK/E,OAAL,KAAiB,OAAjB,GAA2B,KAAK4E,OAAL,CAAarC,KAAxC,GAAgD,KAAKqC,OAAL,CAAatC,KAAzE;AACA,aAAOyC,GAAG,CAACC,IAAJ,CAAS,KAAK/E,SAAd,CAAP;AACD,KAzIO;AA0IR;AACA+C,IAAAA,SA3IQ,uBA2II;AAAE,aAAO,KAAK4B,OAAL,CAAaK,YAAb,CAA0BD,IAA1B,CAA+B,KAAK9E,UAApC,CAAP;AAAyD,KA3I/D;AA4IR;AACAgF,IAAAA,QA7IQ,sBA6IG;AAAE,aAAO,KAAKN,OAAL,CAAaO,QAAb,CAAsBH,IAAtB,CAA2B,KAAK7E,SAAhC,CAAP;AAAoD,KA7IzD;AA8IR;AACAiF,IAAAA,WA/IQ,yBA+IM;AAAE,aAAO,KAAKjF,SAAL,KAAmB,KAAKC,YAA/B;AAA8C,KA/ItD;AAgJR;AACAiF,IAAAA,WAjJQ,yBAiJM;AACZ,UAAI,KAAKhB,WAAL,KAAqB,GAAzB,EAA8B;AAAE,eAAO,IAAP;AAAc;;AAC9C,aAAO,KAAKO,OAAL,CAAaU,QAAb,CAAsBN,IAAtB,CAA2B,KAAK3E,YAAhC,CAAP;AACD,KApJO;AAqJR;AACAkF,IAAAA,gBAtJQ,8BAsJW;AACjB,UAAI,KAAK1E,kBAAT,EAA6B;AAC3B,YAAI,CAAC,KAAK6D,WAAV,EAAuB;AAAE,iBAAO,IAAP;AAAc;AACxC;;AACD,aAAO,KAAP;AACD,KA3JO;AA4JR;AACAc,IAAAA,aA7JQ,2BA6JQ;AACd,UAAI,KAAK1E,eAAT,EAA0B;AACxB,YAAI,CAAC,KAAKgE,QAAV,EAAoB,OAAO,IAAP;AACrB,OAFD,MAEO,IAAI,KAAK7E,SAAL,CAAewB,MAAf,KAA0B,CAA1B,IAA+B,CAAC,KAAKqD,QAAzC,EAAmD,OAAO,IAAP;;AAC1D,aAAO,KAAP;AACD,KAlKO;AAmKR;AACAW,IAAAA,cApKQ,4BAoKS;AACf,UAAI,KAAKvF,UAAL,CAAgBuB,MAAhB,KAA2B,CAA3B,IAAgC,CAAC,KAAKuB,SAA1C,EAAqD,OAAO,IAAP;AACrD,aAAO,KAAP;AACD,KAvKO;AAwKR;AACA0C,IAAAA,aAzKQ,2BAyKQ;AACd,UAAI,KAAKvF,SAAL,CAAesB,MAAf,KAA0B,CAA1B,IAA+B,CAAC,KAAKyD,QAAzC,EAAmD,OAAO,IAAP;AACnD,aAAO,KAAP;AACD,KA5KO;AA6KR;AACAS,IAAAA,gBA9KQ,8BA8KW;AACjB,UAAI,KAAKvF,YAAL,CAAkBqB,MAAlB,KAA6B,CAA7B,IAAkC,CAAC,KAAK2D,WAA5C,EAAyD,OAAO,IAAP;AACzD,aAAO,KAAP;AACD,KAjLO;AAkLR;AACAQ,IAAAA,gBAnLQ,8BAmLW;AACjB,UAAI,KAAKvF,YAAL,CAAkBoB,MAAlB,KAA6B,CAA7B,IAAkC,CAAC,KAAK4D,WAA5C,EAAyD,OAAO,IAAP;AACzD,aAAO,KAAP;AACD,KAtLO;AAuLR;AACAQ,IAAAA,aAxLQ,2BAwLQ;AACd;AACA,UAAI,KAAKrB,UAAT,EAAqB;AACnB;AACA,YAAI,KAAKjE,UAAL,IAAmB,KAAKK,aAA5B,EAA2C;AACzC,iBAAO,IAAP;AACD;;AACD,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KAlMO;AAmMR;AACAkF,IAAAA,cApMQ,4BAoMS;AACf,UACEpB,WADF,GASI,IATJ,CACEA,WADF;AAAA,UAEEI,QAFF,GASI,IATJ,CAEEA,QAFF;AAAA,UAGEI,QAHF,GASI,IATJ,CAGEA,QAHF;AAAA,UAIEE,WAJF,GASI,IATJ,CAIEA,WAJF;AAAA,UAKEC,WALF,GASI,IATJ,CAKEA,WALF;AAAA,UAME7E,QANF,GASI,IATJ,CAMEA,QANF;AAAA,UAOEC,SAPF,GASI,IATJ,CAOEA,SAPF;AAAA,UAQEE,aARF,GASI,IATJ,CAQEA,aARF;AAUA,UAAIoF,GAAG,GAAGvF,QAAV;;AACA,UAAI,KAAKyC,YAAL,KAAsB,GAA1B,EAA+B;AAC7B8C,QAAAA,GAAG,GAAGvF,QAAQ,IAAIC,SAAlB;AACD;;AACD,UAAKiE,WAAW,IACHI,QADR,CAEK;AAFL,SAGQI,QAHR,IAIQE,WAJR,IAKQC,WALR,IAMQU,GANT,IAMiBpF,aANrB,EAMoC;AAClC,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KA7NO;AA8NRqF,IAAAA,OA9NQ,qBA8NE;AACR,UAAI,KAAKhG,OAAL,KAAiB,OAArB,EAA8B;AAC5B,eAAO;AACLiG,UAAAA,OAAO,EAAE,YADJ;AAELC,UAAAA,SAAS,EAAE,cAFN;AAGLC,UAAAA,QAAQ,EAAE,aAHL;AAILC,UAAAA,OAAO,EAAE,YAJJ;AAKLC,UAAAA,UAAU,EAAE,eALP;AAMLC,UAAAA,UAAU,EAAE;AANP,SAAP;AAQD;;AACD,aAAO;AACLL,QAAAA,OAAO,EAAE,YADJ;AAELC,QAAAA,SAAS,EAAE,cAFN;AAGLC,QAAAA,QAAQ,EAAE,aAHL;AAILC,QAAAA,OAAO,EAAE,YAJJ;AAKLC,QAAAA,UAAU,EAAE,eALP;AAMLC,QAAAA,UAAU,EAAE;AANP,OAAP;AAQD,KAjPO;AAkPR;AACAC,IAAAA,QAnPQ,sBAmPG;AACT,UAAI,KAAKvG,OAAL,KAAiB,OAArB,EAA8B;AAC5B,eAAO;AACLwG,UAAAA,QAAQ,EAAE,KAAK5C,EAAL,CAAQ,gBAAR,CADL;AACgC;AACrC6C,UAAAA,SAAS,EAAE,KAAK7C,EAAL,CAAQ,qBAAR,CAFN;AAEsC;AAC3C8C,UAAAA,QAAQ,EAAE,KAAK9C,EAAL,CAAQ,oBAAR,CAHL;AAGoC;AACzC+C,UAAAA,SAAS,EAAE,KAAK/C,EAAL,CAAQ,yBAAR,CAJN,CAI0C;;AAJ1C,SAAP;AAMD;;AACD,aAAO;AACL4C,QAAAA,QAAQ,EAAE,KAAK5C,EAAL,CAAQ,gBAAR,CADL;AACgC;AACrC6C,QAAAA,SAAS,EAAE,KAAK7C,EAAL,CAAQ,qBAAR,CAFN;AAEsC;AAC3C8C,QAAAA,QAAQ,EAAE,KAAK9C,EAAL,CAAQ,oBAAR,CAHL;AAGoC;AACzC+C,QAAAA,SAAS,EAAE,KAAK/C,EAAL,CAAQ,yBAAR,CAJN,CAI0C;;AAJ1C,OAAP;AAMD,KAlQO;AAmQR;AACAgD,IAAAA,WApQQ,yBAoQM;AACZ,UAAI,KAAKvC,WAAL,KAAqB,GAAzB,EAA8B;AAC5B,eAAO,KAAKT,EAAL,CAAQ,iCAAR,CAAP,CAD4B,CACuB;AACpD;;AACD,aAAO,KAAKA,EAAL,CAAQ,mCAAR,CAAP,CAJY,CAIyC;AACtD,KAzQO;AA0QRiD,IAAAA,WA1QQ,yBA0QM;AACZ,UAAI,KAAK3D,UAAL,IAAmB,KAAKA,UAAL,CAAgBiB,GAAvC,EAA4C;AAC1C,eAAO,KAAKjB,UAAL,CAAgBiB,GAAhB,CAAoBC,YAA3B;AACD;;AACD,aAAO,EAAP;AACD,KA/QO;AAgRR0C,IAAAA,YAhRQ,0BAgRO;AACb,aAAO,KAAK3E,MAAL,CAAYC,KAAZ,CAAkB0E,YAAzB;AACD,KAlRO;AAmRRC,IAAAA,aAnRQ,2BAmRQ;AACd,aAAO,KAAK5E,MAAL,CAAYC,KAAZ,CAAkB4E,aAAzB;AACD,KArRO;AAsRRC,IAAAA,gBAtRQ,8BAsRW;AACjB,UAAI,KAAKH,YAAL,IAAqB,KAAKC,aAA9B,EAA6C;AAC3C,eAAO,KAAKnD,EAAL,CAAQ,0BAAR,CAAP;AACD;;AACD,aAAO,KAAKA,EAAL,CAAQ,mBAAR,CAAP;AACD,KA3RO;AA4RRsD,IAAAA,iBA5RQ,+BA4RY;AAClB,UAAI,KAAKJ,YAAL,IAAqB,KAAKC,aAA9B,EAA6C;AAC3C,eAAO,KAAKnD,EAAL,CAAQ,0BAAR,CAAP;AACD;;AACD,aAAO,KAAKA,EAAL,CAAQ,4BAAR,CAAP;AACD;AAjSO,GAtEG;AA0WbuD,EAAAA,OAAO,EAAE;AACPC,IAAAA,IADO,kBACA;AAAA;;AACL,UAAI,KAAKvF,SAAT,EAAoB;AAAE,aAAKE,MAAL;AAAgB;;AACtC,WAAKJ,IAAL,CAAU0F,IAAV,CAAe,WAAf;AACA,WAAK1F,IAAL,CAAU2F,GAAV,CAAc,WAAd,EAA2B,UAACvH,IAAD,EAAU;AACnC,YAAMwH,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe3H,IAAf,CAAX,CAAhB;AACAwH,QAAAA,OAAO,CAACI,QAAR,GAAmBC,SAAnB;;AACA,QAAA,MAAI,CAACC,KAAL,CAAW;AACTC,UAAAA,GAAG,EAAE,0BADI;AAETC,UAAAA,MAAM,EAAE,MAFC;AAGTC,UAAAA,MAAM,EAAE,EAHC;AAITC,UAAAA,MAAM,EAAEV;AAJC,SAAX,EAKGW,IALH,CAKQ,UAACC,IAAD,EAAU;AAChBpI,UAAAA,IAAI,CAAC4H,QAAL,CAAcQ,IAAd;AACD,SAPD,EAOGC,KAPH,CAOS,YAAM,CAEd,CATD;AAUD,OAbD;AAcA,WAAKzG,IAAL,CAAU0F,IAAV,CAAe,WAAf;AACA,WAAK1F,IAAL,CAAU2F,GAAV,CAAc,WAAd,EAA2B,UAACvH,IAAD,EAAU;AACnC,YAAMwH,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe3H,IAAf,CAAX,CAAhB;AACAwH,QAAAA,OAAO,CAACI,QAAR,GAAmBC,SAAnB;;AACA,QAAA,MAAI,CAACC,KAAL,CAAW;AACTC,UAAAA,GAAG,EAAE,wBADI;AAETC,UAAAA,MAAM,EAAE,MAFC;AAGTC,UAAAA,MAAM,EAAE,EAHC;AAITC,UAAAA,MAAM,EAAEV;AAJC,SAAX,EAKGW,IALH,CAKQ,UAACC,IAAD,EAAU;AAChBpI,UAAAA,IAAI,CAAC4H,QAAL,CAAcQ,IAAd;AACD,SAPD,EAOGC,KAPH,CAOS,YAAM,CACb;AACD,SATD;AAUD,OAbD;;AAcA,UAAI,KAAKpG,eAAT,EAA0B;AACxB,aAAKC,WAAL;AACD;AACF,KApCM;AAqCPoG,IAAAA,WArCO,yBAqCO;AACZ,WAAKrH,UAAL,GAAkB,KAAlB;AACA,WAAKd,UAAL,GAAkB,EAAlB;AACA,WAAKe,UAAL,GAAkB,KAAlB;AACD,KAzCM;AA0CPqH,IAAAA,aA1CO,2BA0CS;AAAA;;AACd,WAAKpH,oBAAL,GAA4B,IAA5B,CADc,CAEd;;AACA,UAAIqH,SAAS,GAAG,KAAKjH,SAArB;AACA,UAAQkH,OAAR,GAAoB,KAAKrG,MAAL,CAAYC,KAAhC,CAAQoG,OAAR,CAJc,CAKd;;AACA,UAAMC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAuBG,iBAAvB,GAA2CC,SAA3C,CAAqD,CAArD,CAAf;AACA,UAAMC,CAAC,GAAGL,MAAM,CAACM,KAAP,CAAa,GAAb,CAAV;;AACA,UAAI,KAAK1I,YAAL,IAAqBmI,OAAzB,EAAkC;AAChCD,QAAAA,SAAS,GAAG,KAAKlI,YAAjB;AACD,OAFD,MAEO;AACL;AACA,aAAK,IAAI2I,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,CAAC,CAACrH,MAAF,GAAW,CAAhC,EAAmCuH,CAAC,EAApC,EAAwC;AACtC,cAAIF,CAAC,CAACE,CAAD,CAAD,CAAKC,OAAL,CAAa,YAAb,IAA6B,CAAC,CAAlC,EAAqC;AACnC,gBAAMC,CAAC,GAAGJ,CAAC,CAACE,CAAD,CAAD,CAAKD,KAAL,CAAW,GAAX,EAAgB,CAAhB,KAAsBR,SAAhC;AACAA,YAAAA,SAAS,GAAGW,CAAZ;AACD;AACF;AACF;;AACD,UAAI,KAAKlJ,OAAL,KAAiB,OAArB,EAA8B;AAC5B,YAAMiI,MAAM,GAAG;AACbkB,UAAAA,OAAO,EAAE,KAAKjJ,UADD;AACa;AAC1BiB,UAAAA,KAAK,EAAE,KAAKA,KAFC;AAGbG,UAAAA,SAAS,EAAEiH,SAHE,CAGS;;AAHT,SAAf,CAD4B,CAM5B;;AACA,YAAI,KAAKzB,YAAL,IAAqB,KAAKC,aAA9B,EAA6C;AAC3CkB,UAAAA,MAAM,CAACnB,YAAP,GAAsB,KAAKA,YAA3B;AACD;;AACD,aAAKe,KAAL,CAAW;AACT;AACAC,UAAAA,GAAG,EAAE,0BAFI;AAGTG,UAAAA,MAAM,EAANA,MAHS;AAITmB,UAAAA,OAAO,EAAE,EAJA;AAKTrB,UAAAA,MAAM,EAAE;AALC,SAAX,EAOGG,IAPH,CAOQ,UAACnI,IAAD,EAAU;AAChB,UAAA,MAAI,CAACmB,oBAAL,GAA4B,KAA5B;;AACA,cAAInB,IAAI,CAACmE,IAAL,CAAUZ,QAAV,OAAyB,GAA7B,EAAkC;AAChC,gBAAIoF,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAuBQ,OAAvB,CAA+B,QAA/B,MAA6C,CAAC,CAAlD,EAAqD;AACnD,kBAAMI,SAAS,GAAGX,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAuBI,SAAvB,CAAiC,CAAjC,CAAlB;AACAH,cAAAA,MAAM,CAACC,QAAP,CAAgBW,IAAhB,GAAuBC,QAAQ,CAACF,SAAD,CAA/B;AACD,aAHD,MAGO,IAAItJ,IAAI,CAACA,IAAT,EAAe;AACpB,kBAAQoB,KAAR,GAAkBpB,IAAI,CAACA,IAAvB,CAAQoB,KAAR;;AACA,kBAAIA,KAAJ,EAAW;AACT;AACA;AACA,gBAAA,MAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,kBAAAA,IAAI,EAAE,MAAI,CAAC5F,EAAL,CAAQ,gCAAR,CAAR;AAAmD6F,kBAAAA,IAAI,EAAE;AAAzD,iBAAvB;;AACAhK,gBAAAA,SAAS,CAAC,OAAD,EAAU0B,KAAV,CAAT,CAJS,CAIkB;AAC3B;;AACA,gBAAA,MAAI,CAACuB,MAAL,CAAYgH,QAAZ,CAAqB,aAArB;;AACAhB,gBAAAA,MAAM,CAACC,QAAP,CAAgBW,IAAhB,GAAuBZ,MAAM,CAACC,QAAP,CAAgBgB,MAAvC,CAPS,CAQT;AACD,eATD,MASO;AACL;AACA,gBAAA,MAAI,CAAChI,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,kBAAAA,IAAI,EAAE,MAAI,CAAC5F,EAAL,CAAQ,0BAAR,CAAR;AAA6C6F,kBAAAA,IAAI,EAAE;AAAnD,iBAAvB;;AACA,gBAAA,MAAI,CAACG,OAAL,CAAaC,IAAb,CAAkB,QAAlB;AACD;AACF,aAhBM,MAgBA;AACL;AACA,cAAA,MAAI,CAAClI,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,gBAAAA,IAAI,EAAE,MAAI,CAAC5F,EAAL,CAAQ,0BAAR,CAAR;AAA6C6F,gBAAAA,IAAI,EAAE;AAAnD,eAAvB;;AACA,cAAA,MAAI,CAACG,OAAL,CAAaC,IAAb,CAAkB,QAAlB;AACD;AACF,WAzBD,MAyBO;AACL,YAAA,MAAI,CAAClI,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,cAAAA,IAAI,EAAEzJ,IAAI,CAACoE,GAAb;AAAkBsF,cAAAA,IAAI,EAAE;AAAxB,aAAvB;AACD;AACF,SArCD;AAsCD,OAhDD,MAgDO;AACL,YAAMxB,OAAM,GAAG;AACb6B,UAAAA,SAAS,EAAE,KAAK5J,UADH;AACe;AAC5BiB,UAAAA,KAAK,EAAE,KAAKA,KAFC;AAGbG,UAAAA,SAAS,EAAEiH,SAHE,CAGS;;AAHT,SAAf,CADK,CAML;;AACA,YAAI,KAAKzB,YAAL,IAAqB,KAAKC,aAA9B,EAA6C;AAC3CkB,UAAAA,OAAM,CAACnB,YAAP,GAAsB,KAAKA,YAA3B;AACD;;AACD,aAAKe,KAAL,CAAW;AACT;AACAC,UAAAA,GAAG,EAAE,yBAFI;AAGTG,UAAAA,MAAM,EAANA,OAHS;AAITmB,UAAAA,OAAO,EAAE,EAJA;AAKTrB,UAAAA,MAAM,EAAE;AALC,SAAX,EAMGG,IANH,CAMQ,UAACnI,IAAD,EAAU;AAChB,UAAA,MAAI,CAACmB,oBAAL,GAA4B,KAA5B;;AACA,cAAInB,IAAI,CAACmE,IAAL,CAAUZ,QAAV,OAAyB,GAA7B,EAAkC;AAChC;AACA,gBAAIoF,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAuBQ,OAAvB,CAA+B,QAA/B,MAA6C,CAAC,CAAlD,EAAqD;AACnD,kBAAMI,SAAS,GAAGX,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAuBI,SAAvB,CAAiC,CAAjC,CAAlB;AACAH,cAAAA,MAAM,CAACC,QAAP,CAAgBW,IAAhB,GAAuBC,QAAQ,CAACF,SAAD,CAA/B;AACD,aAHD,MAGO,IAAItJ,IAAI,CAACA,IAAT,EAAe;AACpB,kBAAQoB,KAAR,GAAkBpB,IAAI,CAACA,IAAvB,CAAQoB,KAAR;;AACA,kBAAIA,KAAJ,EAAW;AACT,gBAAA,MAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,kBAAAA,IAAI,EAAE,MAAI,CAAC5F,EAAL,CAAQ,gCAAR,CAAR;AAAmD6F,kBAAAA,IAAI,EAAE;AAAzD,iBAAvB;;AACAhK,gBAAAA,SAAS,CAAC,OAAD,EAAU0B,KAAV,CAAT;;AACA,gBAAA,MAAI,CAACuB,MAAL,CAAYgH,QAAZ,CAAqB,aAArB;;AACAhB,gBAAAA,MAAM,CAACC,QAAP,CAAgBW,IAAhB,GAAuBZ,MAAM,CAACC,QAAP,CAAgBgB,MAAvC,CAJS,CAKT;AACD,eAND,MAMO;AACL,gBAAA,MAAI,CAAChI,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,kBAAAA,IAAI,EAAE,MAAI,CAAC5F,EAAL,CAAQ,0BAAR,CAAR;AAA6C6F,kBAAAA,IAAI,EAAE;AAAnD,iBAAvB;;AACA,gBAAA,MAAI,CAACG,OAAL,CAAaC,IAAb,CAAkB,QAAlB;AACD;AACF,aAZM,MAYA;AACL,cAAA,MAAI,CAAClI,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,gBAAAA,IAAI,EAAE,MAAI,CAAC5F,EAAL,CAAQ,0BAAR,CAAR;AAA6C6F,gBAAAA,IAAI,EAAE;AAAnD,eAAvB;;AACA,cAAA,MAAI,CAACG,OAAL,CAAaC,IAAb,CAAkB,QAAlB;AACD;AACF,WArBD,MAqBO;AACL,YAAA,MAAI,CAAClI,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,cAAAA,IAAI,EAAEzJ,IAAI,CAACoE,GAAb;AAAkBsF,cAAAA,IAAI,EAAE;AAAxB,aAAvB;AACD;AACF,SAhCD;AAiCD;AACF,KAzJM;AA0JPM,IAAAA,WA1JO,yBA0JO;AACZ,WAAK/I,UAAL,GAAkB,IAAlB;AACD,KA5JM;AA6JPiB,IAAAA,WA7JO,yBA6JO;AACZ,UAAI,KAAKD,eAAL,KAAyB,GAA7B,EAAkC;AAChC,aAAKhC,OAAL,GAAe,OAAf;AACD,OAFD,MAEO;AACL,aAAKA,OAAL,GAAe,OAAf;AACD,OALW,CAMZ;AACA;AACA;AACA;AACA;;AACD,KAxKM;AAyKPgK,IAAAA,KAzKO,iBAyKDlC,GAzKC,EAyKI;AACT;AACA,UAAIA,GAAG,KAAK,QAAR,IAAoB,KAAKhB,YAAzB,IAAyC,KAAKC,aAAlD,EAAiE;AAC/D,aAAK6C,OAAL,CAAaC,IAAb,WAAqB/B,GAArB,mBAAiC,KAAKhB,YAAtC,oBAA4D,KAAKC,aAAjE;AACD,OAFD,MAEO;AACL,aAAK6C,OAAL,CAAaC,IAAb,CAAkB/B,GAAlB;AACD;AACF,KAhLM;AAiLP/F,IAAAA,MAjLO,oBAiLE;AAAE,WAAK6H,OAAL,CAAaC,IAAb,CAAkB,GAAlB;AAAyB,KAjL7B;AAkLP;AACAI,IAAAA,UAnLO,sBAmLIR,IAnLJ,EAmLU;AACf,UAAI,KAAK9I,aAAT,EAAwB;AAAE;AAAS,OADpB,CACqB;;;AACpC,UAAI8I,IAAI,KAAK,KAAKzJ,OAAlB,EAA2B;AAAE;AAAS;;AACtC,UAAI,KAAKM,SAAL,CAAe4J,EAAnB,EAAuB;AAAE,aAAK5J,SAAL,CAAe4J,EAAf,CAAkBC,KAAlB;AAA4B;;AACrD,WAAKxF,OAAL,GAAe,KAAKyF,sBAAL,GACX,KAAKA,sBADM,GACmB,KAAKC,UAAL,CAAgB,KAAKC,kBAArB,EAAyCpG,IAD3E,CAJe,CAKkE;;AACjF,WAAKqG,cAAL,GAAsB,KAAKD,kBAAL,GAA0B,KAAKA,kBAA/B,GAAoD,EAA1E,CANe,CAM+D;;AAC9E,WAAKrK,SAAL,GAAiB,EAAjB,CAPe,CAOM;;AACrB,WAAKC,UAAL,GAAkB,EAAlB,CARe,CAQO;;AACtB,WAAKC,SAAL,GAAiB,EAAjB,CATe,CASM;;AACrB,WAAKC,YAAL,GAAoB,EAApB,CAVe,CAUS;;AACxB,WAAKC,YAAL,GAAoB,EAApB,CAXe,CAWS;;AACxB,WAAKC,SAAL,GAAiB,EAAjB,CAZe,CAYM;;AACrB,WAAKC,UAAL,GAAkB,KAAlB,CAbe,CAaU;;AACzB,WAAKC,QAAL,GAAgB,KAAhB,CAde,CAcQ;;AACvB,WAAKR,OAAL,GAAeyJ,IAAf;AACA,WAAK7I,aAAL,GAAqB,KAArB;AACA,WAAKC,kBAAL,GAA0B,KAA1B,CAjBe,CAiBkB;;AACjC,WAAKC,eAAL,GAAuB,KAAvB,CAlBe,CAkBe;;AAC9B,WAAKC,UAAL,GAAkB,KAAlB;;AACA,UAAI,KAAKoB,MAAL,CAAYC,KAAZ,CAAkBC,UAAtB,EAAkC;AAChC,aAAKhC,YAAL,GAAoB,KAAK8B,MAAL,CAAYC,KAAZ,CAAkBC,UAAtC;AACD;;AACD,UAAI,KAAKF,MAAL,CAAYC,KAAZ,CAAkBE,KAAlB,IAA2B,KAAKtC,OAAL,KAAiB,OAAhD,EAAyD;AACvD,aAAKC,SAAL,GAAiB,KAAKkC,MAAL,CAAYC,KAAZ,CAAkBE,KAAnC;AACD;AACF,KA7MM;AA8MP;AACAkI,IAAAA,YA/MO,wBA+MMC,KA/MN,EA+Ma5K,IA/Mb,EA+MmB;AACxB,WAAKA,IAAL,IAAa4K,KAAb;AACD,KAjNM;AAkNP;AACAC,IAAAA,SAnNO,uBAmNK;AACV,WAAK5J,eAAL,GAAuB,KAAvB;AACD,KArNM;AAsNP;AACA6J,IAAAA,YAvNO,wBAuNM7I,CAvNN,EAuNS;AACd,UAAIA,CAAJ,EAAO;AAAE,aAAKjB,kBAAL,GAA0B,KAA1B;AAAkC;AAC5C,KAzNM;AA0NP;AACA+J,IAAAA,MA3NO,oBA2NE;AAAA;;AACP;AACA,UAAIC,OAAO,GAAG,0BAAd;;AACA,UAAMC,OAAO,mCACR,KAAKxK,SADG;AACQ;AACnB4J,QAAAA,EAAE,EAAEtC,SAFO;AAGXmD,QAAAA,UAAU,EAAE,KAAK5K,SAHN;AAGiB;AAC5B6K,QAAAA,WAAW,EAAE,KAAK5K,YAJP;AAIqB;AAChC6K,QAAAA,WAAW,EAAE,KAAK5K,YALP,CAKqB;;AALrB,QAAb;;AAOA,UAAI,KAAKL,OAAL,KAAiB,OAArB,EAA8B;AAC5B6K,QAAAA,OAAO,GAAG,2BAAV;AACAC,QAAAA,OAAO,CAACI,WAAR,GAAsB,KAAKX,cAA3B,CAF4B,CAEe;;AAC3CO,QAAAA,OAAO,CAACK,YAAR,GAAuB,KAAKlL,SAA5B,CAH4B,CAGW;AACxC,OAJD,MAIO;AACL6K,QAAAA,OAAO,CAACxI,KAAR,GAAgB,KAAKrC,SAArB,CADK,CAC2B;AACjC;;AACD,WAAK4H,KAAL,CAAW;AACT;AACAC,QAAAA,GAAG,EAAE+C,OAFI;AAGT5C,QAAAA,MAAM,EAAE6C,OAHC;AAIT1B,QAAAA,OAAO,EAAE,EAJA;AAKTrB,QAAAA,MAAM,EAAE;AALC,OAAX,EAMGG,IANH,CAMQ,UAACnI,IAAD,EAAU;AAChB;AACA,YAAIA,IAAI,CAACmE,IAAL,CAAUZ,QAAV,OAAyB,GAA7B,EAAkC;AAChC,UAAA,MAAI,CAACnC,KAAL,GAAapB,IAAI,CAACA,IAAL,CAAUoB,KAAvB;AACA,UAAA,MAAI,CAACF,UAAL,GAAkB,IAAlB;;AACA,UAAA,MAAI,CAACS,SAAL,CAAe,YAAM;AACnB,YAAA,MAAI,CAAC0J,YAAL;AACD,WAFD;AAGD,SAND,MAMO;AACL,UAAA,MAAI,CAACzJ,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,YAAAA,IAAI,EAAEzJ,IAAI,CAACoE,GAAb;AAAkBsF,YAAAA,IAAI,EAAE;AAAxB,WAAvB;;AACA,UAAA,MAAI,CAACzI,UAAL,GAAkB,KAAlB;AACD;AACF,OAlBD;AAmBD,KA/PM;AAgQP;AACAoK,IAAAA,YAjQO,0BAiQQ;AACb;AACA,WAAKC,QAAL,GAFa,CAGb;AACA;AACA;;AACA,WAAK1J,IAAL,CAAUC,KAAV,CAAgB,eAAhB,EAAiC,iBAAjC,EANa,CAOb;;AACA,WAAKhB,aAAL,GAAqB,IAArB;AACD,KA1QM;AA2QP;AACA0K,IAAAA,YA5QO,0BA4QQ;AACb;AACA,WAAK1K,aAAL,GAAqB,KAArB;AACD,KA/QM;AAgRP;AACAyK,IAAAA,QAjRO,sBAiRI;AAAA;;AACT,UAAI,KAAKrL,OAAL,KAAiB,OAArB,EAA8B;AAC5B,YAAMkL,WAAW,GAAG,KAAKX,cAAzB,CAD4B,CACa;;AACzC,aAAK5I,IAAL,CAAUC,KAAV,CAAgB,WAAhB,EAA6B;AAC3BT,UAAAA,KAAK,EAAE,KAAKA,KADe;AAE3B+J,UAAAA,WAAW,EAAXA,WAF2B;AAEd;AACb;AACAK,UAAAA,aAAa,EAAE,GAJY;AAIP;AACpB5D,UAAAA,QAAQ,EAAE,kBAAC5H,IAAD,EAAU;AAClB,gBAAIA,IAAI,CAACmE,IAAL,CAAUZ,QAAV,OAAyB,GAA7B,EAAkC;AAChC;AACA,cAAA,MAAI,CAAC3B,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,gBAAAA,IAAI,EAAE,MAAI,CAAC5F,EAAL,CAAQ,2BAAR,CAAR;AAA8C6F,gBAAAA,IAAI,EAAE;AAApD,eAAvB;AACD,aAHD,MAGO,IAAI1J,IAAI,CAACmE,IAAL,CAAUZ,QAAV,OAAyB,OAA7B,EAAsC;AAC3C,kBAAI,MAAI,CAACvC,UAAT,EAAqB;AACnB,gBAAA,MAAI,CAACY,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,kBAAAA,IAAI,EAAEzJ,IAAI,CAACoE,GAAb;AAAkBsF,kBAAAA,IAAI,EAAE;AAAxB,iBAAvB;AACD,eAFD,MAEO;AACL,gBAAA,MAAI,CAAC1I,UAAL,GAAkB,IAAlB,CADK,CAEL;;AACA,gBAAA,MAAI,CAACY,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,kBAAAA,IAAI,EAAE,MAAI,CAAC5F,EAAL,CAAQ,qBAAR,CAAR;AAAwC6F,kBAAAA,IAAI,EAAE;AAA9C,iBAAvB;AACD,eAP0C,CAQ3C;;;AACA,cAAA,MAAI,CAAC9H,IAAL,CAAUC,KAAV,CAAgB,eAAhB,EAAiC,iBAAjC;AACD,aAVM,MAUA;AACL;AACA,cAAA,MAAI,CAACD,IAAL,CAAUC,KAAV,CAAgB,eAAhB,EAAiC,iBAAjC,EAFK,CAGL;;;AACA,cAAA,MAAI,CAACD,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,gBAAAA,IAAI,EAAEzJ,IAAI,CAACoE,GAAb;AAAkBsF,gBAAAA,IAAI,EAAE;AAAxB,eAAvB;AACD;AACF;AAzB0B,SAA7B;AA2BD,OA7BD,MA6BO,IAAI,KAAKzJ,OAAL,KAAiB,OAArB,EAA8B;AACnC,aAAK2B,IAAL,CAAUC,KAAV,CAAgB,WAAhB,EAA6B;AAC3BT,UAAAA,KAAK,EAAE,KAAKA,KADe;AAE3B;AACA;AACA;AACAoK,UAAAA,aAAa,EAAE,GALY;AAM3B5D,UAAAA,QAAQ,EAAE,kBAAC5H,IAAD,EAAU;AAClB,gBAAIA,IAAI,CAACmE,IAAL,CAAUZ,QAAV,OAAyB,GAA7B,EAAkC;AAChC;AACA,cAAA,MAAI,CAAC3B,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,gBAAAA,IAAI,EAAE,MAAI,CAAC5F,EAAL,CAAQ,2BAAR,CAAR;AAA8C6F,gBAAAA,IAAI,EAAE;AAApD,eAAvB;AACD,aAHD,MAGO,IAAI1J,IAAI,CAACmE,IAAL,CAAUZ,QAAV,OAAyB,OAA7B,EAAsC;AAC3C,kBAAI,MAAI,CAACvC,UAAT,EAAqB;AACnB;AACA,gBAAA,MAAI,CAACY,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,kBAAAA,IAAI,EAAEzJ,IAAI,CAACoE,GAAb;AAAkBsF,kBAAAA,IAAI,EAAE;AAAxB,iBAAvB;AACD,eAHD,MAGO;AACL,gBAAA,MAAI,CAAC1I,UAAL,GAAkB,IAAlB,CADK,CAEL;;AACA,gBAAA,MAAI,CAACY,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,kBAAAA,IAAI,EAAE,MAAI,CAAC5F,EAAL,CAAQ,qBAAR,CAAR;AAAwC6F,kBAAAA,IAAI,EAAE;AAA9C,iBAAvB;AACD,eAR0C,CAS3C;;;AACA,cAAA,MAAI,CAAC9H,IAAL,CAAUC,KAAV,CAAgB,eAAhB,EAAiC,iBAAjC;AACD,aAXM,MAWA;AACL;AACA,cAAA,MAAI,CAACD,IAAL,CAAUC,KAAV,CAAgB,eAAhB,EAAiC,iBAAjC,EAFK,CAGL;;;AACA,cAAA,MAAI,CAACD,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAE4H,gBAAAA,IAAI,EAAEzJ,IAAI,CAACoE,GAAb;AAAkBsF,gBAAAA,IAAI,EAAE;AAAxB,eAAvB;AACD;AACF;AA3B0B,SAA7B;AA6BD;AACF,KA9UM;AA+UP;AACA+B,IAAAA,cAhVO,0BAgVQC,SAhVR,EAgVmB;AACxB,WAAKnL,SAAL,GAAiBmL,SAAjB;AACA,WAAKlL,UAAL,GAAkB,IAAlB;AACA,WAAKqK,MAAL;AACD,KApVM;AAqVP;AACAc,IAAAA,aAtVO,yBAsVOlI,IAtVP,EAsVa;AAClB,WAAKhD,QAAL,GAAgBgD,IAAhB;AACD,KAxVM;AAyVP;AACAmI,IAAAA,cA1VO,0BA0VQnI,IA1VR,EA0Vc;AACnB,WAAK/C,SAAL,GAAiB+C,IAAjB;AACD,KA5VM;AA6VP;AACAoI,IAAAA,cA9VO,0BA8VQpI,IA9VR,EA8Vc;AACnB,WAAK9C,SAAL,GAAiB8C,IAAjB;AACD;AAhWM;AA1WI,CAAf","sourcesContent":["import {\n  getCookie, setCookie, imgMap, colorMap,\n} from '@/utils';\nimport countryMinix from '../countryList/countryList';\n\nexport default {\n  name: 'page-register',\n  mixins: [countryMinix],\n  data() {\n    return {\n      imgMap,\n      colorMap,\n      nowType: 'phone', // phone--手机注册  email--邮箱注册\n      userValue: '', // user框 (手机号/邮箱）\n      checkValue: '', // 验证码框\n      passValue: '', // 密码框\n      comfirmValue: '', // 确认密码框\n      invitedValue: '', // 邀请码\n      verifyObj: {}, // 滑动返回对象\n      verifyFlag: false, // 滑动是否通过\n      textFlag: false, // 服务条款是否通过\n      textFlag2: false, // 服务条款是否通过\n      textFlag3: false, // 服务条款是否通过\n      submitLoading: false, // 提交按钮loading\n      getCodeHaving: false, // 验证码倒计时中（true为倒计时中）\n      getCodeMustCountry: false, // 用于获取验证码时 打开所在地的错误\n      getCodeMustUser: false, // 用于获取验证码时 user的错误\n      error10003: false,\n      dialogFlag: false, // 弹窗\n      haveOption: false, // 弹窗 极验/发送验证码\n      dialogConfirmLoading: false,\n      token: null,\n      urlHasinvitedCode: false,\n      lan: getCookie('lan'),\n      channelId: getCookie('channelid') || 'vd',\n    };\n  },\n  watch: {\n    checkValue(newV) {\n      if (newV.length === 6) {\n        this.$nextTick(() => {\n          this.$bus.$emit('button-click', 'dialogConfirm');\n        });\n      }\n    },\n    loginFlag(v) { if (v) { this.goHome(); } },\n    loginRegistType(v) {\n      if (v) { this.initNowType(); }\n    },\n    // nowUserRegType: {\n    //   immediate: true,\n    //   handler(v) {\n    //     if (v[0] === 1) {\n    //       this.nowType = 'phone';\n    //     } else {\n    //       this.nowType = 'email';\n    //     }\n    //   },\n    // },\n  },\n  beforeMount() {\n    if (this.$route.query.inviteCode) {\n      this.invitedValue = this.$route.query.inviteCode;\n      this.urlHasinvitedCode = true;\n    }\n\n    if (this.$route.query.email) {\n      this.userValue = this.$route.query.email;\n      this.nowType = 'email';\n    }\n    if (this.$route.query.phone) {\n      this.userValue = this.$route.query.phone;\n      this.nowType = 'phone';\n    }\n  },\n  computed: {\n    // userRegType() {\n    //   const { publicInfo } = this.$store.state.baseData;\n    //   let str = '{}';\n    //   if (publicInfo) {\n    //     if (publicInfo.switch && publicInfo.switch.user_reg_type) {\n    //       str = publicInfo.switch.user_reg_type;\n    //     }\n    //   }\n    //   return JSON.parse(str);\n    // },\n    // nowUserRegType() {\n    //   const lan = getCookie('lan');\n    //   let arr = [1, 2];\n    //   if (this.userRegType[lan]) {\n    //     arr = this.userRegType[lan];\n    //   }\n    //   return arr;\n    // },\n    templateType() {\n      return this.$store.state.baseData.templateLayoutType;\n    },\n    isInternationTem() {\n      return this.$store.state.baseData.templateLayoutType === '2';\n    },\n    dialogConfirmDisabled() {\n      if (!this.checkFlag && !this.dialogConfirmLoading) return true;\n      return false;\n    },\n    coinsKrwOpen() {\n      const { publicInfo } = this.$store.state.baseData;\n      let str = '';\n      if (publicInfo) {\n        if (publicInfo.switch && publicInfo.switch.register_cms_style) {\n          str = publicInfo.switch.register_cms_style.toString();\n        } else {\n          str = '0';\n        }\n      }\n      return str;\n    },\n    // 是否展示tab切换\n    tabFlag() {\n      let flag = false;\n      // if (this.nowUserRegType.length !== 1) {\n      if (this.loginRegistType === '1') {\n        flag = true;\n      }\n      return flag;\n    },\n    // 开启验证方式\n    loginRegistType() {\n      const { publicInfo } = this.$store.state.baseData;\n      let str = '1'; // 1 手机/邮箱， 2 仅手机， 3 仅邮箱\n      if (publicInfo && publicInfo.switch && publicInfo.switch.login_regist_type) {\n        str = publicInfo.switch.login_regist_type.toString();\n      }\n      return str;\n    },\n    publicInfo() {\n      const { publicInfo } = this.$store.state.baseData;\n      return publicInfo;\n    },\n    tabList() {\n      let list = [\n        // 手机号注册\n        { name: this.$t('register.phoneRegister'), key: 'phone' },\n        // 邮箱注册\n        { name: this.$t('register.emailRegister'), key: 'email' },\n      ];\n      if (this.lan === 'zh_CN' || this.lan === 'el_GR') {\n      // }\n      // if (this.nowUserRegType[0] === 2) {\n        list = [\n          // 邮箱注册\n          { name: this.$t('register.emailRegister'), key: 'email' },\n          // 手机号注册\n          { name: this.$t('register.phoneRegister'), key: 'phone' },\n        ];\n      }\n      return list;\n    },\n    loginFlag() {\n      const { isLogin, userInfoIsReady } = this.$store.state.baseData;\n      if (isLogin && userInfoIsReady) {\n        return true;\n      }\n      return false;\n    },\n    maxLength() {\n      let maxLength = '100';\n      if (this.nowType === 'phone') {\n        maxLength = '30';\n      }\n      return maxLength;\n    },\n    // 运营商名称\n    serverName() {\n      const { publicInfo } = this.$store.state.baseData;\n      let code = '';\n      if (publicInfo && publicInfo.msg && publicInfo.msg.company_name) {\n        code = publicInfo.msg.company_name;\n      }\n      return code;\n    },\n    // 邀请码必填\n    mustInvited() {\n      const { publicInfo } = this.$store.state.baseData;\n      let must = '0';\n      if (publicInfo && publicInfo.switch && publicInfo.switch.is_invitationCode_required === '1') {\n        must = '1';\n      }\n      return must;\n    },\n    // 是否开启滑动验证\n    mustVerify() {\n      const { publicInfo } = this.$store.state.baseData;\n      if (this.error10003) {\n        return true;\n      }\n      if (publicInfo && publicInfo.switch && publicInfo.switch.regist_must_check_open === '1') {\n        return true;\n      }\n      return false;\n    },\n    // 所在地验证框\n    countryFlag() {\n      if (this.nowType === 'phone') {\n        return this.country.length;\n      }\n      return true;\n    },\n    regExps() { return this.$store.state.regExp; },\n    // userValue 是否复合正则验证\n    userFlag() {\n      const reg = this.nowType === 'phone' ? this.regExps.phone : this.regExps.email;\n      return reg.test(this.userValue);\n    },\n    // checkValue 是否复合正则验证\n    checkFlag() { return this.regExps.verification.test(this.checkValue); },\n    // passValue 是否复合正则验证\n    passFlag() { return this.regExps.passWord.test(this.passValue); },\n    // comfirmValue 是否两次密码输入一致\n    comfirmFlag() { return this.passValue === this.comfirmValue; },\n    // invitedValue 是否复合正则验证\n    invitedFlag() {\n      if (this.mustInvited === '0') { return true; }\n      return this.regExps.nonEmpty.test(this.invitedValue);\n    },\n    //\n    countryErrorFlag() {\n      if (this.getCodeMustCountry) {\n        if (!this.countryFlag) { return true; }\n      }\n      return false;\n    },\n    // user框是否为错误状态\n    userErrorFlag() {\n      if (this.getCodeMustUser) {\n        if (!this.userFlag) return true;\n      } else if (this.userValue.length !== 0 && !this.userFlag) return true;\n      return false;\n    },\n    // 验证框是否为错误\n    checkErrorFlag() {\n      if (this.checkValue.length !== 0 && !this.checkFlag) return true;\n      return false;\n    },\n    // pass框是否为错误状态\n    passErrorFlag() {\n      if (this.passValue.length !== 0 && !this.passFlag) return true;\n      return false;\n    },\n    // comfirm框是否为错误状态\n    comfirmErrorFlag() {\n      if (this.comfirmValue.length !== 0 && !this.comfirmFlag) return true;\n      return false;\n    },\n    // 验证码框是否为错误状态\n    invitedErrorFlag() {\n      if (this.invitedValue.length !== 0 && !this.invitedFlag) return true;\n      return false;\n    },\n    // 是否展示获取验证码\n    isShowGetCode() {\n      // 如果强制开启滑动验证\n      if (this.mustVerify) {\n        // 滑动验证通过 或者 正在倒计时中\n        if (this.verifyFlag || this.getCodeHaving) {\n          return true;\n        }\n        return false;\n      }\n      return true;\n    },\n    // 登录button 禁用状态\n    submitDisabled() {\n      const {\n        countryFlag,\n        userFlag,\n        passFlag,\n        comfirmFlag,\n        invitedFlag,\n        textFlag,\n        textFlag2,\n        submitLoading,\n      } = this;\n      let cms = textFlag;\n      if (this.coinsKrwOpen === '1') {\n        cms = textFlag && textFlag2;\n      }\n      if ((countryFlag\n                && userFlag\n                // && checkFlag\n                && passFlag\n                && comfirmFlag\n                && invitedFlag\n                && cms) || submitLoading) {\n        return false;\n      }\n      return true;\n    },\n    domKeys() {\n      if (this.nowType === 'phone') {\n        return {\n          userKey: 'phone-user',\n          verifyKey: 'phone-verify',\n          checkKey: 'phone-check',\n          passKey: 'phone-pass',\n          comfirmKey: 'phone-comfirm',\n          invitedKey: 'phone-invited',\n        };\n      }\n      return {\n        userKey: 'email-user',\n        verifyKey: 'email-verify',\n        checkKey: 'email-check',\n        passKey: 'email-pass',\n        comfirmKey: 'email-comfirm',\n        invitedKey: 'email-invited',\n      };\n    },\n    // 用户框和验证码框 文案和错误文案\n    domTexts() {\n      if (this.nowType === 'phone') {\n        return {\n          userText: this.$t('register.phone'), // 手机号\n          userError: this.$t('register.phoneError'), // 手机号输入格式不正确\n          codeText: this.$t('register.phoneCode'), // 短信验证码\n          codeError: this.$t('register.phoneCodeError'), // 请输入6位数字短信验证码\n        };\n      }\n      return {\n        userText: this.$t('register.email'), // 邮箱\n        userError: this.$t('register.emailError'), // 邮箱输入格式不正确\n        codeText: this.$t('register.emailCode'), // 邮箱验证码\n        codeError: this.$t('register.emailCodeError'), // 请输入6位数字邮箱验证码\n      };\n    },\n    // 邀请码\n    invitedText() {\n      if (this.mustInvited === '0') {\n        return this.$t('register.InvitationCodeOptional'); // '邀请码(选填)\n      }\n      return this.$t('register.InvitationCodeIsRequired'); // 邀请码\n    },\n    companyName() {\n      if (this.publicInfo && this.publicInfo.msg) {\n        return this.publicInfo.msg.company_name;\n      }\n      return '';\n    },\n    singPassCode() {\n      return this.$route.query.singPassCode;\n    },\n    singpassState() {\n      return this.$route.query.singPassState;\n    },\n    submitButtonText() {\n      if (this.singPassCode && this.singpassState) {\n        return this.$t('singPassLogin.mainText14');\n      }\n      return this.$t('register.register');\n    },\n    registerPageTitle() {\n      if (this.singPassCode && this.singpassState) {\n        return this.$t('singPassLogin.mainText15');\n      }\n      return this.$t('register.WelcomeToRegister');\n    },\n\n  },\n  methods: {\n    init() {\n      if (this.loginFlag) { this.goHome(); }\n      this.$bus.$off('emailCode');\n      this.$bus.$on('emailCode', (data) => {\n        const newData = JSON.parse(JSON.stringify(data));\n        newData.callback = undefined;\n        this.axios({\n          url: 'v4/common/emailValidCode',\n          method: 'post',\n          header: {},\n          params: newData,\n        }).then((info) => {\n          data.callback(info);\n        }).catch(() => {\n\n        });\n      });\n      this.$bus.$off('phoneCode');\n      this.$bus.$on('phoneCode', (data) => {\n        const newData = JSON.parse(JSON.stringify(data));\n        newData.callback = undefined;\n        this.axios({\n          url: 'v4/common/smsValidCode',\n          method: 'post',\n          header: {},\n          params: newData,\n        }).then((info) => {\n          data.callback(info);\n        }).catch(() => {\n          // console.log(info);\n        });\n      });\n      if (this.loginRegistType) {\n        this.initNowType();\n      }\n    },\n    dialogClose() {\n      this.dialogFlag = false;\n      this.checkValue = '';\n      this.haveOption = false;\n    },\n    dialogConfirm() {\n      this.dialogConfirmLoading = true;\n      // 渠道号处理\n      let channelid = this.channelId;\n      const { getCode } = this.$route.query;\n      // 取地址栏参数 转为小写\n      const search = window.location.search.toLocaleLowerCase().substring(1);\n      const a = search.split('&');\n      if (this.invitedValue && getCode) {\n        channelid = this.invitedValue;\n      } else {\n        // eslint-disable-next-line no-plusplus\n        for (let i = 0; i <= a.length - 1; i++) {\n          if (a[i].indexOf('channelid=') > -1) {\n            const b = a[i].split('=')[1] || channelid;\n            channelid = b;\n          }\n        }\n      }\n      if (this.nowType === 'phone') {\n        const params = {\n          smsCode: this.checkValue, // 验证码\n          token: this.token,\n          channelId: channelid, // 渠道号\n        };\n        // 判断是否关联第三方登录账号\n        if (this.singPassCode && this.singpassState) {\n          params.singPassCode = this.singPassCode;\n        }\n        this.axios({\n          // url: 'v4/user/reg_mobile',\n          url: '/user/reg_mobile_confirm',\n          params,\n          headers: {},\n          method: 'post',\n\n        }).then((data) => {\n          this.dialogConfirmLoading = false;\n          if (data.code.toString() === '0') {\n            if (window.location.search.indexOf('return') !== -1) {\n              const returnURL = window.location.search.substring(8);\n              window.location.href = unescape(returnURL);\n            } else if (data.data) {\n              const { token } = data.data;\n              if (token) {\n                // this.$router.push('/login');\n                // 登录成功，已登录\n                this.$bus.$emit('tip', { text: this.$t('register.registerSuccessQLogin'), type: 'success' });\n                setCookie('token', token); // 存储cookie\n                // 获取 userinfo\n                this.$store.dispatch('getUserInfo');\n                window.location.href = window.location.origin;\n                // this.$router.push('/');\n              } else {\n                // 注册成功, 请登录\n                this.$bus.$emit('tip', { text: this.$t('register.registerSuccess'), type: 'success' });\n                this.$router.push('/login');\n              }\n            } else {\n              // 注册成功, 请登录\n              this.$bus.$emit('tip', { text: this.$t('register.registerSuccess'), type: 'success' });\n              this.$router.push('/login');\n            }\n          } else {\n            this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n          }\n        });\n      } else {\n        const params = {\n          emailCode: this.checkValue, // 验证码\n          token: this.token,\n          channelId: channelid, // 渠道号\n        };\n        // 判断是否关联第三方登录账号\n        if (this.singPassCode && this.singpassState) {\n          params.singPassCode = this.singPassCode;\n        }\n        this.axios({\n          // url: 'v4/user/reg_mobile',\n          url: '/user/reg_email_confirm',\n          params,\n          headers: {},\n          method: 'post',\n        }).then((data) => {\n          this.dialogConfirmLoading = false;\n          if (data.code.toString() === '0') {\n            // 注册成功, 已登录\n            if (window.location.search.indexOf('return') !== -1) {\n              const returnURL = window.location.search.substring(8);\n              window.location.href = unescape(returnURL);\n            } else if (data.data) {\n              const { token } = data.data;\n              if (token) {\n                this.$bus.$emit('tip', { text: this.$t('register.registerSuccessQLogin'), type: 'success' });\n                setCookie('token', token);\n                this.$store.dispatch('getUserInfo');\n                window.location.href = window.location.origin;\n                // this.$router.push('/');\n              } else {\n                this.$bus.$emit('tip', { text: this.$t('register.registerSuccess'), type: 'success' });\n                this.$router.push('/login');\n              }\n            } else {\n              this.$bus.$emit('tip', { text: this.$t('register.registerSuccess'), type: 'success' });\n              this.$router.push('/login');\n            }\n          } else {\n            this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n          }\n        });\n      }\n    },\n    buttonClick() {\n      this.dialogFlag = true;\n    },\n    initNowType() {\n      if (this.loginRegistType === '3') {\n        this.nowType = 'email';\n      } else {\n        this.nowType = 'phone';\n      }\n      // if (this.lan === 'zh_CN' || this.lan === 'el_GR') {\n      //   this.nowType = 'phone';\n      // } else {\n      //   this.nowType = 'email';\n      // }\n    },\n    goUrl(url) {\n      // 如果是第三方注册 跳转到登录也是第三方登录\n      if (url === '/login' && this.singPassCode && this.singpassState) {\n        this.$router.push(`${url}?code=${this.singPassCode}&state=${this.singpassState}&source=reg`);\n      } else {\n        this.$router.push(url);\n      }\n    },\n    goHome() { this.$router.push('/'); },\n    // tab切换\n    setNowType(type) {\n      if (this.submitLoading) { return; } // 如果正在提交禁止切换\n      if (type === this.nowType) { return; }\n      if (this.verifyObj.nc) { this.verifyObj.nc.reset(); }\n      this.country = this.defaultCountryCodeReal\n        ? this.defaultCountryCodeReal : this.countryMap[this.defaultCountryCode].code; // 所在地\n      this.countryKeyCode = this.defaultCountryCode ? this.defaultCountryCode : ''; // 所在地\n      this.userValue = ''; // user框 (手机号/邮箱）\n      this.checkValue = ''; // 验证码框\n      this.passValue = ''; // 密码框\n      this.comfirmValue = ''; // 确认密码框\n      this.invitedValue = ''; // 清楚邀请码\n      this.verifyObj = {}; // 滑动返回对象\n      this.verifyFlag = false; // 滑动是否通过\n      this.textFlag = false; // 清服务条款\n      this.nowType = type;\n      this.getCodeHaving = false;\n      this.getCodeMustCountry = false; // 获取验证码时 关闭所在地的错误\n      this.getCodeMustUser = false; // 获取验证码时 关闭user框的错误\n      this.error10003 = false;\n      if (this.$route.query.inviteCode) {\n        this.invitedValue = this.$route.query.inviteCode;\n      }\n      if (this.$route.query.email && this.nowType === 'email') {\n        this.userValue = this.$route.query.email;\n      }\n    },\n    // input onchanges事件\n    inputChanges(value, name) {\n      this[name] = value;\n    },\n    // user框获取焦点\n    userFocus() {\n      this.getCodeMustUser = false;\n    },\n    // 手机号所在地框获取焦点\n    countryFocus(v) {\n      if (v) { this.getCodeMustCountry = false; }\n    },\n    // 提交\n    submit() {\n      // this.submitLoading = true;\n      let ajaxUrl = '/user/reg_email_chk_info';\n      const objData = {\n        ...this.verifyObj, // 滑动验证\n        nc: undefined,\n        loginPword: this.passValue, // 密码\n        newPassword: this.comfirmValue, // 新密码\n        invitedCode: this.invitedValue, // 邀请码\n      };\n      if (this.nowType === 'phone') {\n        ajaxUrl = '/user/reg_mobile_chk_info';\n        objData.countryCode = this.countryKeyCode; // 国家编号\n        objData.mobileNumber = this.userValue; // 手机号\n      } else {\n        objData.email = this.userValue; // 邮箱\n      }\n      this.axios({\n        // url: 'v4/user/reg_mobile',\n        url: ajaxUrl,\n        params: objData,\n        headers: {},\n        method: 'post',\n      }).then((data) => {\n        // this.submitLoading = false;\n        if (data.code.toString() === '0') {\n          this.token = data.data.token;\n          this.haveOption = true;\n          this.$nextTick(() => {\n            this.getCodeClick();\n          });\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n          this.dialogFlag = false;\n        }\n      });\n    },\n    // 点击获取验证码\n    getCodeClick() {\n      // 发送验证码\n      this.sendCode();\n      // this.verifyObj = {};\n      // this.verifyFlag = false;\n      // 倒计时开始\n      this.$bus.$emit('getCode-start', 'registerGetcode');\n      // 获取验证码计时开始\n      this.getCodeHaving = true;\n    },\n    // 倒计时重置\n    getCodeClear() {\n      // 获取验证码计时结束\n      this.getCodeHaving = false;\n    },\n    // 发送短信/邮箱\n    sendCode() {\n      if (this.nowType === 'phone') {\n        const countryCode = this.countryKeyCode; // 区号\n        this.$bus.$emit('phoneCode', {\n          token: this.token,\n          countryCode, // 区号\n          // mobile: this.userValue, // 手机号\n          operationType: '1', // 模版\n          callback: (data) => {\n            if (data.code.toString() === '0') {\n              // 短信已发送，请注意查收\n              this.$bus.$emit('tip', { text: this.$t('register.phoneSendSuccess'), type: 'success' });\n            } else if (data.code.toString() === '10003') {\n              if (this.error10003) {\n                this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n              } else {\n                this.error10003 = true;\n                // 请滑动安全验证后再获取验证码\n                this.$bus.$emit('tip', { text: this.$t('register.scrollCode'), type: 'warning' });\n              }\n              // 倒计时重置\n              this.$bus.$emit('getCode-clear', 'registerGetcode');\n            } else {\n              // 倒计时重置\n              this.$bus.$emit('getCode-clear', 'registerGetcode');\n              // tip框提示错误\n              this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n            }\n          },\n        });\n      } else if (this.nowType === 'email') {\n        this.$bus.$emit('emailCode', {\n          token: this.token,\n          // ...this.verifyObj, // 滑动验证\n          // nc: undefined,\n          // email: this.userValue, // 邮箱\n          operationType: '1',\n          callback: (data) => {\n            if (data.code.toString() === '0') {\n              // 邮件已发送，请注意查收\n              this.$bus.$emit('tip', { text: this.$t('register.emailSendSuccess'), type: 'success' });\n            } else if (data.code.toString() === '10003') {\n              if (this.error10003) {\n                // tip框提示错误\n                this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n              } else {\n                this.error10003 = true;\n                // 请滑动安全验证后再获取验证码\n                this.$bus.$emit('tip', { text: this.$t('register.scrollCode'), type: 'warning' });\n              }\n              // 倒计时重置\n              this.$bus.$emit('getCode-clear', 'registerGetcode');\n            } else {\n              // 倒计时重置\n              this.$bus.$emit('getCode-clear', 'registerGetcode');\n              // tip框提示错误\n              this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n            }\n          },\n        });\n      }\n    },\n    // 滑动验证回调\n    verifyCallBack(parameter) {\n      this.verifyObj = parameter;\n      this.verifyFlag = true;\n      this.submit();\n    },\n    // 同意服务条款\n    checkoutClick(flag) {\n      this.textFlag = flag;\n    },\n    // 同意服务条款\n    checkoutClick2(flag) {\n      this.textFlag2 = flag;\n    },\n    // 同意服务条款\n    checkoutClick3(flag) {\n      this.textFlag3 = flag;\n    },\n  },\n};\n"]}]}