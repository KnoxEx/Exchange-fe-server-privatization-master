{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/components/input_find/InputFind.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/components/input_find/InputFind.vue","mtime":1641740793770},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'c-inputFind',\n  data: function data() {\n    return {\n      nowValue: '',\n      // 内部双向数据绑定\n      maxLength: 100,\n      // 最长长度\n      isHover: false,\n      isFocus: false\n    };\n  },\n  props: {\n    name: {\n      default: '',\n      type: String\n    },\n    // 名称标识\n    className: {\n      default: '',\n      type: String\n    },\n    // class根容器\n    disabled: {\n      default: false,\n      type: Boolean\n    },\n    // 是否为只读\n    promptText: {\n      default: '',\n      type: String\n    },\n    // 提示文案\n    value: {\n      default: '',\n      type: String\n    },\n    // 外部 v-model 传入的植\n    lightColour: {\n      default: false,\n      type: Boolean\n    },\n    // 是否为浅色版\n    iconHide: {\n      default: false,\n      type: Boolean\n    },\n    inputStyle: {\n      default: '',\n      type: String\n    }\n  },\n  watch: {\n    nowValue: function nowValue(v) {\n      // 限制最长长度\n      if (v.length > this.maxLength) {\n        this.nowValue = v.substring(0, this.maxLength);\n      } // 限制空格\n\n\n      if (v.indexOf(' ') !== -1) {\n        var arr = this.nowValue.split(' ');\n        var str = '';\n        arr.forEach(function (item) {\n          str += item;\n        });\n        this.nowValue = str;\n      }\n\n      this.$emit('onchanges', v, this.name);\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$bus.$off('inputFind-focus');\n    this.$bus.$on('inputFind-focus', function (name) {\n      if (name === _this.name) {\n        _this.focusFn();\n      }\n    });\n  },\n  computed: {\n    curValue: {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(value) {\n        this.nowValue = value;\n      }\n    },\n    contentClass: function contentClass() {\n      if (this.isHover || this.isFocus) {\n        return 'a-12-bd';\n      }\n\n      return 'a-2-bd';\n    },\n    solidBcClass: function solidBcClass() {\n      var className = null;\n\n      if (this.isHover) {\n        className = 'solidBc-hover';\n      }\n\n      if (this.isFocus) {\n        className = 'solidBc-active';\n      }\n\n      return className;\n    }\n  },\n  methods: {\n    focusFn: function focusFn() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.$refs.inputFind.focus();\n      });\n    },\n    clones: function clones() {\n      this.$emit('onchanges', '', this.name);\n    },\n    // input 鼠标划入\n    handMouseenter: function handMouseenter() {\n      this.isHover = true;\n    },\n    // input 鼠标划出\n    handMouseleave: function handMouseleave() {\n      this.isHover = false;\n    },\n    // input 获取焦点\n    handFocus: function handFocus() {\n      this.$emit('focus');\n      this.isFocus = true;\n    },\n    // input 失去焦点\n    handBlur: function handBlur() {\n      this.$emit('blur');\n      this.isFocus = false;\n    }\n  }\n};",{"version":3,"sources":["InputFind.vue"],"names":[],"mappings":"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","sourcesContent":["// Created by 任泽阳 on 18/12/05. // 搜索输入框\r\n<template>\r\n  <section\r\n    class='input-find-content'\r\n    :class='`${contentClass} ${className}`'\r\n    @mouseenter='handMouseenter'\r\n    @mouseleave='handMouseleave'\r\n  >\r\n    <!-- <div v-if='solidBcClass' class='solidBc' :class='solidBcClass'></div> -->\r\n    <div class='content'>\r\n      <span class='iconbox' v-if='!iconHide'>\r\n        <svg class='icon icon-14' aria-hidden='true'>\r\n          <use xlink:href='#icon-a_12'></use>\r\n        </svg>\r\n      </span>\r\n      <input\r\n        v-model='curValue'\r\n        :disabled='disabled'\r\n        :style='inputStyle'\r\n        ref='inputFind'\r\n        autocomplete='off'\r\n        class='b-1-cl'\r\n        :placeholder='promptText'\r\n        @focus='handFocus'\r\n        @blur='handBlur'\r\n      />\r\n      <span\r\n        class='clones'\r\n        @click='clones'\r\n        v-if='curValue && curValue.length && !iconHide'\r\n        >x</span\r\n      >\r\n    </div>\r\n  </section>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'c-inputFind',\r\n  data() {\r\n    return {\r\n      nowValue: '', // 内部双向数据绑定\r\n      maxLength: 100, // 最长长度\r\n      isHover: false,\r\n      isFocus: false,\r\n    };\r\n  },\r\n  props: {\r\n    name: { default: '', type: String }, // 名称标识\r\n    className: { default: '', type: String }, // class根容器\r\n    disabled: { default: false, type: Boolean }, // 是否为只读\r\n    promptText: { default: '', type: String }, // 提示文案\r\n    value: { default: '', type: String }, // 外部 v-model 传入的植\r\n    lightColour: { default: false, type: Boolean }, // 是否为浅色版\r\n    iconHide: { default: false, type: Boolean },\r\n    inputStyle: { default: '', type: String },\r\n  },\r\n  watch: {\r\n    nowValue(v) {\r\n      // 限制最长长度\r\n      if (v.length > this.maxLength) {\r\n        this.nowValue = v.substring(0, this.maxLength);\r\n      }\r\n      // 限制空格\r\n      if (v.indexOf(' ') !== -1) {\r\n        const arr = this.nowValue.split(' ');\r\n        let str = '';\r\n        arr.forEach((item) => {\r\n          str += item;\r\n        });\r\n        this.nowValue = str;\r\n      }\r\n      this.$emit('onchanges', v, this.name);\r\n    },\r\n  },\r\n  created() {\r\n    this.$bus.$off('inputFind-focus');\r\n    this.$bus.$on('inputFind-focus', (name) => {\r\n      if (name === this.name) {\r\n        this.focusFn();\r\n      }\r\n    });\r\n  },\r\n  computed: {\r\n    curValue: {\r\n      get() {\r\n        return this.value;\r\n      },\r\n      set(value) {\r\n        this.nowValue = value;\r\n      },\r\n    },\r\n    contentClass() {\r\n      if (this.isHover || this.isFocus) {\r\n        return 'a-12-bd';\r\n      }\r\n      return 'a-2-bd';\r\n    },\r\n    solidBcClass() {\r\n      let className = null;\r\n      if (this.isHover) {\r\n        className = 'solidBc-hover';\r\n      }\r\n      if (this.isFocus) {\r\n        className = 'solidBc-active';\r\n      }\r\n      return className;\r\n    },\r\n  },\r\n  methods: {\r\n    focusFn() {\r\n      this.$nextTick(() => {\r\n        this.$refs.inputFind.focus();\r\n      });\r\n    },\r\n    clones() {\r\n      this.$emit('onchanges', '', this.name);\r\n    },\r\n    // input 鼠标划入\r\n    handMouseenter() {\r\n      this.isHover = true;\r\n    },\r\n    // input 鼠标划出\r\n    handMouseleave() {\r\n      this.isHover = false;\r\n    },\r\n    // input 获取焦点\r\n    handFocus() {\r\n      this.$emit('focus');\r\n      this.isFocus = true;\r\n    },\r\n    // input 失去焦点\r\n    handBlur() {\r\n      this.$emit('blur');\r\n      this.isFocus = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang='stylus'>\r\n.input-find-content {\r\n  width: 200px;\r\n  height: 28px;\r\n  line-height: 28px;\r\n  position: relative;\r\n  border-radius: 2px;\r\n  overflow: hidden;\r\n  border-width: 1px;\r\n  border-style: solid;\r\n  box-sizing: border-box;\r\n  transition: all 0.3s;\r\n  .clones {\r\n    position: absolute;\r\n    right: 10px;\r\n    line-height: 28px;\r\n    cursor: pointer;\r\n  }\r\n  .solidBc {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n  .content {\r\n    z-index: 2;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n  .solidBc-hover {\r\n    opacity: 0.05\r\n  }\r\n  .solidBc-active {\r\n    opacity: 0.05\r\n  }\r\n  .iconbox {\r\n    width: 30px;\r\n    height: 28px;\r\n    display: inline-block;\r\n    text-align: center;\r\n    line-height: 28px;\r\n    vertical-align: middle\r\n  }\r\n  input {\r\n    width: 168px;\r\n    height: 20px;\r\n    margin-top: -1px;\r\n    line-height: 20px;\r\n    vertical-align: middle\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"../BlockChain-ui-privatization/PC/components/input_find"}]}