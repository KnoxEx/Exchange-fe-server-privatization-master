{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/utils/common-method.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/utils/common-method.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.is-nan\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport _toConsumableArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.string.pad-end\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n// 汇率计算\nimport { getCookie } from \"./cookie\";\nexport var logImg = function logImg(data) {\n  if (!/localhost|dev|staging/g.test(window.location.host)) {\n    var img = document.createElement('img');\n    img.src = \"https://chaindown-oss.oss-cn-hongkong.aliyuncs.com/static/cd.png?info=\".concat(JSON.stringify(data));\n  }\n};\nexport var getCountryList = function getCountryList(phoneCodeGlobal) {\n  var list = [];\n  var countryMap = {};\n  var countryRealMap = {};\n\n  if (phoneCodeGlobal.A) {\n    Object.keys(phoneCodeGlobal).forEach(function (item) {\n      phoneCodeGlobal[item].forEach(function (vitem) {\n        var valueArr = vitem.split('+');\n        var value = \"\".concat(valueArr[0], \"+\").concat(valueArr[1]);\n        var codeArr = vitem.split(' +');\n        var code = \"+\".concat(codeArr[1].split('+')[0]);\n        var obj = {\n          value: value,\n          code: \"+\".concat(valueArr[2]),\n          keyCode: code\n        };\n        list.push(obj);\n        countryMap[code] = obj;\n        countryRealMap[\"+\".concat(valueArr[2])] = obj;\n      });\n    });\n  }\n\n  return function () {\n    return {\n      list: list,\n      countryMap: countryMap,\n      countryRealMap: countryRealMap\n    };\n  }();\n};\nexport var diff = function diff(date) {\n  var dateBegin = new Date(date.replace(/-/g, '/'));\n  var dateEnd = new Date();\n  var dateDiff = dateEnd.getTime() - dateBegin.getTime();\n  var dayDiff = -Math.floor(dateDiff / (24 * 3600 * 1000));\n  return dayDiff;\n};\nexport var fixRate = function fixRate(price, exrate, market) {\n  var lang = getCookie('lan') || 'en_US'; // if (lang === 'el_GR') { lang = 'zh_CN' }\n\n  if (!exrate) {\n    return '--';\n  }\n\n  var larate = exrate[lang] || exrate.en_US;\n\n  if (!larate) {\n    return '--';\n  }\n\n  var pric = larate[market] * price;\n\n  if (\"\".concat(parseFloat(pric)) !== 'NaN') {\n    var rate = typeof larate.symbolPrecision !== 'undefined' ? larate.symbolPrecision : larate.coin_precision;\n    return larate.lang_logo + pric.toFixed(rate);\n  }\n\n  return '--';\n}; // 时间格式化\n\nexport var formatTime = function formatTime(dateTime) {\n  var date = new Date(dateTime);\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var seconds = date.getSeconds();\n\n  function s(t) {\n    return t < 10 ? \"0\".concat(t) : t;\n  }\n\n  return \"\".concat(year, \"-\").concat(s(month), \"-\").concat(s(day), \" \").concat(s(hours), \":\").concat(s(minutes), \":\").concat(s(seconds));\n}; // 精度计算E+处理方法\n\nvar fixDEAdd = function fixDEAdd(num, precision) {\n  var autoFix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (\"\".concat(num) === '0') {\n    if (!window.parseFloat(precision) || !autoFix) return 0;\n    return '0.'.padEnd(precision + 2, '0');\n  }\n\n  if (!num) return '--';\n  var number = parseFloat(num);\n  var strN = num.toString();\n  var flag = number < 0;\n  var result = strN;\n\n  if (strN.toLowerCase().indexOf('e') > -1) {\n    var n = strN.match(/(\\d+?)(?:\\.(\\d*))?e([+-])(\\d+)/);\n    var nl = n[1]; // 小数点左边\n\n    var nr = n[2]; // 小数点右边\n\n    var type = n[3]; //  + / -\n\n    var floatN = n[4]; // 科学计数法的位数\n\n    var params = '';\n    var pr = nr ? nr.substr(floatN) : '';\n    if (pr) pr = \".\".concat(pr);\n\n    if (type !== '-') {\n      for (var i = 0; i < floatN; i += 1) {\n        var p = nr[i] || '0';\n        params += p;\n      }\n\n      result = nl + params + pr;\n    } else {\n      var strl = '0';\n\n      for (var _i = 0; _i < floatN; _i += 1) {\n        var _p = nl[nl.length - _i - 1] || '0';\n\n        params = _p + params;\n      }\n\n      if (nl.length > floatN) strl = nl.substr(0, nl.length - floatN);\n      result = \"\".concat(strl, \".\").concat(params).concat(nr);\n    }\n  }\n\n  if (precision && autoFix) {\n    var pal = \"\".concat(result.split('.')[0], \".\");\n    var par = result.split('.')[1] || '';\n\n    for (var _i2 = 0; _i2 < precision; _i2 += 1) {\n      pal += par[_i2] || '0';\n    }\n\n    result = pal;\n  }\n\n  if (result.length > 14) {\n    var arry = result.split('.');\n\n    if (arry[0].length > 14) {\n      result = \"\".concat(arry[0].slice(0, 14), \"+\");\n    } else {\n      result = result.slice(0, 13);\n\n      if (result.indexOf('.') === 12) {\n        result = result.slice(0, 12);\n      }\n    }\n  }\n\n  return \"\".concat(flag ? '-' : '').concat(result);\n}; // 精度计算\n\n\nexport var fixD = function fixD(num, precision) {\n  // num初始化\n  if (\"\".concat(num) === '0') {\n    if (!window.parseFloat(precision)) {\n      return 0;\n    }\n\n    return '0.'.padEnd(precision + 2, '0');\n  }\n\n  if (!num) {\n    return '--';\n  } // 暂用 ----\n  // if (num.length > 14) {\n  //   let rNum = num.slice(0, 14);\n  //   if (num[13] === '.') {\n  //     rNum = rNum.slice(0, 13);\n  //   }\n  //   return `${rNum}+`;\n  // }\n  // ----------\n\n\n  var flag = false;\n\n  if (parseFloat(num) < 0) {\n    flag = true;\n  }\n\n  var newnum = \"\".concat(Math.abs(parseFloat(num)));\n\n  if (newnum === 'NaN') {\n    return '--';\n  }\n\n  var fixNum = newnum; // 科学计数法计算\n\n  if (newnum.toLowerCase().indexOf('e') > -1) {\n    if (newnum.toLowerCase().indexOf('+') > -1) return fixDEAdd(newnum, precision);\n    var a = newnum.toLowerCase().split('e');\n    var b = a[0];\n    var c = Math.abs(parseFloat(a[1]));\n    var d = '';\n    var h = b.length;\n    var i;\n\n    if (a[0].split('.')[1]) {\n      b = a[0].split('.')[0] + a[0].split('.')[1];\n      h = a[0].split('.')[0].length;\n    }\n\n    for (i = 0; i < c - h; i += 1) {\n      d += '0';\n    }\n\n    fixNum = \"0.\".concat(d).concat(b);\n  } // 精度格式化\n  // precision初始化\n\n\n  if (\"\".concat(precision) !== '0' && !precision) {\n    return (flag ? '-' : '') + fixNum;\n  }\n\n  if (\"\".concat(parseFloat(num)) === 'NaN') {\n    return (flag ? '-' : '') + fixNum;\n  }\n\n  var fNum = fixNum.split('.');\n\n  if (precision === 0) {\n    fixNum = parseInt(fixNum, 10);\n  } else if (precision > 0 && fNum[1]) {\n    if (fNum[1].length > precision) {\n      if (fNum[1].indexOf('999999999') > -1) {\n        var s = parseFloat(fixNum).toFixed(precision + 1);\n        fixNum = s.slice(0, s.length - 1);\n      } else {\n        fixNum = \"\".concat(fNum[0], \".\").concat(fNum[1].slice(0, precision));\n      }\n    } else {\n      fixNum = parseFloat(fixNum).toFixed(precision);\n    }\n  } else {\n    fixNum = parseFloat(fixNum).toFixed(precision);\n  }\n\n  if (fixNum.length >= 14 && fixNum.indexOf('.') > -1) {\n    var arry = fixNum.split('.');\n\n    if (arry[0].length > 14) {\n      fixNum = \"\".concat(arry[0].slice(0, 14), \"+\");\n    } else {\n      fixNum = fixNum.slice(0, 13);\n\n      if (fixNum.indexOf('.') === 12) {\n        fixNum = fixNum.slice(0, 12);\n      }\n    }\n  }\n\n  return (flag ? '-' : '') + fixNum;\n}; // 删除小数点最后面的0\n\nexport var lastD = function lastD(num) {\n  if (!num) return num;\n  var newNum = \"\".concat(num);\n  var str = newNum.split('.')[1];\n  if (!str) return newNum;\n\n  function substring(stri) {\n    var arr = stri.split('');\n\n    for (var i = arr.length - 1; i >= 0; i -= 1) {\n      if (!arr[i]) return newNum.split('.')[0];\n\n      if (arr[i] === '0') {\n        arr.splice(i);\n      } else {\n        break;\n      }\n    }\n\n    if (!arr.length) return newNum.split('.')[0];\n    return \"\".concat(newNum.split('.')[0], \".\").concat(arr.join(''));\n  }\n\n  return substring(str);\n}; // 获取url里的参数\n\nexport var fixUrl = function fixUrl(name) {\n  var text = window.location.search.substring(1).split('&');\n  var v = null;\n\n  for (var i = text.length - 1; i >= 0; i -= 1) {\n    var key = text[i].split('=')[0];\n    var value = text[i].split('=')[1];\n\n    if (key === name) {\n      v = value;\n      break;\n    }\n  }\n\n  return v;\n}; // 输入框\n\nexport var fixInput = function fixInput(val, fixs) {\n  var fix = fixs;\n\n  if (!fix === 0) {\n    fix = fix || 10;\n  }\n\n  var v = \"\".concat(fixDEAdd(val, fixs, false)); // 操作1\n  // 用户行为 直接上来打个.\n  // 解决方案 置换成0.\n\n  if (v.charAt(0) === '.') {\n    v = '0.';\n  } // 操作2\n  // 用户行为 打多个点.\n  // 解决方案 保留第二个点以前的数值\n\n\n  var strArr = _toConsumableArray(v).reduce(function (res, c) {\n    if (res[c]) {\n      res[c] += 1;\n    } else {\n      res[c] = 1;\n    }\n\n    return res;\n  }, {});\n\n  if (strArr['.'] === 2) {\n    var arr = v.split('.');\n    v = \"\".concat(arr[0], \".\").concat(arr[1]);\n  } // 操作3\n  // 用户行为 小数点后输入超过该币种精度限制\n  // 解决方案 保留该精度之前的数值\n\n\n  if (v.indexOf('.') !== -1) {\n    var integer = v.split('.')[0]; // 整数\n\n    var decimal = v.split('.')[1]; // 小数\n\n    if (decimal.length > fix) {\n      decimal = decimal.substring(0, fix);\n      v = \"\".concat(integer, \".\").concat(decimal);\n    }\n  } // 操作4\n  // 用户行为 转成汉语拼音后可输入汉字字母等字符\n  // 解决方案 干掉写入的文字\n\n\n  var strKey = Object.keys(strArr);\n  strKey.forEach(function (c) {\n    var str = '01234567890.';\n\n    if (fix === 0) {\n      str = '01234567890';\n    }\n\n    if (str.indexOf(c) === -1) {\n      v = v.split(c)[0] + (v.split(c)[1] || '');\n    }\n  }); // 操作5\n  // 用户行为 输入总长度超过14位 包括.\n  // 解决方案 截取前14位\n\n  if (v.length > 13) {\n    v = v.substring(0, 13);\n  }\n\n  return v;\n}; // 计算倒计时 仅支持到天位\n\nexport var getTime = function getTime(spkTime) {\n  var dateSpan = Math.abs(spkTime);\n\n  if (!dateSpan) {\n    return '';\n  } // 计算天\n\n\n  var iDays = Math.floor(dateSpan / (24 * 3600 * 1000)); // 计算小时\n\n  dateSpan -= iDays * (24 * 3600 * 1000);\n  var iHour = \"\".concat(Math.floor(dateSpan / (3600 * 1000)));\n  iHour = iHour.length === 1 ? \"0\".concat(iHour) : iHour; // 计算分钟\n\n  dateSpan -= iHour * (3600 * 1000);\n  var iMin = \"\".concat(Math.floor(dateSpan / (60 * 1000)));\n  iMin = iMin.length === 1 ? \"0\".concat(iMin) : iMin; // 计算秒钟\n\n  dateSpan -= iMin * (60 * 1000);\n  var iSec = \"\".concat(Math.floor(dateSpan / 1000));\n  iSec = iSec.length === 1 ? \"0\".concat(iSec) : iSec;\n  return {\n    day: iDays,\n    hour: iHour,\n    min: iMin,\n    sec: iSec\n  };\n}; // 计算时间 2012:12:12 12:12:12\n\nexport function timeFn(dataObj, data) {\n  var fmt = data;\n  var o = {\n    'M+': dataObj.getMonth() + 1,\n    // 月份\n    'd+': dataObj.getDate(),\n    // 日\n    'h+': dataObj.getHours(),\n    // 小时\n    'm+': dataObj.getMinutes(),\n    // 分\n    's+': dataObj.getSeconds(),\n    // 秒\n    'q+': Math.floor((dataObj.getMonth() + 3) / 3),\n    // 季度\n    S: dataObj.getMilliseconds() // 毫秒\n\n  };\n\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, \"\".concat(dataObj.getFullYear()).substr(4 - RegExp.$1.length));\n  }\n\n  Object.keys(o).forEach(function (k) {\n    if (new RegExp(\"(\".concat(k, \")\")).test(fmt)) {\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : \"00\".concat(o[k]).substr(\"\".concat(o[k]).length));\n    }\n  });\n  return fmt;\n}\nexport var getComplexType = function getComplexType(obj) {\n  var type = Object.prototype.toString.call(obj);\n  return type.match(/\\s(.+)]/ig)[0].trim().replace(']', '');\n};\nexport var thousands = function thousands(num) {\n  var str = num.toString();\n  var reg = str.indexOf('.') > -1 ? /(\\d)(?=(\\d{3})+\\.)/g : /(\\d)(?=(?:\\d{3})+$)/g;\n  return str.replace(reg, '$1,');\n};\nexport function getLocationLang() {\n  var langList = ['el_GR', 'en_US', 'ja_JP', 'ko_KR', 'vi_VN', 'zh_CN'];\n  var hrefLang = window.location.href.match(/lang=(.+?)(&|$)/);\n  var url = '';\n\n  if (hrefLang && hrefLang[1] && langList.indexOf(hrefLang[1]) > -1) {\n    var _hrefLang = _slicedToArray(hrefLang, 2);\n\n    url = _hrefLang[1];\n  }\n\n  return url;\n}\nexport function getCoinShowName(name) {\n  var coinList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (name && coinList && coinList[name.toUpperCase()]) {\n    return coinList[name.toUpperCase()].showName || name;\n  }\n\n  return name;\n}\nexport function fixFloat(num, precision) {\n  var fix = Number(precision);\n  var n = \"\".concat(num);\n  var arr = n.split('.');\n\n  if (Number.isNaN(Number(num))) {\n    return '--';\n  }\n\n  if (!fix || arr.length === 1) {\n    return arr[0];\n  }\n\n  return \"\".concat(arr[0], \".\").concat(arr[1].substring(0, fix));\n} // 千位数字每三位加逗号\n\nexport var thousandsComma = function thousandsComma(num) {\n  var Num = (num || 0).toString();\n  var symbol = '';\n\n  if (new RegExp(/^\\+|^-/).test(Num)) {\n    symbol = Num.substr(0, 1);\n    Num = Num.substr(1);\n  }\n\n  var number = 0;\n  var floatNum = '';\n  var intNum = ''; // 判断是否有小数位，有则截取小数点后的数字\n\n  if (Num.indexOf('.') > 0) {\n    number = Num.indexOf('.'); // 获取小数点出现的位置\n\n    floatNum = Num.substr(number); // 截取arr.substr(form, length)\n\n    intNum = Num.substring(0, number); // 截取arr.substring(start, end)\n  } else {\n    intNum = Num;\n  }\n\n  var result = [];\n  var counter = 0;\n  intNum = intNum.split(''); // 利用3的倍数，向数组插入','\n\n  for (var i = intNum.length - 1; i >= 0; i -= 1) {\n    counter += 1;\n    result.unshift(intNum[i]);\n\n    if (!(counter % 3) && i !== 0) {\n      result.unshift(',');\n    }\n  }\n\n  return symbol + result.join('') + floatNum || '';\n}; // 计算小数点后面的数量\n\nexport var getDigit = function getDigit(num) {\n  var arr = String(num).split('.');\n\n  if (arr.length < 2) {\n    return 0;\n  }\n\n  return arr[1].length;\n};",null]}