{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/trade/tradeForm/internationalTradeForm.vue?vue&type=template&id=62ef5654&","dependencies":[{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/trade/tradeForm/internationalTradeForm.vue","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var this$1 = this\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"trade-box internationalTradeForm b-2-cl\" },\n    [\n      _c(\"div\", { staticClass: \"title-block a-21-bg a-3-bd\" }, [\n        _c(\n          \"span\",\n          {\n            staticClass: \"tab\",\n            class: { \"a-12-bd b-1-cl\": _vm.tradeIsSell === 1 },\n            on: {\n              click: function($event) {\n                return _vm.switchTradeSellorBuy(1)\n              }\n            }\n          },\n          [_vm._v(\"\\n      \" + _vm._s(_vm.$t(\"trade.buy\")) + \"\\n    \")]\n        ),\n        _c(\n          \"span\",\n          {\n            staticClass: \"tab\",\n            class: { \"a-12-bd b-1-cl\": _vm.tradeIsSell === 2 },\n            on: {\n              click: function($event) {\n                return _vm.switchTradeSellorBuy(2)\n              }\n            }\n          },\n          [_vm._v(\"\\n      \" + _vm._s(_vm.$t(\"trade.sell\")) + \"\\n    \")]\n        ),\n        _vm.gridTradeFlag && _vm.showGridFlag\n          ? _c(\n              \"span\",\n              {\n                staticClass: \"tab\",\n                class: { \"a-12-bd b-1-cl\": _vm.tradeIsSell === 3 },\n                on: { click: _vm.switchGrid }\n              },\n              [\n                _vm._v(\n                  \"\\n      \" + _vm._s(_vm.$t(\"gridTrade.title\")) + \"\\n    \"\n                )\n              ]\n            )\n          : _vm._e()\n      ]),\n      _vm.tradeIsSell !== 3\n        ? _c(\n            \"div\",\n            {\n              staticClass: \"switch-trade-type a-21-bg a-3-bd b-1-cl\",\n              on: { mouseleave: _vm.hideSelectModal }\n            },\n            [\n              _c(\"div\", { staticClass: \"content\" }, [\n                _c(\"span\", { on: { mouseenter: _vm.handMouseenter } }, [\n                  _vm._v(\n                    _vm._s(\n                      _vm.transactionType == 1\n                        ? _vm.$t(\"trade.limitPriceTrade\")\n                        : _vm.$t(\"trade.marketPriceTrade\")\n                    )\n                  )\n                ]),\n                _c(\n                  \"svg\",\n                  {\n                    staticClass: \"icon icon-14\",\n                    attrs: { \"aria-hidden\": \"true\" }\n                  },\n                  [_c(\"use\", { attrs: { \"xlink:href\": \"#icon-a_13\" } })]\n                ),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.selectModalState,\n                        expression: \"selectModalState\"\n                      }\n                    ],\n                    staticClass: \"header-sub-nav a-5-bg x-2-cl\"\n                  },\n                  [\n                    _c(\"ul\", { staticClass: \"header-user-text\" }, [\n                      _c(\"li\", { staticClass: \"g-3-cl-h\" }, [\n                        _c(\n                          \"span\",\n                          {\n                            class:\n                              _vm.langHover === \"limitPriceTrade\"\n                                ? \"a-4-bg b-1-cl\"\n                                : \"\",\n                            on: {\n                              click: function($event) {\n                                return _vm.switchTradeType(1)\n                              },\n                              mouseenter: function($event) {\n                                return _vm.handMouseenter(\"limitPriceTrade\")\n                              },\n                              mouseout: function($event) {\n                                return _vm.handMouseleave(\"limitPriceTrade\")\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              \" +\n                                _vm._s(_vm.$t(\"trade.limitPriceTrade\")) +\n                                \"\\n            \"\n                            )\n                          ]\n                        )\n                      ]),\n                      _c(\"li\", { staticClass: \"g-3-cl-h\" }, [\n                        _c(\n                          \"span\",\n                          {\n                            class:\n                              _vm.langHover === \"marketPriceTrade\"\n                                ? \"a-4-bg b-1-cl\"\n                                : \"\",\n                            on: {\n                              click: function($event) {\n                                return _vm.switchTradeType(2)\n                              },\n                              mouseenter: function($event) {\n                                return _vm.handMouseenter(\"marketPriceTrade\")\n                              },\n                              mouseout: function($event) {\n                                return _vm.handMouseleave(\"marketPriceTrade\")\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              \" +\n                                _vm._s(_vm.$t(\"trade.marketPriceTrade\")) +\n                                \"\\n            \"\n                            )\n                          ]\n                        )\n                      ])\n                    ])\n                  ]\n                )\n              ])\n            ]\n          )\n        : _vm._e(),\n      _vm.tradeIsSell === 3\n        ? _c(\n            \"div\",\n            {\n              staticClass:\n                \"grid-switch switch-trade-type a-21-bg a-3-bd b-1-cl clearfix\",\n              style:\n                _vm.gridType == 2 ? \"padding: 0 16px;\" : \"padding: 0 0 0 16px;\",\n              on: { mouseleave: _vm.hideSelectModal }\n            },\n            [\n              _c(\"div\", { staticClass: \"content\" }, [\n                _c(\"span\", { on: { mouseenter: _vm.handMouseenter } }, [\n                  _vm._v(\n                    _vm._s(\n                      _vm.gridType == 1\n                        ? _vm.$t(\"gridTrade.type1\")\n                        : _vm.$t(\"gridTrade.type2\")\n                    )\n                  )\n                ]),\n                _c(\n                  \"svg\",\n                  {\n                    staticClass: \"icon icon-14\",\n                    attrs: { \"aria-hidden\": \"true\" }\n                  },\n                  [_c(\"use\", { attrs: { \"xlink:href\": \"#icon-a_13\" } })]\n                ),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.selectModalState,\n                        expression: \"selectModalState\"\n                      }\n                    ],\n                    staticClass: \"header-sub-nav a-5-bg x-2-cl\"\n                  },\n                  [\n                    _c(\"ul\", { staticClass: \"header-user-text\" }, [\n                      _c(\"li\", { staticClass: \"g-3-cl-h\" }, [\n                        _c(\n                          \"span\",\n                          {\n                            class:\n                              _vm.langHover === \"gridSet\"\n                                ? \"a-4-bg b-1-cl\"\n                                : \"\",\n                            on: {\n                              click: function() {\n                                return (this$1.gridType = 1)\n                              },\n                              mouseenter: function($event) {\n                                return _vm.handMouseenter(\"gridSet\")\n                              },\n                              mouseout: function($event) {\n                                return _vm.handMouseleave(\"gridSet\")\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              \" +\n                                _vm._s(_vm.$t(\"gridTrade.type1\")) +\n                                \"\\n            \"\n                            )\n                          ]\n                        )\n                      ]),\n                      _c(\"li\", { staticClass: \"g-3-cl-h\" }, [\n                        _c(\n                          \"span\",\n                          {\n                            class:\n                              _vm.langHover === \"gridAi\" ? \"a-4-bg b-1-cl\" : \"\",\n                            on: {\n                              click: function() {\n                                return (this$1.gridType = 2)\n                              },\n                              mouseenter: function($event) {\n                                return _vm.handMouseenter(\"gridAi\")\n                              },\n                              mouseout: function($event) {\n                                return _vm.handMouseleave(\"gridAi\")\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              \" +\n                                _vm._s(_vm.$t(\"gridTrade.type2\")) +\n                                \"\\n            \"\n                            )\n                          ]\n                        )\n                      ])\n                    ])\n                  ]\n                )\n              ])\n            ]\n          )\n        : _vm._e(),\n      _vm.tradeIsSell !== 3\n        ? _c(\"div\", { staticClass: \"trade-form\" }, [\n            _vm.tradeIsSell === 1\n              ? _c(\"div\", { staticClass: \"trade-block\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-block\" },\n                    [\n                      _c(\"div\", { staticClass: \"top-mag\" }, [\n                        _c(\n                          \"span\",\n                          { staticClass: \"lov b-1-cl\" },\n                          [\n                            this.isLogin &&\n                            _vm.currenTaccount.unitsOpen.toString() === \"1\"\n                              ? _c(\n                                  \"c-button\",\n                                  {\n                                    staticClass: \"lovButton\",\n                                    attrs: { type: \"text\" },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.goCz(_vm.symbolUnit.units)\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.$t(\"manageFinances.goRecharge\")\n                                      )\n                                    )\n                                  ]\n                                )\n                              : _vm._e()\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\"trade-input\", {\n                        attrs: {\n                          fixValue: _vm.fixValue.priceFix,\n                          name: \"formData_1\",\n                          datas: _vm.formData_1\n                        },\n                        on: { onChanes: _vm.onChaneForm },\n                        model: {\n                          value: _vm.formData_1.value,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData_1, \"value\", $$v)\n                          },\n                          expression: \"formData_1.value\"\n                        }\n                      }),\n                      _c(\"trade-input\", {\n                        attrs: {\n                          fixValue: _vm.formData2Fix,\n                          name: \"formData_2\",\n                          datas: _vm.formData_2\n                        },\n                        on: { onChanes: _vm.onChaneForm },\n                        model: {\n                          value: _vm.formData_2.value,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData_2, \"value\", $$v)\n                          },\n                          expression: \"formData_2.value\"\n                        }\n                      }),\n                      _c(\n                        \"div\",\n                        { staticClass: \"percentage\" },\n                        _vm._l(_vm.perArr, function(item, index) {\n                          return _c(\n                            \"span\",\n                            {\n                              key: index + \"buy\",\n                              staticClass: \"per-item\",\n                              class: _vm.perBuyClass(item),\n                              on: {\n                                click: function($event) {\n                                  return _vm.setPerNumber(\"buy\", item)\n                                }\n                              }\n                            },\n                            [_vm._v(_vm._s(item) + \"%\")]\n                          )\n                        }),\n                        0\n                      ),\n                      _c(\"div\", { staticClass: \"volume-trade\" }, [\n                        _vm.transactionType === 1\n                          ? _c(\"div\", [\n                              _vm._v(\n                                \"\\n            \" +\n                                  _vm._s(_vm.$t(\"trade.dealMoney\")) +\n                                  \"\\n            \"\n                              ),\n                              _vm.tradeVolumeBuy !== \"--\"\n                                ? _c(\"span\", { staticClass: \"vol\" }, [\n                                    _vm._v(\n                                      _vm._s(_vm.tradeVolumeBuy) +\n                                        \"\\n              \" +\n                                        _vm._s(\n                                          _vm._f(\"getCoinShowName\")(\n                                            _vm.symbolUnit.units,\n                                            _vm.coinList\n                                          )\n                                        ) +\n                                        \"\\n              \"\n                                    )\n                                  ])\n                                : _vm._e()\n                            ])\n                          : _vm._e()\n                      ]),\n                      _c(\n                        \"c-button\",\n                        {\n                          attrs: {\n                            defaultColorClass:\n                              _vm.buttosContent.buyButton.class,\n                            hoverColorClass: _vm.buttosContent.buyButton.class,\n                            activeColorClass: _vm.buttosContent.buyButton.class,\n                            width: \"100%\"\n                          },\n                          on: {\n                            click: function($event) {\n                              return _vm.submit(\"BUY\")\n                            }\n                          }\n                        },\n                        [_vm._v(_vm._s(_vm.buttosContent.buyButton.text))]\n                      )\n                    ],\n                    1\n                  )\n                ])\n              : _vm._e(),\n            _vm.tradeIsSell === 2\n              ? _c(\"div\", { staticClass: \"trade-block\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-block\" },\n                    [\n                      _c(\"div\", { staticClass: \"top-mag\" }, [\n                        _c(\n                          \"span\",\n                          { staticClass: \"lov b-1-cl\" },\n                          [\n                            this.isLogin &&\n                            _vm.currenTaccount.unitsOpen.toString() === \"1\"\n                              ? _c(\n                                  \"c-button\",\n                                  {\n                                    staticClass: \"lovButton\",\n                                    attrs: { type: \"text\" },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.goCz(_vm.symbolUnit.units)\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.$t(\"manageFinances.goRecharge\")\n                                      )\n                                    )\n                                  ]\n                                )\n                              : _vm._e()\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\"trade-input\", {\n                        attrs: {\n                          name: \"formData_3\",\n                          fixValue: _vm.fixValue.priceFix,\n                          datas: _vm.formData_3\n                        },\n                        on: { onChanes: _vm.onChaneForm },\n                        model: {\n                          value: _vm.formData_3.value,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData_3, \"value\", $$v)\n                          },\n                          expression: \"formData_3.value\"\n                        }\n                      }),\n                      _c(\"trade-input\", {\n                        attrs: {\n                          name: \"formData_4\",\n                          fixValue: _vm.fixValue.volumeFix,\n                          datas: _vm.formData_4\n                        },\n                        on: { onChanes: _vm.onChaneForm },\n                        model: {\n                          value: _vm.formData_4.value,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData_4, \"value\", $$v)\n                          },\n                          expression: \"formData_4.value\"\n                        }\n                      }),\n                      _c(\n                        \"div\",\n                        { staticClass: \"percentage\" },\n                        _vm._l(_vm.perArr, function(item, index) {\n                          return _c(\n                            \"span\",\n                            {\n                              key: index + \"sell\",\n                              staticClass: \"per-item\",\n                              class: _vm.perSellClass(item),\n                              on: {\n                                click: function($event) {\n                                  return _vm.setPerNumber(\"sell\", item)\n                                }\n                              }\n                            },\n                            [_vm._v(_vm._s(item) + \"%\")]\n                          )\n                        }),\n                        0\n                      ),\n                      _c(\"div\", { staticClass: \"volume-trade\" }, [\n                        _vm.transactionType === 1\n                          ? _c(\"div\", [\n                              _vm._v(\n                                \"\\n            \" +\n                                  _vm._s(_vm.$t(\"trade.dealMoney\")) +\n                                  \"\\n            \"\n                              ),\n                              _vm.tradeVolumeSell !== \"--\"\n                                ? _c(\n                                    \"span\",\n                                    {\n                                      staticClass: \"vol\",\n                                      class: _vm.volumeTradeClass(\n                                        _vm.tradeVolumeSell,\n                                        _vm.currenTaccount.symbolAccoubt\n                                      )\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n              \" +\n                                          _vm._s(_vm.tradeVolumeSell) +\n                                          \"\\n              \" +\n                                          _vm._s(\n                                            _vm._f(\"getCoinShowName\")(\n                                              _vm.symbolUnit.units,\n                                              _vm.coinList\n                                            )\n                                          ) +\n                                          \"\\n            \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ])\n                          : _vm._e()\n                      ]),\n                      _c(\n                        \"c-button\",\n                        {\n                          attrs: {\n                            defaultColorClass:\n                              _vm.buttosContent.sellButton.class,\n                            hoverColorClass: _vm.buttosContent.sellButton.class,\n                            activeColorClass:\n                              _vm.buttosContent.sellButton.class,\n                            width: \"100%\"\n                          },\n                          on: {\n                            click: function($event) {\n                              return _vm.submit(\"SELL\")\n                            }\n                          }\n                        },\n                        [_vm._v(_vm._s(_vm.buttosContent.sellButton.text))]\n                      )\n                    ],\n                    1\n                  )\n                ])\n              : _vm._e()\n          ])\n        : _c(\"div\", { staticClass: \"trade-form trade-grid\" }, [\n            _vm.gridType === 1\n              ? _c(\"div\", { staticClass: \"trade-block trade_block_width\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-block\" },\n                    [\n                      _c(\"p\", { staticStyle: { lineHeight: \"16px\" } }, [\n                        _vm._v(\n                          \"\\n            \" +\n                            _vm._s(_vm.$t(\"gridTrade.setText2\")) +\n                            \":\\n          \"\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"input-inline-box clearfix\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"input-inline-item\" },\n                          [\n                            _c(\"grid-trade-input\", {\n                              attrs: {\n                                name: \"gridSetMin\",\n                                fixValue: _vm.fixValue.priceFix,\n                                placeText: _vm.$t(\"gridTrade.setText3\"),\n                                datas: _vm.gridSetMin\n                              },\n                              on: { onChanes: _vm.onChaneForm },\n                              model: {\n                                value: _vm.gridSetMin.value,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.gridSetMin, \"value\", $$v)\n                                },\n                                expression: \"gridSetMin.value\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\"b\", { staticClass: \"a-3-bd\" }),\n                        _c(\n                          \"div\",\n                          { staticClass: \"input-inline-item\" },\n                          [\n                            _c(\"grid-trade-input\", {\n                              attrs: {\n                                name: \"gridSetMax\",\n                                fixValue: _vm.fixValue.priceFix,\n                                placeText: _vm.$t(\"gridTrade.setText4\"),\n                                datas: _vm.gridSetMax\n                              },\n                              on: { onChanes: _vm.onChaneForm },\n                              model: {\n                                value: _vm.gridSetMax.value,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.gridSetMax, \"value\", $$v)\n                                },\n                                expression: \"gridSetMax.value\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\"p\", [\n                        _vm._v(_vm._s(_vm.$t(\"gridTrade.setText5\")) + \": \")\n                      ]),\n                      _c(\"div\", { staticClass: \"input-inline-box clearfix\" }, [\n                        _c(\n                          \"div\",\n                          {\n                            staticClass:\n                              \"input-inline-item input-inline-item_width\"\n                          },\n                          [\n                            _c(\"grid-trade-input\", {\n                              attrs: {\n                                name: \"gridSetNum\",\n                                fixValue: _vm.fixValue.priceFix,\n                                placeText: \"2-100\",\n                                datas: _vm.gridSetNum\n                              },\n                              on: { onChanes: _vm.onChaneForm },\n                              model: {\n                                value: _vm.gridSetNum.value,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.gridSetNum, \"value\", $$v)\n                                },\n                                expression: \"gridSetNum.value\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\"div\", { staticStyle: { width: \"10px\" } }),\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"input-inline-item clearfix set-type\"\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"set-type-btn\",\n                                class:\n                                  _vm.setType === 1\n                                    ? \"u-8-bd u-8-cl\"\n                                    : \"a-3-bd\",\n                                on: {\n                                  click: function() {\n                                    return (this$1.setType = 1)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(_vm.$t(\"gridTrade.setText6\")) +\n                                    \"\\n              \"\n                                )\n                              ]\n                            ),\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"set-type-btn\",\n                                class:\n                                  _vm.setType === 2\n                                    ? \"u-8-bd u-8-cl\"\n                                    : \"a-3-bd\",\n                                on: {\n                                  click: function() {\n                                    return (this$1.setType = 2)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(_vm.$t(\"gridTrade.setText7\")) +\n                                    \"\\n              \"\n                                )\n                              ]\n                            )\n                          ]\n                        )\n                      ]),\n                      _c(\"p\", [\n                        _vm._v(\n                          _vm._s(_vm.$t(\"gridTrade.setText8\")) +\n                            \"\\n            \" +\n                            _vm._s(\n                              _vm.setType === 1\n                                ? _vm.gridSetMinProfits +\n                                    \"%～\" +\n                                    _vm.gridSetMaxProfits\n                                : _vm.gridSetMaxProfits\n                            ) +\n                            \"%(\" +\n                            _vm._s(_vm.$t(\"gridTrade.setText9\")) +\n                            \")\"\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"set-num clearfix\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"setn-num-list\" },\n                          [\n                            _c(\"p\", [\n                              _vm._v(_vm._s(_vm.$t(\"gridTrade.setText10\")))\n                            ]),\n                            _c(\"grid-trade-input\", {\n                              attrs: {\n                                name: \"gridSetAccount\",\n                                fixValue: _vm.fixValue.priceFix,\n                                datas: _vm.gridSetAccount\n                              },\n                              on: { onChanes: _vm.onChaneForm },\n                              model: {\n                                value: _vm.gridSetAccount.value,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.gridSetAccount, \"value\", $$v)\n                                },\n                                expression: \"gridSetAccount.value\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"div\",\n                          { staticClass: \"setn-num-list\" },\n                          [\n                            _c(\"p\", [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"gridTrade.setText12\")) +\n                                  \"(\" +\n                                  _vm._s(_vm.$t(\"gridTrade.optional\")) +\n                                  \")\"\n                              )\n                            ]),\n                            _c(\"grid-trade-input\", {\n                              attrs: {\n                                name: \"gridSetMinBalance\",\n                                fixValue: _vm.fixValue.priceFix,\n                                datas: _vm.gridSetMinBalance\n                              },\n                              on: { onChanes: _vm.onChaneForm },\n                              model: {\n                                value: _vm.gridSetMinBalance.value,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.gridSetMinBalance, \"value\", $$v)\n                                },\n                                expression: \"gridSetMinBalance.value\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"div\",\n                          { staticClass: \"setn-num-list\" },\n                          [\n                            _c(\"p\", [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"gridTrade.setText11\")) +\n                                  \"(\" +\n                                  _vm._s(_vm.$t(\"gridTrade.optional\")) +\n                                  \")\"\n                              )\n                            ]),\n                            _c(\"grid-trade-input\", {\n                              attrs: {\n                                name: \"gridSetMaxBalance\",\n                                fixValue: _vm.fixValue.priceFix,\n                                datas: _vm.gridSetMaxBalance\n                              },\n                              on: { onChanes: _vm.onChaneForm },\n                              model: {\n                                value: _vm.gridSetMaxBalance.value,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.gridSetMaxBalance, \"value\", $$v)\n                                },\n                                expression: \"gridSetMaxBalance.value\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"set-btc\" }, [\n                        _c(\"span\", [\n                          _vm._v(\n                            \"\\n                \" +\n                              _vm._s(_vm.$t(\"gridTrade.setText13\")) +\n                              \" \" +\n                              _vm._s(\n                                _vm._f(\"getCoinShowName\")(\n                                  _vm.symbolUnit.symbol,\n                                  _vm.coinList\n                                )\n                              ) +\n                              \"\\n              \"\n                          )\n                        ]),\n                        _c(\n                          \"div\",\n                          { staticClass: \"switch-inline\" },\n                          [\n                            _c(\"c-switch\", {\n                              attrs: { value: _vm.gridSetFormFlag },\n                              on: {\n                                click: function() {\n                                  return (this$1.gridSetFormFlag = !this$1.gridSetFormFlag)\n                                }\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\n                        \"c-button\",\n                        {\n                          attrs: { height: \"35px\", width: \"100%\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.gradSub(\"gradTrad\")\n                            }\n                          }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(_vm.gridbuttosContent.gridButton.text) +\n                              \"\\n          \"\n                          )\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                ])\n              : _vm._e(),\n            _vm.gridType === 2\n              ? _c(\"div\", { staticClass: \"trade-block trade_block_width\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-block\" },\n                    [\n                      _c(\"p\", { staticClass: \"fee_love\" }, [\n                        _c(\"span\", [\n                          _vm._v(\n                            \"\\n              \" +\n                              _vm._s(_vm.$t(\"gridTrade.setText2\")) +\n                              \":\\n            \"\n                          )\n                        ]),\n                        _c(\"b\"),\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _c(\"b\", [\n                            _vm._v(\n                              \"\\n                \" +\n                                _vm._s(_vm.$t(\"gridTrade.aiText1\")) +\n                                \"\\n              \"\n                            )\n                          ]),\n                          _vm._v(\"\\n                \\n              \"),\n                          _c(\"span\", { staticClass: \"u-1-cl\" }, [\n                            _vm._v(\n                              \"\\n                \" +\n                                _vm._s(_vm.sevenDay) +\n                                \" %\\n              \"\n                            )\n                          ])\n                        ])\n                      ]),\n                      _c(\"div\", { staticClass: \"input-inline-box clearfix\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"input-inline-item\" },\n                          [\n                            _c(\"grid-trade-input\", {\n                              attrs: {\n                                name: \"gridAiBlance\",\n                                fixValue: _vm.fixValue.priceFix,\n                                placeholder: _vm.$t(\"gridTrade.setText2\"),\n                                datas: _vm.gridAiBlance\n                              },\n                              on: { onChanes: _vm.onChaneForm },\n                              model: {\n                                value: _vm.gridAiBlance.value,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.gridAiBlance, \"value\", $$v)\n                                },\n                                expression: \"gridAiBlance.value\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\"p\", [\n                        _vm._v(_vm._s(_vm.$t(\"gridTrade.setText5\")) + \": \")\n                      ]),\n                      _c(\"div\", { staticClass: \"input-inline-box clearfix\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"input-inline-item\" },\n                          [\n                            _c(\"grid-trade-input\", {\n                              attrs: {\n                                name: \"gridAiNum\",\n                                fixValue: _vm.fixValue.priceFix,\n                                placeholder: _vm.$t(\"gridTrade.setText5\"),\n                                datas: _vm.gridAiNum\n                              },\n                              on: { onChanes: _vm.onChaneForm },\n                              model: {\n                                value: _vm.gridAiNum.value,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.gridAiNum, \"value\", $$v)\n                                },\n                                expression: \"gridAiNum.value\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\"p\", [\n                        _vm._v(\n                          _vm._s(_vm.$t(\"gridTrade.setText8\")) +\n                            \"\\n            \" +\n                            _vm._s(_vm.gridAiMin) +\n                            \"%～\" +\n                            _vm._s(_vm.gridAiMax) +\n                            \"%(\" +\n                            _vm._s(_vm.$t(\"gridTrade.setText9\")) +\n                            \")\"\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"set-num clearfix\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"setn-num-list\" },\n                          [\n                            _c(\"p\", [\n                              _vm._v(_vm._s(_vm.$t(\"gridTrade.setText10\")))\n                            ]),\n                            _c(\"grid-trade-input\", {\n                              attrs: {\n                                name: \"gridAiAccount\",\n                                fixValue: _vm.fixValue.priceFix,\n                                datas: _vm.gridAiAccount\n                              },\n                              on: { onChanes: _vm.onChaneForm },\n                              model: {\n                                value: _vm.gridAiAccount.value,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.gridAiAccount, \"value\", $$v)\n                                },\n                                expression: \"gridAiAccount.value\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"div\",\n                          { staticClass: \"setn-num-list\" },\n                          [\n                            _c(\"p\", [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"gridTrade.setText12\")) +\n                                  \"(\" +\n                                  _vm._s(_vm.$t(\"gridTrade.optional\")) +\n                                  \")\"\n                              )\n                            ]),\n                            _c(\"grid-trade-input\", {\n                              attrs: {\n                                name: \"gridAiMinBalance\",\n                                fixValue: _vm.fixValue.priceFix,\n                                datas: _vm.gridAiMinBalance\n                              },\n                              on: { onChanes: _vm.onChaneForm },\n                              model: {\n                                value: _vm.gridAiMinBalance.value,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.gridAiMinBalance, \"value\", $$v)\n                                },\n                                expression: \"gridAiMinBalance.value\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"div\",\n                          { staticClass: \"setn-num-list\" },\n                          [\n                            _c(\"p\", [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"gridTrade.setText11\")) +\n                                  \"(\" +\n                                  _vm._s(_vm.$t(\"gridTrade.optional\")) +\n                                  \")\"\n                              )\n                            ]),\n                            _c(\"grid-trade-input\", {\n                              attrs: {\n                                name: \"gridAiMaxBalance\",\n                                fixValue: _vm.fixValue.priceFix,\n                                datas: _vm.gridAiMaxBalance\n                              },\n                              on: { onChanes: _vm.onChaneForm },\n                              model: {\n                                value: _vm.gridAiMaxBalance.value,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.gridAiMaxBalance, \"value\", $$v)\n                                },\n                                expression: \"gridAiMaxBalance.value\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"set-btc\" }, [\n                        _c(\"span\", [\n                          _vm._v(\n                            \"\\n               \" +\n                              _vm._s(_vm.$t(\"gridTrade.setText13\")) +\n                              \" \" +\n                              _vm._s(\n                                _vm._f(\"getCoinShowName\")(\n                                  _vm.symbolUnit.symbol,\n                                  _vm.coinList\n                                )\n                              ) +\n                              \"\\n              \"\n                          )\n                        ]),\n                        _c(\n                          \"div\",\n                          { staticClass: \"switch-inline\" },\n                          [\n                            _c(\"c-switch\", {\n                              attrs: { value: _vm.gridAiFormFlag },\n                              on: {\n                                click: function() {\n                                  return (this$1.gridAiFormFlag = !this$1.gridAiFormFlag)\n                                }\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\n                        \"c-button\",\n                        {\n                          attrs: { height: \"35px\", width: \"100%\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.gradSub(\"GridAi\")\n                            }\n                          }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(_vm.gridbuttosContent.gridAiButton.text) +\n                              \"\\n          \"\n                          )\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                ])\n              : _vm._e()\n          ]),\n      _c(\n        \"c-alert\",\n        {\n          attrs: {\n            showFlag: _vm.notAuthShowDialog,\n            buttonText: _vm.$t(\"otcRelease.DeCertification\"),\n            imgMap: _vm.imgMap\n          },\n          on: { close: _vm.dialogClose, confirm: _vm.gotoAuth }\n        },\n        [\n          _c(\"div\", { staticClass: \"ts-content-text\" }, [\n            _vm.tsTexttype === 1\n              ? _c(\"span\", [\n                  _vm._v(_vm._s(_vm.$t(\"personal.exccAuthForm.text18\")))\n                ])\n              : _c(\"span\", [\n                  _vm._v(_vm._s(_vm.$t(\"personal.exccAuthForm.text19\")))\n                ])\n          ])\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}