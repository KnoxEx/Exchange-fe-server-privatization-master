{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/BlockChain-ui/PC/components/calendar/Calendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/components/calendar/Calendar.vue","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport timeUtil from './calendar';\n\nexport default {\n  data() {\n    return {\n      myDate: [],\n      list: [],\n      historyChose: [],\n      dateTop: '',\n    };\n  },\n  props: {\n    markDate: {\n      type: Array,\n      default: () => [],\n    },\n    markDateMore: {\n      type: Array,\n      default: () => [],\n    },\n    textTop: {\n      type: Array,\n      default: () => ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    },\n    sundayStart: {\n      type: Boolean,\n      default: () => false,\n    },\n    agoDayHide: { type: String, default: '0' },\n    futureDayHide: { type: String, default: '2554387200' },\n    defaultDate: { type: String, default: '0' },\n    defaultShowDate: {\n      type: Number,\n    },\n  },\n  created() {\n    this.intStart();\n    if (this.defaultShowDate) {\n      this.myDate = new Date(this.defaultShowDate);\n    } else {\n      this.myDate = new Date();\n    }\n  },\n  methods: {\n    intStart() {\n      timeUtil.sundayStart = this.sundayStart;\n    },\n    setClass(data) {\n      const obj = {};\n      obj[data.markClassName] = data.markClassName;\n      return obj;\n    },\n    clickDay(item) {\n      if (item.otherMonth === 'nowMonth' && !item.dayHide) {\n        this.getList(this.myDate, item.date);\n      }\n      if (item.otherMonth !== 'nowMonth') {\n        if (item.otherMonth === 'preMonth') {\n          this.PreMonth(item.date);\n        } else {\n          this.NextMonth(item.date);\n        }\n      }\n    },\n    ChoseMonth(date, isChosedDay = true) {\n      const ndate = timeUtil.dateFormat(date);\n      this.myDate = new Date(ndate);\n      this.$emit('changeMonth', timeUtil.dateFormat(this.myDate));\n      if (isChosedDay) {\n        this.getList(this.myDate, date, isChosedDay);\n      } else {\n        this.getList(this.myDate);\n      }\n    },\n    PreMonth(date, isChosedDay = true) {\n      const ndate = timeUtil.dateFormat(date);\n      this.myDate = timeUtil.getOtherMonth(this.myDate, 'preMonth');\n      this.$emit('changeMonth', timeUtil.dateFormat(this.myDate));\n      if (isChosedDay) {\n        this.getList(this.myDate, ndate, isChosedDay);\n      } else {\n        this.getList(this.myDate);\n      }\n    },\n    NextMonth(date, isChosedDay = true) {\n      const ndate = timeUtil.dateFormat(date);\n      this.myDate = timeUtil.getOtherMonth(this.myDate, 'nextMonth');\n      this.$emit('changeMonth', timeUtil.dateFormat(this.myDate));\n      if (isChosedDay) {\n        this.getList(this.myDate, ndate, isChosedDay);\n      } else {\n        this.getList(this.myDate);\n      }\n    },\n    forMatArgs() {\n      let NmarkDate = this.markDate;\n      let NmarkDateMore = this.markDateMore;\n      NmarkDate = NmarkDate.map((k) => timeUtil.dateFormat(k));\n      NmarkDateMore = NmarkDateMore.map((k) => {\n        const obj = {};\n        obj.date = timeUtil.dateFormat(k.date);\n        return obj;\n      });\n      return [NmarkDate, NmarkDateMore];\n    },\n    getList(date, chooseDay) {\n      const [markDate, markDateMore] = this.forMatArgs();\n      this.dateTop = `\n        ${date.getFullYear()}\n        ${this.$t('common.year')}\n        ${date.getMonth() + 1}\n        ${this.$t('common.mouth')}`;\n      const arr = timeUtil.getMonthList(this.myDate);\n      for (let i = 0; i < arr.length; i += 1) {\n        let markClassName = '';\n        const k = arr[i];\n        k.chooseDay = false;\n        const nowTime = k.date;\n        const t = new Date(nowTime).getTime() / 1000;\n        // 看每一天的class\n        markDateMore.forEach((c) => {\n          if (c.date === nowTime) {\n            markClassName = c.className || '';\n          }\n        });\n        // 标记选中某些天 设置class\n        k.markClassName = markClassName;\n        k.isMark = markDate.indexOf(nowTime) > -1;\n        // 无法选中某天\n        k.dayHide = t < this.agoDayHide || t > this.futureDayHide;\n        if (k.isToday) {\n          this.$emit('isToday', nowTime);\n        }\n        const flag = !k.dayHide && k.otherMonth === 'nowMonth';\n\n        if (chooseDay && chooseDay === nowTime && flag) {\n          this.$emit('choseDay', nowTime);\n          this.historyChose.push(nowTime);\n          k.chooseDay = true;\n        } else if (\n          this.historyChose[this.historyChose.length - 1] === nowTime\n          && !chooseDay\n          && flag\n        ) {\n          k.chooseDay = true;\n        }\n      }\n      this.list = arr;\n    },\n  },\n  mounted() {\n    // 为了能让日历默认选择一个 新增defaultDate字段\n    this.getList(this.myDate, this.defaultDate.replace(/-/g, '/'));\n  },\n  watch: {\n    defaultShowDate(val) {\n      if (val) {\n        this.myDate = new Date(this.defaultShowDate);\n        this.getList(this.myDate, this.defaultDate.replace(/-/g, '/'));\n      }\n    },\n    markDate: {\n      handler() {\n        this.getList(this.myDate);\n      },\n      deep: true,\n    },\n    markDateMore: {\n      handler() {\n        this.getList(this.myDate);\n      },\n      deep: true,\n    },\n    agoDayHide: {\n      handler() {\n        this.getList(this.myDate);\n      },\n      deep: true,\n    },\n    futureDayHide: {\n      handler() {\n        this.getList(this.myDate);\n      },\n      deep: true,\n    },\n    sundayStart: {\n      handler() {\n        this.intStart();\n        this.getList(this.myDate);\n      },\n      deep: true,\n    },\n  },\n};\n",{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Calendar.vue","sourceRoot":"../BlockChain-ui/PC/components/calendar","sourcesContent":["<template>\n  <section class=\"wh_container\">\n    <div class=\"wh_content_all\">\n      <div class=\"wh_top_changge\">\n        <li @click=\"PreMonth(myDate,false)\">\n          <div class=\"wh_jiantou1\"></div>\n        </li>\n        <li class=\"wh_content_li e-2-cl\">{{dateTop}}</li>\n        <li @click=\"NextMonth(myDate,false)\">\n          <div class=\"wh_jiantou2\"></div>\n        </li>\n      </div>\n      <div class=\"wh_content\">\n        <div\n          class=\"wh_content_item\"\n          v-for=\"(tag, index) in textTop\"\n          :key=\"index + 'tag'\">\n          <div class=\"wh_top_tag\">{{tag}}</div>\n        </div>\n      </div>\n      <div class=\"wh_content\">\n        <div class=\"wh_content_item\"\n          v-for=\"(item,index) in list\"\n          :key=\"index\"\n          @click=\"clickDay(item,index)\">\n          <div\n            class=\"wh_item_date c-8-cl-h\"\n            v-bind:class=\"[{ wh_isMark: item.isMark},\n            {'hide':item.otherMonth!=='nowMonth'},\n            {wh_want_dayhide:item.dayHide},\n            {wh_isToday:item.isToday},\n            {'c-8-bg':item.chooseDay},\n            setClass(item)]\"\n          >{{item.id}}</div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n<script>\n\nimport timeUtil from './calendar';\n\nexport default {\n  data() {\n    return {\n      myDate: [],\n      list: [],\n      historyChose: [],\n      dateTop: '',\n    };\n  },\n  props: {\n    markDate: {\n      type: Array,\n      default: () => [],\n    },\n    markDateMore: {\n      type: Array,\n      default: () => [],\n    },\n    textTop: {\n      type: Array,\n      default: () => ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    },\n    sundayStart: {\n      type: Boolean,\n      default: () => false,\n    },\n    agoDayHide: { type: String, default: '0' },\n    futureDayHide: { type: String, default: '2554387200' },\n    defaultDate: { type: String, default: '0' },\n    defaultShowDate: {\n      type: Number,\n    },\n  },\n  created() {\n    this.intStart();\n    if (this.defaultShowDate) {\n      this.myDate = new Date(this.defaultShowDate);\n    } else {\n      this.myDate = new Date();\n    }\n  },\n  methods: {\n    intStart() {\n      timeUtil.sundayStart = this.sundayStart;\n    },\n    setClass(data) {\n      const obj = {};\n      obj[data.markClassName] = data.markClassName;\n      return obj;\n    },\n    clickDay(item) {\n      if (item.otherMonth === 'nowMonth' && !item.dayHide) {\n        this.getList(this.myDate, item.date);\n      }\n      if (item.otherMonth !== 'nowMonth') {\n        if (item.otherMonth === 'preMonth') {\n          this.PreMonth(item.date);\n        } else {\n          this.NextMonth(item.date);\n        }\n      }\n    },\n    ChoseMonth(date, isChosedDay = true) {\n      const ndate = timeUtil.dateFormat(date);\n      this.myDate = new Date(ndate);\n      this.$emit('changeMonth', timeUtil.dateFormat(this.myDate));\n      if (isChosedDay) {\n        this.getList(this.myDate, date, isChosedDay);\n      } else {\n        this.getList(this.myDate);\n      }\n    },\n    PreMonth(date, isChosedDay = true) {\n      const ndate = timeUtil.dateFormat(date);\n      this.myDate = timeUtil.getOtherMonth(this.myDate, 'preMonth');\n      this.$emit('changeMonth', timeUtil.dateFormat(this.myDate));\n      if (isChosedDay) {\n        this.getList(this.myDate, ndate, isChosedDay);\n      } else {\n        this.getList(this.myDate);\n      }\n    },\n    NextMonth(date, isChosedDay = true) {\n      const ndate = timeUtil.dateFormat(date);\n      this.myDate = timeUtil.getOtherMonth(this.myDate, 'nextMonth');\n      this.$emit('changeMonth', timeUtil.dateFormat(this.myDate));\n      if (isChosedDay) {\n        this.getList(this.myDate, ndate, isChosedDay);\n      } else {\n        this.getList(this.myDate);\n      }\n    },\n    forMatArgs() {\n      let NmarkDate = this.markDate;\n      let NmarkDateMore = this.markDateMore;\n      NmarkDate = NmarkDate.map((k) => timeUtil.dateFormat(k));\n      NmarkDateMore = NmarkDateMore.map((k) => {\n        const obj = {};\n        obj.date = timeUtil.dateFormat(k.date);\n        return obj;\n      });\n      return [NmarkDate, NmarkDateMore];\n    },\n    getList(date, chooseDay) {\n      const [markDate, markDateMore] = this.forMatArgs();\n      this.dateTop = `\n        ${date.getFullYear()}\n        ${this.$t('common.year')}\n        ${date.getMonth() + 1}\n        ${this.$t('common.mouth')}`;\n      const arr = timeUtil.getMonthList(this.myDate);\n      for (let i = 0; i < arr.length; i += 1) {\n        let markClassName = '';\n        const k = arr[i];\n        k.chooseDay = false;\n        const nowTime = k.date;\n        const t = new Date(nowTime).getTime() / 1000;\n        // 看每一天的class\n        markDateMore.forEach((c) => {\n          if (c.date === nowTime) {\n            markClassName = c.className || '';\n          }\n        });\n        // 标记选中某些天 设置class\n        k.markClassName = markClassName;\n        k.isMark = markDate.indexOf(nowTime) > -1;\n        // 无法选中某天\n        k.dayHide = t < this.agoDayHide || t > this.futureDayHide;\n        if (k.isToday) {\n          this.$emit('isToday', nowTime);\n        }\n        const flag = !k.dayHide && k.otherMonth === 'nowMonth';\n\n        if (chooseDay && chooseDay === nowTime && flag) {\n          this.$emit('choseDay', nowTime);\n          this.historyChose.push(nowTime);\n          k.chooseDay = true;\n        } else if (\n          this.historyChose[this.historyChose.length - 1] === nowTime\n          && !chooseDay\n          && flag\n        ) {\n          k.chooseDay = true;\n        }\n      }\n      this.list = arr;\n    },\n  },\n  mounted() {\n    // 为了能让日历默认选择一个 新增defaultDate字段\n    this.getList(this.myDate, this.defaultDate.replace(/-/g, '/'));\n  },\n  watch: {\n    defaultShowDate(val) {\n      if (val) {\n        this.myDate = new Date(this.defaultShowDate);\n        this.getList(this.myDate, this.defaultDate.replace(/-/g, '/'));\n      }\n    },\n    markDate: {\n      handler() {\n        this.getList(this.myDate);\n      },\n      deep: true,\n    },\n    markDateMore: {\n      handler() {\n        this.getList(this.myDate);\n      },\n      deep: true,\n    },\n    agoDayHide: {\n      handler() {\n        this.getList(this.myDate);\n      },\n      deep: true,\n    },\n    futureDayHide: {\n      handler() {\n        this.getList(this.myDate);\n      },\n      deep: true,\n    },\n    sundayStart: {\n      handler() {\n        this.intStart();\n        this.getList(this.myDate);\n      },\n      deep: true,\n    },\n  },\n};\n</script>\n<style scoped>\n@media screen and (min-width: 460px) {\n  .wh_item_date:hover {\n    cursor: pointer;\n  }\n}\n\n\n.wh_container {\n  width: 100%;\n  margin: auto;\n}\n.wh_top_changge {\n  display: flex;\n  margin-bottom: 30px;\n}\n.wh_top_changge li {\n  cursor: pointer;\n  display: flex;\n  font-size: 12px;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  height: 18px;\n  padding-top: 4px;\n}\n\n.wh_top_changge .wh_content_li {\n  cursor: auto;\n  flex: 7.6;\n  font-size: 14px;\n}\n.wh_content_all {\n  width: 100%;\n  overflow: hidden;\n  padding-bottom: 8px;\n}\n\n.wh_content {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0 3% 0 3%;\n  margin: 0 auto;\n  width: 260px;\n}\n\n.wh_content:first-child .wh_content_item_tag,\n.wh_content:first-child .wh_content_item {\n  font-size: 12px;\n}\n\n.wh_content_item,\n.wh_content_item_tag {\n  font-size: 12px;\n  width: 13.4%;\n  text-align: center;\n  position: relative;\n}\n.wh_content_item {\n  height: 36px;\n}\n\n.wh_top_tag {\n  width: 36px;\n  height: 36px;\n  line-height: 36px;\n  margin: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.wh_item_date {\n  width: 36px;\n  height: 36px;\n  line-height: 36px;\n  margin: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100%;\n\n}\n\n.wh_jiantou1 {\n  width: 6px;\n  height: 6px;\n  cursor: pointer;\n  border-top: 2px solid #828EA1;\n  border-left: 2px solid #828EA1;\n  transform: rotate(-45deg);\n}\n.wh_jiantou2 {\n  width: 6px;\n  height: 6px;\n  cursor: pointer;\n  border-top: 2px solid #828EA1;\n  border-right: 2px solid #828EA1;\n  transform: rotate(45deg);\n}\n.wh_content_item > .wh_isMark {\n  margin: auto;\n  border-radius: 100px;\n  background: blue;\n  z-index: 2;\n}\n.hide {\n  display: none;\n}\n</style>\n"]}]}