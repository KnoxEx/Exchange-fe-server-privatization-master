{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/depositMode/depositMode.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/depositMode/depositMode.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\n// 保证金模式弹框 全仓/逐仓切换\nexport default {\n  name: 'depositMode',\n  data: function data() {\n    return {\n      marginModel: 1,\n      // 是否加载成功\n      dialogConfirmLoading: false,\n      // 是否禁止提交\n      dialogConfirmDisabled: false\n    };\n  },\n  props: {\n    isShow: {\n      default: false,\n      type: Boolean\n    },\n    close: {\n      default: function _default() {},\n      type: Function\n    }\n  },\n  computed: {\n    lanText: function lanText() {\n      return {\n        // 全仓保证金模式: 所有仓位共用合约账户中的保证金来避免仓位被强平。在强平事件中，交易者可能会损失所有的保证金和仓位。\n        text1: this.$t('futures.depositMode.text1'),\n        // 逐仓保证金模式: 一定数量保证金被分配到仓位上。如果仓位保证金亏损到低于维持保证金的水平，仓位将被强平。在逐仓模式下，您可以为这个仓位添加和减少保证金。\n        text2: this.$t('futures.depositMode.text2'),\n        text3: this.$t('futures.depositMode.text3'),\n        // 设置为全仓模式\n        text4: this.$t('futures.depositMode.text4'),\n        // 设置为逐仓模式\n        text5: this.$t('futures.depositMode.text5'),\n        // 请登录后再进行操作\n        text6: this.$t('futures.depositMode.text6'),\n        // 已是全仓模式\n        text7: this.$t('futures.depositMode.text7'),\n        // 已是逐仓模式\n        text8: this.$t('futures.depositMode.text8'),\n        // 持有仓位/有挂单时不可改变保证金模式\n        text9: this.$t('futures.depositMode.text9'),\n        // 全仓\n        text10: this.$t('futures.depositMode.text10'),\n        // 逐仓\n        text12: this.$t('futures.depositMode.text12') // 保证金模式\n\n      };\n    },\n    // 提交保证金按钮文案\n    confirmText: function confirmText() {\n      // '设置为全仓模式' : '设置为逐仓模式'\n      var text = this.marginModel === 1 ? this.lanText.text3 : this.lanText.text4;\n\n      if (!this.isLogin) {\n        return this.lanText.text5; // '请登录后再进行操作';\n      }\n\n      if (this.userConfig && this.marginModel === this.userConfig.marginModel) {\n        // '已是全仓模式' : '已是逐仓模式';\n        text = this.marginModel === 1 ? this.lanText.text6 : this.lanText.text7;\n        this.dialogConfirmDisabled = true;\n      }\n\n      if (this.userConfig && this.marginModel !== this.userConfig.marginModel) {\n        this.dialogConfirmDisabled = false;\n      }\n\n      if (this.userConfig && !this.userConfig.marginModelCanSwitch) {\n        text = this.lanText.text8; // '持有仓位/有挂单时不可改变保证金模式';\n\n        this.dialogConfirmDisabled = true;\n      }\n\n      if (!this.userConfig) {\n        this.dialogConfirmDisabled = true;\n      }\n\n      return text;\n    },\n    // 保证金模式列表\n    categoryList: function categoryList() {\n      return [{\n        id: 1,\n        text: this.lanText.text9,\n        // '全仓',\n        classes: this.marginModel === 1 ? 'u-8-bg' : 'a-3-bg'\n      }, {\n        id: 2,\n        text: this.lanText.text10,\n        // '逐仓',\n        classes: this.marginModel === 2 ? 'u-8-bg' : 'a-3-bg'\n      }];\n    },\n    // 是否Login\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    // 用户配置信息\n    userConfig: function userConfig() {\n      return this.$store.state.future.futureUserConfig;\n    },\n    // 当前合约ID\n    contractId: function contractId() {\n      return this.$store.state.future.contractId;\n    },\n    // 当前合约信息\n    contractInfo: function contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 当前合约名称\n    activeContractName: function activeContractName() {\n      var name = '';\n      var text = '';\n\n      if (this.contractInfo) {\n        var nameText = this.contractInfo.symbol ? this.contractInfo.symbol.replace('-', '') : '';\n\n        if (this.contractInfo.contractType !== 'E') {\n          text = \"-\".concat(this.contractInfo.marginCoin);\n        }\n\n        name = \"\".concat(nameText).concat(text);\n      }\n\n      return name;\n    },\n    // 弹窗标题\n    titleText: function titleText() {\n      return \"\".concat(this.activeContractName).concat(this.lanText.text12); // 保证金模式\n    }\n  },\n  methods: {\n    init: function init() {\n      if (this.userConfig) {\n        if (this.userConfig.marginModelCanSwitch) {\n          this.marginModel = this.userConfig.marginModel === 1 ? 2 : 1;\n        } else {\n          this.marginModel = this.userConfig.marginModel;\n        }\n      }\n    },\n    // 切换保证金模式\n    selectCategory: function selectCategory(id) {\n      this.marginModel = id;\n    },\n    // 提交保证金模式\n    submit: function submit() {\n      var _this = this;\n\n      if (!this.isLogin) {\n        this.$router.push('/login');\n        return false;\n      }\n\n      if (this.userConfig) {\n        this.dialogConfirmLoading = true;\n        this.axios({\n          url: this.$store.state.url.futures.marginModelEdit,\n          hostType: 'co',\n          method: 'post',\n          params: {\n            marginModel: this.marginModel,\n            contractId: this.contractId\n          }\n        }).then(function (_ref) {\n          var code = _ref.code,\n              msg = _ref.msg;\n\n          if (code.toString() === '0') {\n            _this.$store.dispatch('getUserConfig');\n\n            _this.close();\n\n            _this.$bus.$emit('tip', {\n              text: msg,\n              type: 'success'\n            });\n          } else {\n            _this.$bus.$emit('tip', {\n              text: msg,\n              type: 'error'\n            });\n          }\n\n          _this.dialogConfirmLoading = false;\n        });\n      }\n\n      return false;\n    }\n  }\n};",null]}