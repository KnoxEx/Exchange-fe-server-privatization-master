{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/assets/addressMent/addressMent.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/assets/addressMent/addressMent.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport { getCoinShowName, colorMap, imgMap } from '@/utils';\nexport default {\n  name: 'page-addressMent',\n  data: function data() {\n    return {\n      tabelLoading: true,\n      imgMap: imgMap,\n      colorMap: colorMap,\n      alertFlag: false,\n      selectList: [],\n      remarksisRequire: false,\n      symbolValue: '',\n      // 添加地址 -- 币种\n      addressValue: '',\n      // 添加地址 -- 地址\n      remarksValue: '',\n      // 添加地址 -- 备注\n      pagesValue: '',\n      // 添加地址 -- 标签\n      googleValue: '',\n      // 添加地址 -- 谷歌验证码\n      phoneValue: '',\n      // 添加地址 -- 手机验证码\n      havePageArr: ['XRP', 'EOS'],\n      // 含有标签的币种\n      dialogFlag: false,\n      // 验证框flag\n      dialogConfirmLoading: false,\n      // 弹窗按钮确认loading状态\n      tableList: [],\n      dialogStatus: '',\n      // 弹窗状态 add 为增加 del 为删除\n      deleteObj: {},\n      // 删除的地址 对象\n      paginationObj: {\n        total: 0,\n        // 数据总条数\n        display: 10,\n        // 每页显示条数\n        currentPage: 1 // 当前页码\n\n      },\n      branchTip: ''\n    };\n  },\n  computed: {\n    symbol: function symbol() {\n      return this.symbolValue;\n    },\n    enforceGoogleAuth: function enforceGoogleAuth() {\n      return this.$store.state.baseData.is_enforce_google_auth || 0;\n    },\n    authTitleText: function authTitleText() {\n      var text = this.enforceGoogleAuth ? 'assets.withdraw.enforceGoogleAuth' : 'assets.withdraw.safetyWarningError';\n      return this.$t(text);\n    },\n    alertData: function alertData() {\n      var arr = [// 绑定谷歌验证\n      {\n        text: this.$t('assets.withdraw.bindGoogle'),\n        flag: this.OpenGoogle\n      }];\n\n      if (!this.enforceGoogleAuth) {\n        // 绑定手机验证\n        arr.push({\n          text: this.$t('assets.withdraw.bindPhone'),\n          flag: this.OpenMobile\n        });\n      }\n\n      return arr;\n    },\n    // finance/account_balance 接口返回成功的数据\n    exchangeData: function exchangeData() {\n      return this.$store.state.assets.exchangeData;\n    },\n    // market 接口\n    market: function market() {\n      return this.$store.state.baseData.market;\n    },\n    // userInfo是否请求完毕\n    userInfoIsReady: function userInfoIsReady() {\n      return this.$store.state.baseData.userInfoIsReady;\n    },\n    // 表格title\n    columns: function columns() {\n      return [{\n        title: this.$t('assets.addressMent.listCoin'),\n        width: '20%'\n      }, // 币种\n      {\n        title: this.$t('assets.addressMent.listAddress'),\n        width: '47%',\n        align: 'left',\n        styleClass: 'add-text clearfix'\n      }, // 地址\n      {\n        title: this.$t('assets.addressMent.listRemarks'),\n        width: '20%'\n      }, // 备注\n      {\n        title: this.$t('assets.addressMent.listOptions'),\n        width: '20%'\n      } // 操作\n      ];\n    },\n    // 用户是否开启手机\n    OpenMobile: function OpenMobile() {\n      var flag = false;\n      var userInfo = this.$store.state.baseData.userInfo;\n\n      if (userInfo && userInfo.isOpenMobileCheck.toString() === '1') {\n        flag = true;\n      }\n\n      return flag;\n    },\n    // 用户是否开启谷歌\n    OpenGoogle: function OpenGoogle() {\n      var flag = false;\n      var userInfo = this.$store.state.baseData.userInfo;\n\n      if (userInfo && userInfo.googleStatus.toString() === '1') {\n        flag = true;\n      }\n\n      return flag;\n    },\n    // 该币种是否有标签\n    isHavePage: function isHavePage() {\n      var flag = false; // 判断market是否请求下来\n\n      if (this.market && this.market.coinList) {\n        if (!this.haveBranch) {\n          // 判断market.coinList是否有当前币种\n          if (this.market.coinList[this.symbolValue]) {\n            var tagType = this.market.coinList[this.symbolValue].tagType;\n            flag = tagType;\n          }\n        } else if (this.market.followCoinList[this.symbolValue][this.activeBranch]) {\n          var _tagType = this.market.followCoinList[this.symbolValue][this.activeBranch].tagType;\n          flag = _tagType;\n        }\n      }\n\n      return flag;\n    },\n    // 用于检测标签  如果该币种有标签则 非空才通过\n    pagesFlag: function pagesFlag() {\n      var flag = false; // 如果有值 算通过\n\n      /*    if (this.pagesValue.length) {\r\n        flag = true;\r\n      } */\n      // 如果没有标签 直接算通过\n\n      switch (Number(this.isHavePage)) {\n        case 1:\n          {\n            flag = true;\n            break;\n          }\n\n        case 2:\n          {\n            if (this.pagesValue.length) {\n              flag = true;\n            }\n\n            break;\n          }\n\n        default:\n          {\n            flag = true;\n          }\n      }\n\n      return flag;\n    },\n    // 添加按钮disabled\n    addressBtnDisabled: function addressBtnDisabled() {\n      if (!this.userInfoIsReady) {\n        return true;\n      }\n\n      var flag = true;\n\n      if (this.symbolValue.length && this.addressValue.length && this.remarksValue.length && this.pagesFlag) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    // phoneValue 是否复合正则验证\n    phoneValueFlag: function phoneValueFlag() {\n      return this.$store.state.regExp.verification.test(this.phoneValue);\n    },\n    // googleValue 是否复合正则验证\n    googleValueFlag: function googleValueFlag() {\n      return this.$store.state.regExp.verification.test(this.googleValue);\n    },\n    phoneError: function phoneError() {\n      if (this.phoneValue.length !== 0 && !this.phoneValueFlag) return true;\n      return false;\n    },\n    googleError: function googleError() {\n      if (this.googleValue.length !== 0 && !this.googleValueFlag) return true;\n      return false;\n    },\n    // 弹窗确认按钮disabled\n    dialogConfirmDisabled: function dialogConfirmDisabled() {\n      var phone = true;\n      var google = true;\n\n      if (this.OpenMobile) {\n        phone = this.phoneValueFlag;\n      }\n\n      if (this.OpenGoogle) {\n        google = this.googleValueFlag;\n      }\n\n      if (phone && google || this.dialogConfirmLoading) {\n        return false;\n      }\n\n      return true;\n    }\n  },\n  watch: {\n    market: function market(v) {\n      if (v && this.exchangeData) {\n        this.initSelectData();\n      }\n\n      if (v) {\n        this.getTableList();\n      }\n\n      if (v && this.symbol) {\n        this.branchInit(this.market);\n      }\n    },\n    symbol: function symbol(v) {\n      if (v && this.market) {\n        this.branchInit(this.market);\n      }\n    },\n    userInfoIsReady: function userInfoIsReady() {\n      this.canAlert();\n    },\n    exchangeData: function exchangeData(v) {\n      if (v && this.market) {\n        this.initSelectData();\n      }\n    },\n    // 添加地址切换币种时 清空地址/备注/标签\n    symbolValue: function symbolValue() {\n      this.addressValue = '';\n      this.remarksValue = '';\n      this.pagesValue = '';\n    },\n    activeBranch: function activeBranch(v) {\n      var _this = this;\n\n      if (v) {\n        this.axios({\n          url: 'cost/Getcost',\n          params: {\n            symbol: v\n          }\n        }).then(function (data) {\n          if (data.code.toString() === '0') {\n            _this.branchTip = data.data.mainChainNameTip;\n          }\n        });\n      }\n    }\n  },\n  methods: {\n    init: function init() {\n      // 如果没有 finance/account_balance 接口返回成功的数据\n      if (!this.exchangeData) {\n        this.$store.dispatch('assetsExchangeData');\n      } else if (this.market) {\n        this.initSelectData();\n      }\n\n      if (this.userInfoIsReady) {\n        this.canAlert();\n      }\n\n      if (this.market) {\n        this.getTableList();\n      }\n    },\n    canAlert: function canAlert() {\n      var _this2 = this;\n\n      if (this.OpenGoogle || !this.enforceGoogleAuth && this.OpenMobile) {\n        this.alertFlag = false;\n      } else {\n        setTimeout(function () {\n          _this2.alertFlag = true;\n        }, 100);\n      }\n    },\n    alertClone: function alertClone() {\n      this.alertFlag = false;\n    },\n    alertGo: function alertGo() {\n      this.$router.push('/personal/userManagement');\n    },\n    pagechange: function pagechange() {},\n    // 添加地址 -- input改变\n    inputLineChange: function inputLineChange(value, name) {\n      this[name] = value;\n    },\n    // 添加地址 -- select改变\n    selectLineChange: function selectLineChange(item) {\n      this.symbolValue = item.code;\n    },\n    setActiveBranch: function setActiveBranch(v) {\n      this.activeBranch = v.code;\n    },\n    // 添加地址 -- select数据\n    initSelectData: function initSelectData() {\n      var _this3 = this;\n\n      var list = [];\n      Object.keys(this.exchangeData.allCoinMap).forEach(function (item) {\n        if (_this3.exchangeData.allCoinMap[item].isFiat) {\n          return;\n        }\n\n        var coinList = _this3.market.coinList;\n        var showCoin = getCoinShowName(item, coinList);\n        list.push({\n          value: showCoin,\n          code: item\n        });\n      });\n      this.selectList = list;\n    },\n    addressBtnClick: function addressBtnClick() {\n      if (this.OpenGoogle || !this.enforceGoogleAuth && this.OpenMobile) {\n        this.dialogStatus = 'add';\n        this.dialogFlag = true;\n        return;\n      }\n\n      this.alertFlag = true;\n    },\n    // 弹框取消\n    dialogClose: function dialogClose() {\n      this.dialogFlag = false;\n      this.googleValue = '';\n      this.phoneValue = '';\n      this.dialogStatus = '';\n    },\n    // 弹框确认\n    dialogConfirm: function dialogConfirm() {\n      if (this.dialogStatus === 'add') {\n        this.addDialogConfirm();\n      } else if (this.dialogStatus === 'del') {\n        this.delDialogConfirm();\n      }\n    },\n    addDialogConfirm: function addDialogConfirm() {\n      var _this4 = this;\n\n      this.dialogConfirmLoading = true;\n      var address = this.addressValue;\n\n      if (this.isHavePage) {\n        address += \"_\".concat(this.pagesValue);\n      }\n\n      this.axios({\n        url: 'addr/add_withdraw_addr',\n        params: {\n          coinSymbol: this.haveBranch ? this.activeBranch : this.symbolValue,\n          // 币种\n          address: address,\n          // 地址\n          label: this.remarksValue,\n          // 备注\n          smsValidCode: this.phoneValue,\n          // 手机验证码\n          googleCode: this.googleValue // 谷歌验证码\n\n        }\n      }).then(function (data) {\n        _this4.dialogConfirmLoading = false;\n\n        if (data.code.toString() !== '0') {\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        } else {\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this4.getTableList();\n\n          _this4.dialogFlag = false;\n          _this4.addressValue = '';\n          _this4.remarksValue = '';\n          _this4.pagesValue = '';\n          _this4.googleValue = '';\n          _this4.phoneValue = '';\n          _this4.dialogStatus = '';\n        }\n      });\n    },\n    delDialogConfirm: function delDialogConfirm() {\n      var _this5 = this;\n\n      this.dialogConfirmLoading = true;\n      this.axios({\n        url: 'addr/delete_withdraw_addr',\n        params: {\n          ids: [this.deleteObj.id],\n          // 删除的id\n          smsValidCode: this.phoneValue,\n          // 手机验证码\n          googleCode: this.googleValue // 谷歌验证码\n\n        }\n      }).then(function (data) {\n        _this5.dialogConfirmLoading = false;\n\n        if (data.code.toString() !== '0') {\n          _this5.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        } else {\n          _this5.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this5.getTableList();\n\n          _this5.dialogFlag = false;\n          _this5.googleValue = '';\n          _this5.phoneValue = '';\n          _this5.dialogStatus = '';\n        }\n      });\n    },\n    // 获取验证码\n    getCodeClick: function getCodeClick() {\n      this.sendSmsCode();\n    },\n    // 发送验证码\n    sendSmsCode: function sendSmsCode() {\n      var _this6 = this;\n\n      var operationType = this.dialogStatus === 'add' ? '11' : '21';\n      this.axios({\n        url: 'v4/common/smsValidCode',\n        params: {\n          operationType: operationType\n        }\n      }).then(function (data) {\n        if (data.code.toString() !== '0') {\n          setTimeout(function () {\n            // 倒计时重置\n            _this6.$bus.$emit('getCode-clear', 'addressGetcode'); // tip框提示错误\n\n\n            _this6.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }, 2000);\n        } else {\n          // 短信已发送，请注意查收\n          _this6.$bus.$emit('tip', {\n            text: _this6.$t('assets.addressMent.phoneSendSuccess'),\n            type: 'success'\n          });\n        }\n      });\n    },\n    tableClick: function tableClick(type, id) {\n      if (type === 'deleteAddress') {\n        var even = {};\n        this.tableList.forEach(function (item) {\n          if (item.id === id) {\n            even = item;\n          }\n        });\n        this.deleteObj = even;\n        this.dialogStatus = 'del';\n        this.dialogFlag = true;\n      }\n    },\n    getTableList: function getTableList() {\n      var _this7 = this;\n\n      this.axios({\n        url: 'addr/address_list'\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          var list = [];\n          data.data.addressList.forEach(function (item) {\n            var coinList = _this7.market.coinList;\n            var showCoin = getCoinShowName(item.symbol, coinList);\n            list.push({\n              id: item.id,\n              data: [showCoin, [{\n                type: 'icon',\n                // 'link' ' button' ,'html', 'label', 'icon' ‘str’\n                iconSvg: \"<svg class=\\\"icon icon-14\\\" aria-hidden=\\\"true\\\">\\n                      <use xlink:href=\\\"#icon-a_16\\\"></use>\\n                    </svg>\\n                    \"\n              }, {\n                text: item.address\n              }], item.label, [{\n                type: 'button',\n                // 'link' ' button' ,'html', 'label', 'icon' ‘str’\n                text: _this7.$t('assets.addressMent.delete'),\n                // 删除\n                iconClass: [''],\n                eventType: 'deleteAddress'\n              }]]\n            });\n          });\n          _this7.tabelLoading = false;\n          _this7.tableList = list;\n        }\n      });\n    }\n  }\n};",null]}