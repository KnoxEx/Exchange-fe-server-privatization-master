{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/countryList/countryList.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/countryList/countryList.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { getCountryList } from '@/utils';\nexport default {\n  data: function data() {\n    return {\n      countryKeyCode: '',\n      country: '' // 所在地\n\n    };\n  },\n  watch: {\n    countryObj: {\n      handler: function handler() {\n        var v = this.defaultCountryCode;\n\n        if (v && this.countryKeyCode === '') {\n          this.countryKeyCode = v;\n        }\n\n        if (!this.defaultCountryCodeReal && !this.country && v && this.countryMap && this.countryMap[v]) {\n          this.country = this.countryMap[v].code;\n        }\n\n        if (this.defaultCountryCodeReal && this.country === '') {\n          this.country = this.defaultCountryCodeReal;\n        }\n      }\n    },\n    defaultCountryCodeReal: {\n      handler: function handler(v) {\n        if (v && this.country === '') {\n          this.country = v;\n        }\n      },\n      immediate: true\n    },\n    defaultCountryCode: {\n      handler: function handler(v) {\n        if (v && this.countryKeyCode === '') {\n          if (this.defaultCountryCodeReal) {\n            this.countryKeyCode = this.countryListKeyObj[this.defaultCountryCodeReal].keyCode;\n          } else {\n            this.countryKeyCode = v;\n          }\n        }\n\n        if (!this.defaultCountryCodeReal && !this.country && v && this.countryMap && this.countryMap[v]) {\n          this.country = this.countryMap[v].code;\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    countryListKeyObj: function countryListKeyObj() {\n      var list = {};\n      this.countryObj.list.forEach(function (item) {\n        list[item.code] = {\n          code: item.code,\n          keyCode: item.keyCode,\n          value: item.value.split(' ')[0]\n        };\n      });\n      return list;\n    },\n    // 国家渲染列表\n    countryList: function countryList() {\n      return this.countryObj.list;\n    },\n    registerCountryList: function registerCountryList() {\n      var countryList = this.filterCountryList(this.$t('phoneCode'));\n      return getCountryList(countryList).list;\n    },\n    countryListMoy: function countryListMoy() {\n      var arr = [];\n      this.countryObj.list.forEach(function (item) {\n        arr.push({\n          code: item.code,\n          keyCode: item.keyCode,\n          value: item.value.split(' +')[0]\n        });\n      });\n      return arr;\n    },\n    countryMap: function countryMap() {\n      return this.countryObj.countryMap;\n    },\n    countryRealMap: function countryRealMap() {\n      return this.countryObj.countryRealMap;\n    },\n    countryObj: function countryObj() {\n      return this.$store.state.baseData.countryObj;\n    },\n    // 默认区号\n    defaultCountryCode: function defaultCountryCode() {\n      return this.$store.state.baseData.defaultCountryCode;\n    },\n    defaultCountryCodeReal: function defaultCountryCodeReal() {\n      return this.$store.state.baseData.defaultCountryCodeReal;\n    },\n    limitCountryList: function limitCountryList() {\n      return this.$store.state.baseData.limitCountryList;\n    }\n  },\n  methods: {\n    // 国家列表change\n    countryChange: function countryChange(item) {\n      this.country = item.code;\n      this.countryKeyCode = item.keyCode;\n    },\n    filterCountryList: function filterCountryList(list) {\n      var countryList = list;\n      var limitCountryList = this.limitCountryList;\n\n      if (limitCountryList.length > 0) {\n        limitCountryList = limitCountryList.join('').split('+');\n        Object.keys(countryList).forEach(function (item) {\n          countryList[item] = countryList[item].filter(function (vitem) {\n            var valueArr = vitem.split('+');\n            return limitCountryList.indexOf(valueArr[2]) === -1;\n          });\n        });\n      }\n\n      return countryList;\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/countryList/countryList.js"],"names":["getCountryList","data","countryKeyCode","country","watch","countryObj","handler","v","defaultCountryCode","defaultCountryCodeReal","countryMap","code","immediate","countryListKeyObj","keyCode","computed","list","forEach","item","value","split","countryList","registerCountryList","filterCountryList","$t","countryListMoy","arr","push","countryRealMap","$store","state","baseData","limitCountryList","methods","countryChange","length","join","Object","keys","filter","vitem","valueArr","indexOf"],"mappings":"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","sourcesContent":["import { getCountryList } from '@/utils';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      countryKeyCode: '',\r\n      country: '', // 所在地\r\n    };\r\n  },\r\n  watch: {\r\n    countryObj: {\r\n      handler() {\r\n        const v = this.defaultCountryCode;\r\n        if (v && this.countryKeyCode === '') {\r\n          this.countryKeyCode = v;\r\n        }\r\n        if (\r\n          !this.defaultCountryCodeReal\r\n          && !this.country\r\n          && v\r\n          && this.countryMap\r\n          && this.countryMap[v]\r\n        ) {\r\n          this.country = this.countryMap[v].code;\r\n        }\r\n        if (this.defaultCountryCodeReal && this.country === '') {\r\n          this.country = this.defaultCountryCodeReal;\r\n        }\r\n      },\r\n    },\r\n    defaultCountryCodeReal: {\r\n      handler(v) {\r\n        if (v && this.country === '') {\r\n          this.country = v;\r\n        }\r\n      },\r\n      immediate: true,\r\n    },\r\n    defaultCountryCode: {\r\n      handler(v) {\r\n        if (v && this.countryKeyCode === '') {\r\n          if (this.defaultCountryCodeReal) {\r\n            this.countryKeyCode = this.countryListKeyObj[\r\n              this.defaultCountryCodeReal\r\n            ].keyCode;\r\n          } else {\r\n            this.countryKeyCode = v;\r\n          }\r\n        }\r\n        if (\r\n          !this.defaultCountryCodeReal\r\n          && !this.country\r\n          && v\r\n          && this.countryMap\r\n          && this.countryMap[v]\r\n        ) {\r\n          this.country = this.countryMap[v].code;\r\n        }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  computed: {\r\n    countryListKeyObj() {\r\n      const list = {};\r\n      this.countryObj.list.forEach((item) => {\r\n        list[item.code] = {\r\n          code: item.code,\r\n          keyCode: item.keyCode,\r\n          value: item.value.split(' ')[0],\r\n        };\r\n      });\r\n      return list;\r\n    },\r\n    // 国家渲染列表\r\n    countryList() {\r\n      return this.countryObj.list;\r\n    },\r\n    registerCountryList() {\r\n      const countryList = this.filterCountryList(this.$t('phoneCode'));\r\n      return getCountryList(countryList).list;\r\n    },\r\n    countryListMoy() {\r\n      const arr = [];\r\n      this.countryObj.list.forEach((item) => {\r\n        arr.push({\r\n          code: item.code,\r\n          keyCode: item.keyCode,\r\n          value: item.value.split(' +')[0],\r\n        });\r\n      });\r\n      return arr;\r\n    },\r\n    countryMap() {\r\n      return this.countryObj.countryMap;\r\n    },\r\n    countryRealMap() {\r\n      return this.countryObj.countryRealMap;\r\n    },\r\n    countryObj() {\r\n      return this.$store.state.baseData.countryObj;\r\n    },\r\n    // 默认区号\r\n    defaultCountryCode() {\r\n      return this.$store.state.baseData.defaultCountryCode;\r\n    },\r\n    defaultCountryCodeReal() {\r\n      return this.$store.state.baseData.defaultCountryCodeReal;\r\n    },\r\n    limitCountryList() {\r\n      return this.$store.state.baseData.limitCountryList;\r\n    },\r\n  },\r\n  methods: {\r\n    // 国家列表change\r\n    countryChange(item) {\r\n      this.country = item.code;\r\n      this.countryKeyCode = item.keyCode;\r\n    },\r\n    filterCountryList(list) {\r\n      const countryList = list;\r\n      let { limitCountryList } = this;\r\n      if (limitCountryList.length > 0) {\r\n        limitCountryList = limitCountryList.join('').split('+');\r\n        Object.keys(countryList).forEach((item) => {\r\n          countryList[item] = countryList[item].filter((vitem) => {\r\n            const valueArr = vitem.split('+');\r\n            return limitCountryList.indexOf(valueArr[2]) === -1;\r\n          });\r\n        });\r\n      }\r\n      return countryList;\r\n    },\r\n  },\r\n};\r\n"]}]}