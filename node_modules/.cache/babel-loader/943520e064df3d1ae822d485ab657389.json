{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/depth/depth.js","dependencies":[{"path":"/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/depth/depth.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { fixD, nul, division, thousandsComma as _thousandsComma } from '@/utils';\nexport default {\n  name: 'market',\n  data: function data() {\n    return {\n      wsData: {},\n      // 当前深度\n      activeDepat: 0,\n      depatHover: 0,\n      isShowDepat: false,\n      cellWidth: [120, 90, 90],\n      // 收起状态 盘口 和 实时成交显示哪个 ？\n      shrinksDdpthNewShow: 'D',\n      // 卖盘 高度\n      sellHeight: 210,\n      // 买盘 高度\n      buyHeight: 210,\n      // 显示条数\n      sellLineNumber: 10,\n      buyLineNumber: 10,\n      // 当前价格\n      activePrice: null,\n      priceClsss: null\n    };\n  },\n  computed: {\n    templateLayoutType: function templateLayoutType() {\n      return this.$store.state.baseData.templateLayoutType;\n    },\n    // 价格 数量 累计\n    theadList: function theadList() {\n      return [this.$t('futures.depth.theadList1'), // 价格\n      \"\".concat(this.$t('futures.depth.theadList2'), \" (\").concat(this.coUnit, \")\"), // '数量',\n      \"\".concat(this.$t('futures.depth.theadList3'), \" (\").concat(this.coUnit, \")\") // '总计',\n      ];\n    },\n    // 当前合约信息\n    contractInfo: function contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 深度级别列表\n    depathList: function depathList() {\n      if (this.contractInfo) {\n        var d = this.contractInfo.coinResultVo.depth;\n\n        if (d === ['0', '0', '0']) {\n          return ['0'];\n        }\n\n        return this.contractInfo.coinResultVo.depth;\n      }\n\n      return ['3', '2', '1'];\n    },\n    // 当前币对\n    symbolCurrent: function symbolCurrent() {\n      return this.$store.state.future.coTypeSymbol;\n    },\n    // 当前合约面值\n    multiplier: function multiplier() {\n      return Number(this.$store.state.future.multiplier);\n    },\n    // 合约数量单位\n    coUnit: function coUnit() {\n      return this.$store.state.future.coUnit;\n    },\n    // 数量单位类型Number\n    coUnitType: function coUnitType() {\n      return this.$store.state.future.coUnitType;\n    },\n    // 合约数量精度\n    volfix: function volfix() {\n      return this.$store.state.future.volfix;\n    },\n    // 合约币对价格精度\n    pricefix: function pricefix() {\n      return this.$store.state.future.pricefix;\n    },\n    // 标记价格、指数价格、资金费率\n    publicMarkertInfo: function publicMarkertInfo() {\n      var publicMarkertInfo = this.$store.state.future.publicMarkertInfo;\n\n      if (publicMarkertInfo) {\n        return {\n          // 标记价格\n          tagPrice: this.fixPrice(publicMarkertInfo.tagPrice),\n          // 指数价格\n          indexPrice: this.fixPrice(publicMarkertInfo.indexPrice)\n        };\n      }\n\n      return {\n        indexPrice: '--'\n      };\n    },\n    dataList: function dataList() {\n      var _this = this;\n\n      if (this.wsData) {\n        var data = this.wsData; // console.log(data);\n\n        var dataTypeKey = Object.keys(data);\n        var depthListData = {};\n        var maxTotal = 0;\n\n        if (dataTypeKey.length) {\n          dataTypeKey.forEach(function (item) {\n            var objItem = data[item];\n            var totalNum = 0;\n            var maxval = 0;\n            var dataArr = [];\n            var objKeys = null;\n\n            if (item === 'asks') {\n              objKeys = Object.keys(objItem).sort(function (a, b) {\n                return a - b;\n              });\n            } else {\n              objKeys = Object.keys(objItem).sort(function (a, b) {\n                return b - a;\n              });\n            } // 去掉 价格为零的\n\n\n            objKeys.forEach(function (itemKey) {\n              var itemArr = objItem[itemKey];\n\n              if (dataArr.length < 10) {\n                // 获取最大的数量\n                maxval = maxval < itemArr[1] ? itemArr[1] : maxval;\n                totalNum += itemArr[1];\n                var total = totalNum;\n                var vol = itemArr[1]; // 标的货币\n\n                if (_this.coUnitType === 1 && totalNum && _this.multiplier) {\n                  total = fixD(nul(totalNum, _this.multiplier), _this.volfix);\n                  vol = fixD(nul(vol, _this.multiplier), _this.volfix);\n                }\n\n                var objd = {\n                  // 总量\n                  total: total,\n                  // 价格\n                  price: fixD(itemArr[0], _this.pricefix),\n                  // 数量\n                  vol: vol,\n                  // 是否有变化\n                  diff: itemArr[2]\n                }; // 处理增量数据\n\n                if (data.newData && data.newData.indexOf(itemArr[0]) < 0) {\n                  objd.diff = 0;\n                }\n\n                if (vol > 0) {\n                  dataArr.push(objd);\n                }\n              }\n            });\n            depthListData[item] = dataArr;\n\n            if (maxTotal < maxval) {\n              maxTotal = maxval;\n            }\n          });\n          var asksMaxValue = 0;\n          var buysMaxValue = 0;\n\n          if (depthListData.asks && depthListData.asks.length) {\n            var index = depthListData.asks.length - 1;\n            asksMaxValue = depthListData.asks[index].total;\n          }\n\n          if (depthListData.buys && depthListData.buys.length) {\n            var _index = depthListData.buys.length - 1;\n\n            buysMaxValue = depthListData.buys[_index].total;\n          }\n\n          var maxTotalValue = Math.max(asksMaxValue, buysMaxValue);\n          return {\n            depthMaxNumber: maxTotalValue,\n            asksData: depthListData.asks.reverse(),\n            buyData: depthListData.buys\n          };\n        }\n      }\n\n      return {\n        asksData: [],\n        buyData: [],\n        depthMaxNumber: null\n      };\n    },\n    //  买一\n    buyOne: function buyOne() {\n      if (this.dataList && this.dataList.buyData.length) {\n        return this.swNumber(this.dataList.buyData[0].price);\n      }\n\n      return 0;\n    },\n    // 卖一\n    sellOne: function sellOne() {\n      if (this.dataList && this.dataList.asksData.length) {\n        return this.swNumber(this.dataList.asksData[0].price);\n      }\n\n      return 0;\n    },\n    // 获取当前合约最新价格（下单模块使用）\n    activeNewPrice: function activeNewPrice() {\n      var value = 0;\n\n      if (this.buyOne && this.sellOne && this.activePrice) {\n        value = this.medianValue(this.buyOne, this.sellOne, this.activePrice);\n      } else if (!this.buyOne && this.sellOne && this.activePrice) {\n        value = this.meanValue(this.sellOne, this.activePrice);\n      } else if (this.buyOne && !this.sellOne && this.activePrice) {\n        value = this.meanValue(this.buyOne, this.activePrice);\n      } else if (this.buyOne && this.sellOne && !this.activePrice) {\n        value = this.meanValue(this.buyOne, this.sellOne);\n      } else {\n        var arr = [this.buyOne, this.sellOne, this.activePrice];\n        arr.forEach(function (item) {\n          if (item) {\n            value = item;\n          }\n        });\n      }\n\n      return value;\n    }\n  },\n  watch: {\n    activeNewPrice: function activeNewPrice(val) {\n      this.$bus.$emit('ACTIVE_NEW_PRICE', val);\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this2 = this;\n\n      // 监听 深度数据\n      this.$bus.$on('DEPTH_DATA', function (data) {\n        // console.log(data);\n        _this2.wsData = data;\n      });\n      this.$bus.$on('activeWsData', function (data) {\n        if (data.close && data.close !== '--') {\n          _this2.activePrice = Number(data.close);\n        } else {\n          _this2.activePrice = '--';\n        }\n\n        _this2.priceClsss = data.class;\n      });\n    },\n    // 新价精度\n    fixPrice: function fixPrice(value) {\n      if (value) {\n        return fixD(value, this.pricefix);\n      }\n\n      return '--';\n    },\n    fixDepthNumber: function fixDepthNumber(val) {\n      if (val === 0 || val === '0') {\n        return 1;\n      }\n\n      if (val === 1 || val === '1') {\n        return 0.1;\n      }\n\n      var n = Number(val) - 1;\n      var num = 0;\n      var b = num.toFixed(n);\n      return \"\".concat(b, \"1\");\n    },\n    // 盘口 和 实时成交 切换\n    switchBlock: function switchBlock(type) {\n      this.shrinksDdpthNewShow = type;\n    },\n    handMouseenter: function handMouseenter(id) {\n      this.depatHover = id;\n    },\n    switchDepat: function switchDepat(id) {\n      this.activeDepat = id;\n      this.isShowDepat = false;\n      this.$bus.$emit('DEPTH_VALUE', this.activeDepat);\n    },\n    handMouseleave: function handMouseleave() {\n      this.depatHover = '';\n    },\n    // 转数字\n    swNumber: function swNumber(val) {\n      if (parseFloat(val).toString() !== 'NaN') {\n        return parseFloat(val);\n      }\n\n      return false;\n    },\n    // 三个数获取中间值\n    medianValue: function medianValue(a, b, c) {\n      if ((b - a) * (a - c) >= 0) {\n        return a;\n      }\n\n      if ((a - b) * (b - c) >= 0) {\n        return b;\n      }\n\n      return c;\n    },\n    // 两个数获取平均\n    meanValue: function meanValue(a, b) {\n      return division(a + b, 2);\n    },\n    thousandsComma: function thousandsComma(num) {\n      if (num) {\n        return _thousandsComma(num);\n      }\n\n      return num;\n    }\n  }\n};",{"version":3,"sources":["/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/depth/depth.js"],"names":["fixD","nul","division","thousandsComma","name","data","wsData","activeDepat","depatHover","isShowDepat","cellWidth","shrinksDdpthNewShow","sellHeight","buyHeight","sellLineNumber","buyLineNumber","activePrice","priceClsss","computed","templateLayoutType","$store","state","baseData","theadList","$t","coUnit","contractInfo","future","depathList","d","coinResultVo","depth","symbolCurrent","coTypeSymbol","multiplier","Number","coUnitType","volfix","pricefix","publicMarkertInfo","tagPrice","fixPrice","indexPrice","dataList","dataTypeKey","Object","keys","depthListData","maxTotal","length","forEach","item","objItem","totalNum","maxval","dataArr","objKeys","sort","a","b","itemKey","itemArr","total","vol","objd","price","diff","newData","indexOf","push","asksMaxValue","buysMaxValue","asks","index","buys","maxTotalValue","Math","max","depthMaxNumber","asksData","reverse","buyData","buyOne","swNumber","sellOne","activeNewPrice","value","medianValue","meanValue","arr","watch","val","$bus","$emit","methods","init","$on","close","class","fixDepthNumber","n","num","toFixed","switchBlock","type","handMouseenter","id","switchDepat","handMouseleave","parseFloat","toString","c"],"mappings":"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","sourcesContent":["import {\r\n  fixD, nul, division, thousandsComma,\r\n} from '@/utils';\r\n\r\nexport default {\r\n  name: 'market',\r\n  data() {\r\n    return {\r\n      wsData: {},\r\n      // 当前深度\r\n      activeDepat: 0,\r\n      depatHover: 0,\r\n      isShowDepat: false,\r\n      cellWidth: [120, 90, 90],\r\n      // 收起状态 盘口 和 实时成交显示哪个 ？\r\n      shrinksDdpthNewShow: 'D',\r\n      // 卖盘 高度\r\n      sellHeight: 210,\r\n      // 买盘 高度\r\n      buyHeight: 210,\r\n      // 显示条数\r\n      sellLineNumber: 10,\r\n      buyLineNumber: 10,\r\n      // 当前价格\r\n      activePrice: null,\r\n      priceClsss: null,\r\n\r\n    };\r\n  },\r\n  computed: {\r\n    templateLayoutType() {\r\n      return this.$store.state.baseData.templateLayoutType;\r\n    },\r\n    // 价格 数量 累计\r\n    theadList() {\r\n      return [\r\n        this.$t('futures.depth.theadList1'), // 价格\r\n        `${this.$t('futures.depth.theadList2')} (${this.coUnit})`, // '数量',\r\n        `${this.$t('futures.depth.theadList3')} (${this.coUnit})`, // '总计',\r\n      ];\r\n    },\r\n    // 当前合约信息\r\n    contractInfo() {\r\n      return this.$store.state.future.contractInfo;\r\n    },\r\n    // 深度级别列表\r\n    depathList() {\r\n      if (this.contractInfo) {\r\n        const d = this.contractInfo.coinResultVo.depth;\r\n        if (d === ['0', '0', '0']) {\r\n          return ['0'];\r\n        }\r\n        return this.contractInfo.coinResultVo.depth;\r\n      }\r\n      return ['3', '2', '1'];\r\n    },\r\n    // 当前币对\r\n    symbolCurrent() {\r\n      return this.$store.state.future.coTypeSymbol;\r\n    },\r\n    // 当前合约面值\r\n    multiplier() {\r\n      return Number(this.$store.state.future.multiplier);\r\n    },\r\n    // 合约数量单位\r\n    coUnit() {\r\n      return this.$store.state.future.coUnit;\r\n    },\r\n    // 数量单位类型Number\r\n    coUnitType() {\r\n      return this.$store.state.future.coUnitType;\r\n    },\r\n    // 合约数量精度\r\n    volfix() {\r\n      return this.$store.state.future.volfix;\r\n    },\r\n    // 合约币对价格精度\r\n    pricefix() {\r\n      return this.$store.state.future.pricefix;\r\n    },\r\n    // 标记价格、指数价格、资金费率\r\n    publicMarkertInfo() {\r\n      const { publicMarkertInfo } = this.$store.state.future;\r\n      if (publicMarkertInfo) {\r\n        return {\r\n          // 标记价格\r\n          tagPrice: this.fixPrice(publicMarkertInfo.tagPrice),\r\n          // 指数价格\r\n          indexPrice: this.fixPrice(publicMarkertInfo.indexPrice),\r\n        };\r\n      }\r\n      return {\r\n        indexPrice: '--',\r\n      };\r\n    },\r\n    dataList() {\r\n      if (this.wsData) {\r\n        const data = this.wsData;\r\n        // console.log(data);\r\n        const dataTypeKey = Object.keys(data);\r\n        const depthListData = {};\r\n        let maxTotal = 0;\r\n        if (dataTypeKey.length) {\r\n          dataTypeKey.forEach((item) => {\r\n            const objItem = data[item];\r\n            let totalNum = 0;\r\n            let maxval = 0;\r\n            const dataArr = [];\r\n            let objKeys = null;\r\n            if (item === 'asks') {\r\n              objKeys = Object.keys(objItem).sort((a, b) => a - b);\r\n            } else {\r\n              objKeys = Object.keys(objItem).sort((a, b) => b - a);\r\n            }\r\n            // 去掉 价格为零的\r\n            objKeys.forEach((itemKey) => {\r\n              const itemArr = objItem[itemKey];\r\n              if (dataArr.length < 10) {\r\n                // 获取最大的数量\r\n                maxval = maxval < itemArr[1] ? itemArr[1] : maxval;\r\n                totalNum += itemArr[1];\r\n                let total = totalNum;\r\n                let vol = itemArr[1];\r\n                // 标的货币\r\n                if (this.coUnitType === 1 && totalNum && this.multiplier) {\r\n                  total = fixD(nul(totalNum, this.multiplier), this.volfix);\r\n                  vol = fixD(nul(vol, this.multiplier), this.volfix);\r\n                }\r\n                const objd = {\r\n                  // 总量\r\n                  total,\r\n                  // 价格\r\n                  price: fixD(itemArr[0], this.pricefix),\r\n                  // 数量\r\n                  vol,\r\n                  // 是否有变化\r\n                  diff: itemArr[2],\r\n                };\r\n                  // 处理增量数据\r\n                if (data.newData && data.newData.indexOf(itemArr[0]) < 0) {\r\n                  objd.diff = 0;\r\n                }\r\n                if (vol > 0) {\r\n                  dataArr.push(objd);\r\n                }\r\n              }\r\n            });\r\n            depthListData[item] = dataArr;\r\n            if (maxTotal < maxval) {\r\n              maxTotal = maxval;\r\n            }\r\n          });\r\n          let asksMaxValue = 0;\r\n          let buysMaxValue = 0;\r\n          if (depthListData.asks && depthListData.asks.length) {\r\n            const index = depthListData.asks.length - 1;\r\n            asksMaxValue = depthListData.asks[index].total;\r\n          }\r\n          if (depthListData.buys && depthListData.buys.length) {\r\n            const index = depthListData.buys.length - 1;\r\n            buysMaxValue = depthListData.buys[index].total;\r\n          }\r\n          const maxTotalValue = Math.max(asksMaxValue, buysMaxValue);\r\n          return {\r\n            depthMaxNumber: maxTotalValue,\r\n            asksData: depthListData.asks.reverse(),\r\n            buyData: depthListData.buys,\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        asksData: [],\r\n        buyData: [],\r\n        depthMaxNumber: null,\r\n      };\r\n    },\r\n    //  买一\r\n    buyOne() {\r\n      if (this.dataList && this.dataList.buyData.length) {\r\n        return this.swNumber(this.dataList.buyData[0].price);\r\n      }\r\n      return 0;\r\n    },\r\n    // 卖一\r\n    sellOne() {\r\n      if (this.dataList && this.dataList.asksData.length) {\r\n        return this.swNumber(this.dataList.asksData[0].price);\r\n      }\r\n      return 0;\r\n    },\r\n    // 获取当前合约最新价格（下单模块使用）\r\n    activeNewPrice() {\r\n      let value = 0;\r\n      if (this.buyOne && this.sellOne && this.activePrice) {\r\n        value = this.medianValue(this.buyOne, this.sellOne, this.activePrice);\r\n      } else if (!this.buyOne && this.sellOne && this.activePrice) {\r\n        value = this.meanValue(this.sellOne, this.activePrice);\r\n      } else if (this.buyOne && !this.sellOne && this.activePrice) {\r\n        value = this.meanValue(this.buyOne, this.activePrice);\r\n      } else if (this.buyOne && this.sellOne && !this.activePrice) {\r\n        value = this.meanValue(this.buyOne, this.sellOne);\r\n      } else {\r\n        const arr = [this.buyOne, this.sellOne, this.activePrice];\r\n        arr.forEach((item) => {\r\n          if (item) {\r\n            value = item;\r\n          }\r\n        });\r\n      }\r\n      return value;\r\n    },\r\n  },\r\n  watch: {\r\n    activeNewPrice(val) {\r\n      this.$bus.$emit('ACTIVE_NEW_PRICE', val);\r\n    },\r\n  },\r\n  methods: {\r\n    init() {\r\n      // 监听 深度数据\r\n      this.$bus.$on('DEPTH_DATA', (data) => {\r\n        // console.log(data);\r\n        this.wsData = data;\r\n      });\r\n      this.$bus.$on('activeWsData', (data) => {\r\n        if (data.close && data.close !== '--') {\r\n          this.activePrice = Number(data.close);\r\n        } else {\r\n          this.activePrice = '--';\r\n        }\r\n        this.priceClsss = data.class;\r\n      });\r\n    },\r\n    // 新价精度\r\n    fixPrice(value) {\r\n      if (value) {\r\n        return fixD(value, this.pricefix);\r\n      }\r\n      return '--';\r\n    },\r\n    fixDepthNumber(val) {\r\n      if (val === 0 || val === '0') {\r\n        return 1;\r\n      }\r\n      if (val === 1 || val === '1') {\r\n        return 0.1;\r\n      }\r\n      const n = Number(val) - 1;\r\n      const num = 0;\r\n      const b = num.toFixed(n);\r\n      return `${b}1`;\r\n    },\r\n    // 盘口 和 实时成交 切换\r\n    switchBlock(type) {\r\n      this.shrinksDdpthNewShow = type;\r\n    },\r\n    handMouseenter(id) {\r\n      this.depatHover = id;\r\n    },\r\n    switchDepat(id) {\r\n      this.activeDepat = id;\r\n      this.isShowDepat = false;\r\n      this.$bus.$emit('DEPTH_VALUE', this.activeDepat);\r\n    },\r\n    handMouseleave() {\r\n      this.depatHover = '';\r\n    },\r\n    // 转数字\r\n    swNumber(val) {\r\n      if (parseFloat(val).toString() !== 'NaN') {\r\n        return parseFloat(val);\r\n      }\r\n      return false;\r\n    },\r\n    // 三个数获取中间值\r\n    medianValue(a, b, c) {\r\n      if ((b - a) * (a - c) >= 0) {\r\n        return a;\r\n      } if ((a - b) * (b - c) >= 0) {\r\n        return b;\r\n      }\r\n      return c;\r\n    },\r\n    // 两个数获取平均\r\n    meanValue(a, b) {\r\n      return division(a + b, 2);\r\n    },\r\n    thousandsComma(num) {\r\n      if (num) {\r\n        return thousandsComma(num);\r\n      }\r\n      return num;\r\n    },\r\n  },\r\n};\r\n"]}]}