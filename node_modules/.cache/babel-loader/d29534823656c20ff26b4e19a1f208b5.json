{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/freeStaking/myPos/myPos.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/freeStaking/myPos/myPos.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport { colorMap, imgMap } from '@/utils';\nexport default {\n  data: function data() {\n    return {\n      colorMap: colorMap,\n      imgMap: imgMap,\n      currentType: 0,\n      // 0 锁仓  1 持仓\n      startTime: '',\n      endTime: '',\n      posData: [],\n      paginationData: {\n        total: 100,\n        // 数据总条数\n        display: 10,\n        // 每页显示条数\n        currentPage: 1 // 当前页码\n\n      },\n      subTableData: null,\n      subTableDataId: null,\n      subPosData: [],\n      loading: false,\n      pageData: {}\n    };\n  },\n  computed: {\n    startTimeNum: function startTimeNum() {\n      return (new Date(this.startTime.replace(/-/g, '/')).getTime() / 1000).toString();\n    },\n    endTimeNum: function endTimeNum() {\n      return (new Date(this.endTime.replace(/-/g, '/')).getTime() / 1000).toString();\n    },\n    columns: function columns() {\n      var lockPosTable = [{\n        title: this.$t('freeStaking.myPos.lockPosTable[0]'),\n        width: '10%'\n      }, {\n        title: this.$t('manageFinances.startTime'),\n        width: '20%'\n      }, {\n        title: this.$t('freeStaking.myPos.lockPosTable[2]'),\n        width: '15%'\n      }, {\n        title: this.$t('freeStaking.myPos.lockPosTable[3]'),\n        width: '20%'\n      }, {\n        title: this.$t('freeStaking.myPos.lockPosTable[4]'),\n        width: '20%'\n      }, {\n        title: this.pageData.tipStatus,\n        width: '15%'\n      }];\n      var unLockPosTable = [{\n        title: this.$t('freeStaking.myPos.unLockPosTable[0]'),\n        width: '20%'\n      }, {\n        title: this.$t('freeStaking.myPos.unLockPosTable[1]'),\n        width: '20%'\n      }, {\n        title: this.$t('freeStaking.myPos.unLockPosTable[2]'),\n        width: '20%'\n      }, {\n        title: this.$t('freeStaking.myPos.unLockPosTable[3]'),\n        width: '20%'\n      }, {\n        title: this.$t('freeStaking.myPos.unLockPosTable[4]'),\n        width: '20%'\n      }];\n      return this.currentType ? unLockPosTable : lockPosTable;\n    },\n    subColumns: function subColumns() {\n      var columns = [{\n        text: this.$t('freeStaking.detail.incomeTime'),\n        class: 'table-custom-class'\n      }, {\n        text: this.$t('freeStaking.detail.incomeNum'),\n        class: 'table-custom-class'\n      }];\n      return this.currentType ? [] : columns;\n    },\n    navTabList: function navTabList() {\n      return [{\n        name: this.pageData.tipLock,\n        index: 0\n      }, {\n        name: this.pageData.tipNormal,\n        index: 1\n      }];\n    },\n    startTimeText: function startTimeText() {\n      return this.$t('broker.startTime');\n    },\n    endTimeText: function endTimeText() {\n      return this.$t('freeStaking.myPos.endTime');\n    }\n  },\n  methods: {\n    init: function init() {\n      this.startTime = this.getNowTime(this.getMonth(-3));\n      this.endTime = this.getNowTime(this.getMonth(3));\n      this.getUserPosData(this.currentType);\n    },\n    getMonth: function getMonth(n) {\n      var date = new Date();\n      return date.setMonth(date.getMonth() + n);\n    },\n    getUserPosData: function getUserPosData(currentType) {\n      var _this = this;\n\n      var _this$paginationData = this.paginationData,\n          currentPage = _this$paginationData.currentPage,\n          display = _this$paginationData.display;\n      this.loading = true;\n      this.axios({\n        url: this.$store.state.url.freeStaking.pos_history,\n        headers: {},\n        params: {\n          page: currentPage,\n          pageSize: display,\n          projectType: currentType ? 1 : 3,\n          strTime: this.startTime,\n          entTime: this.endTime\n        },\n        method: 'post'\n      }).then(function (data) {\n        if (data.code === '0' && currentType === _this.currentType) {\n          var _data$data = data.data,\n              count = _data$data.count,\n              posList = _data$data.posList;\n          _this.pageData = data.data;\n          _this.paginationData.total = count;\n          _this.posData = _this.initPosData(posList);\n          _this.loading = false;\n        }\n      });\n    },\n    reducePost: function reducePost() {\n      var _this2 = this;\n\n      if (this.timer) clearTimeout(this.timer);\n      this.timer = setTimeout(function () {\n        _this2.getUserPosData(_this2.currentType);\n      }, 500);\n    },\n    initPosData: function initPosData(data) {\n      var _this3 = this;\n\n      if (!Array.isArray(data)) return false;\n      var subPosData = [];\n      var posData = data.map(function (item, index) {\n        var lockData = [item.baseCoin, item.ltime, item.totalAmount, \"\".concat(item.gainRate, \"%\"), [{\n          text: item.totalUserGainAmount\n        }, {\n          type: 'subTable'\n        }], _this3.countStatusText(item.projectStatus)];\n        var unLockData = [item.baseCoin, item.revenueTime, item.baseAmount, item.gainRate, item.gainAmount];\n        var subPosDataItem = !_this3.currentType && Array.isArray(item.userGainList) ? item.userGainList : [];\n        var subPosDataItemAddClass = subPosDataItem.map(function (el) {\n          return [{\n            text: el.gainTime,\n            class: 'table-custom-class'\n          }, {\n            text: el.gainAmount,\n            class: 'table-custom-class'\n          }];\n        });\n        subPosData.push(subPosDataItemAddClass);\n        return {\n          id: index,\n          data: _this3.currentType ? unLockData : lockData\n        };\n      });\n      this.subPosData = subPosData;\n      return posData;\n    },\n    getNowTime: function getNowTime() {\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var date = new Date(time);\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      var day = date.getDate();\n      return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n    },\n    selectType: function selectType(item) {\n      if (this.loading) return;\n      this.currentType = item.index;\n      this.subTableDataId = null;\n      this.getUserPosData(this.currentType);\n    },\n    setStartTime: function setStartTime(time) {\n      this.startTime = time;\n      this.reducePost();\n    },\n    setEndTime: function setEndTime(time) {\n      this.endTime = time;\n      this.reducePost();\n    },\n    countStatusText: function countStatusText(status) {\n      var statusText = {\n        0: this.$t('freeStaking.home.status[0]'),\n        1: this.$t('freeStaking.home.status[1]'),\n        2: this.$t('freeStaking.home.status[2]'),\n        3: this.$t('freeStaking.home.status[3]'),\n        4: this.$t('freeStaking.home.status[4]'),\n        5: this.$t('freeStaking.home.status[5]'),\n        6: this.$t('freeStaking.home.status[6]')\n      };\n      return statusText[status];\n    },\n    pagechange: function pagechange(e) {\n      if (this.loading) return;\n      this.paginationData.currentPage = e;\n      this.subTableDataId = null;\n      this.getUserPosData(this.currentType);\n    },\n    tableClick: function tableClick(element, data) {\n      if (!this.currentType) {\n        this.subTableData = this.subPosData[data.id];\n        this.subTableDataId = data.id;\n      }\n    }\n  }\n};",null]}