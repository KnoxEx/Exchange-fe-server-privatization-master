{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/personal/checkApi/checkApi.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/personal/checkApi/checkApi.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nexport default {\n  name: 'checkApi',\n  watch: {\n    sendSmsCode: function sendSmsCode(_sendSmsCode) {\n      if (_sendSmsCode !== null) {\n        if (_sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    },\n    openApiOne: function openApiOne(_openApiOne) {\n      if (_openApiOne !== null) {\n        this.loading = false;\n\n        if (_openApiOne.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _openApiOne.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n          this.secretKey = _openApiOne.data.secretKey;\n          this.qrCode = _openApiOne.data.qrCode;\n          this.divShow = 2;\n        } else {\n          this.$bus.$emit('tip', {\n            text: _openApiOne.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n\n          if (_openApiOne.code !== '10009') {\n            this.$bus.$emit('getCode-clear', 'phone');\n          }\n        }\n      }\n    }\n  },\n  computed: {\n    sendSmsCode: function sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    openApiOne: function openApiOne() {\n      return this.$store.state.personal.openApiOne;\n    }\n  },\n  data: function data() {\n    return {\n      svgShow: true,\n      // input'\n      loading: false,\n      divShow: 1,\n      promptText1: this.$t('personal.label.smsCodeText'),\n      errorText1: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag1: false,\n      checkValue1: '',\n      promptText2: this.$t('personal.label.googleCodeText'),\n      errorText2: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag2: false,\n      checkValue2: '',\n      disabled: true,\n      googleCode: false,\n      smsCode: false,\n      secretKey: '',\n      qrCode: ''\n    };\n  },\n  methods: {\n    init: function init() {\n      var userInfo = this.$store.state.baseData.userInfo;\n\n      if (userInfo !== null) {\n        this.googleCode = !!Number(userInfo.googleStatus);\n        this.smsCode = !!Number(userInfo.isOpenMobileCheck);\n      }\n    },\n    handMouseenter: function handMouseenter() {\n      this.svgShow = false;\n    },\n    handMouseleave: function handMouseleave() {\n      this.svgShow = true;\n    },\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick: function getCodeClick() {\n      this.$bus.$emit('getCode-start', 'phone');\n      var info = {\n        operationType: 16\n      };\n      this.$store.dispatch('sendSmsCode', info);\n    },\n    inputChanges: function inputChanges(val, name) {\n      switch (name) {\n        case 'phoneCode':\n          this.checkValue1 = val;\n\n          if (this.codeFlag(val)) {\n            this.checkErrorFlag1 = false;\n          } else {\n            this.checkErrorFlag1 = true;\n          }\n\n          break;\n\n        default:\n          this.checkValue2 = val;\n\n          if (this.codeFlag(val)) {\n            this.checkErrorFlag2 = false;\n          } else {\n            this.checkErrorFlag2 = true;\n          }\n\n      }\n\n      if (!this.checkErrorFlag1 && !this.checkErrorFlag2) {\n        if (this.smsCode) {\n          this.disabled = !this.checkValue1;\n        }\n\n        if (this.googleCode) {\n          this.disabled = !this.checkValue2;\n        }\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink: function btnLink() {\n      this.loading = true;\n      var token = this.$store.state.personal.apiToken;\n      var info = {\n        smsValidCode: this.checkValue1,\n        googleCode: this.checkValue2,\n        token: token\n      };\n      this.$store.dispatch('openApiOne', info);\n    },\n    copyClick: function copyClick(name) {\n      if (name === 'secretKey') {\n        this.copy(this.secretKey);\n      }\n    },\n    copy: function copy(str) {\n      // this.$bus.$emit('tip', { text: this.$t('personal.prompt.copySucces'), type: 'success' });\n      function save(e) {\n        e.clipboardData.setData('text/plain', str); // 下面会说到clipboardData对象\n\n        e.preventDefault(); // 阻止默认行为\n      }\n\n      document.addEventListener('copy', save);\n      document.execCommand('copy'); // 使文档处于可编辑状态，否则无效\n\n      document.removeEventListener('copy', save);\n    }\n  }\n};",null]}