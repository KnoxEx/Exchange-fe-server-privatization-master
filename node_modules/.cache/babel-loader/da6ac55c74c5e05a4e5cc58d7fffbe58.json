{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/lever/index/index.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/lever/index/index.js","mtime":1642327713192},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport { myStorage } from '@/utils';\nexport default {\n  data: function data() {\n    return {\n      markTitleClass: 'leverMarkTitle',\n      symbolNameClass: 'leverSymbolName',\n      routerPathClass: 'margin'\n    };\n  },\n  computed: {\n    symbolAll: function symbolAll() {\n      if (this.$store.state.baseData.symbolAll) {\n        var symbolAll = this.$store.state.baseData.symbolAll;\n        var symbolAllKey = Object.keys(symbolAll);\n        var symbolAllArr = {};\n        symbolAllKey.forEach(function (item) {\n          if (symbolAll[item].is_open_lever) {\n            symbolAllArr[item] = symbolAll[item];\n          }\n        });\n        return symbolAllArr;\n      }\n\n      return {};\n    },\n    symbolList: function symbolList() {\n      var _this = this;\n\n      // 如果 当前市场 是 自选市场\n      if (this.marketCurrent === 'myMarket') {\n        var mySymbol = myStorage.get('mySymbol') || [];\n        var marketList = {};\n\n        if (mySymbol.length) {\n          mySymbol.forEach(function (item) {\n            if (item && _this.symbolAll[item] && _this.symbolAll[item].is_open_lever) {\n              marketList[item] = _this.symbolAll[item];\n            }\n          });\n        }\n\n        return marketList;\n      }\n\n      if (this.marketList && this.marketCurrent) {\n        var symbolArr = this.marketList[this.marketCurrent];\n        var symbolKeyArr = Object.keys(symbolArr);\n        var newSymbolList = {};\n\n        if (symbolKeyArr.length) {\n          symbolKeyArr.forEach(function (item) {\n            if (symbolArr[item].is_open_lever) {\n              newSymbolList[item] = symbolArr[item];\n            }\n          });\n        }\n\n        return newSymbolList;\n      }\n\n      return null;\n    }\n  },\n  methods: {\n    leverInit: function leverInit() {\n      if (this.routeSymbol) {\n        myStorage.set(this.markTitleClass, this.routeSymbol.split('_')[1]);\n        myStorage.set(this.symbolNameClass, this.routeSymbol.replace('_', '/'));\n      } else {\n        var sSymbolName = myStorage.get(this.symbolNameClass);\n\n        if (sSymbolName) {\n          var sSymbol = sSymbolName.replace('/', '_');\n          this.$router.push(\"/\".concat(this.routerPathClass, \"/\").concat(sSymbol));\n        }\n      }\n    },\n    leverMounted: function leverMounted() {\n      var _this2 = this;\n\n      this.screenWidth = document.body.clientWidth;\n\n      if (this.screenWidth <= this.mediaWidth) {\n        this.shrink = true;\n        this.marketShrink = true;\n      } // 监听 窗口的大小改变\n\n\n      this.$bus.$on('WINFOW_ON_RESIIZE', function () {\n        // this.$bus.$emit('WINFOW_ON_RESIIZE', );\n        if (_this2.windowOnResizeFire) {\n          _this2.screenWidth = document.body.clientWidth;\n\n          if (_this2.screenWidth <= _this2.mediaWidth) {\n            // 如果 屏幕窗口 小于阈值 设置成收起模式\n            _this2.shrink = true;\n            _this2.marketShrink = true;\n          } else {\n            // 如果 屏幕窗口 大于阈值 设置成展开模式\n            _this2.shrink = false;\n            _this2.marketShrink = false;\n          }\n\n          _this2.windowOnResizeFire = false; // 0.3秒之后将标志位重置\n\n          setTimeout(function () {\n            _this2.windowOnResizeFire = true;\n          });\n        }\n      });\n    }\n  }\n};",null]}