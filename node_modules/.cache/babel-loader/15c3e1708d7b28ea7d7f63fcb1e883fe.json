{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/assets/withdraw/withdraw.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/assets/withdraw/withdraw.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { fixD, fixInput, getCoinShowName, colorMap, imgMap, formatTime } from '@/utils';\nexport default {\n  name: 'page-withdraw',\n  data: function data() {\n    return {\n      tabelLoading: true,\n      imgMap: imgMap,\n      colorMap: colorMap,\n      alertFlag: false,\n      // alert变量\n      detailsList: [{\n        key: 'sum',\n        value: '--'\n      }, {\n        key: 'normal',\n        value: '--'\n      }, {\n        key: 'lock',\n        value: '--'\n      }],\n      withdrawMin: '--',\n      // 最小提币额度\n      withdrawMax: '--',\n      // 最大提币额度\n      daywithdrawMax: '--',\n      // 最大提币额度\n      feeMin: '--',\n      // 最小手续费\n      feeMax: '--',\n      // 最大手续费\n      tabelList: [],\n      // 提现记录\n      subTableData: [],\n      // 提现记录详情\n      financeListData: [],\n      subTableDataId: null,\n      // 提现记录详情ID\n      symbol: '',\n      addressValue: '',\n      // 提现地址\n      detailsAddressList: {},\n      // axios返回的地址列表对象\n      pagesValue: '',\n      // 地址标签\n      numberValue: '',\n      // 提币数量\n      proceduresValue: '',\n      // 手续费\n      addressList: [],\n      // 提现地址列表\n      havePageArr: ['XRP', 'EOS'],\n      // 含有标签的币种\n      paginationObj: {\n        total: 0,\n        // 数据总条数\n        display: 10,\n        // 每页显示条数\n        currentPage: 1 // 当前页码\n\n      },\n      dialogFlag: false,\n      // 弹窗开关\n      dialogConfirmLoading: false,\n      // 弹窗按钮loading\n      googleValue: '',\n      // 谷歌\n      phoneValue: '',\n      // 手机\n      revokeList: [],\n      // 撤销队列\n      defaultFeeFlag: true,\n      defaultFee: null,\n      symbol_withdraw_msg: null,\n      branchTip: '',\n      // 多主链提示\n      notIdShowDialog: false,\n      nowType: 1,\n      // 1为站外提现2为站内提现\n      nowTypeTable: 1 //\n\n    };\n  },\n  filters: {\n    fixDFn: function fixDFn(v, that) {\n      return fixD(v, that.showPrecision);\n    }\n  },\n  watch: {\n    userInfoIsReady: function userInfoIsReady() {\n      this.canAlert();\n    },\n    exchangeData: function exchangeData(v) {\n      if (v) {\n        this.initDetails();\n      }\n    },\n    paginationObjCurrentPage: function paginationObjCurrentPage() {\n      this.getTableList();\n    },\n    symbol: function symbol(v) {\n      if (v && this.market) {\n        this.branchInit(this.market);\n        this.addressInit();\n        this.defInit();\n      }\n    },\n    market: {\n      immediate: true,\n      handler: function handler(v) {\n        if (v && this.symbol) {\n          this.branchInit(v);\n          this.addressInit();\n          this.defInit();\n        }\n      }\n    },\n    proceduresValue: function proceduresValue(v) {\n      this.proceduresValue = fixInput(v, this.showPrecision);\n    },\n    numberValue: function numberValue(v) {\n      this.numberValue = fixInput(v, this.showPrecision);\n    }\n  },\n  computed: {\n    isHavePage: function isHavePage() {\n      var flag = false; // 判断market是否请求下来\n\n      if (this.market && this.market.coinList) {\n        if (!this.haveBranch) {\n          // 判断market.coinList是否有当前币种\n          if (this.market.coinList[this.symbol]) {\n            var tagType = this.market.coinList[this.symbol].tagType;\n            flag = tagType;\n          }\n        } else if (this.market.followCoinList[this.symbol][this.activeBranch]) {\n          var _tagType = this.market.followCoinList[this.symbol][this.activeBranch].tagType;\n          flag = _tagType;\n        }\n      }\n\n      return flag;\n    },\n    showSymbol: function showSymbol() {\n      var str = this.symbol;\n\n      if (this.market && this.market.coinList && this.market.coinList[this.symbol]) {\n        str = getCoinShowName(this.symbol, this.market.coinList);\n      }\n\n      return str;\n    },\n    enforceGoogleAuth: function enforceGoogleAuth() {\n      return this.$store.state.baseData.is_enforce_google_auth || 0;\n    },\n    authTitleText: function authTitleText() {\n      var text = this.enforceGoogleAuth ? 'assets.withdraw.enforceGoogleAuth' : 'assets.withdraw.safetyWarningError';\n      return this.$t(text);\n    },\n    switchadd: function switchadd() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      var switchopen = 0;\n\n      if (publicInfo && publicInfo.switch.open_txid_addr) {\n        switchopen = Number(publicInfo.switch.open_txid_addr);\n      }\n\n      return switchopen;\n    },\n    alertData: function alertData() {\n      var arr = [// 绑定谷歌验证\n      {\n        text: this.$t('assets.withdraw.bindGoogle'),\n        flag: this.OpenGoogle\n      }];\n\n      if (!this.enforceGoogleAuth) {\n        // 绑定手机验证\n        arr.push({\n          text: this.$t('assets.withdraw.bindPhone'),\n          flag: this.OpenMobile\n        });\n      }\n\n      return arr;\n    },\n    paginationObjCurrentPage: function paginationObjCurrentPage() {\n      return this.paginationObj.currentPage;\n    },\n    // 当前币种精度\n    showPrecision: function showPrecision() {\n      var v = 0;\n      var market = this.$store.state.baseData.market;\n\n      if (market && market.coinList && market.coinList[this.symbol]) {\n        v = market.coinList[this.symbol].showPrecision;\n      }\n\n      return v;\n    },\n    // 当前币种精度\n    branchShowPrecision: function branchShowPrecision() {\n      var v = 0;\n      var market = this.$store.state.baseData.market;\n\n      if (market && market.followCoinList && market.followCoinList[this.symbol] && market.followCoinList[this.symbol][this.activeBranch]) {\n        v = market.followCoinList[this.symbol][this.activeBranch].showPrecision;\n      }\n\n      return v;\n    },\n    // finance/account_balance 接口返回成功的数据\n    exchangeData: function exchangeData() {\n      return this.$store.state.assets.exchangeData;\n    },\n    // market 接口\n    market: function market() {\n      return this.$store.state.baseData.market;\n    },\n    // 提现按钮禁用状态\n    btnDisabled: function btnDisabled() {\n      var flag = true;\n\n      if (this.addressValue.length && this.numberOptions.flag && this.proceduresFlag) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    // 表格title\n    columns: function columns() {\n      var list = [];\n\n      if (this.nowTypeTable === 1) {\n        list = [{\n          title: this.$t('assets.withdraw.withdrawTime'),\n          width: '15%'\n        }, // 提现时间\n        {\n          title: this.$t('assets.withdraw.withdrawVolume'),\n          width: '10%'\n        }, // 提币数量\n        {\n          title: this.$t('assets.withdraw.withdrawFee'),\n          width: '10%'\n        }, // 网络手续费\n        {\n          title: this.$t('assets.flowingWater.withdrawRemarks'),\n          width: '15%'\n        }, // 标签\n        {\n          title: this.$t('assets.withdraw.withdrawStatus'),\n          width: '10%'\n        }, // 状态\n        {\n          title: this.$t('assets.withdraw.withdrawOptions'),\n          width: '15%'\n        } // 操作\n        ];\n      } else if (this.nowTypeTable === 2) {\n        list = [{\n          title: this.$t('assets.withdraw.transferTime'),\n          width: '15%'\n        }, // 转账时间\n        {\n          title: this.$t('assets.withdraw.sideAccount'),\n          width: '10%'\n        }, // 对方账号\n        {\n          title: this.$t('assets.withdraw.transferNumber'),\n          width: '10%'\n        }, // 转账数量\n        {\n          title: this.$t('assets.withdraw.withdrawFee'),\n          width: '15%'\n        }, // 手续费\n        {\n          title: this.$t('assets.withdraw.withdrawStatus'),\n          width: '10%'\n        } // 状态\n        ];\n      }\n\n      return list;\n    },\n    subColumns: function subColumns() {\n      return [this.$t('assets.flowingWater.withdrawAddress'), // 提币地址\n      this.$t('assets.flowingWater.updataAt'), // 钱包处理时间\n      this.$t('assets.flowingWater.txid') // 区块链交易ID\n      ];\n    },\n    userInfoIsReady: function userInfoIsReady() {\n      return this.$store.state.baseData.userInfoIsReady;\n    },\n    // 用户是否开启手机\n    OpenMobile: function OpenMobile() {\n      var flag = false;\n      var userInfo = this.$store.state.baseData.userInfo;\n\n      if (userInfo && userInfo.isOpenMobileCheck.toString() === '1') {\n        flag = true;\n      }\n\n      return flag;\n    },\n    idAuth: function idAuth() {\n      var userInfo = this.$store.state.baseData.userInfo;\n      var idAuth = 0;\n\n      if (userInfo) {\n        idAuth = Number(userInfo.authLevel);\n      }\n\n      return idAuth;\n    },\n    // 用户是否开启谷歌\n    OpenGoogle: function OpenGoogle() {\n      var flag = false;\n      var userInfo = this.$store.state.baseData.userInfo;\n\n      if (userInfo && userInfo.googleStatus.toString() === '1') {\n        flag = true;\n      }\n\n      return flag;\n    },\n    // phoneValue 是否复合正则验证\n    phoneValueFlag: function phoneValueFlag() {\n      return this.$store.state.regExp.verification.test(this.phoneValue);\n    },\n    // googleValue 是否复合正则验证\n    googleValueFlag: function googleValueFlag() {\n      return this.$store.state.regExp.verification.test(this.googleValue);\n    },\n    phoneError: function phoneError() {\n      if (this.phoneValue.length !== 0 && !this.phoneValueFlag) return true;\n      return false;\n    },\n    googleError: function googleError() {\n      if (this.googleValue.length !== 0 && !this.googleValueFlag) return true;\n      return false;\n    },\n    // 弹窗确认按钮\n    dialogConfirmDisabled: function dialogConfirmDisabled() {\n      var phone = true;\n      var google = true;\n\n      if (this.OpenMobile) {\n        phone = this.phoneValueFlag;\n      }\n\n      if (this.OpenGoogle) {\n        google = this.googleValueFlag;\n      }\n\n      if (phone && google || this.dialogConfirmLoading) {\n        return false;\n      }\n\n      return true;\n    },\n    that: function that() {\n      return this;\n    },\n    // 提币数量的校验\n    // 提现条件：\n    // 1. 提现数量 > 手续费\n    // 2. 提现数量 <= 可用余额 （提现数量包含手续费）\n    // 3. 提现最小限额 =< (提现数量 -手续费) =<提现最大限额\n    numberOptions: function numberOptions() {\n      var obj = {\n        text: '',\n        // 错误提示文案\n        flag: null,\n        // 是否通过校验\n        error: null // 是否展示文案\n\n      };\n      var haveNum = parseFloat(this.detailsList[1].value) || 0; // 可用\n\n      var minNum = parseFloat(this.withdrawMin) || 0; // 最小提币额\n\n      var maxNum = parseFloat(this.withdrawMax) || 0; // 最大提币额\n\n      var daymaxNum = parseFloat(this.daywithdrawMax) || 0; // 单日最大提币额\n\n      var spk = fixD(this.numberValue - this.proceduresValue, this.showPrecision); // 提币数量减手续费\n\n      if (this.numberValue.length === 0 || parseFloat(this.numberValue) === 0) {\n        // 请输入提币数量\n        obj.text = this.$t('assets.withdraw.NumberOfCoinsError');\n        obj.flag = false;\n        obj.error = false;\n        return obj;\n      }\n\n      if (parseFloat(this.numberValue) <= parseFloat(this.proceduresValue)) {\n        // 提币数量需大于矿工手续费\n        obj.text = this.$t('assets.withdraw.NumberOfCoinsError2');\n        obj.flag = false;\n        obj.error = true;\n        return obj;\n      }\n\n      if (parseFloat(this.numberValue) > haveNum) {\n        // 提币数量不得大于可用余额\n        obj.text = this.$t('assets.withdraw.NumberOfCoinsError3');\n        obj.flag = false;\n        obj.error = true;\n        return obj;\n      }\n\n      if (parseFloat(minNum) > spk || parseFloat(maxNum) < spk) {\n        // （提币数量-矿工手续费）需要大于最小提币额且小于最大提币额\n        obj.text = this.$t('assets.withdraw.NumberOfCoinsError4');\n        obj.flag = false;\n        obj.error = true;\n        return obj;\n      }\n\n      if (this.switchadd === 1) {\n        if (parseFloat(daymaxNum) < spk) {\n          // （提币数量-矿工手续费）需要小于单日最大提币额\n          obj.text = this.$t('assets.withdraw.NumberOfCoinsError5');\n          obj.flag = false;\n          obj.error = true;\n          return obj;\n        }\n      }\n\n      obj.flag = true;\n      obj.error = false;\n      return obj;\n    },\n    // 手续费的校验\n    proceduresFlag: function proceduresFlag() {\n      var flag = null;\n\n      if (this.feeMin !== '--' && this.feeMax !== '--') {\n        if (parseFloat(this.feeMin) > parseFloat(this.proceduresValue)) {\n          flag = false;\n        } else if (parseFloat(this.feeMax) < parseFloat(this.proceduresValue)) {\n          flag = false;\n        } else if (this.proceduresValue.length <= 0) {\n          flag = false;\n        } else {\n          flag = true;\n        }\n      }\n\n      return flag;\n    },\n    // 手续费框是否展示为错误\n    proceduresError: function proceduresError() {\n      if (this.proceduresValue.length && !this.proceduresFlag) return true;\n      return false;\n    },\n    baseData: function baseData() {\n      return this.$store.state.baseData.publicInfo;\n    },\n    // 提现是否开启了必须实名认证\n    withdrawKycOpen: function withdrawKycOpen() {\n      var isOpen = 0;\n\n      if (this.baseData && this.baseData.kycLimitConfig) {\n        isOpen = this.baseData.kycLimitConfig.withdraw_kyc_open;\n      }\n\n      return Number(isOpen);\n    },\n    navTab: function navTab() {\n      var arr = [{\n        name: this.$t('assets.withdraw.withdraw'),\n        index: 1\n      }]; // 站内\n\n      if (this.exchangeData && this.symbol) {\n        if (this.exchangeData.allCoinMap[this.symbol].innerTransferOpen && this.$store.state.baseData.is_inner_transfer_open) {\n          arr.push({\n            name: this.$t('assets.withdraw.innerTranfer'),\n            index: 2\n          });\n        }\n      }\n\n      return arr;\n    },\n    navTabTable: function navTabTable() {\n      var arr = [{\n        name: this.$t('assets.withdraw.RecentWithdrawalRecords'),\n        index: 1\n      }]; // 站内];\n\n      if (this.exchangeData && this.symbol) {\n        if (this.exchangeData.allCoinMap[this.symbol].innerTransferOpen && this.$store.state.baseData.is_inner_transfer_open) {\n          arr.push({\n            name: this.$t('assets.withdraw.innerList'),\n            index: 2\n          });\n        }\n      }\n\n      return arr;\n    }\n  },\n  methods: {\n    defInit: function defInit() {\n      if (!this.exchangeData) {\n        this.$store.dispatch('assetsExchangeData');\n      } else {\n        this.initDetails();\n      }\n    },\n    // tab切换\n    currentType: function currentType(item) {\n      this.nowType = item.index;\n\n      if (this.nowType === 1) {\n        // this.branchInit(this.market);\n        this.nowTypeTable = 1;\n        this.paginationObj.currentPage = 1; // 页码\n\n        this.paginationObj.total = 0; // 总条数\n\n        this.tabelList = [];\n        this.canAlert();\n        this.addressInit();\n      } else if (this.nowType === 2) {\n        this.nowTypeTable = 2;\n        this.paginationObj.currentPage = 1; // 页码\n\n        this.paginationObj.total = 0; // 总条数\n\n        this.tabelList = [];\n        this.getTableList();\n      } // this.symbol = 'all'\n      // this.paginationObj.currentPage = 1; // 页码\n      // this.paginationObj.total = 0; // 总条数\n      // this.tabelList = [];\n\n    },\n    // LIST tab切换\n    currentTypeTable: function currentTypeTable(item) {\n      this.nowTypeTable = item.index;\n\n      if (this.nowTypeTable === 1) {\n        this.paginationObj.currentPage = 1; // 页码\n\n        this.paginationObj.total = 0; // 总条数\n\n        this.tabelList = [];\n        this.getTableList();\n      } else if (this.nowTypeTable === 2) {\n        this.paginationObj.currentPage = 1; // 页码\n\n        this.paginationObj.total = 0; // 总条数\n\n        this.tabelList = [];\n        this.getTableList();\n      }\n    },\n    setActiveBranch: function setActiveBranch(v) {\n      this.addressValue = ''; // 提现地址\n\n      this.pagesValue = ''; // 地址标签\n\n      this.numberValue = ''; // 提币数量\n\n      this.defaultFee = '';\n      this.defaultFeeFlag = true;\n      this.proceduresValue = ''; // 手续费\n\n      this.feeMin = '--';\n      this.feeMax = '--';\n      this.activeBranch = v;\n      this.addressList = [];\n      this.detailsAddressList = {};\n      this.getAddress();\n    },\n    init: function init() {\n      var _this = this;\n\n      // 如果不存在币种跳走\n      if (this.$route.query.symbol) {\n        this.symbol = this.$route.query.symbol.toUpperCase();\n      } else {\n        this.$router.push('/assets/exchangeAccount');\n      }\n\n      if (this.userInfoIsReady) {\n        this.canAlert();\n      }\n\n      this.$bus.$on('innerList', function () {\n        _this.nowTypeTable = 2;\n        _this.paginationObj.currentPage = 1; // 页码\n\n        _this.paginationObj.total = 0; // 总条数\n\n        _this.tabelList = [];\n\n        _this.getTableList();\n      });\n    },\n    canAlert: function canAlert() {\n      var _this2 = this;\n\n      if (this.OpenGoogle || !this.enforceGoogleAuth && this.OpenMobile) {\n        this.alertFlag = false;\n      } else {\n        setTimeout(function () {\n          _this2.alertFlag = true;\n        }, 100);\n      }\n    },\n    alertClone: function alertClone() {\n      this.alertFlag = false;\n      this.notIdShowDialog = false;\n    },\n    alertGo: function alertGo() {\n      this.$router.push('/personal/userManagement');\n    },\n    goAddress: function goAddress() {\n      this.$router.push('/assets/addressMent');\n    },\n    inputChange: function inputChange(v, name) {\n      this[name] = v;\n    },\n    addressInit: function addressInit() {\n      // 该币种是否有标签\n      // const { tokenBase } = this.market.coinList[this.symbol];\n      // const { tagType } = this.market.coinList[this.symbol];\n      // if (tagType === 1 || tagType === 2) {\n      //   this.isHavePage = true;\n      // }\n\n      /*  if (this.havePageArr.indexOf(tokenBase) !== -1) {\r\n        this.isHavePage = true;\r\n      } */\n      // 获取table表数据\n      this.getTableList();\n      this.getAddress();\n    },\n    // 上半部分 左侧数据\n    initDetails: function initDetails() {\n      var obj = this.exchangeData.allCoinMap[this.symbol];\n      var normalBalance = Number(obj.normal_balance) || Number(obj.overcharge_balance);\n      this.detailsList = [{\n        key: 'sum',\n        value: fixD(obj.total_balance, this.showPrecision)\n      }, // 总额\n      {\n        key: 'normal',\n        value: fixD(normalBalance, this.showPrecision)\n      }, // 可用\n      {\n        key: 'lock',\n        value: fixD(obj.lock_balance, this.showPrecision)\n      } // 冻结\n      ]; // this.symbol_withdraw_msg = obj.symbol_withdraw_msg || null; // 注意事项\n      // this.withdrawMin = fixD(obj.withdraw_min, this.showPrecision); // 最小提币额\n      // this.withdrawMax = fixD(obj.withdraw_max, this.showPrecision);// 最大提币额\n      // this.daywithdrawMax = fixD(obj.withdraw_max_day, this.showPrecision);// 单日最大提币额\n      // if (!this.haveBranch) {\n      //   this.feeMin = fixD(obj.feeMin, this.showPrecision);// 最大手续费\n      //   this.feeMax = fixD(obj.feeMax, this.showPrecision);// 最大手续费\n      //   if (this.defaultFeeFlag) {\n      //     this.defaultFeeFlag = false;\n      //     this.defaultFee = `${obj.defaultFee}`;\n      //     this.proceduresValue = `${obj.defaultFee}`; // 默认手续费\n      //   }\n      // }\n    },\n    // 提现select框 change\n    addressChange: function addressChange(item) {\n      this.addressValue = item.code;\n\n      if (this.isHavePage) {\n        var _this$detailsAddressL = this.detailsAddressList[item.code].address.split('_'),\n            _this$detailsAddressL2 = _slicedToArray(_this$detailsAddressL, 2),\n            pagesValue = _this$detailsAddressL2[1];\n\n        this.pagesValue = pagesValue;\n      }\n    },\n    // 全部提现\n    allWithDraw: function allWithDraw() {\n      if (this.detailsList[1].value === '--') return;\n      this.numberValue = this.detailsList[1].value;\n    },\n    // 分页器\n    pagechange: function pagechange(v) {\n      this.paginationObj.currentPage = v;\n    },\n    getBranchAddress: function getBranchAddress() {\n      var _this3 = this;\n\n      this.axios({\n        url: 'cost/Getcost',\n        params: {\n          symbol: this.haveBranch ? this.activeBranch : this.symbol\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          var list = [];\n          var detailsList = {};\n          var userWithdrawAddrList = data.data.userWithdrawAddrList;\n          userWithdrawAddrList.forEach(function (item) {\n            var value = item.address;\n\n            if (_this3.isHavePage) {\n              var _item$address$split = item.address.split('_');\n\n              var _item$address$split2 = _slicedToArray(_item$address$split, 1);\n\n              value = _item$address$split2[0];\n            }\n\n            list.push({\n              code: \"\".concat(item.id),\n              value: value,\n              label: item.label\n            });\n            detailsList[item.id] = item;\n          });\n          var vf = _this3.haveBranch ? _this3.branchShowPrecision : _this3.showPrecision;\n          _this3.feeMin = fixD(data.data.feeMin, vf); // 最大手续费\n\n          _this3.feeMax = fixD(data.data.feeMax, vf); // 最大手续费\n\n          _this3.withdrawMin = fixD(data.data.withdraw_min, vf); // 最小提币额\n\n          _this3.withdrawMax = fixD(data.data.withdraw_max, vf); // 最大提币额\n\n          if (_this3.defaultFeeFlag) {\n            _this3.defaultFeeFlag = false;\n            _this3.defaultFee = \"\".concat(data.data.defaultFee);\n            _this3.proceduresValue = \"\".concat(data.data.defaultFee); // 默认手续费\n          }\n\n          _this3.branchTip = data.data.mainChainNameTip;\n          _this3.tabelLoading = false;\n          _this3.addressList = list;\n          _this3.detailsAddressList = detailsList;\n        }\n      });\n    },\n    // 获取提现地址\n    getAddress: function getAddress() {\n      var _this4 = this;\n\n      var flag = true; // this.haveBranch ||\n\n      if (flag) {\n        this.getBranchAddress();\n        return;\n      }\n\n      this.axios({\n        url: 'addr/address_list',\n        params: {\n          coinSymbol: this.haveBranch ? this.activeBranch : this.symbol\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          var list = [];\n          var detailsList = {};\n          var addressList = data.data.addressList;\n          addressList.forEach(function (item) {\n            var value = item.address;\n\n            if (_this4.isHavePage) {\n              var _item$address$split3 = item.address.split('_');\n\n              var _item$address$split4 = _slicedToArray(_item$address$split3, 1);\n\n              value = _item$address$split4[0];\n            }\n\n            list.push({\n              code: \"\".concat(item.id),\n              value: value,\n              label: item.label\n            });\n            detailsList[item.id] = item;\n          });\n          _this4.tabelLoading = false;\n          _this4.addressList = list;\n          _this4.detailsAddressList = detailsList;\n        }\n      });\n    },\n    // 获取验证码\n    getCodeClick: function getCodeClick() {\n      this.sendSmsCode();\n    },\n    // 发送验证码\n    sendSmsCode: function sendSmsCode() {\n      var _this5 = this;\n\n      this.axios({\n        url: 'v4/common/smsValidCode',\n        params: {\n          operationType: '10'\n        }\n      }).then(function (data) {\n        if (data.code.toString() !== '0') {\n          setTimeout(function () {\n            // 倒计时重置\n            _this5.$bus.$emit('getCode-clear', 'withdrawGetcode'); // tip框提示错误\n\n\n            _this5.$bus.$emit('tip', {\n              text: data.msg,\n              type: 'error'\n            });\n          }, 2000);\n        } else {\n          _this5.$bus.$emit('tip', {\n            text: _this5.$t('assets.withdraw.phoneSendSuccess'),\n            type: 'success'\n          });\n        }\n      });\n    },\n    withdrawClick: function withdrawClick() {\n      if (this.OpenGoogle || !this.enforceGoogleAuth && this.OpenMobile) {\n        if (this.withdrawKycOpen && this.idAuth !== 1) {\n          this.notIdShowDialog = true;\n          return;\n        }\n\n        this.dialogFlag = true;\n        return;\n      }\n\n      this.alertFlag = true;\n    },\n    // 弹窗关闭\n    dialogClose: function dialogClose() {\n      this.phoneValue = '';\n      this.googleValue = '';\n      this.dialogFlag = false;\n    },\n    // 弹窗确认\n    dialogConfirm: function dialogConfirm() {\n      var _this6 = this;\n\n      this.dialogConfirmLoading = true;\n      var pv = this.haveBranch ? this.branchShowPrecision : this.showPrecision;\n      var amount = fixD(this.numberValue - this.proceduresValue, pv);\n      this.axios({\n        url: 'finance/do_withdraw',\n        params: {\n          addressId: this.addressValue,\n          // 提现地址id\n          fee: this.proceduresValue,\n          // 手续费\n          amount: amount,\n          // 提现金额（不包含手续费\n          googleCode: this.googleValue,\n          smsAuthCode: this.phoneValue,\n          symbol: this.haveBranch ? this.activeBranch : this.symbol\n        }\n      }).then(function (data) {\n        _this6.dialogConfirmLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this6.getTableList(); // 获取列表\n\n\n          _this6.$store.dispatch('assetsExchangeData'); // 更新额度\n\n\n          _this6.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this6.addressValue = '';\n          _this6.pagesValue = '';\n          _this6.numberValue = '';\n          _this6.proceduresValue = _this6.defaultFee;\n          _this6.phoneValue = '';\n          _this6.googleValue = '';\n          _this6.dialogFlag = false;\n        } else {\n          _this6.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 撤销操作\n    tableClick: function tableClick(type, id) {\n      var _this7 = this;\n\n      if (type === 'revoke') {\n        var even = {};\n        this.tabelList.forEach(function (item) {\n          if (item.id === id) {\n            even = item;\n          }\n        });\n\n        if (this.revokeList.indexOf(even.id) === -1) {\n          this.revokeList.push(even.id);\n          this.axios({\n            url: '/finance/cancel_withdraw',\n            headers: {},\n            params: {\n              withdrawId: even.id\n            },\n            method: 'post'\n          }).then(function (data) {\n            var ind = _this7.revokeList.indexOf(even.id);\n\n            _this7.revokeList.splice(ind, 1);\n\n            if (data.code.toString() === '0') {\n              _this7.getTableList();\n\n              _this7.$store.dispatch('assetsExchangeData'); // 更新额度\n\n\n              _this7.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'success'\n              });\n            } else {\n              _this7.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'error'\n              });\n            }\n          });\n        }\n      }\n\n      if (type === 'subView') {\n        this.subTableDataId = id.id;\n        this.subTableData = [];\n        this.financeListData.forEach(function (item) {\n          if (item.id === _this7.subTableDataId) {\n            var address = item.addressTo;\n\n            if (_this7.isHavePage) {\n              var _address$split = address.split('_'),\n                  _address$split2 = _slicedToArray(_address$split, 1),\n                  newAddress = _address$split2[0];\n\n              address = newAddress;\n            }\n\n            _this7.subTableData.push([address, // 地址\n            item.walletTime ? formatTime(item.walletTime) : '---', item.txid || '---']);\n          }\n        });\n      }\n    },\n    // 获取提现记录数据\n    getTableList: function getTableList() {\n      var _this8 = this;\n\n      this.axios({\n        url: 'record/new_withdraw_list',\n        params: {\n          pageSize: this.paginationObj.display,\n          // 每页条数\n          page: this.paginationObj.currentPage,\n          // 页码\n          coinSymbol: this.symbol,\n          type: this.nowTypeTable\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          var list = [];\n          _this8.financeListData = data.data.financeList;\n          data.data.financeList.forEach(function (item) {\n            if (_this8.nowTypeTable === 1) {\n              list.push({\n                id: item.id,\n                data: [item.createdAt, // 时间\n                fixD(item.amount, _this8.showPrecision), // 充值数量\n                fixD(item.fee, _this8.showPrecision), // 手续费\n                item.label, // 备注\n                item.status_text, // 状态\n                _this8.handleButton(item)]\n              });\n            } else if (_this8.nowTypeTable === 2) {\n              list.push({\n                id: item.id,\n                data: [item.createdAt, // 时间\n                item.addressTo, // 对方账号\n                fixD(item.amount, _this8.showPrecision), // 充值数量\n                fixD(item.fee, _this8.showPrecision), // 手续费\n                item.status_text // 状态\n                ]\n              });\n            }\n          });\n          _this8.tabelList = list;\n          _this8.paginationObj.total = data.data.count > 30 ? 30 : data.data.count;\n        }\n      });\n    },\n    handleButton: function handleButton(item) {\n      var arr = [];\n\n      if (item.status === 0) {\n        arr.push({\n          type: 'button',\n          // 'link' ' button' ,'html', 'label', 'icon' ‘str’\n          text: this.$t('assets.flowingWater.Cancel'),\n          iconClass: [''],\n          eventType: 'revoke'\n        });\n      }\n\n      arr.push({\n        type: 'subTable',\n        text: this.$t('trade.view'),\n        // 详情\n        eventType: 'subView'\n      });\n      return arr;\n    },\n    // 去认证\n    gotoAuth: function gotoAuth() {\n      this.$router.push('/personal/userManagement');\n    }\n  }\n};",null]}