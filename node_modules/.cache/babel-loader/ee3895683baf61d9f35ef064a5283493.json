{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/personal/kycAuthselect/kycAuthselect.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/personal/kycAuthselect/kycAuthselect.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n// @ is an alias to /src\nimport { imgMap } from '@/utils';\nimport exccAuthType1s from '@/assets/images/1/exccAuthType1.png';\nimport exccAuthType2s from '@/assets/images/1/exccAuthType2.png';\nvar imgExccAuthType1 = imgMap.exccAuthType1;\nvar imgExccAuthType2 = imgMap.exccAuthType2;\nexport default {\n  name: 'kycAuthselect',\n  props: {\n    countryVal: {\n      default: '',\n      type: String\n    },\n    countryKeyCodeVal: {\n      default: '',\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      kycLoading: false,\n      imgExccAuthType1: imgExccAuthType1 || exccAuthType1s,\n      imgExccAuthType2: imgExccAuthType2 || exccAuthType2s,\n      kycExccFlag: false,\n      exccAuthType: '1',\n      state: 'KYC_AUTH'\n    };\n  },\n  watch: {\n    exccKycConfig: function exccKycConfig(_exccKycConfig) {\n      if (_exccKycConfig && _exccKycConfig.text) {\n        this.kycLoading = false;\n\n        if (_exccKycConfig.text === 'success') {\n          var fromPath = 'idAuth';\n\n          if (_exccKycConfig.data) {\n            if (_exccKycConfig.data.openSingPass === '0') {\n              if (_exccKycConfig.data.verfyTemplet === '2') {\n                fromPath = 'exccAuthForm';\n              }\n\n              this.$router.push(\"/personal/\".concat(fromPath, \"?country=\").concat(this.countryVal, \"&countryKeyCode=\").concat(this.countryKeyCodeVal));\n            } else {\n              this.kycExccFlag = true;\n            }\n          }\n        } else {\n          this.$bus.$emit('tip', {\n            text: _exccKycConfig.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    }\n  },\n  computed: {\n    exccKycConfig: function exccKycConfig() {\n      return this.$store.state.personal.exccKycConfig;\n    }\n  },\n  methods: {\n    init: function init() {\n      var pathsArr = this.$route.path.split('/');\n      var paths = pathsArr[pathsArr.length - 1];\n      this.query = this.$route.query;\n\n      if (this.$route.query.state === this.state && this.$route.query.code) {\n        this.$router.push(\"/personal/exccAuthorization?code=\".concat(this.$route.query.code));\n      } else if (this.$route.query.state === this.state && this.$route.query.error) {\n        this.$bus.$emit('tip', {\n          text: this.$t('personal.exccAuth.errorText1'),\n          type: 'error'\n        });\n        this.$router.push(\"/personal/userManagement?kycError=\".concat(this.$route.query.error, \"&state=\").concat(this.state));\n      } else if (!this.countryVal && !this.countryKeyCodeVal && paths === 'kycAuth') {\n        this.$router.push('/personal/userManagement');\n      }\n    },\n    kycExccClose: function kycExccClose() {\n      this.kycExccFlag = false;\n    },\n    callAuthoriseApi: function callAuthoriseApi() {\n      var _ref = this.exccKycConfig ? this.exccKycConfig.data : null,\n          SingPassConfig = _ref.SingPassConfig;\n\n      if (SingPassConfig && SingPassConfig.url) {\n        // const purpose = JSON.stringify(new Date().getTime());\n        var authoriseUrl = \"\".concat(SingPassConfig.url, \"?client_id=\").concat(SingPassConfig.clientId, \"&attributes=\").concat(SingPassConfig.attributes, \"&purpose=\").concat(SingPassConfig.purpose, \"&state=\").concat(this.state, \"&redirect_uri=\").concat(SingPassConfig.returnUrl);\n        window.open(authoriseUrl);\n      } else {\n        this.$bus.$emit('tip', {\n          text: '接口异常，请联系管理员',\n          type: 'error'\n        });\n      }\n    },\n    kycExccConfirm: function kycExccConfirm() {\n      if (this.exccAuthType === '1') {\n        var fromPath = 'idAuth';\n\n        if (this.exccKycConfig && this.exccKycConfig.data && this.exccKycConfig.data.verfyTemplet === '2') {\n          fromPath = 'exccAuthForm';\n        }\n\n        this.$router.push(\"/personal/\".concat(fromPath, \"?country=\").concat(this.countryVal, \"&countryKeyCode=\").concat(this.countryKeyCodeVal));\n      } else {\n        this.callAuthoriseApi();\n      }\n    },\n    clickSlectType: function clickSlectType(id) {\n      this.exccAuthType = id;\n    }\n  }\n};",null]}