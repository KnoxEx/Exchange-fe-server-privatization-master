{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/Downloads/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/orderList/orderList.js","dependencies":[{"path":"/Users/h/Downloads/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/orderList/orderList.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { imgMap, colorMap, formatTime, fixD, nul, division, thousandsComma as _thousandsComma, myStorage } from '@/utils';\nexport default {\n  name: 'orderList',\n  data: function data() {\n    return {\n      // 订单类型：0：持有仓位 1：当前委托 2：当日成交 3：历史委托 4: 盈亏记录 5: '成交记录'\n      orderType: 0,\n      imgMap: imgMap,\n      colorMap: colorMap,\n      pagination: {\n        // 翻页数据\n        count: 0,\n        // 总数量\n        pageSize: 10,\n        // 每页显示条数\n        page: 1 // 当前页数\n\n      },\n      // 撤销订单 防止重复点击\n      cancelFla: true,\n      tableLoading: false,\n      cancelOrderId: null,\n      timer: 15000,\n      // 当前操作的合约数据（修改保证金，平仓，全仓）\n      currentOrder: {},\n      // 当前委托列表\n      currentOrderLis: [],\n      // table使用的 数量列表\n      dataList: [],\n      cellHeight: 56,\n      revokeList: [],\n      // 条件单显示类别\n      triggeType: 0,\n      // 轮训请求订单\n      getDataTimer: null,\n      // 只显示当前合约开关\n      isShowCurPosition: myStorage.get('isShowCurPosition'),\n      // 仓位数量\n      positionListNumber: 0\n    };\n  },\n  watch: {\n    orderType: function orderType(val) {\n      this.dataList = [];\n      clearInterval(this.getDataTimer);\n      this.getDataTimer = null;\n\n      if (val > 0) {\n        this.getOrderList();\n      } // if (val > 3) {\n      //   this.cellHeight = 28;\n      // } else {\n      //   this.cellHeight = 56;\n      // }\n\n    },\n    currentOrderLis: function currentOrderLis(data) {\n      if (data && data.length && this.orderType > 0 && this.orderType < 3) {\n        clearInterval(this.getDataTimer);\n        this.getDataTimer = null;\n        this.intervalGetData();\n      } else {\n        clearInterval(this.getDataTimer);\n        this.getDataTimer = null;\n      }\n    },\n    coUnitType: function coUnitType() {\n      this.getOrderList();\n\n      if (this.orderType === 1) {\n        this.formatCurrentData();\n      }\n    },\n    contractId: function contractId() {\n      this.getOrderList();\n    },\n    orderCount: function orderCount() {\n      this.$store.dispatch('getUserConfig');\n    }\n  },\n  computed: {\n    // 是否 是云合约在iframe中调用\n    isIframe: function isIframe() {\n      return this.$store.state.future.isIframe;\n    },\n    lanText: function lanText() {\n      return {\n        tabType1: this.$t('futures.orderList.tabType1'),\n        // 仓位\n        tabType2: this.$t('futures.orderList.tabType2'),\n        // 普通委托\n        tabType3: this.$t('futures.orderList.tabType3'),\n        // 条件委托\n        tabType4: this.$t('futures.orderList.tabType4'),\n        // 历史委托\n        tabType5: this.$t('futures.orderList.tabType5'),\n        // 资金流水\n        subTabType1: this.$t('futures.orderList.subTabType1'),\n        // 所有\n        subTabType2: this.$t('futures.orderList.subTabType2'),\n        // 止损单\n        subTabType3: this.$t('futures.orderList.subTabType3'),\n        // 止盈单\n        a_columns_1: this.$t('futures.orderList.a_columns_1'),\n        // 合约\n        a_columns_2: this.$t('futures.orderList.a_columns_2'),\n        // 方向\n        a_columns_3: this.$t('futures.orderList.a_columns_3'),\n        // 数量\n        a_columns_4: this.$t('futures.orderList.a_columns_4'),\n        // 完成度\n        a_columns_5: this.$t('futures.orderList.a_columns_5'),\n        // 委托价格\n        a_columns_6: this.$t('futures.orderList.a_columns_6'),\n        // 成交均价\n        a_columns_7: this.$t('futures.orderList.a_columns_7'),\n        // 类型\n        a_columns_8: this.$t('futures.orderList.a_columns_8'),\n        // 只减仓\n        a_columns_9: this.$t('futures.orderList.a_columns_9'),\n        // 时间\n        a_columns_10: this.$t('futures.orderList.a_columns_10'),\n        // 操作\n        b_columns_1: this.$t('futures.orderList.b_columns_1'),\n        // 合约\n        b_columns_2: this.$t('futures.orderList.b_columns_2'),\n        // 方向\n        b_columns_3: this.$t('futures.orderList.b_columns_3'),\n        // 触发价格\n        b_columns_4: this.$t('futures.orderList.b_columns_4'),\n        // 委托价格\n        b_columns_5: this.$t('futures.orderList.b_columns_5'),\n        // 委托数量/价值\n        b_columns_6: this.$t('futures.orderList.b_columns_6'),\n        // 类型\n        b_columns_7: this.$t('futures.orderList.b_columns_7'),\n        // 只减仓\n        b_columns_8: this.$t('futures.orderList.b_columns_8'),\n        // 提交时间\n        b_columns_9: this.$t('futures.orderList.b_columns_9'),\n        // 过期时间\n        c_columns_1: this.$t('futures.orderList.c_columns_1'),\n        // 合约\n        c_columns_2: this.$t('futures.orderList.c_columns_2'),\n        // 类型\n        c_columns_3: this.$t('futures.orderList.c_columns_3'),\n        // 方向\n        c_columns_4: this.$t('futures.orderList.c_columns_4'),\n        // 委托价格\n        c_columns_5: this.$t('futures.orderList.c_columns_5'),\n        // 委托数量/价值\n        c_columns_6: this.$t('futures.orderList.c_columns_6'),\n        // 成交数量\n        c_columns_7: this.$t('futures.orderList.c_columns_7'),\n        // 成交均价\n        c_columns_8: this.$t('futures.orderList.c_columns_8'),\n        // 盈亏\n        c_columns_9: this.$t('futures.orderList.c_columns_9'),\n        // 状态\n        c_columns_10: this.$t('futures.orderList.c_columns_10'),\n        // 时间\n        c_columns_11: this.$t('futures.orderList.c_columns_11'),\n        // 手续费\n        d_columns_1: this.$t('futures.orderList.d_columns_1'),\n        // 时间\n        d_columns_2: this.$t('futures.orderList.d_columns_2'),\n        // 类型\n        d_columns_3: this.$t('futures.orderList.d_columns_3'),\n        // 金额\n        d_columns_4: this.$t('futures.orderList.d_columns_4'),\n        // 币种\n        typeStatus1: this.$t('futures.orderList.typeStatus1'),\n        // 限价单\n        typeStatus2: this.$t('futures.orderList.typeStatus2'),\n        // 市价单\n        typeStatus3: this.$t('futures.orderList.typeStatus3'),\n        // 只做maker\n        typeStatus4: this.$t('futures.orderList.typeStatus4'),\n        // 强制减仓\n        typeStatus5: this.$t('futures.orderList.typeStatus5'),\n        // 仓位合并\n        getStatus1: this.$t('futures.orderList.getStatus1'),\n        // 新订单\n        getStatus2: this.$t('futures.orderList.getStatus2'),\n        // 完全成交\n        getStatus3: this.$t('futures.orderList.getStatus3'),\n        // 部分成交\n        getStatus4: this.$t('futures.orderList.getStatus4'),\n        // 已取消\n        getStatus5: this.$t('futures.orderList.getStatus5'),\n        // 待撤销\n        getStatus6: this.$t('futures.orderList.getStatus6'),\n        // 异常订单\n        getStatus7: this.$t('futures.orderList.getStatus7'),\n        // 部分成交已撤销\n        sideT1: this.$t('futures.orderList.sideT1'),\n        // 开\n        sideT2: this.$t('futures.orderList.sideT2'),\n        // 平\n        sideT3: this.$t('futures.orderList.sideT3'),\n        // 空\n        sideT4: this.$t('futures.orderList.sideT4'),\n        // 多\n        mPrice: this.$t('futures.orderList.mPrice'),\n        // 市价\n        isclose1: this.$t('futures.orderList.isclose1'),\n        // 是\n        isclose2: this.$t('futures.orderList.isclose2'),\n        // 否\n        cancel: this.$t('futures.orderList.cancel'),\n        // 取消\n        allCancel: this.$t('futures.orderList.allCancel'),\n        // 全部取消\n        tstext1: this.$t('futures.orderList.tstext1'),\n        // 请\n        tstext2: this.$t('futures.orderList.tstext2'),\n        // 登录/注册\n        tstext3: this.$t('futures.orderList.tstext3'),\n        // 再进行操作\n        text14: this.$t('futures.positionLis.text14'),\n        text15: this.$t('futures.positionLis.text15')\n      };\n    },\n    // tab 项\n    tabTypeItem: function tabTypeItem() {\n      return [// 持仓\n      this.isLogin ? \"\".concat(this.lanText.tabType1, \" (\").concat(this.positionListNumber, \")\") : this.lanText.tabType1, this.isLogin ? \"\".concat(this.lanText.tabType2, \" (\").concat(this.orderCount, \")\") : this.lanText.tabType2, // '普通委托'\n      this.isLogin ? \"\".concat(this.lanText.tabType3, \" (\").concat(this.triggerOrderCount, \")\") : this.lanText.tabType3, // '条件委托'\n      this.lanText.tabType4, // '历史委托'\n      // this.lanText.tabType5, // '资金流水'\n      this.$t('futures.orderList.newText1'), // '盈亏记录',\n      this.$t('futures.orderList.newText2') // '成交记录',\n      ];\n    },\n    // 条件单（筛选项）\n    subTabTypeItem: function subTabTypeItem() {\n      return [this.lanText.subTabType1, // '所有',\n      this.lanText.subTabType2, // '止损单',\n      this.lanText.subTabType3 // '止盈单',\n      ];\n    },\n    // 合约列表 MAP\n    contractListMap: function contractListMap() {\n      return this.$store.state.future.contractListMap;\n    },\n    // 当前合约ID\n    contractId: function contractId() {\n      return this.$store.state.future.contractId;\n    },\n    // 仓位数量\n    // positionListNumber() {\n    //   if (this.$store.state.future.positionListNumber) {\n    //     return this.$store.state.future.positionListNumber;\n    //   }\n    //   return '0';\n    // },\n    // 当前合约信息\n    contractInfo: function contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 当前合约方向（1正向、0反向）\n    contractSide: function contractSide() {\n      if (this.contractInfo) {\n        return this.contractInfo.contractSide;\n      }\n\n      return 1;\n    },\n    // 当前合约保证金币种\n    marginCoin: function marginCoin() {\n      if (this.contractInfo) {\n        return this.contractInfo.marginCoin;\n      }\n\n      return '';\n    },\n    // 当前合约币种精度\n    coinfix: function coinfix() {\n      return this.$store.state.future.coinfix;\n    },\n    // 当前合约价格精度\n    pricefix: function pricefix() {\n      return this.$store.state.future.pricefix;\n    },\n    // 当前合约保证金币种精度\n    marginCoinFix: function marginCoinFix() {\n      if (this.contractInfo && this.contractInfo.coinResultVo) {\n        return this.contractInfo.coinResultVo.marginCoinPrecision;\n      }\n\n      return 4;\n    },\n    // 数量单位类型Number(1标的货币 2张)\n    coUnitType: function coUnitType() {\n      return this.$store.state.future.coUnitType;\n    },\n    // 当前合约面值\n    multiplier: function multiplier() {\n      return Number(this.$store.state.future.multiplier) || 1;\n    },\n    // 当前合约数量精度\n    volfix: function volfix() {\n      if (this.coUnitType === 1) {\n        return this.$store.state.future.volfix;\n      }\n\n      return 0;\n    },\n    // 当前合约数量单位\n    volUnit: function volUnit() {\n      return this.$store.state.future.coUnit;\n    },\n    // 当前合约价格单位\n    priceUnit: function priceUnit() {\n      return this.$store.state.future.priceUnit;\n    },\n    // 当前普通单委托数量\n    orderCount: function orderCount() {\n      return this.$store.state.future.orderCount;\n    },\n    // 当前条件单委托数量\n    triggerOrderCount: function triggerOrderCount() {\n      return this.$store.state.future.triggerOrderCount;\n    },\n    // 表头\n    columns: function columns() {\n      if (this.orderType === 1) {\n        return [{\n          title: this.lanText.a_columns_1,\n          // 合约\n          width: '120px',\n          classes: 'symbol',\n          styleClass: 'symbol-name'\n        }, {\n          title: this.lanText.a_columns_2,\n          // 方向\n          width: '60px'\n        }, {\n          title: \"\".concat(this.lanText.a_columns_3, \"(\").concat(this.volUnit, \")\"),\n          // 数量\n          width: '150px'\n        }, {\n          title: this.lanText.a_columns_4,\n          // 完成度\n          width: '120px'\n        }, {\n          title: this.lanText.a_columns_5,\n          // 委托价格\n          width: '180px'\n        }, {\n          title: this.lanText.a_columns_6,\n          // 成交均价\n          width: '180px'\n        }, {\n          title: this.lanText.a_columns_7,\n          // 类型\n          width: '80px'\n        }, {\n          title: this.lanText.a_columns_8,\n          // 只减仓\n          width: '100px'\n        }, {\n          title: this.lanText.a_columns_9,\n          // 时间\n          width: '100px'\n        }, {\n          title: this.lanText.a_columns_10,\n          // 操作\n          width: '100px',\n          classes: 'opera',\n          styleClass: 'opera-btn'\n        }];\n      }\n\n      if (this.orderType === 2) {\n        return [{\n          title: this.lanText.b_columns_1,\n          // 合约\n          width: '100px'\n        }, {\n          title: this.lanText.b_columns_2,\n          // 方向\n          width: '80px'\n        }, {\n          title: this.lanText.b_columns_3,\n          // 触发价格\n          width: '180px'\n        }, {\n          title: this.lanText.b_columns_4,\n          // 委托价格\n          width: '180px'\n        }, {\n          title: this.lanText.b_columns_5,\n          // 委托数量/价值\n          width: '180px'\n        }, {\n          title: this.lanText.b_columns_6,\n          // 类型\n          width: '100px'\n        }, {\n          title: this.lanText.b_columns_7,\n          // 只减仓\n          width: '80px'\n        }, {\n          title: this.lanText.b_columns_8,\n          // 提交时间\n          width: '100px'\n        }, {\n          title: this.lanText.b_columns_9,\n          // 过期时间\n          width: '100px'\n        }, {\n          title: this.lanText.a_columns_10,\n          // 操作\n          width: '80px'\n        }];\n      }\n\n      if (this.orderType === 3) {\n        return [{\n          title: this.lanText.c_columns_1,\n          // 合约\n          width: '120px'\n        }, {\n          title: this.lanText.c_columns_2,\n          // 类型\n          width: '100px'\n        }, {\n          title: this.lanText.c_columns_3,\n          // 方向\n          width: '100px'\n        }, {\n          title: this.lanText.c_columns_4,\n          // 委托价格\n          width: '160px'\n        }, {\n          title: this.lanText.c_columns_5,\n          // 委托数量/价值\n          width: '160px'\n        }, {\n          title: \"\".concat(this.lanText.c_columns_6, \"(\").concat(this.volUnit, \")\"),\n          // 成交数量\n          width: '160px'\n        }, {\n          title: this.lanText.c_columns_7,\n          // 成交均价\n          width: '160px'\n        }, {\n          title: this.lanText.c_columns_8,\n          // 盈亏\n          width: '160px'\n        }, {\n          title: \"\".concat(this.lanText.c_columns_11, \" (\").concat(this.marginCoin, \")\"),\n          // 手续费\n          width: '160px'\n        }, // {\n        //   title: this.lanText.xxxx, // 只减仓\n        //   width: '100px',\n        // },\n        {\n          title: this.lanText.c_columns_9,\n          // 状态\n          width: '100px'\n        }, {\n          title: this.lanText.c_columns_10,\n          // 时间\n          width: '100px'\n        }];\n      }\n\n      if (this.orderType === 4) {\n        return [{\n          title: this.lanText.c_columns_1,\n          // 合约\n          width: '10%'\n        }, {\n          title: this.$t('futures.orderList.newText3'),\n          // '开仓均价',\n          width: '10%',\n          classes: 'left-text'\n        }, {\n          title: this.$t('futures.orderList.newText4'),\n          // '平仓均价',\n          width: '10%'\n        }, {\n          title: \"\".concat(this.$t('futures.orderList.newText5'), \" (\").concat(this.volUnit, \")\"),\n          // 仓位数量\n          width: '10%'\n        }, {\n          title: this.$t('futures.orderList.newText6'),\n          // '已实现盈亏',\n          promptText: this.$t('futures.orderList.newText7'),\n          // '总盈亏为该仓位持仓期间累计发生的总盈亏，总盈亏 = 手续费+资金费用+仓位盈亏',\n          width: '10%'\n        }, {\n          title: \"\".concat(this.lanText.c_columns_11, \" (\").concat(this.marginCoin, \")\"),\n          // 手续费\n          promptText: this.$t('futures.orderList.newText8'),\n          // '开仓、平仓累计总手续费',\n          width: '10%'\n        }, {\n          title: this.$t('futures.orderList.newText9'),\n          // '资金费用',\n          promptText: this.$t('futures.orderList.newText10'),\n          // '持仓期间的总资金费用',\n          width: '10%'\n        }, {\n          title: this.$t('futures.orderList.newText15'),\n          // '仓位盈亏',\n          promptText: this.$t('futures.orderList.newText11'),\n          // '仓位盈亏为仓位每次平仓的仓位盈亏之和，平仓盈亏根据 平仓前的持仓均价和平仓均价计算得出',\n          width: '10%'\n        }, {\n          title: this.$t('futures.orderList.newText12'),\n          // '分摊',\n          width: '10%'\n        }, {\n          title: this.$t('futures.orderList.newText13'),\n          // '平仓时间',\n          width: '120px'\n        }];\n      }\n\n      return [{\n        title: this.lanText.c_columns_1,\n        // 合约\n        width: '12%'\n      }, {\n        title: this.$t('futures.orderList.newText3'),\n        // '开仓均价',\n        width: '12%',\n        classes: 'left-text'\n      }, {\n        title: this.lanText.c_columns_3,\n        // 方向\n        width: '12%'\n      }, {\n        title: \"\".concat(this.lanText.c_columns_6, \"(\").concat(this.volUnit, \")\"),\n        // 成交数量\n        width: '12%'\n      }, {\n        title: this.$t('futures.orderList.newText14'),\n        // '角色',\n        width: '12%'\n      }, {\n        title: \"\".concat(this.lanText.c_columns_11, \" (\").concat(this.marginCoin, \")\"),\n        // 手续费\n        width: '12%'\n      }, {\n        title: this.lanText.c_columns_10,\n        // 时间\n        width: '120px'\n      }];\n    },\n    // 是否Login\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    // 是否开通了合约交易\n    openContract: function openContract() {\n      return this.$store.state.future.openContract;\n    },\n    bodyClasses: function bodyClasses() {\n      return \"bodyContent\".concat(this.orderType, \" a-6-bg\");\n    },\n    memoText: function memoText() {\n      return [this.$t('futures.orderList.memoText1'), this.$t('futures.orderList.memoText2'), this.$t('futures.orderList.memoText3'), this.$t('futures.orderList.memoText4'), this.$t('futures.orderList.memoText5'), this.$t('futures.orderList.memoText6'), this.$t('futures.orderList.memoText7'), this.$t('futures.orderList.memoText8')]; // return [\n      //   '用户撤销',\n      //   '订单异常，被系统撤销',\n      //   '仓位发生强平，未成交委托被系统撤销',\n      //   '对手盘不足，委托被系统取消',\n      //   'FOK订单，无法全部成交时被系统撤销',\n      //   'IOC订单，无法立即成交时部分委托被系统撤销',\n      //   '被动委托, 被动委托，撮合时为taker部分被系统撤销',\n      // ];\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      if (myStorage.get('isShowCurPosition') === undefined) {\n        this.isShowCurPosition = true;\n      }\n\n      this.getOrderList('init'); // 监听下单成功 重新请求订单\n\n      this.$bus.$on('CRAET-ORDER-SUCCESS', function () {\n        _this.getOrderList();\n\n        _this.$store.dispatch('getUserOrderCount');\n      });\n      this.$bus.$on('positionListNumber', function (data) {\n        _this.positionListNumber = data;\n      });\n    },\n    // 切换订单类型\n    switchType: function switchType(index) {\n      if (this.orderType !== index) {\n        this.orderType = index;\n\n        if (this.isLogin && this.openContract) {\n          this.tableLoading = true;\n        }\n      }\n    },\n    subSwitchType: function subSwitchType(index) {\n      if (this.triggeType !== index) {\n        this.triggeType = index;\n        this.formatTrigData();\n      }\n    },\n    // 订单类型\n    typeStatus: function typeStatus(status) {\n      var str = '';\n\n      switch (status) {\n        case 1:\n          str = this.lanText.typeStatus1; // '限价单';\n\n          break;\n\n        case 2:\n          str = this.lanText.typeStatus2; // '市价单';\n\n          break;\n\n        case 3:\n          str = 'IOC'; // 'IOC';\n\n          break;\n\n        case 4:\n          str = 'FOK'; // 'FOK';\n\n          break;\n\n        case 5:\n          str = this.lanText.typeStatus3; // '只做maker';\n\n          break;\n\n        case 6:\n          str = this.lanText.typeStatus4; // '强制减仓';\n\n          break;\n\n        case 7:\n          str = this.lanText.typeStatus5; // '仓位合并';\n\n          break;\n\n        default:\n          str = '';\n      }\n\n      return str;\n    },\n    // 订单状态\n    getStatus: function getStatus(status) {\n      var str = '';\n\n      switch (status) {\n        case 0:\n          str = this.lanText.getStatus1; // 新订单\n\n          break;\n\n        case 1:\n          str = this.lanText.getStatus1; // 新订单\n\n          break;\n\n        case 2:\n          str = this.lanText.getStatus2; // 完全成交\n\n          break;\n\n        case 3:\n          str = this.lanText.getStatus3; // 部分成交\n\n          break;\n\n        case 4:\n          str = this.lanText.getStatus4; // 已取消\n\n          break;\n\n        case 5:\n          str = this.lanText.getStatus5; // 待撤销\n\n          break;\n\n        case 6:\n          str = this.lanText.getStatus6; // 异常订单\n\n          break;\n\n        case 7:\n          str = this.lanText.getStatus7; // 部分成交已撤销\n\n          break;\n\n        default:\n          str = '';\n      }\n\n      return str;\n    },\n    // 订单数量\n    setVolume: function setVolume(volume) {\n      if (this.coUnitType === 1) {\n        return fixD(nul(volume, this.multiplier), this.volfix);\n      }\n\n      return this.thousandsComma(volume);\n    },\n    // 完成度\n    makeRate: function makeRate(dealVolume, volume) {\n      if (dealVolume && volume) {\n        // 已完成数量 / 委托数量\n        var value = nul(division(dealVolume, volume), 100);\n        return fixD(value, 2);\n      }\n\n      return 0.00;\n    },\n    // 返回订单方向\n    setSide: function setSide(data) {\n      var classes = 'u-1-cl'; // 开 ：平\n\n      var open = data.open === 'OPEN' ? this.lanText.sideT1 : this.lanText.sideT2; // 空\n\n      var side = this.lanText.sideT3;\n\n      if (data.open === 'OPEN' && data.side === 'BUY' || data.open === 'CLOSE' && data.side === 'SELL') {\n        // 多\n        side = this.lanText.sideT4;\n      }\n\n      if (data.side === 'SELL') {\n        classes = 'u-4-cl';\n      }\n\n      return [{\n        text: \"\".concat(open).concat(side),\n        classes: classes\n      }];\n    },\n    // 返回合约名称\n    setContractName: function setContractName(data) {\n      var acriveData = this.contractListMap[data.contractName];\n\n      if (acriveData) {\n        var name = '';\n        var text = '';\n\n        if (data) {\n          var nameText = acriveData.symbol ? acriveData.symbol.replace('-', '') : '';\n\n          if (acriveData.contractType !== 'E') {\n            text = \"-\".concat(acriveData.marginCoin);\n          }\n\n          name = \"\".concat(nameText).concat(text);\n        }\n\n        return name;\n      }\n\n      return data.symbol.replace('-', '');\n    },\n    // 请求订单数据\n    getOrderList: function getOrderList(type) {\n      var _this2 = this;\n\n      if (!this.isLogin || !this.openContract) return;\n      var paramsData = {\n        contractId: this.contractId\n      }; // 请求数量\n\n      this.$store.dispatch('getUserOrderCount'); // 当前委托\n\n      var url = this.$store.state.url.futures.currentOrderList; // 条件委托\n\n      if (this.orderType === 2) {\n        url = this.$store.state.url.futures.triggerOrderList;\n      } // 历史委托\n\n\n      if (this.orderType === 3) {\n        url = this.$store.state.url.futures.historyOrderList;\n      } // 盈亏记录\n\n\n      if (this.orderType === 4) {\n        url = this.$store.state.url.futures.historyPositionList;\n      } // 成交记录\n\n\n      if (this.orderType === 5) {\n        url = this.$store.state.url.futures.getTradeInfo;\n      }\n\n      this.axios({\n        url: url,\n        method: 'post',\n        hostType: 'co',\n        params: paramsData\n      }).then(function (rs) {\n        _this2.tableLoading = false;\n\n        if (rs.code === '0' && rs.data) {\n          // 当前委托\n          if (_this2.orderType === 1 || type === 'init') {\n            _this2.currentOrderLis = rs.data.orderList; // 将当前委托存储在vuex\n\n            _this2.$store.commit('CURRENT_OTDER_LIST', _this2.currentOrderLis);\n\n            _this2.formatCurrentData();\n          } // 条件委托\n\n\n          if (_this2.orderType === 2) {\n            _this2.currentOrderLis = rs.data.trigOrderList;\n\n            _this2.formatTrigData();\n          } // 历史委托\n\n\n          if (_this2.orderType === 3) {\n            _this2.currentOrderLis = rs.data.orderList;\n\n            _this2.formatHistoryData();\n          } // 盈亏记录\n\n\n          if (_this2.orderType === 4) {\n            _this2.currentOrderLis = rs.data.positionList;\n\n            _this2.formatTransData();\n          } // 成交记录\n\n\n          if (_this2.orderType === 5) {\n            _this2.currentOrderLis = rs.data.tradeList;\n\n            _this2.formatTradeInfo();\n          }\n        }\n      });\n    },\n    // 格式化当前委托订单数据\n    formatCurrentData: function formatCurrentData() {\n      var _this3 = this;\n\n      var list = [];\n\n      if (this.currentOrderLis && this.currentOrderLis.length) {\n        this.currentOrderLis.forEach(function (item) {\n          var price = null;\n\n          if (item.type === 2 && Number(item.price) === 0) {\n            price = _this3.lanText.mPrice; // '市价';\n          } else {\n            price = _this3.thousandsComma(fixD(item.price, item.pricePrecision));\n          }\n\n          list.push({\n            id: JSON.stringify(item),\n            classes: 'b-2-cl',\n            data: [// 合约\n            _this3.setContractName(item), // 方向\n            _this3.setSide(item), // 成交数量 / 委托数量\n            \"\".concat(_this3.setVolume(item.dealVolume), \" / \").concat(_this3.setVolume(item.volume)), // '完成度',\n            \"\".concat(_this3.makeRate(item.dealVolume, item.volume), \"%\"), // 委托价格\n            price, // 成交均价\n            item.pricePrecision ? _this3.thousandsComma(fixD(item.avgPrice, item.pricePrecision)) : '--', // 类型\n            _this3.typeStatus(item.type), // 只减仓\n            // '是' : '否'\n            item.open === 'CLOSE' ? _this3.lanText.isclose1 : _this3.lanText.isclose2, // 时间\n            formatTime(item.ctime), // 撤单\n            [{\n              type: 'button',\n              text: _this3.lanText.cancel,\n              // 取消\n              eventType: 'cancelOrder'\n            }]]\n          });\n        });\n      }\n\n      this.dataList = list;\n    },\n    // 格式化条件委托订单数据\n    formatTrigData: function formatTrigData() {\n      var _this4 = this;\n\n      var list = [];\n\n      if (this.currentOrderLis && this.currentOrderLis.length) {\n        this.currentOrderLis.forEach(function (item) {\n          if (_this4.triggeType && _this4.triggeType !== item.triggerType) return;\n          var price = null;\n          var volume = null;\n\n          if (item.type === 2 && Number(item.price) === 0) {\n            price = _this4.lanText.mPrice; // '市价';\n            // 价值\n\n            if (item.open === 'OPEN') {\n              // 反向\n              var unit = _this4.contractInfo.base;\n              var volfix = _this4.$store.state.future.volfix;\n              var coinFix = volfix; // 正向\n\n              if (_this4.contractSide === 1) {\n                unit = _this4.priceUnit;\n                coinFix = _this4.pricefix;\n              }\n\n              volume = \"\".concat(fixD(item.volume, coinFix), \" \").concat(unit);\n            } else {\n              volume = \"\".concat(_this4.setVolume(item.volume), \" \").concat(_this4.volUnit);\n            }\n          } else {\n            price = _this4.thousandsComma(fixD(item.price, item.pricePrecision)); // 委托数量\n\n            volume = \"\".concat(_this4.setVolume(item.volume), \" \").concat(_this4.volUnit);\n          }\n\n          list.push({\n            id: JSON.stringify(item),\n            classes: 'b-2-cl',\n            data: [// 合约\n            _this4.setContractName(item), // 方向\n            _this4.setSide(item), // 触发价格\n            _this4.thousandsComma(fixD(item.triggerPrice, item.pricePrecision)), // 委托价格\n            price, // 委托数量/价值\n            volume, // 类型\n            _this4.typeStatus(item.timeInForce), // 只减仓\n            // '是' : '否',\n            item.open === 'CLOSE' ? _this4.lanText.isclose1 : _this4.lanText.isclose2, // 提交时间\n            formatTime(item.mtime), // 过期时间\n            formatTime(item.expireTime), // 撤单\n            [{\n              type: 'button',\n              text: _this4.lanText.cancel,\n              // 取消\n              eventType: 'cancelOrder'\n            }]]\n          });\n        });\n      }\n\n      this.dataList = list;\n    },\n    // 格式化 历史委托 订单数据\n    formatHistoryData: function formatHistoryData() {\n      var _this5 = this;\n\n      var list = [];\n\n      if (this.currentOrderLis && this.currentOrderLis.length) {\n        this.currentOrderLis.forEach(function (item, index) {\n          var price = null;\n          var volume = null;\n\n          if (item.type === 2 && Number(item.price) === 0) {\n            price = _this5.lanText.mPrice; // '市价';\n            // 价值\n\n            if (item.open === 'OPEN') {\n              // 反向\n              var unit = _this5.contractInfo.base;\n              var volfix = _this5.$store.state.future.volfix;\n              var coinFix = volfix; // 正向\n\n              if (_this5.contractSide === 1) {\n                unit = _this5.priceUnit;\n                coinFix = _this5.pricefix;\n              }\n\n              volume = \"\".concat(fixD(item.volume, coinFix), \" \").concat(unit);\n            } else {\n              // 委托数量\n              volume = \"\".concat(_this5.setVolume(item.volume), \" \").concat(_this5.volUnit);\n            }\n          } else {\n            price = _this5.thousandsComma(fixD(item.price, item.pricePrecision)); // 委托数量\n\n            volume = \"\".concat(_this5.setVolume(item.volume), \" \").concat(_this5.volUnit);\n          }\n\n          var cancelCauseClass = index > 3 ? 'position-bottom' : '';\n          list.push({\n            id: JSON.stringify(item),\n            classes: 'b-2-cl',\n            data: [// 合约\n            _this5.setContractName(item), // 类型\n            // this.typeStatus(item.type),\n            item.liqPositionMsg ? [{\n              text: \"<div class=\\\"cancel_cause cancel_cause_right\\\">\\n                  \".concat(_this5.typeStatus(item.type), \"\\n                  <span class=\\\"cancel_cause-btn\\\">\\n                    <svg aria-hidden=\\\"true\\\" class=\\\"icon icon-16\\\">\\n                      <use xlink:href=\\\"#icon-a_15\\\"></use>\\n                    </svg>\\n                    <div class=\\\"cancel_cause_text a-5-bg b-1-cl a-3-bd \").concat(cancelCauseClass, \"\\\">\\n                    \").concat(_this5.replaceAll(item.liqPositionMsg), \"\\n                    </div>\\n                  </span>\\n                </div>\"),\n              type: 'html'\n            }] : _this5.typeStatus(item.type), // 方向\n            _this5.setSide(item), // 委托价格\n            item.type === 6 ? '--' : price, // 委托数量/价值\n            volume, // 成交数量\n            _this5.setVolume(item.dealVolume), // 成交均价\n            item.type === 6 ? '--' : _this5.thousandsComma(fixD(item.avgPrice, item.pricePrecision)), // 盈亏\n            [{\n              text: \"\".concat(fixD(item.realizedAmount, _this5.marginCoinFix), \" \").concat(_this5.marginCoin),\n              classes: _this5.setClsdsd(item.realizedAmount)\n            }], // 手续费\n            fixD(item.tradeFee, _this5.marginCoinFix), // 只减仓\n            // item.open === 'CLOSE' ? '是' : '否',\n            // 状态\n            item.status === 4 && item.memo ? [{\n              text: \"<div class=\\\"cancel_cause\\\">\\n                  \".concat(_this5.getStatus(item.status), \"\\n                  <span class=\\\"cancel_cause-btn\\\">\\n                    <svg aria-hidden=\\\"true\\\" class=\\\"icon icon-16\\\">\\n                      <use xlink:href=\\\"#icon-a_15\\\"></use>\\n                    </svg>\\n                    <div class=\\\"cancel_cause_text a-5-bg b-1-cl a-3-bd \").concat(cancelCauseClass, \"\\\">\\n                      \").concat(_this5.memoText[item.memo - 1], \"\\n                    </div>\\n                  </span>\\n                </div>\"),\n              type: 'html'\n            }] : _this5.getStatus(item.status), // 提交时间\n            formatTime(item.ctime)]\n          });\n        });\n      }\n\n      this.dataList = list;\n    },\n    // 格式化盈亏记录数据\n    formatTransData: function formatTransData() {\n      var _this6 = this;\n\n      var list = [];\n\n      if (this.currentOrderLis && this.currentOrderLis.length) {\n        this.currentOrderLis.forEach(function (item) {\n          // 杠杆\n          var level = \"\".concat(item.leverageLevel, \"X\"); // 类型\n\n          var sideBgclass = item.side === 'BUY' ? 'u-1-bg' : 'u-4-bg'; //\n\n          var sideClclass = item.side === 'BUY' ? 'u-1-cl' : 'u-4-cl'; // 合约名称\n\n          var name = _this6.setContractName(_this6.contractInfo); // 类型  '逐仓' : '全仓';\n\n\n          var type = item.positionType === 2 ? _this6.lanText.text15 : _this6.lanText.text14;\n          list.push({\n            id: JSON.stringify(item),\n            classes: 'b-2-cl',\n            data: [// 合约\n            [{\n              type: 'html',\n              text: \"<div class=\\\"futurs-name\\\">\\n                    <i class=\\\"sideBg \".concat(sideBgclass, \"\\\"></i>\\n                    <p class=\\\"\").concat(sideClclass, \"\\\">\").concat(name, \"</p>\\n                    <p>\").concat(type, \" \").concat(level, \"</p>\\n                    </div>\"),\n              classes: _this6.amountClass(item.amount)\n            }], fixD(item.openPrice, _this6.pricefix), // 开仓均价\n            fixD(item.closePrice, _this6.pricefix), // 平仓均价\n            _this6.setVolume(item.volume), // 仓位数量\n            _this6.fixDSign(item.historyRealizedAmount, _this6.marginCoinFix), // 已实现盈亏\n            _this6.fixDSign(item.tradeFee, _this6.marginCoinFix), // 手续费\n            _this6.fixDSign(item.capitalFee, _this6.marginCoinFix), // 资金费用\n            _this6.fixDSign(item.closeProfit, _this6.marginCoinFix), // 仓位盈亏\n            _this6.fixDSign(item.shareAmount, _this6.marginCoinFix), // 分摊金额\n            formatTime(item.mtime) // 平仓时间\n            ]\n          });\n        });\n      }\n\n      this.dataList = list;\n    },\n    // 格式化成交记录数据\n    formatTradeInfo: function formatTradeInfo() {\n      var _this7 = this;\n\n      var list = [];\n\n      if (this.currentOrderLis && this.currentOrderLis.length) {\n        this.currentOrderLis.forEach(function (item) {\n          list.push({\n            id: JSON.stringify(item),\n            classes: 'b-2-cl',\n            data: [// 合约\n            _this7.setContractName(item), // 成交均价\n            fixD(item.price, _this7.pricefix), // 方向\n            _this7.setSide(item), // 成交数量\n            _this7.setVolume(item.volume), // 角色\n            item.role, // 手续费\n            \"\".concat(fixD(item.fee, item.feeCoinPrecision), \" \").concat(item.feeCoin), // 时间\n            formatTime(item.ctime)]\n          });\n        });\n      }\n\n      this.dataList = list;\n    },\n    replaceAll: function replaceAll(str) {\n      return str.replace(/\\\\n/g, '<br/>');\n    },\n    setClsdsd: function setClsdsd(val) {\n      if (val === 0) {\n        return '';\n      }\n\n      return val < 0 ? 'u-4-cl' : 'u-1-cl';\n    },\n    // 设置精度 + 符号\n    fixDSign: function fixDSign(value, fix) {\n      if (value && fix.toString()) {\n        if (Number(value) > 0) {\n          return \"+\".concat(fixD(value, fix));\n        }\n\n        return fixD(value, fix);\n      }\n\n      return '0.00';\n    },\n    amountClass: function amountClass(value) {\n      if (value) {\n        if (Number(value) > 0) {\n          return 'u-1-cl';\n        }\n\n        if (Number(value) < 0) {\n          return 'u-4-cl';\n        }\n      }\n\n      return '';\n    },\n    // 表格操作按钮点击事件\n    elementClick: function elementClick(type, v) {\n      var _this8 = this;\n\n      if (type === 'cancelOrder') {\n        var obj = JSON.parse(v);\n        this.revokeList.push(obj.id);\n        setTimeout(function () {\n          _this8.axios({\n            url: _this8.$store.state.url.futures.orderCancel,\n            hostType: 'co',\n            method: 'post',\n            params: {\n              contractId: _this8.contractId,\n              orderId: obj.id,\n              isConditionOrder: _this8.orderType === 2\n            }\n          }).then(function (data) {\n            var ind = _this8.revokeList.indexOf(obj.id);\n\n            _this8.revokeList.splice(ind, 1);\n\n            if (data.code.toString() === '0') {\n              _this8.$store.dispatch('getPositionList');\n\n              _this8.$store.dispatch('getUserConfig');\n\n              _this8.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'success'\n              });\n\n              _this8.getOrderList();\n            } else {\n              _this8.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'error'\n              });\n            }\n          });\n        }, 500);\n      }\n    },\n    // 取消委托\n    cancelOrder: function cancelOrder() {},\n    goPage: function goPage(path) {\n      if (path === 'login' && this.isIframe) {\n        window.parent.postMessage('login', '*');\n      } else {\n        this.$router.push(\"/\".concat(path));\n      }\n    },\n    // 轮训请求订单数据\n    intervalGetData: function intervalGetData() {\n      var _this9 = this;\n\n      clearInterval(this.getDataTimer);\n      this.getDataTimer = setInterval(function () {\n        _this9.getOrderList();\n\n        if (!_this9.isLogin || !_this9.currentOrderLis.length) {\n          clearInterval(_this9.getDataTimer);\n          _this9.getDataTimer = null;\n        }\n      }, 5000);\n    },\n    thousandsComma: function thousandsComma(num) {\n      if (num) {\n        return _thousandsComma(num);\n      }\n\n      return num;\n    },\n    // 只显示当前合约开关\n    switchChange: function switchChange() {\n      this.isShowCurPosition = !this.isShowCurPosition;\n      myStorage.set('isShowCurPosition', this.isShowCurPosition);\n      this.$bus.$emit('isShowCurPosition', this.isShowCurPosition);\n    }\n  }\n};",{"version":3,"sources":["/Users/h/Downloads/BlockChain-ui-privatization/PC/common-mixin/modules/coTrade/orderList/orderList.js"],"names":["imgMap","colorMap","formatTime","fixD","nul","division","thousandsComma","myStorage","name","data","orderType","pagination","count","pageSize","page","cancelFla","tableLoading","cancelOrderId","timer","currentOrder","currentOrderLis","dataList","cellHeight","revokeList","triggeType","getDataTimer","isShowCurPosition","get","positionListNumber","watch","val","clearInterval","getOrderList","length","intervalGetData","coUnitType","formatCurrentData","contractId","orderCount","$store","dispatch","computed","isIframe","state","future","lanText","tabType1","$t","tabType2","tabType3","tabType4","tabType5","subTabType1","subTabType2","subTabType3","a_columns_1","a_columns_2","a_columns_3","a_columns_4","a_columns_5","a_columns_6","a_columns_7","a_columns_8","a_columns_9","a_columns_10","b_columns_1","b_columns_2","b_columns_3","b_columns_4","b_columns_5","b_columns_6","b_columns_7","b_columns_8","b_columns_9","c_columns_1","c_columns_2","c_columns_3","c_columns_4","c_columns_5","c_columns_6","c_columns_7","c_columns_8","c_columns_9","c_columns_10","c_columns_11","d_columns_1","d_columns_2","d_columns_3","d_columns_4","typeStatus1","typeStatus2","typeStatus3","typeStatus4","typeStatus5","getStatus1","getStatus2","getStatus3","getStatus4","getStatus5","getStatus6","getStatus7","sideT1","sideT2","sideT3","sideT4","mPrice","isclose1","isclose2","cancel","allCancel","tstext1","tstext2","tstext3","text14","text15","tabTypeItem","isLogin","triggerOrderCount","subTabTypeItem","contractListMap","contractInfo","contractSide","marginCoin","coinfix","pricefix","marginCoinFix","coinResultVo","marginCoinPrecision","multiplier","Number","volfix","volUnit","coUnit","priceUnit","columns","title","width","classes","styleClass","promptText","baseData","openContract","bodyClasses","memoText","methods","init","undefined","$bus","$on","switchType","index","subSwitchType","formatTrigData","typeStatus","status","str","getStatus","setVolume","volume","makeRate","dealVolume","value","setSide","open","side","text","setContractName","acriveData","contractName","nameText","symbol","replace","contractType","type","paramsData","url","futures","currentOrderList","triggerOrderList","historyOrderList","historyPositionList","getTradeInfo","axios","method","hostType","params","then","rs","code","orderList","commit","trigOrderList","formatHistoryData","positionList","formatTransData","tradeList","formatTradeInfo","list","forEach","item","price","pricePrecision","push","id","JSON","stringify","avgPrice","ctime","eventType","triggerType","unit","base","coinFix","triggerPrice","timeInForce","mtime","expireTime","cancelCauseClass","liqPositionMsg","replaceAll","realizedAmount","setClsdsd","tradeFee","memo","level","leverageLevel","sideBgclass","sideClclass","positionType","amountClass","amount","openPrice","closePrice","fixDSign","historyRealizedAmount","capitalFee","closeProfit","shareAmount","role","fee","feeCoinPrecision","feeCoin","fix","toString","elementClick","v","obj","parse","setTimeout","orderCancel","orderId","isConditionOrder","ind","indexOf","splice","$emit","msg","cancelOrder","goPage","path","window","parent","postMessage","$router","setInterval","num","switchChange","set"],"mappings":"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","sourcesContent":["import {\r\n  imgMap,\r\n  colorMap,\r\n  formatTime,\r\n  fixD,\r\n  nul,\r\n  division,\r\n  thousandsComma,\r\n  myStorage,\r\n} from '@/utils';\r\n\r\nexport default {\r\n  name: 'orderList',\r\n  data() {\r\n    return {\r\n      // 订单类型：0：持有仓位 1：当前委托 2：当日成交 3：历史委托 4: 盈亏记录 5: '成交记录'\r\n      orderType: 0,\r\n      imgMap,\r\n      colorMap,\r\n      pagination: { // 翻页数据\r\n        count: 0, // 总数量\r\n        pageSize: 10, // 每页显示条数\r\n        page: 1, // 当前页数\r\n      },\r\n      // 撤销订单 防止重复点击\r\n      cancelFla: true,\r\n      tableLoading: false,\r\n      cancelOrderId: null,\r\n      timer: 15000,\r\n      // 当前操作的合约数据（修改保证金，平仓，全仓）\r\n      currentOrder: {},\r\n      // 当前委托列表\r\n      currentOrderLis: [],\r\n\r\n      // table使用的 数量列表\r\n      dataList: [],\r\n      cellHeight: 56,\r\n      revokeList: [],\r\n      // 条件单显示类别\r\n      triggeType: 0,\r\n      // 轮训请求订单\r\n      getDataTimer: null,\r\n      // 只显示当前合约开关\r\n      isShowCurPosition: myStorage.get('isShowCurPosition'),\r\n      // 仓位数量\r\n      positionListNumber: 0,\r\n    };\r\n  },\r\n  watch: {\r\n    orderType(val) {\r\n      this.dataList = [];\r\n      clearInterval(this.getDataTimer);\r\n      this.getDataTimer = null;\r\n      if (val > 0) {\r\n        this.getOrderList();\r\n      }\r\n      // if (val > 3) {\r\n      //   this.cellHeight = 28;\r\n      // } else {\r\n      //   this.cellHeight = 56;\r\n      // }\r\n    },\r\n    currentOrderLis(data) {\r\n      if (data && data.length && this.orderType > 0 && this.orderType < 3) {\r\n        clearInterval(this.getDataTimer);\r\n        this.getDataTimer = null;\r\n        this.intervalGetData();\r\n      } else {\r\n        clearInterval(this.getDataTimer);\r\n        this.getDataTimer = null;\r\n      }\r\n    },\r\n    coUnitType() {\r\n      this.getOrderList();\r\n      if (this.orderType === 1) {\r\n        this.formatCurrentData();\r\n      }\r\n    },\r\n    contractId() {\r\n      this.getOrderList();\r\n    },\r\n    orderCount() {\r\n      this.$store.dispatch('getUserConfig');\r\n    },\r\n  },\r\n  computed: {\r\n    // 是否 是云合约在iframe中调用\r\n    isIframe() {\r\n      return this.$store.state.future.isIframe;\r\n    },\r\n    lanText() {\r\n      return {\r\n        tabType1: this.$t('futures.orderList.tabType1'), // 仓位\r\n        tabType2: this.$t('futures.orderList.tabType2'), // 普通委托\r\n        tabType3: this.$t('futures.orderList.tabType3'), // 条件委托\r\n        tabType4: this.$t('futures.orderList.tabType4'), // 历史委托\r\n        tabType5: this.$t('futures.orderList.tabType5'), // 资金流水\r\n        subTabType1: this.$t('futures.orderList.subTabType1'), // 所有\r\n        subTabType2: this.$t('futures.orderList.subTabType2'), // 止损单\r\n        subTabType3: this.$t('futures.orderList.subTabType3'), // 止盈单\r\n        a_columns_1: this.$t('futures.orderList.a_columns_1'), // 合约\r\n        a_columns_2: this.$t('futures.orderList.a_columns_2'), // 方向\r\n        a_columns_3: this.$t('futures.orderList.a_columns_3'), // 数量\r\n        a_columns_4: this.$t('futures.orderList.a_columns_4'), // 完成度\r\n        a_columns_5: this.$t('futures.orderList.a_columns_5'), // 委托价格\r\n        a_columns_6: this.$t('futures.orderList.a_columns_6'), // 成交均价\r\n        a_columns_7: this.$t('futures.orderList.a_columns_7'), // 类型\r\n        a_columns_8: this.$t('futures.orderList.a_columns_8'), // 只减仓\r\n        a_columns_9: this.$t('futures.orderList.a_columns_9'), // 时间\r\n        a_columns_10: this.$t('futures.orderList.a_columns_10'), // 操作\r\n        b_columns_1: this.$t('futures.orderList.b_columns_1'), // 合约\r\n        b_columns_2: this.$t('futures.orderList.b_columns_2'), // 方向\r\n        b_columns_3: this.$t('futures.orderList.b_columns_3'), // 触发价格\r\n        b_columns_4: this.$t('futures.orderList.b_columns_4'), // 委托价格\r\n        b_columns_5: this.$t('futures.orderList.b_columns_5'), // 委托数量/价值\r\n        b_columns_6: this.$t('futures.orderList.b_columns_6'), // 类型\r\n        b_columns_7: this.$t('futures.orderList.b_columns_7'), // 只减仓\r\n        b_columns_8: this.$t('futures.orderList.b_columns_8'), // 提交时间\r\n        b_columns_9: this.$t('futures.orderList.b_columns_9'), // 过期时间\r\n        c_columns_1: this.$t('futures.orderList.c_columns_1'), // 合约\r\n        c_columns_2: this.$t('futures.orderList.c_columns_2'), // 类型\r\n        c_columns_3: this.$t('futures.orderList.c_columns_3'), // 方向\r\n        c_columns_4: this.$t('futures.orderList.c_columns_4'), // 委托价格\r\n        c_columns_5: this.$t('futures.orderList.c_columns_5'), // 委托数量/价值\r\n        c_columns_6: this.$t('futures.orderList.c_columns_6'), // 成交数量\r\n        c_columns_7: this.$t('futures.orderList.c_columns_7'), // 成交均价\r\n        c_columns_8: this.$t('futures.orderList.c_columns_8'), // 盈亏\r\n        c_columns_9: this.$t('futures.orderList.c_columns_9'), // 状态\r\n        c_columns_10: this.$t('futures.orderList.c_columns_10'), // 时间\r\n        c_columns_11: this.$t('futures.orderList.c_columns_11'), // 手续费\r\n        d_columns_1: this.$t('futures.orderList.d_columns_1'), // 时间\r\n        d_columns_2: this.$t('futures.orderList.d_columns_2'), // 类型\r\n        d_columns_3: this.$t('futures.orderList.d_columns_3'), // 金额\r\n        d_columns_4: this.$t('futures.orderList.d_columns_4'), // 币种\r\n        typeStatus1: this.$t('futures.orderList.typeStatus1'), // 限价单\r\n        typeStatus2: this.$t('futures.orderList.typeStatus2'), // 市价单\r\n        typeStatus3: this.$t('futures.orderList.typeStatus3'), // 只做maker\r\n        typeStatus4: this.$t('futures.orderList.typeStatus4'), // 强制减仓\r\n        typeStatus5: this.$t('futures.orderList.typeStatus5'), // 仓位合并\r\n        getStatus1: this.$t('futures.orderList.getStatus1'), // 新订单\r\n        getStatus2: this.$t('futures.orderList.getStatus2'), // 完全成交\r\n        getStatus3: this.$t('futures.orderList.getStatus3'), // 部分成交\r\n        getStatus4: this.$t('futures.orderList.getStatus4'), // 已取消\r\n        getStatus5: this.$t('futures.orderList.getStatus5'), // 待撤销\r\n        getStatus6: this.$t('futures.orderList.getStatus6'), // 异常订单\r\n        getStatus7: this.$t('futures.orderList.getStatus7'), // 部分成交已撤销\r\n        sideT1: this.$t('futures.orderList.sideT1'), // 开\r\n        sideT2: this.$t('futures.orderList.sideT2'), // 平\r\n        sideT3: this.$t('futures.orderList.sideT3'), // 空\r\n        sideT4: this.$t('futures.orderList.sideT4'), // 多\r\n        mPrice: this.$t('futures.orderList.mPrice'), // 市价\r\n        isclose1: this.$t('futures.orderList.isclose1'), // 是\r\n        isclose2: this.$t('futures.orderList.isclose2'), // 否\r\n        cancel: this.$t('futures.orderList.cancel'), // 取消\r\n        allCancel: this.$t('futures.orderList.allCancel'), // 全部取消\r\n        tstext1: this.$t('futures.orderList.tstext1'), // 请\r\n        tstext2: this.$t('futures.orderList.tstext2'), // 登录/注册\r\n        tstext3: this.$t('futures.orderList.tstext3'), // 再进行操作\r\n        text14: this.$t('futures.positionLis.text14'),\r\n        text15: this.$t('futures.positionLis.text15'),\r\n      };\r\n    },\r\n    // tab 项\r\n    tabTypeItem() {\r\n      return [\r\n        // 持仓\r\n        this.isLogin ? `${this.lanText.tabType1} (${this.positionListNumber})` : this.lanText.tabType1,\r\n        this.isLogin ? `${this.lanText.tabType2} (${this.orderCount})` : this.lanText.tabType2, // '普通委托'\r\n        this.isLogin ? `${this.lanText.tabType3} (${this.triggerOrderCount})` : this.lanText.tabType3, // '条件委托'\r\n        this.lanText.tabType4, // '历史委托'\r\n        // this.lanText.tabType5, // '资金流水'\r\n        this.$t('futures.orderList.newText1'), // '盈亏记录',\r\n        this.$t('futures.orderList.newText2'), // '成交记录',\r\n      ];\r\n    },\r\n    // 条件单（筛选项）\r\n    subTabTypeItem() {\r\n      return [\r\n        this.lanText.subTabType1, // '所有',\r\n        this.lanText.subTabType2, // '止损单',\r\n        this.lanText.subTabType3, // '止盈单',\r\n      ];\r\n    },\r\n    // 合约列表 MAP\r\n    contractListMap() {\r\n      return this.$store.state.future.contractListMap;\r\n    },\r\n    // 当前合约ID\r\n    contractId() {\r\n      return this.$store.state.future.contractId;\r\n    },\r\n    // 仓位数量\r\n    // positionListNumber() {\r\n    //   if (this.$store.state.future.positionListNumber) {\r\n    //     return this.$store.state.future.positionListNumber;\r\n    //   }\r\n    //   return '0';\r\n    // },\r\n    // 当前合约信息\r\n    contractInfo() {\r\n      return this.$store.state.future.contractInfo;\r\n    },\r\n    // 当前合约方向（1正向、0反向）\r\n    contractSide() {\r\n      if (this.contractInfo) {\r\n        return this.contractInfo.contractSide;\r\n      }\r\n      return 1;\r\n    },\r\n    // 当前合约保证金币种\r\n    marginCoin() {\r\n      if (this.contractInfo) {\r\n        return this.contractInfo.marginCoin;\r\n      }\r\n      return '';\r\n    },\r\n    // 当前合约币种精度\r\n    coinfix() {\r\n      return this.$store.state.future.coinfix;\r\n    },\r\n    // 当前合约价格精度\r\n    pricefix() {\r\n      return this.$store.state.future.pricefix;\r\n    },\r\n    // 当前合约保证金币种精度\r\n    marginCoinFix() {\r\n      if (this.contractInfo && this.contractInfo.coinResultVo) {\r\n        return this.contractInfo.coinResultVo.marginCoinPrecision;\r\n      }\r\n      return 4;\r\n    },\r\n    // 数量单位类型Number(1标的货币 2张)\r\n    coUnitType() {\r\n      return this.$store.state.future.coUnitType;\r\n    },\r\n    // 当前合约面值\r\n    multiplier() {\r\n      return Number(this.$store.state.future.multiplier) || 1;\r\n    },\r\n    // 当前合约数量精度\r\n    volfix() {\r\n      if (this.coUnitType === 1) {\r\n        return this.$store.state.future.volfix;\r\n      }\r\n      return 0;\r\n    },\r\n    // 当前合约数量单位\r\n    volUnit() {\r\n      return this.$store.state.future.coUnit;\r\n    },\r\n    // 当前合约价格单位\r\n    priceUnit() {\r\n      return this.$store.state.future.priceUnit;\r\n    },\r\n    // 当前普通单委托数量\r\n    orderCount() {\r\n      return this.$store.state.future.orderCount;\r\n    },\r\n    // 当前条件单委托数量\r\n    triggerOrderCount() {\r\n      return this.$store.state.future.triggerOrderCount;\r\n    },\r\n    // 表头\r\n    columns() {\r\n      if (this.orderType === 1) {\r\n        return [\r\n          {\r\n            title: this.lanText.a_columns_1, // 合约\r\n            width: '120px',\r\n            classes: 'symbol',\r\n            styleClass: 'symbol-name',\r\n          },\r\n          {\r\n            title: this.lanText.a_columns_2, // 方向\r\n            width: '60px',\r\n          },\r\n          {\r\n            title: `${this.lanText.a_columns_3}(${this.volUnit})`, // 数量\r\n            width: '150px',\r\n          },\r\n          {\r\n            title: this.lanText.a_columns_4, // 完成度\r\n            width: '120px',\r\n          },\r\n          {\r\n            title: this.lanText.a_columns_5, // 委托价格\r\n            width: '180px',\r\n          },\r\n          {\r\n            title: this.lanText.a_columns_6, // 成交均价\r\n            width: '180px',\r\n          },\r\n          {\r\n            title: this.lanText.a_columns_7, // 类型\r\n            width: '80px',\r\n          },\r\n          {\r\n            title: this.lanText.a_columns_8, // 只减仓\r\n            width: '100px',\r\n          },\r\n          {\r\n            title: this.lanText.a_columns_9, // 时间\r\n            width: '100px',\r\n          },\r\n          {\r\n            title: this.lanText.a_columns_10, // 操作\r\n            width: '100px',\r\n            classes: 'opera',\r\n            styleClass: 'opera-btn',\r\n          },\r\n        ];\r\n      }\r\n      if (this.orderType === 2) {\r\n        return [\r\n          {\r\n            title: this.lanText.b_columns_1, // 合约\r\n            width: '100px',\r\n          },\r\n          {\r\n            title: this.lanText.b_columns_2, // 方向\r\n            width: '80px',\r\n          },\r\n          {\r\n            title: this.lanText.b_columns_3, // 触发价格\r\n            width: '180px',\r\n          },\r\n          {\r\n            title: this.lanText.b_columns_4, // 委托价格\r\n            width: '180px',\r\n          },\r\n          {\r\n            title: this.lanText.b_columns_5, // 委托数量/价值\r\n            width: '180px',\r\n          },\r\n          {\r\n            title: this.lanText.b_columns_6, // 类型\r\n            width: '100px',\r\n          },\r\n          {\r\n            title: this.lanText.b_columns_7, // 只减仓\r\n            width: '80px',\r\n          },\r\n          {\r\n            title: this.lanText.b_columns_8, // 提交时间\r\n            width: '100px',\r\n          },\r\n          {\r\n            title: this.lanText.b_columns_9, // 过期时间\r\n            width: '100px',\r\n          },\r\n          {\r\n            title: this.lanText.a_columns_10, // 操作\r\n            width: '80px',\r\n          },\r\n        ];\r\n      }\r\n      if (this.orderType === 3) {\r\n        return [\r\n          {\r\n            title: this.lanText.c_columns_1, // 合约\r\n            width: '120px',\r\n          },\r\n          {\r\n            title: this.lanText.c_columns_2, // 类型\r\n            width: '100px',\r\n          },\r\n          {\r\n            title: this.lanText.c_columns_3, // 方向\r\n            width: '100px',\r\n          },\r\n          {\r\n            title: this.lanText.c_columns_4, // 委托价格\r\n            width: '160px',\r\n          },\r\n          {\r\n            title: this.lanText.c_columns_5, // 委托数量/价值\r\n            width: '160px',\r\n          },\r\n          {\r\n            title: `${this.lanText.c_columns_6}(${this.volUnit})`, // 成交数量\r\n            width: '160px',\r\n          },\r\n          {\r\n            title: this.lanText.c_columns_7, // 成交均价\r\n            width: '160px',\r\n          },\r\n          {\r\n            title: this.lanText.c_columns_8, // 盈亏\r\n            width: '160px',\r\n          },\r\n          {\r\n            title: `${this.lanText.c_columns_11} (${this.marginCoin})`, // 手续费\r\n            width: '160px',\r\n          },\r\n          // {\r\n          //   title: this.lanText.xxxx, // 只减仓\r\n          //   width: '100px',\r\n          // },\r\n          {\r\n            title: this.lanText.c_columns_9, // 状态\r\n            width: '100px',\r\n          },\r\n          {\r\n            title: this.lanText.c_columns_10, // 时间\r\n            width: '100px',\r\n          },\r\n        ];\r\n      }\r\n      if (this.orderType === 4) {\r\n        return [\r\n          {\r\n            title: this.lanText.c_columns_1, // 合约\r\n            width: '10%',\r\n          },\r\n          {\r\n            title: this.$t('futures.orderList.newText3'), // '开仓均价',\r\n            width: '10%',\r\n            classes: 'left-text',\r\n          },\r\n          {\r\n            title: this.$t('futures.orderList.newText4'), // '平仓均价',\r\n            width: '10%',\r\n          },\r\n          {\r\n            title: `${this.$t('futures.orderList.newText5')} (${this.volUnit})`, // 仓位数量\r\n            width: '10%',\r\n          },\r\n          {\r\n            title: this.$t('futures.orderList.newText6'), // '已实现盈亏',\r\n            promptText: this.$t('futures.orderList.newText7'), // '总盈亏为该仓位持仓期间累计发生的总盈亏，总盈亏 = 手续费+资金费用+仓位盈亏',\r\n            width: '10%',\r\n          },\r\n          {\r\n            title: `${this.lanText.c_columns_11} (${this.marginCoin})`, // 手续费\r\n            promptText: this.$t('futures.orderList.newText8'), // '开仓、平仓累计总手续费',\r\n            width: '10%',\r\n          },\r\n          {\r\n            title: this.$t('futures.orderList.newText9'), // '资金费用',\r\n            promptText: this.$t('futures.orderList.newText10'), // '持仓期间的总资金费用',\r\n            width: '10%',\r\n          },\r\n          {\r\n            title: this.$t('futures.orderList.newText15'), // '仓位盈亏',\r\n            promptText: this.$t('futures.orderList.newText11'), // '仓位盈亏为仓位每次平仓的仓位盈亏之和，平仓盈亏根据 平仓前的持仓均价和平仓均价计算得出',\r\n            width: '10%',\r\n          },\r\n          {\r\n            title: this.$t('futures.orderList.newText12'), // '分摊',\r\n            width: '10%',\r\n          },\r\n          {\r\n            title: this.$t('futures.orderList.newText13'), // '平仓时间',\r\n            width: '120px',\r\n          },\r\n        ];\r\n      }\r\n      return [\r\n        {\r\n          title: this.lanText.c_columns_1, // 合约\r\n          width: '12%',\r\n        },\r\n        {\r\n          title: this.$t('futures.orderList.newText3'), // '开仓均价',\r\n          width: '12%',\r\n          classes: 'left-text',\r\n        },\r\n        {\r\n          title: this.lanText.c_columns_3, // 方向\r\n          width: '12%',\r\n        },\r\n        {\r\n          title: `${this.lanText.c_columns_6}(${this.volUnit})`, // 成交数量\r\n          width: '12%',\r\n        },\r\n        {\r\n          title: this.$t('futures.orderList.newText14'), // '角色',\r\n          width: '12%',\r\n        },\r\n        {\r\n          title: `${this.lanText.c_columns_11} (${this.marginCoin})`, // 手续费\r\n          width: '12%',\r\n        },\r\n        {\r\n          title: this.lanText.c_columns_10, // 时间\r\n          width: '120px',\r\n        },\r\n      ];\r\n    },\r\n    // 是否Login\r\n    isLogin() {\r\n      return this.$store.state.baseData.isLogin;\r\n    },\r\n    // 是否开通了合约交易\r\n    openContract() {\r\n      return this.$store.state.future.openContract;\r\n    },\r\n    bodyClasses() {\r\n      return `bodyContent${this.orderType} a-6-bg`;\r\n    },\r\n    memoText() {\r\n      return [\r\n        this.$t('futures.orderList.memoText1'),\r\n        this.$t('futures.orderList.memoText2'),\r\n        this.$t('futures.orderList.memoText3'),\r\n        this.$t('futures.orderList.memoText4'),\r\n        this.$t('futures.orderList.memoText5'),\r\n        this.$t('futures.orderList.memoText6'),\r\n        this.$t('futures.orderList.memoText7'),\r\n        this.$t('futures.orderList.memoText8'),\r\n      ];\r\n      // return [\r\n      //   '用户撤销',\r\n      //   '订单异常，被系统撤销',\r\n      //   '仓位发生强平，未成交委托被系统撤销',\r\n      //   '对手盘不足，委托被系统取消',\r\n      //   'FOK订单，无法全部成交时被系统撤销',\r\n      //   'IOC订单，无法立即成交时部分委托被系统撤销',\r\n      //   '被动委托, 被动委托，撮合时为taker部分被系统撤销',\r\n      // ];\r\n    },\r\n  },\r\n  methods: {\r\n    init() {\r\n      if (myStorage.get('isShowCurPosition') === undefined) {\r\n        this.isShowCurPosition = true;\r\n      }\r\n      this.getOrderList('init');\r\n      // 监听下单成功 重新请求订单\r\n      this.$bus.$on('CRAET-ORDER-SUCCESS', () => {\r\n        this.getOrderList();\r\n        this.$store.dispatch('getUserOrderCount');\r\n      });\r\n      this.$bus.$on('positionListNumber', (data) => {\r\n        this.positionListNumber = data;\r\n      });\r\n    },\r\n    // 切换订单类型\r\n    switchType(index) {\r\n      if (this.orderType !== index) {\r\n        this.orderType = index;\r\n        if (this.isLogin && this.openContract) {\r\n          this.tableLoading = true;\r\n        }\r\n      }\r\n    },\r\n    subSwitchType(index) {\r\n      if (this.triggeType !== index) {\r\n        this.triggeType = index;\r\n        this.formatTrigData();\r\n      }\r\n    },\r\n    // 订单类型\r\n    typeStatus(status) {\r\n      let str = '';\r\n      switch (status) {\r\n        case 1:\r\n          str = this.lanText.typeStatus1; // '限价单';\r\n          break;\r\n        case 2:\r\n          str = this.lanText.typeStatus2; // '市价单';\r\n          break;\r\n        case 3:\r\n          str = 'IOC'; // 'IOC';\r\n          break;\r\n        case 4:\r\n          str = 'FOK'; // 'FOK';\r\n          break;\r\n        case 5:\r\n          str = this.lanText.typeStatus3; // '只做maker';\r\n          break;\r\n        case 6:\r\n          str = this.lanText.typeStatus4; // '强制减仓';\r\n          break;\r\n        case 7:\r\n          str = this.lanText.typeStatus5; // '仓位合并';\r\n          break;\r\n        default:\r\n          str = '';\r\n      }\r\n      return str;\r\n    },\r\n    // 订单状态\r\n    getStatus(status) {\r\n      let str = '';\r\n      switch (status) {\r\n        case 0:\r\n          str = this.lanText.getStatus1; // 新订单\r\n          break;\r\n        case 1:\r\n          str = this.lanText.getStatus1; // 新订单\r\n          break;\r\n        case 2:\r\n          str = this.lanText.getStatus2; // 完全成交\r\n          break;\r\n        case 3:\r\n          str = this.lanText.getStatus3; // 部分成交\r\n          break;\r\n        case 4:\r\n          str = this.lanText.getStatus4; // 已取消\r\n          break;\r\n        case 5:\r\n          str = this.lanText.getStatus5; // 待撤销\r\n          break;\r\n        case 6:\r\n          str = this.lanText.getStatus6; // 异常订单\r\n          break;\r\n        case 7:\r\n          str = this.lanText.getStatus7; // 部分成交已撤销\r\n          break;\r\n        default:\r\n          str = '';\r\n      }\r\n      return str;\r\n    },\r\n    // 订单数量\r\n    setVolume(volume) {\r\n      if (this.coUnitType === 1) {\r\n        return fixD(nul(volume, this.multiplier), this.volfix);\r\n      }\r\n      return this.thousandsComma(volume);\r\n    },\r\n    // 完成度\r\n    makeRate(dealVolume, volume) {\r\n      if (dealVolume && volume) {\r\n        // 已完成数量 / 委托数量\r\n        const value = nul(division(dealVolume, volume), 100);\r\n        return fixD(value, 2);\r\n      }\r\n      return 0.00;\r\n    },\r\n    // 返回订单方向\r\n    setSide(data) {\r\n      let classes = 'u-1-cl';\r\n      // 开 ：平\r\n      const open = data.open === 'OPEN' ? this.lanText.sideT1 : this.lanText.sideT2;\r\n      // 空\r\n      let side = this.lanText.sideT3;\r\n      if ((data.open === 'OPEN' && data.side === 'BUY')\r\n            || (data.open === 'CLOSE' && data.side === 'SELL')) {\r\n        // 多\r\n        side = this.lanText.sideT4;\r\n      }\r\n      if (data.side === 'SELL') {\r\n        classes = 'u-4-cl';\r\n      }\r\n      return [\r\n        {\r\n          text: `${open}${side}`,\r\n          classes,\r\n        },\r\n      ];\r\n    },\r\n    // 返回合约名称\r\n    setContractName(data) {\r\n      const acriveData = this.contractListMap[data.contractName];\r\n      if (acriveData) {\r\n        let name = '';\r\n        let text = '';\r\n        if (data) {\r\n          const nameText = acriveData.symbol ? acriveData.symbol.replace('-', '') : '';\r\n          if (acriveData.contractType !== 'E') {\r\n            text = `-${acriveData.marginCoin}`;\r\n          }\r\n          name = `${nameText}${text}`;\r\n        }\r\n        return name;\r\n      }\r\n      return data.symbol.replace('-', '');\r\n    },\r\n    // 请求订单数据\r\n    getOrderList(type) {\r\n      if (!this.isLogin || !this.openContract) return;\r\n      const paramsData = {\r\n        contractId: this.contractId,\r\n      };\r\n      // 请求数量\r\n      this.$store.dispatch('getUserOrderCount');\r\n      // 当前委托\r\n      let url = this.$store.state.url.futures.currentOrderList;\r\n      // 条件委托\r\n      if (this.orderType === 2) {\r\n        url = this.$store.state.url.futures.triggerOrderList;\r\n      }\r\n      // 历史委托\r\n      if (this.orderType === 3) {\r\n        url = this.$store.state.url.futures.historyOrderList;\r\n      }\r\n      // 盈亏记录\r\n      if (this.orderType === 4) {\r\n        url = this.$store.state.url.futures.historyPositionList;\r\n      }\r\n      // 成交记录\r\n      if (this.orderType === 5) {\r\n        url = this.$store.state.url.futures.getTradeInfo;\r\n      }\r\n      this.axios({\r\n        url,\r\n        method: 'post',\r\n        hostType: 'co',\r\n        params: paramsData,\r\n      }).then((rs) => {\r\n        this.tableLoading = false;\r\n        if (rs.code === '0' && rs.data) {\r\n          // 当前委托\r\n          if (this.orderType === 1 || type === 'init') {\r\n            this.currentOrderLis = rs.data.orderList;\r\n            // 将当前委托存储在vuex\r\n            this.$store.commit('CURRENT_OTDER_LIST', this.currentOrderLis);\r\n            this.formatCurrentData();\r\n          }\r\n          // 条件委托\r\n          if (this.orderType === 2) {\r\n            this.currentOrderLis = rs.data.trigOrderList;\r\n            this.formatTrigData();\r\n          }\r\n          // 历史委托\r\n          if (this.orderType === 3) {\r\n            this.currentOrderLis = rs.data.orderList;\r\n            this.formatHistoryData();\r\n          }\r\n          // 盈亏记录\r\n          if (this.orderType === 4) {\r\n            this.currentOrderLis = rs.data.positionList;\r\n            this.formatTransData();\r\n          }\r\n          // 成交记录\r\n          if (this.orderType === 5) {\r\n            this.currentOrderLis = rs.data.tradeList;\r\n            this.formatTradeInfo();\r\n          }\r\n        }\r\n      });\r\n    },\r\n    // 格式化当前委托订单数据\r\n    formatCurrentData() {\r\n      const list = [];\r\n      if (this.currentOrderLis && this.currentOrderLis.length) {\r\n        this.currentOrderLis.forEach((item) => {\r\n          let price = null;\r\n          if (item.type === 2 && Number(item.price) === 0) {\r\n            price = this.lanText.mPrice; // '市价';\r\n          } else {\r\n            price = this.thousandsComma(fixD(item.price, item.pricePrecision));\r\n          }\r\n          list.push({\r\n            id: JSON.stringify(item),\r\n            classes: 'b-2-cl',\r\n            data: [\r\n              // 合约\r\n              this.setContractName(item),\r\n              // 方向\r\n              this.setSide(item),\r\n              // 成交数量 / 委托数量\r\n              `${this.setVolume(item.dealVolume)} / ${this.setVolume(item.volume)}`,\r\n              // '完成度',\r\n              `${this.makeRate(item.dealVolume, item.volume)}%`,\r\n              // 委托价格\r\n              price,\r\n              // 成交均价\r\n              item.pricePrecision ? this.thousandsComma(fixD(item.avgPrice, item.pricePrecision)) : '--',\r\n              // 类型\r\n              this.typeStatus(item.type),\r\n              // 只减仓\r\n              // '是' : '否'\r\n              item.open === 'CLOSE' ? this.lanText.isclose1 : this.lanText.isclose2,\r\n              // 时间\r\n              formatTime(item.ctime),\r\n              // 撤单\r\n              [\r\n                {\r\n                  type: 'button',\r\n                  text: this.lanText.cancel, // 取消\r\n                  eventType: 'cancelOrder',\r\n                },\r\n              ],\r\n            ],\r\n          });\r\n        });\r\n      }\r\n      this.dataList = list;\r\n    },\r\n    // 格式化条件委托订单数据\r\n    formatTrigData() {\r\n      const list = [];\r\n      if (this.currentOrderLis && this.currentOrderLis.length) {\r\n        this.currentOrderLis.forEach((item) => {\r\n          if (this.triggeType && this.triggeType !== item.triggerType) return;\r\n          let price = null;\r\n          let volume = null;\r\n          if (item.type === 2 && Number(item.price) === 0) {\r\n            price = this.lanText.mPrice; // '市价';\r\n            // 价值\r\n            if (item.open === 'OPEN') {\r\n              // 反向\r\n              let unit = this.contractInfo.base;\r\n              const { volfix } = this.$store.state.future;\r\n              let coinFix = volfix;\r\n              // 正向\r\n              if (this.contractSide === 1) {\r\n                unit = this.priceUnit;\r\n                coinFix = this.pricefix;\r\n              }\r\n              volume = `${fixD(item.volume, coinFix)} ${unit}`;\r\n            } else {\r\n              volume = `${this.setVolume(item.volume)} ${this.volUnit}`;\r\n            }\r\n          } else {\r\n            price = this.thousandsComma(fixD(item.price, item.pricePrecision));\r\n            // 委托数量\r\n            volume = `${this.setVolume(item.volume)} ${this.volUnit}`;\r\n          }\r\n\r\n          list.push({\r\n            id: JSON.stringify(item),\r\n            classes: 'b-2-cl',\r\n            data: [\r\n              // 合约\r\n              this.setContractName(item),\r\n              // 方向\r\n              this.setSide(item),\r\n              // 触发价格\r\n              this.thousandsComma(fixD(item.triggerPrice, item.pricePrecision)),\r\n              // 委托价格\r\n              price,\r\n              // 委托数量/价值\r\n              volume,\r\n              // 类型\r\n              this.typeStatus(item.timeInForce),\r\n              // 只减仓\r\n              // '是' : '否',\r\n              item.open === 'CLOSE' ? this.lanText.isclose1 : this.lanText.isclose2,\r\n              // 提交时间\r\n              formatTime(item.mtime),\r\n              // 过期时间\r\n              formatTime(item.expireTime),\r\n              // 撤单\r\n              [\r\n                {\r\n                  type: 'button',\r\n                  text: this.lanText.cancel, // 取消\r\n                  eventType: 'cancelOrder',\r\n                },\r\n              ],\r\n            ],\r\n          });\r\n        });\r\n      }\r\n      this.dataList = list;\r\n    },\r\n    // 格式化 历史委托 订单数据\r\n    formatHistoryData() {\r\n      const list = [];\r\n      if (this.currentOrderLis && this.currentOrderLis.length) {\r\n        this.currentOrderLis.forEach((item, index) => {\r\n          let price = null;\r\n          let volume = null;\r\n          if (item.type === 2 && Number(item.price) === 0) {\r\n            price = this.lanText.mPrice; // '市价';\r\n            // 价值\r\n            if (item.open === 'OPEN') {\r\n              // 反向\r\n              let unit = this.contractInfo.base;\r\n              const { volfix } = this.$store.state.future;\r\n              let coinFix = volfix;\r\n              // 正向\r\n              if (this.contractSide === 1) {\r\n                unit = this.priceUnit;\r\n                coinFix = this.pricefix;\r\n              }\r\n              volume = `${fixD(item.volume, coinFix)} ${unit}`;\r\n            } else {\r\n              // 委托数量\r\n              volume = `${this.setVolume(item.volume)} ${this.volUnit}`;\r\n            }\r\n          } else {\r\n            price = this.thousandsComma(fixD(item.price, item.pricePrecision));\r\n            // 委托数量\r\n            volume = `${this.setVolume(item.volume)} ${this.volUnit}`;\r\n          }\r\n          const cancelCauseClass = index > 3 ? 'position-bottom' : '';\r\n          list.push({\r\n            id: JSON.stringify(item),\r\n            classes: 'b-2-cl',\r\n            data: [\r\n              // 合约\r\n              this.setContractName(item),\r\n              // 类型\r\n              // this.typeStatus(item.type),\r\n              item.liqPositionMsg ? [\r\n                {\r\n                  text: `<div class=\"cancel_cause cancel_cause_right\">\r\n                  ${this.typeStatus(item.type)}\r\n                  <span class=\"cancel_cause-btn\">\r\n                    <svg aria-hidden=\"true\" class=\"icon icon-16\">\r\n                      <use xlink:href=\"#icon-a_15\"></use>\r\n                    </svg>\r\n                    <div class=\"cancel_cause_text a-5-bg b-1-cl a-3-bd ${cancelCauseClass}\">\r\n                    ${this.replaceAll(item.liqPositionMsg)}\r\n                    </div>\r\n                  </span>\r\n                </div>`,\r\n                  type: 'html',\r\n                },\r\n              ] : this.typeStatus(item.type),\r\n              // 方向\r\n              this.setSide(item),\r\n              // 委托价格\r\n              item.type === 6 ? '--' : price,\r\n              // 委托数量/价值\r\n              volume,\r\n              // 成交数量\r\n              this.setVolume(item.dealVolume),\r\n              // 成交均价\r\n              item.type === 6 ? '--' : this.thousandsComma(fixD(item.avgPrice, item.pricePrecision)),\r\n              // 盈亏\r\n              [\r\n                {\r\n                  text: `${fixD(item.realizedAmount, this.marginCoinFix)} ${this.marginCoin}`,\r\n                  classes: this.setClsdsd(item.realizedAmount),\r\n                },\r\n              ],\r\n              // 手续费\r\n              fixD(item.tradeFee, this.marginCoinFix),\r\n              // 只减仓\r\n              // item.open === 'CLOSE' ? '是' : '否',\r\n              // 状态\r\n              item.status === 4 && item.memo ? [\r\n                {\r\n                  text: `<div class=\"cancel_cause\">\r\n                  ${this.getStatus(item.status)}\r\n                  <span class=\"cancel_cause-btn\">\r\n                    <svg aria-hidden=\"true\" class=\"icon icon-16\">\r\n                      <use xlink:href=\"#icon-a_15\"></use>\r\n                    </svg>\r\n                    <div class=\"cancel_cause_text a-5-bg b-1-cl a-3-bd ${cancelCauseClass}\">\r\n                      ${this.memoText[item.memo - 1]}\r\n                    </div>\r\n                  </span>\r\n                </div>`,\r\n                  type: 'html',\r\n                },\r\n              ] : this.getStatus(item.status),\r\n              // 提交时间\r\n              formatTime(item.ctime),\r\n\r\n            ],\r\n          });\r\n        });\r\n      }\r\n      this.dataList = list;\r\n    },\r\n    // 格式化盈亏记录数据\r\n    formatTransData() {\r\n      const list = [];\r\n      if (this.currentOrderLis && this.currentOrderLis.length) {\r\n        this.currentOrderLis.forEach((item) => {\r\n          // 杠杆\r\n          const level = `${item.leverageLevel}X`;\r\n          // 类型\r\n          const sideBgclass = item.side === 'BUY' ? 'u-1-bg' : 'u-4-bg';\r\n          //\r\n          const sideClclass = item.side === 'BUY' ? 'u-1-cl' : 'u-4-cl';\r\n          // 合约名称\r\n          const name = this.setContractName(this.contractInfo);\r\n          // 类型  '逐仓' : '全仓';\r\n          const type = item.positionType === 2 ? this.lanText.text15 : this.lanText.text14;\r\n          list.push({\r\n            id: JSON.stringify(item),\r\n            classes: 'b-2-cl',\r\n            data: [\r\n              // 合约\r\n              [\r\n                {\r\n                  type: 'html',\r\n                  text: `<div class=\"futurs-name\">\r\n                    <i class=\"sideBg ${sideBgclass}\"></i>\r\n                    <p class=\"${sideClclass}\">${name}</p>\r\n                    <p>${type} ${level}</p>\r\n                    </div>`,\r\n                  classes: this.amountClass(item.amount),\r\n                },\r\n              ],\r\n              fixD(item.openPrice, this.pricefix), // 开仓均价\r\n              fixD(item.closePrice, this.pricefix), // 平仓均价\r\n              this.setVolume(item.volume), // 仓位数量\r\n              this.fixDSign(item.historyRealizedAmount, this.marginCoinFix), // 已实现盈亏\r\n              this.fixDSign(item.tradeFee, this.marginCoinFix), // 手续费\r\n              this.fixDSign(item.capitalFee, this.marginCoinFix), // 资金费用\r\n              this.fixDSign(item.closeProfit, this.marginCoinFix), // 仓位盈亏\r\n              this.fixDSign(item.shareAmount, this.marginCoinFix), // 分摊金额\r\n              formatTime(item.mtime), // 平仓时间\r\n            ],\r\n          });\r\n        });\r\n      }\r\n      this.dataList = list;\r\n    },\r\n    // 格式化成交记录数据\r\n    formatTradeInfo() {\r\n      const list = [];\r\n      if (this.currentOrderLis && this.currentOrderLis.length) {\r\n        this.currentOrderLis.forEach((item) => {\r\n          list.push({\r\n            id: JSON.stringify(item),\r\n            classes: 'b-2-cl',\r\n            data: [\r\n              // 合约\r\n              this.setContractName(item),\r\n              // 成交均价\r\n              fixD(item.price, this.pricefix),\r\n              // 方向\r\n              this.setSide(item),\r\n              // 成交数量\r\n              this.setVolume(item.volume),\r\n              // 角色\r\n              item.role,\r\n              // 手续费\r\n              `${fixD(item.fee, item.feeCoinPrecision)} ${item.feeCoin}`,\r\n              // 时间\r\n              formatTime(item.ctime),\r\n            ],\r\n          });\r\n        });\r\n      }\r\n      this.dataList = list;\r\n    },\r\n    replaceAll(str) {\r\n      return str.replace(/\\\\n/g, '<br/>');\r\n    },\r\n    setClsdsd(val) {\r\n      if (val === 0) {\r\n        return '';\r\n      }\r\n      return val < 0 ? 'u-4-cl' : 'u-1-cl';\r\n    },\r\n    // 设置精度 + 符号\r\n    fixDSign(value, fix) {\r\n      if (value && fix.toString()) {\r\n        if (Number(value) > 0) {\r\n          return `+${fixD(value, fix)}`;\r\n        }\r\n        return fixD(value, fix);\r\n      }\r\n      return '0.00';\r\n    },\r\n    amountClass(value) {\r\n      if (value) {\r\n        if (Number(value) > 0) {\r\n          return 'u-1-cl';\r\n        }\r\n        if (Number(value) < 0) {\r\n          return 'u-4-cl';\r\n        }\r\n      }\r\n      return '';\r\n    },\r\n    // 表格操作按钮点击事件\r\n    elementClick(type, v) {\r\n      if (type === 'cancelOrder') {\r\n        const obj = JSON.parse(v);\r\n        this.revokeList.push(obj.id);\r\n        setTimeout(() => {\r\n          this.axios({\r\n            url: this.$store.state.url.futures.orderCancel,\r\n            hostType: 'co',\r\n            method: 'post',\r\n            params: {\r\n              contractId: this.contractId,\r\n              orderId: obj.id,\r\n              isConditionOrder: this.orderType === 2,\r\n            },\r\n          }).then((data) => {\r\n            const ind = this.revokeList.indexOf(obj.id);\r\n            this.revokeList.splice(ind, 1);\r\n            if (data.code.toString() === '0') {\r\n              this.$store.dispatch('getPositionList');\r\n              this.$store.dispatch('getUserConfig');\r\n              this.$bus.$emit('tip', { text: data.msg, type: 'success' });\r\n              this.getOrderList();\r\n            } else {\r\n              this.$bus.$emit('tip', { text: data.msg, type: 'error' });\r\n            }\r\n          });\r\n        }, 500);\r\n      }\r\n    },\r\n    // 取消委托\r\n    cancelOrder() {\r\n    },\r\n    goPage(path) {\r\n      if (path === 'login' && this.isIframe) {\r\n        window.parent.postMessage('login', '*');\r\n      } else {\r\n        this.$router.push(`/${path}`);\r\n      }\r\n    },\r\n    // 轮训请求订单数据\r\n    intervalGetData() {\r\n      clearInterval(this.getDataTimer);\r\n      this.getDataTimer = setInterval(() => {\r\n        this.getOrderList();\r\n        if (!this.isLogin || !this.currentOrderLis.length) {\r\n          clearInterval(this.getDataTimer);\r\n          this.getDataTimer = null;\r\n        }\r\n      }, 5000);\r\n    },\r\n    thousandsComma(num) {\r\n      if (num) {\r\n        return thousandsComma(num);\r\n      }\r\n      return num;\r\n    },\r\n    // 只显示当前合约开关\r\n    switchChange() {\r\n      this.isShowCurPosition = !this.isShowCurPosition;\r\n      myStorage.set('isShowCurPosition', this.isShowCurPosition);\r\n      this.$bus.$emit('isShowCurPosition', this.isShowCurPosition);\r\n    },\r\n  },\r\n};\r\n"]}]}