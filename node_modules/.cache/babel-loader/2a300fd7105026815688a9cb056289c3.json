{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/trade/depath/index.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/trade/depath/index.js","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport { fixRate, myStorage, getCoinShowName } from '@/utils';\nexport default {\n  name: 'market',\n  data: function data() {\n    return {\n      dataList: {\n        asksData: [],\n        buyData: [],\n        depthMaxNumber: null\n      },\n      cellWidth: [30, 30, 30],\n      // 收起状态 盘口 和 实时成交显示哪个 ？\n      shrinksDdpthNewShow: 'D',\n      // 卖盘 高度\n      sellHeight: 394,\n      // 买盘 高度\n      buyHeight: 394,\n      // 显示条数\n      sellLineNumber: 24,\n      buyLineNumber: 24,\n      // 当前选中的深度级别\n      currentdepthClass: 0,\n      // 当前选中的货币对\n      symbolCurrent: myStorage.get('sSymbolName'),\n      // 市场数据\n      marketData: [],\n      symbolsData_bf: {},\n      maxHeeight: 600,\n      minHeight: 390,\n      totalBalancesHide: false,\n      depthType: ''\n    };\n  },\n  props: {\n    moduleType: {\n      type: String,\n      default: 'ex'\n    },\n    etfPrice: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    depthClass: function depthClass() {\n      if (this.moduleType === 'lever') {\n        return 'lever-depth-block';\n      }\n\n      return '';\n    },\n    totalBalances: function totalBalances() {\n      if (this.accountBalance) {\n        var _this$accountBalance = this.accountBalance,\n            totalBalance = _this$accountBalance.totalBalance,\n            totalBalanceSymbol = _this$accountBalance.totalBalanceSymbol;\n        return {\n          totalBalance: totalBalance,\n          totalBalanceSymbol: totalBalanceSymbol,\n          totalRater: fixRate(totalBalance, this.rateData, totalBalanceSymbol)\n        };\n      }\n\n      return {\n        totalBalance: '0.0000',\n        totalBalanceSymbol: 'BTC',\n        totalRater: '0.00'\n      };\n    },\n    rateData: function rateData() {\n      return this.$store.state.baseData.rate;\n    },\n    accountBalance: function accountBalance() {\n      if (this.$store.state.assets) {\n        return this.$store.state.assets.assetsCoinData;\n      }\n\n      return null;\n    },\n    templateLayoutType: function templateLayoutType() {\n      return this.$store.state.baseData.templateLayoutType;\n    },\n    symbolAll: function symbolAll() {\n      return this.$store.state.baseData.symbolAll;\n    },\n    // 全部币种列表\n    coinList: function coinList() {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n\n      return null;\n    },\n    theadList: function theadList() {\n      if (this.symbolCurrent) {\n        var symbolCurrent = getCoinShowName(this.symbolCurrent, this.symbolAll).split('/'); // 价格 数量 累计\n\n        return [\"\".concat(this.$t('trade.price'), \"(\").concat(symbolCurrent[1], \")\"), \"\".concat(this.$t('trade.number'), \"(\").concat(symbolCurrent[0], \")\"), \"\".concat(this.$t('trade.total'), \"(\").concat(symbolCurrent[0], \")\")];\n      }\n\n      return [\"\".concat(this.$t('trade.price'), \"()\"), \"\".concat(this.$t('trade.number'), \"()\"), \"\".concat(this.$t('trade.total'), \"()\")];\n    },\n    symbolsData: function symbolsData() {\n      if (this.marketData[this.symbolCurrent]) {\n        return this.marketData[this.symbolCurrent];\n      }\n\n      return {\n        name: '--',\n        symbol: {\n          symbol: '--',\n          unit: '--'\n        },\n        close: {\n          class: '',\n          data: '--',\n          price: '--'\n        },\n        amount: '--',\n        rose: {\n          class: '',\n          data: '--'\n        }\n      };\n    },\n    // 深度选项\n    depthOption: function depthOption() {\n      if (this.symbolAll && this.symbolCurrent) {\n        var option = [];\n        var arr = this.symbolAll[this.symbolCurrent].depth.split(',');\n        arr.forEach(function (item) {\n          var opt = item.split('.')[1] ? item.split('.')[1].length : '0';\n          option.push(opt);\n        });\n        return option;\n      }\n\n      return [];\n    },\n    deptValue: function deptValue() {\n      if (this.depthOption) {\n        var val = this.depthOption[this.currentdepthClass];\n        this.$bus.$emit('DEPTH_VALUE', val);\n        return val;\n      }\n\n      return null;\n    }\n  },\n  watch: {\n    deptValue: function deptValue(val) {\n      if (val) {\n        this.$bus.$emit('DEPTH_VALUE', val);\n      }\n    },\n    minHeight: function minHeight(val) {\n      if (this.sellHeight > 1 && this.buyHeight > 1 && this.templateLayoutType === '2') {\n        var number = Math.floor(val / 16);\n        this.sellLineNumber = number;\n        this.buyLineNumber = number;\n      }\n    }\n  },\n  methods: {\n    getShowEtf: function getShowEtf(v) {\n      var flag = false;\n      var symbol = v;\n\n      if (this.symbolAll && this.symbolAll[symbol] && this.symbolAll[symbol].etfOpen) {\n        flag = true;\n      }\n\n      return flag;\n    },\n    init: function init() {\n      var _this = this;\n\n      if (this.moduleType === 'lever') {\n        // 卖盘 高度\n        this.sellHeight = 416; // 买盘 高度\n\n        this.buyHeight = 416; // 显示条数\n\n        this.sellLineNumber = 26;\n        this.buyLineNumber = 26;\n        this.maxHeeight = 840; // 当前选中的货币对\n\n        this.symbolCurrent = myStorage.get('leverSymbolName');\n      }\n\n      this.setBoxHeight(); // 监听 深度数据\n\n      this.$bus.$on('DEPTH_DATA', function (data) {\n        if (data && _this.symbolCurrent === data.symbol) {\n          _this.dataList = data;\n        } else {\n          _this.dataList = {\n            asksData: [],\n            buyData: [],\n            depthMaxNumber: null\n          };\n        }\n      }); // 监听 市场（最新价格） 数据\n\n      this.$bus.$on('MARKET_DATA', function (data) {\n        _this.marketData = data;\n      }); // 获取 当前选中的货币对\n\n      this.$bus.$on('SYMBOL_CURRENT', function (val) {\n        _this.dataList = {\n          asksData: [],\n          buyData: [],\n          depthMaxNumber: null\n        };\n        _this.symbolCurrent = val;\n        _this.currentdepthClass = 0;\n      }); // 监听 浏览器窗口大小改变\n\n      this.$bus.$on('WINFOW_ON_RESIIZE', function () {\n        // 设置国际版TV的高度\n        _this.setBoxHeight(false);\n      });\n    },\n    handelTotal: function handelTotal() {\n      this.totalBalancesHide = !this.totalBalancesHide;\n    },\n    setBoxHeight: function setBoxHeight() {\n      var change = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this.templateLayoutType === '2') {\n        var depthBoxHeight = document.body.clientHeight;\n\n        if (depthBoxHeight < 800) {\n          depthBoxHeight = 800;\n        }\n\n        this.maxHeeight = depthBoxHeight - 524;\n        this.minHeight = (depthBoxHeight - 528) / 2;\n        this.switchDepthType('', change);\n      }\n    },\n    // 切换深度\n    switchDepth: function switchDepth(num) {\n      if (num === 1) {\n        if (this.currentdepthClass < this.depthOption.length - 1) {\n          this.currentdepthClass += num;\n          this.$bus.$emit('DEPTH_CLASSES', this.currentdepthClass.toString());\n        }\n      } else if (this.currentdepthClass > 0) {\n        this.currentdepthClass += num;\n        this.$bus.$emit('DEPTH_CLASSES', this.currentdepthClass.toString());\n      }\n    },\n    switchBlock: function switchBlock(type) {\n      this.shrinksDdpthNewShow = type;\n    },\n    // 盘口 切换 全买盘 或者 全卖盘\n    switchDepthType: function switchDepthType(type) {\n      var change = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (change) this.switchBlock('D');\n\n      switch (type) {\n        case 'sell':\n          this.sellHeight = this.maxHeeight;\n          this.buyHeight = 0;\n          this.sellLineNumber = 150;\n          this.buyLineNumber = 0;\n          this.depthType = 'sell';\n          break;\n\n        case 'buy':\n          this.sellHeight = 0;\n          this.buyHeight = this.maxHeeight;\n          this.sellLineNumber = 0;\n          this.buyLineNumber = 150;\n          this.depthType = 'buy';\n          break;\n\n        default:\n          this.sellHeight = this.minHeight;\n          this.buyHeight = this.minHeight;\n          this.depthType = 'center';\n\n          if (this.templateLayoutType === '2') {\n            var number = Math.floor(this.minHeight / 16);\n            this.sellLineNumber = number;\n            this.buyLineNumber = number;\n          } else {\n            this.sellLineNumber = 24;\n            this.buyLineNumber = 24;\n          }\n\n      }\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/trade/depath/index.js"],"names":["fixRate","myStorage","getCoinShowName","name","data","dataList","asksData","buyData","depthMaxNumber","cellWidth","shrinksDdpthNewShow","sellHeight","buyHeight","sellLineNumber","buyLineNumber","currentdepthClass","symbolCurrent","get","marketData","symbolsData_bf","maxHeeight","minHeight","totalBalancesHide","depthType","props","moduleType","type","String","default","etfPrice","computed","depthClass","totalBalances","accountBalance","totalBalance","totalBalanceSymbol","totalRater","rateData","$store","state","baseData","rate","assets","assetsCoinData","templateLayoutType","symbolAll","coinList","market","theadList","split","$t","symbolsData","symbol","unit","close","class","price","amount","rose","depthOption","option","arr","depth","forEach","item","opt","length","push","deptValue","val","$bus","$emit","watch","number","Math","floor","methods","getShowEtf","v","flag","etfOpen","init","setBoxHeight","$on","handelTotal","change","depthBoxHeight","document","body","clientHeight","switchDepthType","switchDepth","num","toString","switchBlock"],"mappings":"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","sourcesContent":["import { fixRate, myStorage, getCoinShowName } from '@/utils';\n\nexport default {\n  name: 'market',\n  data() {\n    return {\n      dataList: {\n        asksData: [],\n        buyData: [],\n        depthMaxNumber: null,\n      },\n      cellWidth: [30, 30, 30],\n      // 收起状态 盘口 和 实时成交显示哪个 ？\n      shrinksDdpthNewShow: 'D',\n      // 卖盘 高度\n      sellHeight: 394,\n      // 买盘 高度\n      buyHeight: 394,\n      // 显示条数\n      sellLineNumber: 24,\n      buyLineNumber: 24,\n      // 当前选中的深度级别\n      currentdepthClass: 0,\n      // 当前选中的货币对\n      symbolCurrent: myStorage.get('sSymbolName'),\n      // 市场数据\n      marketData: [],\n      symbolsData_bf: {},\n      maxHeeight: 600,\n      minHeight: 390,\n      totalBalancesHide: false,\n      depthType: '',\n    };\n  },\n  props: {\n    moduleType: {\n      type: String,\n      default: 'ex',\n    },\n    etfPrice: {\n      type: String,\n      default: '',\n    },\n  },\n  computed: {\n    depthClass() {\n      if (this.moduleType === 'lever') {\n        return 'lever-depth-block';\n      }\n      return '';\n    },\n    totalBalances() {\n      if (this.accountBalance) {\n        const { totalBalance, totalBalanceSymbol } = this.accountBalance;\n        return {\n          totalBalance,\n          totalBalanceSymbol,\n          totalRater: fixRate(totalBalance, this.rateData, totalBalanceSymbol),\n        };\n      }\n      return {\n        totalBalance: '0.0000',\n        totalBalanceSymbol: 'BTC',\n        totalRater: '0.00',\n      };\n    },\n    rateData() {\n      return this.$store.state.baseData.rate;\n    },\n    accountBalance() {\n      if (this.$store.state.assets) {\n        return this.$store.state.assets.assetsCoinData;\n      }\n      return null;\n    },\n    templateLayoutType() {\n      return this.$store.state.baseData.templateLayoutType;\n    },\n    symbolAll() {\n      return this.$store.state.baseData.symbolAll;\n    },\n    // 全部币种列表\n    coinList() {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n      return null;\n    },\n    theadList() {\n      if (this.symbolCurrent) {\n        const symbolCurrent = getCoinShowName(this.symbolCurrent, this.symbolAll).split('/');\n        // 价格 数量 累计\n        return [\n          `${this.$t('trade.price')}(${symbolCurrent[1]})`,\n          `${this.$t('trade.number')}(${symbolCurrent[0]})`,\n          `${this.$t('trade.total')}(${symbolCurrent[0]})`,\n        ];\n      }\n      return [\n        `${this.$t('trade.price')}()`,\n        `${this.$t('trade.number')}()`,\n        `${this.$t('trade.total')}()`,\n      ];\n    },\n    symbolsData() {\n      if (this.marketData[this.symbolCurrent]) {\n        return this.marketData[this.symbolCurrent];\n      }\n      return {\n        name: '--',\n        symbol: {\n          symbol: '--',\n          unit: '--',\n        },\n        close: {\n          class: '',\n          data: '--',\n          price: '--',\n        },\n        amount: '--',\n        rose: {\n          class: '',\n          data: '--',\n        },\n      };\n    },\n    // 深度选项\n    depthOption() {\n      if (this.symbolAll && this.symbolCurrent) {\n        const option = [];\n        const arr = this.symbolAll[this.symbolCurrent].depth.split(',');\n        arr.forEach((item) => {\n          const opt = item.split('.')[1] ? item.split('.')[1].length : '0';\n          option.push(opt);\n        });\n        return option;\n      }\n      return [];\n    },\n    deptValue() {\n      if (this.depthOption) {\n        const val = this.depthOption[this.currentdepthClass];\n        this.$bus.$emit('DEPTH_VALUE', val);\n        return val;\n      }\n      return null;\n    },\n  },\n  watch: {\n    deptValue(val) {\n      if (val) {\n        this.$bus.$emit('DEPTH_VALUE', val);\n      }\n    },\n    minHeight(val) {\n      if (this.sellHeight > 1 && this.buyHeight > 1 && this.templateLayoutType === '2') {\n        const number = Math.floor(val / 16);\n        this.sellLineNumber = number;\n        this.buyLineNumber = number;\n      }\n    },\n  },\n  methods: {\n    getShowEtf(v) {\n      let flag = false;\n      const symbol = v;\n      if (this.symbolAll\n        && this.symbolAll[symbol]\n        && this.symbolAll[symbol].etfOpen) {\n        flag = true;\n      }\n      return flag;\n    },\n    init() {\n      if (this.moduleType === 'lever') {\n        // 卖盘 高度\n        this.sellHeight = 416;\n        // 买盘 高度\n        this.buyHeight = 416;\n        // 显示条数\n        this.sellLineNumber = 26;\n        this.buyLineNumber = 26;\n        this.maxHeeight = 840;\n        // 当前选中的货币对\n        this.symbolCurrent = myStorage.get('leverSymbolName');\n      }\n\n      this.setBoxHeight();\n      // 监听 深度数据\n      this.$bus.$on('DEPTH_DATA', (data) => {\n        if (data && this.symbolCurrent === data.symbol) {\n          this.dataList = data;\n        } else {\n          this.dataList = {\n            asksData: [],\n            buyData: [],\n            depthMaxNumber: null,\n          };\n        }\n      });\n      // 监听 市场（最新价格） 数据\n      this.$bus.$on('MARKET_DATA', (data) => {\n        this.marketData = data;\n      });\n      // 获取 当前选中的货币对\n      this.$bus.$on('SYMBOL_CURRENT', (val) => {\n        this.dataList = {\n          asksData: [],\n          buyData: [],\n          depthMaxNumber: null,\n        };\n        this.symbolCurrent = val;\n        this.currentdepthClass = 0;\n      });\n      // 监听 浏览器窗口大小改变\n      this.$bus.$on('WINFOW_ON_RESIIZE', () => {\n        // 设置国际版TV的高度\n        this.setBoxHeight(false);\n      });\n    },\n    handelTotal() {\n      this.totalBalancesHide = !this.totalBalancesHide;\n    },\n    setBoxHeight(change = true) {\n      if (this.templateLayoutType === '2') {\n        let depthBoxHeight = document.body.clientHeight;\n        if (depthBoxHeight < 800) {\n          depthBoxHeight = 800;\n        }\n        this.maxHeeight = depthBoxHeight - 524;\n        this.minHeight = (depthBoxHeight - 528) / 2;\n        this.switchDepthType('', change);\n      }\n    },\n    // 切换深度\n    switchDepth(num) {\n      if (num === 1) {\n        if (this.currentdepthClass < this.depthOption.length - 1) {\n          this.currentdepthClass += num;\n          this.$bus.$emit('DEPTH_CLASSES', this.currentdepthClass.toString());\n        }\n      } else if (this.currentdepthClass > 0) {\n        this.currentdepthClass += num;\n        this.$bus.$emit('DEPTH_CLASSES', this.currentdepthClass.toString());\n      }\n    },\n    switchBlock(type) {\n      this.shrinksDdpthNewShow = type;\n    },\n    // 盘口 切换 全买盘 或者 全卖盘\n    switchDepthType(type, change = true) {\n      if (change) this.switchBlock('D');\n      switch (type) {\n        case 'sell':\n          this.sellHeight = this.maxHeeight;\n          this.buyHeight = 0;\n          this.sellLineNumber = 150;\n          this.buyLineNumber = 0;\n          this.depthType = 'sell';\n          break;\n        case 'buy':\n          this.sellHeight = 0;\n          this.buyHeight = this.maxHeeight;\n          this.sellLineNumber = 0;\n          this.buyLineNumber = 150;\n          this.depthType = 'buy';\n          break;\n        default:\n          this.sellHeight = this.minHeight;\n          this.buyHeight = this.minHeight;\n          this.depthType = 'center';\n          if (this.templateLayoutType === '2') {\n            const number = Math.floor(this.minHeight / 16);\n            this.sellLineNumber = number;\n            this.buyLineNumber = number;\n          } else {\n            this.sellLineNumber = 24;\n            this.buyLineNumber = 24;\n          }\n      }\n    },\n  },\n};\n"]}]}