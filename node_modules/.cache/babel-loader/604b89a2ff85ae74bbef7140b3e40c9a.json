{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/coTrade/tradeForm/tradeForm.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/coTrade/tradeForm/tradeForm.js","mtime":1625280138000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { fixD, division, getDigit, cut, thousandsComma as _thousandsComma, myStorage, nul } from '@/utils';\nexport default {\n  name: 'tradeForm',\n  data: function data() {\n    return {\n      // 按钮颜色class类型\n      showClassType: null,\n      // 交易类型 1开仓 2 平仓\n      transactionType: 1,\n      // 1 限价 2 市价 3 条件\n      currentCategory: 1,\n      // 是否是市价\n      isMarket: false,\n      // 只减仓\n      zhiJianCang: false,\n      // 百分比值\n      percentageVlaue: null,\n      // 百分比值鼠标移入效果\n      percentageVlaueHover: null,\n      // 下单按钮是否OK\n      isSubmitDisbled: false,\n      // 是否显示杠杆弹窗\n      leverageDialogShow: false,\n      // 是否显示 二次确认弹框\n      forcedReminderShow: false,\n      // 是否选中了订单类型\n      isCheckedOrdeType: null,\n      // 订单类型对象{}\n      ordeType: {},\n      // 鼠标移入订单类型对象\n      hoverOrdeType: {},\n      // buy买入、sell卖出？\n      sideType: null,\n      // 提交防止连击\n      submitFlag: true,\n      // 到期时间\n      expireTime: '14',\n      formData_1: {\n        title: '',\n        // '价格',\n        units: this.priceUnit,\n        fix: 8,\n        isShow: true,\n        errorText: null,\n        value: null\n      },\n      formData_2: {\n        title: '',\n        // '价格',\n        units: this.priceUnit,\n        fix: 8,\n        isShow: false,\n        errorText: null,\n        value: null\n      },\n      formData_3: {\n        title: '',\n        // '数量',\n        units: '',\n        // '张',\n        fix: 8,\n        isShow: true,\n        errorText: null,\n        value: null\n      },\n      // 下单提交数据\n      submitData: null,\n      // 二次确认数据\n      confirmData: {},\n      // 当前合约最新平均价\n      activeNewPrice: 0,\n      // 持仓模式 1：单向持仓 2：双向持仓\n      positionModel: myStorage.get('positionModel') || 2,\n      // 切换保证金模式弹框\n      depositDialogShow: false,\n      // 是否显示下单类型选项类表\n      ordeTypePtions: false\n    };\n  },\n  props: {},\n  computed: {\n    // 是否 是云合约在iframe中调用\n    isIframe: function isIframe() {\n      return this.$store.state.future.isIframe;\n    },\n    // 当前合约保证金模式\n    marginModelText: function marginModelText() {\n      if (this.userConfig) {\n        // 全仓 ： 逐仓\n        return this.userConfig.marginModel === 1 ? this.$t('futures.currentSymbol.marginModel1') : this.$t('futures.currentSymbol.marginModel2');\n      }\n\n      return this.$t('futures.currentSymbol.marginModel1');\n    },\n    lanText: function lanText() {\n      return {\n        mPrice: this.$t('futures.tradeForm.mPrice'),\n        textjz: this.$t('futures.tradeForm.textjz'),\n        text1: this.$t('futures.tradeForm.text1'),\n        text2: this.$t('futures.tradeForm.text2'),\n        text3: this.$t('futures.tradeForm.text3'),\n        text4: this.$t('futures.tradeForm.text4'),\n        text5: this.$t('futures.tradeForm.text5'),\n        text6: this.$t('futures.tradeForm.text6'),\n        text7: this.$t('futures.tradeForm.text7'),\n        text8: this.$t('futures.tradeForm.text8'),\n        text9: this.$t('futures.tradeForm.text9'),\n        text10: this.$t('futures.tradeForm.text10'),\n        text11: this.$t('futures.tradeForm.text11'),\n        text12: this.$t('futures.tradeForm.text12'),\n        text13: this.$t('futures.tradeForm.text13'),\n        text14: this.$t('futures.tradeForm.text14'),\n        text15: this.$t('futures.tradeForm.text15'),\n        text16: this.$t('futures.tradeForm.text16'),\n        text17: this.$t('futures.tradeForm.text17'),\n        text18: this.$t('futures.tradeForm.text18'),\n        text19: this.$t('futures.tradeForm.text19'),\n        text20: this.$t('futures.tradeForm.text20'),\n        text21: this.$t('futures.tradeForm.text21'),\n        text22: this.$t('futures.tradeForm.text22'),\n        text23: this.$t('futures.tradeForm.text23'),\n        text24: this.$t('futures.tradeForm.text24'),\n        text25: this.$t('futures.tradeForm.text25'),\n        text26: this.$t('futures.tradeForm.text26'),\n        text27: this.$t('futures.tradeForm.text27'),\n        text28: this.$t('futures.tradeForm.text28'),\n        text29: this.$t('futures.tradeForm.text29'),\n        text30: this.$t('futures.tradeForm.text30'),\n        text31: this.$t('futures.tradeForm.text31'),\n        text32: this.$t('futures.tradeForm.text32'),\n        text33: this.$t('futures.tradeForm.text33'),\n        text34: this.$t('futures.tradeForm.text34'),\n        text35: this.$t('futures.tradeForm.text35'),\n        text36: this.$t('futures.tradeForm.text36'),\n        text37: this.$t('futures.tradeForm.text37'),\n        text38: this.$t('futures.tradeForm.text38'),\n        text39: this.$t('futures.tradeForm.text39'),\n        text40: this.$t('futures.tradeForm.text40'),\n        text41: this.$t('futures.tradeForm.text41'),\n        text42: this.$t('futures.tradeForm.text42'),\n        text43: this.$t('futures.tradeForm.text43'),\n        text44: this.$t('futures.tradeForm.text44'),\n        text45: this.$t('futures.tradeForm.text45'),\n        text46: this.$t('futures.tradeForm.text46'),\n        text47: this.$t('futures.tradeForm.text47'),\n        text48: this.$t('futures.tradeForm.text48'),\n        text49: this.$t('futures.tradeForm.text49'),\n        text50: this.$t('futures.tradeForm.text50'),\n        text51: this.$t('futures.tradeForm.text51'),\n        text52: this.$t('futures.tradeForm.text52'),\n        text53: this.$t('futures.tradeForm.text53'),\n        text56: this.$t('futures.tradeForm.text56'),\n        text57: this.$t('futures.tradeForm.text57')\n      };\n    },\n    // 是否登录\n    isLogin: function isLogin() {\n      if (this.$store.state.baseData.isLogin) {\n        return this.$store.state.baseData.isLogin;\n      }\n\n      return false;\n    },\n    // 用户配置信息\n    userConfig: function userConfig() {\n      return this.$store.state.future.futureUserConfig;\n    },\n    // 持仓类型(1 全仓，2 仓逐)\n    marginModel: function marginModel() {\n      return this.userConfig ? this.userConfig.marginModel : 1;\n    },\n    // 当前合约ID\n    contractId: function contractId() {\n      return this.$store.state.future.contractId;\n    },\n    // 当前合约价格单位\n    priceUnit: function priceUnit() {\n      return this.$store.state.future.priceUnit;\n    },\n    // 当前合约价格精度\n    pricefix: function pricefix() {\n      return this.$store.state.future.pricefix;\n    },\n    // 到期时间\n    planTypeList: function planTypeList() {\n      return [{\n        name: this.lanText.text16,\n        // '24H',\n        id: '1'\n      }, {\n        name: this.lanText.text17,\n        // '7天',\n        id: '7'\n      }, {\n        name: this.lanText.text18,\n        // '14天',\n        id: '14'\n      }, {\n        name: this.lanText.text19,\n        // '30天',\n        id: '30'\n      }];\n    },\n    // 是否开通了合约交易\n    openContract: function openContract() {\n      return this.$store.state.future.openContract;\n    },\n    // 数量单位\n    volUnit: function volUnit() {\n      return this.$store.state.future.coUnit;\n    },\n    // 当前合约面值\n    multiplier: function multiplier() {\n      return Number(this.$store.state.future.multiplier) || 1;\n    },\n    // 当前合约名称\n    contractName: function contractName() {\n      return this.$store.state.future.contractName;\n    },\n    // 当前合约币对\n    contractSymbol: function contractSymbol() {\n      return this.$store.state.future.contractSymbol;\n    },\n    // 当前合约数量精度\n    volfix: function volfix() {\n      if (this.coUnitType === 1) {\n        return this.$store.state.future.volfix;\n      }\n\n      return 0;\n    },\n    // 数量单位类型Number 1标的货币, 2张\n    coUnitType: function coUnitType() {\n      return this.$store.state.future.coUnitType;\n    },\n    // 当前合约信息\n    contractInfo: function contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 当前合约币对信息\n    coinResultVo: function coinResultVo() {\n      if (this.contractInfo) {\n        return this.contractInfo.coinResultVo;\n      }\n\n      return {};\n    },\n    // 标的货币（数量单位 base）\n    baseCoin: function baseCoin() {\n      if (this.contractInfo) {\n        return this.contractInfo.base;\n      }\n\n      return null;\n    },\n    // 计价货币\n    quoteCoin: function quoteCoin() {\n      if (this.contractInfo) {\n        return this.contractInfo.quote;\n      }\n\n      return null;\n    },\n    // 标的货币（合约面值单位）\n    multiplierCoin: function multiplierCoin() {\n      if (this.contractInfo) {\n        return this.contractInfo.multiplierCoin;\n      }\n\n      return null;\n    },\n    // 标的货币精度（合约面值）\n    multiplierFix: function multiplierFix() {\n      if (this.contractInfo) {\n        return getDigit(this.contractInfo.multiplier);\n      }\n\n      return 4;\n    },\n    // 当前合约保证金币种\n    marginCoin: function marginCoin() {\n      if (this.contractInfo) {\n        return this.contractInfo.marginCoin;\n      }\n\n      return '';\n    },\n    // 当前合约保证金币种精度\n    marginCoinFix: function marginCoinFix() {\n      if (this.contractInfo && this.contractInfo.coinResultVo) {\n        return this.contractInfo.coinResultVo.marginCoinPrecision;\n      }\n\n      return 4;\n    },\n    // 用户合约资产\n    accountBalanceMap: function accountBalanceMap() {\n      return this.$store.state.future.futureAccountBalance;\n    },\n    accountBalance: function accountBalance() {\n      if (this.accountBalanceMap && this.marginCoin) {\n        return this.accountBalanceMap[this.marginCoin];\n      }\n\n      return {};\n    },\n    // 可用\n    canUseAmount: function canUseAmount() {\n      if (this.isLogin && this.accountBalance && this.accountBalance.canUseAmount !== '--') {\n        return fixD(this.accountBalance.canUseAmount, this.marginCoinFix);\n      }\n\n      return 0;\n    },\n    // 当前合约杠杆倍数\n    nowLevel: function nowLevel() {\n      if (this.userConfig) {\n        return this.userConfig.nowLevel || 20;\n      }\n\n      return 20;\n    },\n    // 当前合约保证金汇率\n    marginRate: function marginRate() {\n      if (this.contractInfo && this.contractInfo.marginRate) {\n        return this.contractInfo.marginRate;\n      }\n\n      return 1;\n    },\n    // 当前合约方向（1正向、0反向）\n    contractSide: function contractSide() {\n      if (this.contractInfo) {\n        return this.contractInfo.contractSide;\n      }\n\n      return 1;\n    },\n    // 当前合约可平数量\n    activeCanClose: function activeCanClose() {\n      var activeCanClose = this.$store.state.future.activeCanClose;\n      var obj = {};\n\n      if (activeCanClose) {\n        obj = activeCanClose[this.contractName];\n      }\n\n      return obj;\n    },\n    // 仓位方向（开仓 还是平仓）\n    orderSide: function orderSide() {\n      var open = 'OPEN';\n\n      if (this.zhiJianCang || this.transactionType === 2) {\n        open = 'CLOSE';\n      }\n\n      return open;\n    },\n    // 百分比列表\n    percentageList: function percentageList() {\n      return [10, 20, 50, 100];\n    },\n    // 开仓 平仓 Tab\n    switchTradeTypeList: function switchTradeTypeList() {\n      return [{\n        id: 1,\n        text: this.lanText.text20,\n        // '开仓',\n        classes: this.transactionType === 1 ? 'u-8-bg b-1-cl' : 'a-8-bg b-2-cl'\n      }, {\n        id: 2,\n        text: this.lanText.text21,\n        // '平仓',\n        classes: this.transactionType === 2 ? 'u-8-bg b-1-cl' : 'a-8-bg b-2-cl'\n      }];\n    },\n    // 限价单\\市价单\\条件单\n    categoryList: function categoryList() {\n      return [{\n        id: 1,\n        text: this.lanText.text22,\n        // '限价单',\n        classes: this.currentCategory === 1 ? 'a-5-bg b-1-cl' : 'a-8-bg b-2-cl'\n      }, {\n        id: 2,\n        text: this.lanText.text23,\n        // '市价单',\n        classes: this.currentCategory === 2 ? 'a-5-bg b-1-cl' : 'a-8-bg b-2-cl'\n      }, {\n        id: 3,\n        text: this.lanText.text24,\n        // '条件单',\n        classes: this.currentCategory === 3 ? 'a-5-bg b-1-cl' : 'a-8-bg b-2-cl'\n      }];\n    },\n    // 可买 可卖标题文案\n    openableData: function openableData() {\n      if (this.zhiJianCang || this.transactionType === 2) {\n        return {\n          buyText: this.lanText.text25,\n          // '可平空',\n          sellText: this.lanText.text26 // '可平多',\n\n        };\n      }\n\n      return {\n        buyText: this.lanText.text27,\n        // '可买',\n        sellText: this.lanText.text28 // '可卖',\n\n      };\n    },\n    // 订单类型列表\n    ordeTypeList: function ordeTypeList() {\n      return [{\n        title: this.lanText.text29,\n        // '只做maker',\n        // '只做Maker（Post-Only）订单保证用户只做maker，该订单不会立即在市场成交，假如此委托会立即与已有委托单成交，那么此委托单将被立即取消。',\n        text: this.lanText.text30,\n        id: 5\n      }, {\n        title: 'IOC',\n        // text: 'IOC（Immediately or Cancel）订单若不能立即成交则立即取消未成交的部分。',\n        text: this.lanText.text31,\n        id: 3\n      }, {\n        title: 'FOK',\n        // text: 'FOK（Fill or Kill）订单若不能全部成交则立即全部取消。',\n        text: this.lanText.text32,\n        id: 4\n      }];\n    },\n    // login 按钮信息\n    loginButton: function loginButton() {\n      if (this.isLogin && !this.openContract) {\n        return {\n          text: this.lanText.text33,\n          // '开通合约交易',\n          class: 'u-8-bg buyBtn u-16-cl'\n        };\n      }\n\n      return {\n        text: this.lanText.text34,\n        // '登录后进行交易',\n        class: 'u-8-bg buyBtn u-16-cl'\n      };\n    },\n    // 按钮信息\n    buttosContent: function buttosContent() {\n      if (this.transactionType === 2 || this.zhiJianCang) {\n        return {\n          buyButton: {\n            text: this.lanText.text35,\n            // '买入平空',\n            class: 'u-1-bg buyBtn b-1-cl'\n          },\n          sellButton: {\n            text: this.lanText.text36,\n            // '卖出平多',\n            class: 'u-4-bg sellBtn b-1-cl'\n          }\n        };\n      }\n\n      if (this.positionModel === 2) {\n        return {\n          buyButton: {\n            text: this.lanText.text37,\n            // '买入开多',\n            class: 'u-1-bg buyBtn b-1-cl'\n          },\n          sellButton: {\n            text: this.lanText.text38,\n            // '卖出开空',\n            class: 'u-4-bg sellBtn b-1-cl'\n          }\n        };\n      }\n\n      return {\n        buyButton: {\n          text: this.lanText.text39,\n          // '买入做多',\n          class: 'u-1-bg buyBtn b-1-cl'\n        },\n        sellButton: {\n          text: this.lanText.text40,\n          // '卖出做空',\n          class: 'u-4-bg sellBtn b-1-cl'\n        }\n      };\n    },\n    // 是否是 市价开仓\n    isOpenAndIsMarket: function isOpenAndIsMarket() {\n      // 市价单 && 不是只减仓\n      // 条件市价 && 不是只减仓 && transactionType=== 1 开仓  2平仓\n      if ((this.currentCategory === 2 || this.isMarket) && !this.zhiJianCang && this.transactionType === 1) {\n        return true;\n      }\n\n      return false;\n    },\n    // 输入的价格\n    inputPrice: function inputPrice() {\n      // 市价\n      if (this.currentCategory === 2 || this.isMarket) {\n        return 0;\n      } // 条件单\n\n\n      if (this.currentCategory === 3) {\n        return this.formData_2.value;\n      }\n\n      return Number(this.formData_1.value);\n    },\n    // 数量(张数) || 市价的开仓价值\n    inputVolume: function inputVolume() {\n      // 限价的数量 and 市价的开仓价值\n      var volume = this.formData_3.value; // 如果单位是标记货币 && 不是市价开仓(开仓价值)\n\n      if (this.coUnitType === 1 && !this.isOpenAndIsMarket && volume) {\n        // 转换成张\n        volume = division(volume, this.multiplier);\n      }\n\n      return Number(volume) || 0;\n    },\n    // 条件单的触发价\n    triggerPrice: function triggerPrice() {\n      if (this.currentCategory === 3) {\n        return this.formData_1.value;\n      }\n\n      return null;\n    },\n    // 提交时的订单类型\n    submitOrderType: function submitOrderType() {\n      // 订单类型 (1 limit， 2 market，3 IOC，4 FOK，5 POST_ONLY)\n      var type = this.currentCategory;\n\n      if (this.currentCategory === 3) {\n        type = this.isMarket ? 2 : 1;\n      }\n\n      if (this.isCheckedOrdeType && this.ordeType && this.ordeType.id) {\n        type = this.ordeType.id;\n      }\n\n      return type;\n    },\n    // 开仓价值 约等于\n    worthRate: function worthRate() {\n      // 正向： 开仓价值 / 本交易所最新价格 / 保证金汇率(币)\n      // 正向： 开仓价值 / 本交易所最新价格 / 保证金汇率(张)\n      // 反向： 开仓价值 * 本交易所最新价格 / 保证金汇率(币)\n      // 反向： 开仓价值 * 本交易所最新价格 / 保证金汇率(张)\n      // this.marginRate：保证金汇率\n      // this.multiplier： 合约面值\n      var value = this.countPercentageVlaue() || this.inputVolume;\n      var V1 = '';\n\n      if (value && this.activeNewPrice) {\n        // 正向\n        if (this.contractSide === 1) {\n          V1 = division(value, this.activeNewPrice);\n        } else {\n          // 反向\n          V1 = nul(value, this.activeNewPrice);\n        }\n\n        if (V1) {\n          return fixD(division(V1, this.marginRate), this.multiplierFix);\n        }\n      }\n\n      return 0;\n    },\n    // 价值\n    worthValue: function worthValue() {\n      var volume = this.countPercentageVlaue() || this.inputVolume;\n      var price = this.formData_1.value;\n\n      if (this.currentCategory === 3) {\n        price = this.formData_2.value;\n      }\n\n      if (volume && price) {\n        volume = nul(volume, this.multiplier); // 正向合约\n\n        if (this.contractSide === 1) {\n          return fixD(nul(volume, price), this.pricefix);\n        } // 反向合约\n        // const { volfix } = this.$store.state.future;\n\n\n        return fixD(division(volume, price), this.marginCoinFix);\n      }\n\n      return 0;\n    }\n  },\n  watch: {\n    // 用户配置信息\n    userConfig: function userConfig(val) {\n      if (val) {\n        //\n        this.positionModel = val.positionModel; // 只减仓\n\n        this.zhiJianCang = false; // 交易类型 1开仓 2 平仓\n\n        this.transactionType = 1; // 1 限价 2 市价 3 条件\n        // this.currentCategory = 1;\n        // 条件单是否是市价\n\n        this.isMarket = false; // 只减仓\n\n        this.zhiJianCang = false; // 设置表单布局\n\n        this.setFormType(); // 清空表单内容\n\n        this.clearFormData();\n      }\n    },\n    // 合约ID\n    contractId: function contractId() {\n      // 清空表单内容\n      this.clearFormData();\n    },\n    'formData_1.value': function formData1(value) {\n      if (value && Number(value)) {\n        this.formData_1.errorText = null;\n      }\n    },\n    'formData_2.value': function formData2(value) {\n      if (value && Number(value)) {\n        this.formData_2.errorText = null;\n      }\n    },\n    'formData_3.value': function formData3(value) {\n      if (value && Number(value)) {\n        this.formData_3.errorText = null;\n      }\n    },\n    volUnit: function volUnit(val) {\n      if (val) {\n        this.setFormType();\n      }\n    },\n    ordeTypeList: function ordeTypeList() {\n      var _this$ordeTypeList = _slicedToArray(this.ordeTypeList, 1),\n          ordeType = _this$ordeTypeList[0];\n\n      this.ordeType = ordeType;\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      // 监听喜好设置\n      this.$bus.$on('set-future', function (data) {\n        if (data && data.positionModel) {\n          _this.positionModel = data.positionModel;\n        }\n      }); // 监听获取当前最新价格\n\n      this.$bus.$on('ACTIVE_NEW_PRICE', function (val) {\n        if (val) {\n          _this.activeNewPrice = val;\n        }\n      }); // 监听点击盘口的价格\n\n      this.$bus.$on('HANDEL_PRICE', function (val) {\n        if (val) {\n          _this.formData_1.value = val;\n        }\n      });\n      this.setFormType(); // 设置默认订单类型\n\n      this.$nextTick(function () {\n        var _this$ordeTypeList2 = _slicedToArray(_this.ordeTypeList, 1),\n            ordeType = _this$ordeTypeList2[0];\n\n        _this.ordeType = ordeType;\n      });\n    },\n    // 显示弹框\n    showDialog: function showDialog(type) {\n      this.$bus.$emit(type);\n    },\n    // 开启弹框\n    setShowDialog: function setShowDialog(type) {\n      // 显示开通合约交易弹框\n      if (this.userConfig && !this.userConfig.openContract) {\n        this.$bus.$emit('OPEN_FUTURE');\n        return false;\n      }\n\n      if (type === 'leverageDialogShow' && this.userConfig && !this.userConfig.levelCanSwitch) {\n        // 本合约当前存在委托，不可调整杠杆\n        this.$bus.$emit('tip', {\n          text: this.$t('futures.tradeForm.text54'),\n          type: 'error'\n        });\n        return false;\n      }\n\n      if (type === 'depositDialogShow' && this.userConfig && !this.userConfig.marginModelCanSwitch) {\n        // '本合约当前存在委托/仓位，不可调整仓位类型'\n        this.$bus.$emit('tip', {\n          text: this.$t('futures.tradeForm.text55'),\n          type: 'error'\n        });\n        return false;\n      }\n\n      if (!this.isLogin) {\n        this.$bus.$emit('tip', {\n          text: this.lanText.text34,\n          type: 'error'\n        });\n      } else {\n        this.$store.dispatch('getUserConfig');\n        this[type] = true;\n      }\n\n      return false;\n    },\n    // 切换 开仓  和 平仓\n    switchTradeType: function switchTradeType(type) {\n      if (this.transactionType !== type) {\n        this.transactionType = type;\n        this.setFormType();\n        this.clearFormData();\n      }\n    },\n    // 切换 /普通/高级限价/计划\n    selectCategory: function selectCategory(id) {\n      if (this.currentCategory !== id) {\n        this.currentCategory = id; // 条件单是否是市价\n\n        this.isMarket = false;\n        this.setFormType();\n        this.clearFormData();\n      }\n    },\n    // 条件单切换 市价 and 限价\n    selectMarket: function selectMarket() {\n      if (this.isMarket) {\n        this.formData_3.value = '';\n      }\n\n      this.isMarket = !this.isMarket;\n      this.setFormType();\n      this.clearFormData('isMarket');\n    },\n    // 清除百分比\n    clearPercentage: function clearPercentage() {\n      this.percentageVlaue = null;\n      this.formData_3.value = null;\n      this.formData_3.percentageVlaue = null;\n      this.formData_1.percentageVlaue = null;\n    },\n    // 设置百分比\n    setPercentageVlaue: function setPercentageVlaue(value) {\n      this.percentageVlaue = value;\n\n      if (this.formData_3.isShow) {\n        this.formData_3.percentageVlaue = value;\n        this.formData_3.value = null;\n        this.formData_3.errorText = null;\n      } else {\n        this.formData_1.percentageVlaue = value;\n        this.formData_1.value = null;\n        this.formData_1.errorText = null;\n      }\n    },\n    // 计算百分比的数量\n    countPercentageVlaue: function countPercentageVlaue(type) {\n      if (!this.percentageVlaue) return 0;\n      var canNumber = type === 'BUY' ? this.maxCanBuyNumber : this.maxCanSellNumber;\n      if (!canNumber) return 0;\n      var number = 0; //  市价 开仓 非只减仓\n\n      if (this.isOpenAndIsMarket) {\n        // 百分比*可用*杠杆 / 保证金汇率 = 仓位价值\n        var percentageVlaue = division(this.percentageVlaue, 100); // 百分比 * 可用\n\n        var Np = nul(percentageVlaue, this.canUseAmount); // 根据余额算出可开\n\n        var val1 = division(nul(Np, this.nowLevel), this.marginRate); // 根据杠杆限制算出可开\n        // const val2 = type === 'BUY' ?\n        // nul(percentageVlaue, this.V1Buy) :\n        // nul(percentageVlaue, this.V1Sell); //senge\n        // const val3 = Number(val1) < Number(val2) ? val1 : val2; //senge\n\n        var val3 = val1; // senge\n\n        number = fixD(val3, this.pricefix);\n      } else {\n        // 百分比*（可买 || 可卖）= 数量\n        number = nul(division(this.percentageVlaue, 100), canNumber); // 如果当前单位是标的货币\n\n        if (this.coUnitType === 1 && number) {\n          // 换算成（张）\n          number = fixD(division(number, this.multiplier), 0);\n        }\n\n        if (this.coUnitType === 2) {\n          number = fixD(number, 0);\n        }\n      }\n\n      return number;\n    },\n    // 设置表单\n    setFormType: function setFormType() {\n      this.formData_1.promptText = null;\n      this.formData_3.promptText = null; // 限价\n\n      if (this.currentCategory === 1) {\n        this.formData_1.isShow = true;\n        this.formData_1.title = this.lanText.text11; //  '委托价格';\n\n        this.formData_1.units = this.priceUnit;\n        this.formData_1.fix = this.pricefix;\n        this.formData_3.isShow = true;\n        this.formData_3.units = this.volUnit;\n        this.formData_3.fix = this.volfix;\n      } // 市价\n\n\n      if (this.currentCategory === 2) {\n        this.isCheckedOrdeType = false; // 平仓 || 只减仓\n\n        if (this.transactionType === 2 || this.zhiJianCang) {\n          this.formData_1.isShow = false;\n          this.formData_3.isShow = true;\n        } else {\n          this.formData_1.isShow = false;\n          this.formData_3.isShow = true;\n        }\n      } // 条件单\n\n\n      if (this.currentCategory === 3) {\n        this.formData_1.isShow = true;\n        this.formData_2.isShow = true;\n        this.formData_3.isShow = true;\n        this.formData_1.title = this.lanText.text12; // '触发价';\n        // '当该合约的最新成交价达到该价格时，系统将按照你设置的下单价格和下单数量为你下单。';\n\n        this.formData_1.promptText = this.lanText.text13;\n        this.formData_2.title = this.lanText.text11; // '委托价格';\n\n        this.formData_1.units = this.priceUnit;\n        this.formData_2.fix = this.pricefix;\n        this.formData_1.fix = this.pricefix;\n      } else {\n        this.formData_2.isShow = false;\n      } // 如果是市价开仓\n\n\n      if (this.isOpenAndIsMarket) {\n        this.formData_3.title = this.lanText.text14; // '开仓价值';\n        // '需要开的仓位的价值，仓位价值 = 仓位数量 * 成交价格，实际成交的仓位数量与成交时的成交价格有关。';\n\n        this.formData_3.promptText = this.lanText.text15; // 正向\n\n        if (this.contractSide === 1) {\n          this.formData_3.units = this.priceUnit;\n          this.formData_3.fix = this.pricefix;\n        } else {\n          // 反向\n          var volfix = this.$store.state.future.volfix;\n          this.formData_3.units = this.baseCoin;\n          this.formData_3.fix = volfix;\n        }\n      } else {\n        this.formData_3.title = this.lanText.text53; // '委托数量';\n\n        this.formData_3.units = this.volUnit;\n        this.formData_3.fix = this.volfix;\n      }\n\n      this.setHeight();\n    },\n    // 清除表单数据\n    clearFormData: function clearFormData(type) {\n      if (type !== 'isMarket') {\n        this.formData_1.value = null;\n      } // this.isMarket = false;\n\n\n      this.percentageVlaue = null;\n      this.formData_2.value = null;\n      this.formData_1.errorText = null;\n      this.formData_2.errorText = null;\n      this.formData_3.errorText = null;\n      this.formData_3.value = null; // 百分数\n\n      this.formData_1.percentageVlaue = null;\n      this.formData_3.percentageVlaue = null;\n      this.setHeight();\n    },\n    // 表单输入事件\n    changeInput: function changeInput(type, value) {\n      this[type].value = value;\n    },\n    // 多选框选择事件(只减仓)\n    checkoutClick: function checkoutClick(type) {\n      this.zhiJianCang = type;\n      this.setFormType();\n    },\n    // 多选框选择事件(只减仓)\n    checkedOrdeTypeclick: function checkedOrdeTypeclick(type) {\n      this.isCheckedOrdeType = type;\n    },\n    // 单选框 选择事件\n    radioClick: function radioClick(type) {\n      this.ordeType = type;\n      this.ordeTypePtions = false;\n    },\n    // 显示开通合约弹框/登录\n    loginButtonClick: function loginButtonClick() {\n      if (!this.isLogin) {\n        if (this.isIframe) {\n          window.parent.postMessage('login', '*');\n        } else {\n          this.$router.push('/login');\n        }\n      } else {\n        // 显示开通合约弹框\n        this.$bus.$emit('OPEN_FUTURE');\n      }\n    },\n    // 表单输入值大小验证\n    formNumberVerify: function formNumberVerify() {\n      var flag = true;\n      this.formData_1.errorText = null;\n      this.formData_2.errorText = null;\n      this.formData_3.errorText = null;\n      var sideType = this.sideType; // 当前输入的价格和最新价的比例 (当前价格 - 输入的价格) / 当前价格\n\n      if (this.inputPrice) {\n        var range = Math.abs(division(cut(this.activeNewPrice, this.inputPrice), this.activeNewPrice));\n        var priceRange = this.coinResultVo.priceRange; // 最大价格比例\n\n        var chaFlag = true;\n\n        if (sideType === 'SELL' && Number(this.inputPrice) < Number(this.activeNewPrice)) {\n          chaFlag = false;\n        }\n\n        if (sideType === 'BUY' && Number(this.inputPrice) > Number(this.activeNewPrice)) {\n          chaFlag = false;\n        }\n\n        if (range > priceRange && !chaFlag) {\n          if (this.currentCategory === 3) {\n            this.formData_2.errorText = this.lanText.text41; // '价格偏差太大！';\n          } else {\n            this.formData_1.errorText = this.lanText.text41; // '价格偏差太大！';\n          }\n\n          flag = false;\n        }\n      } // 数量\n\n\n      var vol = this.inputVolume; // debugger\n\n      if (this.percentageVlaue) {\n        vol = this.countPercentageVlaue(sideType);\n      }\n\n      if (vol) {\n        // 验证市价开仓\n        if (this.isOpenAndIsMarket) {\n          // 市价（开仓价值）\n          var _this$coinResultVo = this.coinResultVo,\n              maxMarketMoney = _this$coinResultVo.maxMarketMoney,\n              minOrderMoney = _this$coinResultVo.minOrderMoney;\n\n          if (vol > maxMarketMoney) {\n            // 超出单次最大下单金额，最多可输入\n            this.formData_3.errorText = \"\".concat(this.lanText.text42).concat(maxMarketMoney, \" \").concat(this.marginCoin);\n            flag = false;\n          }\n\n          if (vol < minOrderMoney) {\n            // 超出单次最小下单金额，最少需输入\n            var coin = this.marginCoin;\n\n            if (this.contractInfo.contractType !== 'E' && this.currentCategory === 2) {\n              coin = this.quoteCoin;\n            }\n\n            this.formData_3.errorText = \"\".concat(this.lanText.text43).concat(minOrderMoney, \" \").concat(coin);\n            flag = false;\n          } // 百分比 * 可用\n          // const val1 = fixD(division(\n          //   nul(this.canUseAmount, this.nowLevel), this.marginRate,\n          // ), this.pricefix);\n          // const val2 = sideType === 'BUY' ? this.V1Buy : this.V1Sell; // senge\n          // const number = Number(val1) < Number(val2) ? Number(val1) : Number(val2); // senge\n          // if (vol > number) {\n          //   this.formData_3.errorText = `${this.lanText.text57}`;\n          //   flag = false;\n          //   return false;\n          // }\n\n        } else {\n          // 限价\n          var _this$coinResultVo2 = this.coinResultVo,\n              maxLimitVolume = _this$coinResultVo2.maxLimitVolume,\n              minOrderVolume = _this$coinResultVo2.minOrderVolume; //\n\n          var canMaxNumber = sideType === 'SELL' ? this.maxCanSellNumber : this.maxCanBuyNumber;\n          var canMaxNumberZhang = canMaxNumber;\n\n          if (this.coUnitType === 1 && !this.isOpenAndIsMarket && canMaxNumber) {\n            // 转换成张\n            canMaxNumberZhang = division(canMaxNumber, this.multiplier);\n          } // 超出最大数量\n\n\n          if (vol > Number(canMaxNumberZhang)) {\n            // 超出最大下单量，最多还可以下单\n            this.formData_3.errorText = \"\".concat(this.lanText.text56, \" \").concat(canMaxNumber, \" \").concat(this.volUnit);\n            flag = false;\n            return false;\n          }\n\n          if (vol > maxLimitVolume) {\n            var Tn = maxLimitVolume; // 如果是标记货币\n\n            if (this.coUnitType === 1) {\n              Tn = nul(maxLimitVolume, this.multiplier);\n            } // 超出单次最大下单量，最多可输入\n\n\n            this.formData_3.errorText = \"\".concat(this.lanText.text44).concat(Tn, \" \").concat(this.volUnit, \"\\uFF01\");\n            flag = false;\n          } // 超出最小数量\n\n\n          if (vol < minOrderVolume) {\n            var _Tn = minOrderVolume; // 如果是标记货币\n\n            if (this.coUnitType === 1) {\n              _Tn = nul(minOrderVolume, this.multiplier);\n            } // 超出单次最小下单量，最少需输入\n\n\n            this.formData_3.errorText = \"\".concat(this.lanText.text45).concat(_Tn, \" \").concat(this.volUnit, \"\\uFF01\");\n            flag = false;\n          } // 验证平仓数量 是否超出可平数量\n\n\n          if (this.zhiJianCang || this.transactionType === 2) {\n            // 可平数量\n            var Kp = sideType === 'SELL' ? Number(this.maxCanSellNumber) : Number(this.maxCanBuyNumber); // 如果当前单位是标的货币\n\n            if (this.coUnitType === 1) {\n              vol = nul(vol, this.multiplier);\n            }\n\n            if (vol > Kp) {\n              this.formData_3.errorText = this.lanText.text46; // '超出可平数量！';\n\n              flag = false;\n            }\n          }\n        }\n      }\n\n      this.setHeight();\n      return flag;\n    },\n    // 表单 非空 验证\n    formVerify: function formVerify() {\n      var flag = true;\n      var sideType = this.sideType; // 百分比数量\n\n      var BfbVol = this.countPercentageVlaue(sideType); // 验证限价\n\n      if (this.currentCategory === 1) {\n        if (!this.inputPrice) {\n          this.formData_1.errorText = this.lanText.text47; // '请输入价格!';\n\n          flag = false;\n        }\n\n        if (!this.inputVolume && !BfbVol) {\n          this.formData_3.errorText = this.lanText.text48; // '请输入数量!';\n\n          flag = false;\n        }\n      } // 验证市价\n\n\n      if (this.currentCategory === 2 && !BfbVol) {\n        if (!this.inputVolume && this.orderSide === 'OPEN') {\n          this.formData_3.errorText = this.lanText.text49; // '请输入开仓价值!';\n\n          flag = false;\n        }\n\n        if (!this.inputVolume && this.orderSide === 'CLOSE') {\n          this.formData_3.errorText = this.lanText.text48; // '请输入数量!';\n\n          flag = false;\n        }\n      } // 验证条件单\n\n\n      if (this.currentCategory === 3) {\n        // 触发价\n        if (!this.triggerPrice) {\n          this.formData_1.errorText = this.lanText.text50; // '请输入触发价!';\n\n          flag = false;\n        } // 价格\n\n\n        if (!this.inputPrice && !this.isMarket) {\n          this.formData_2.errorText = this.lanText.text47; // '请输入价格!';\n\n          flag = false;\n        } // 数量\n\n\n        if (!this.inputVolume && !this.isMarket && !BfbVol) {\n          this.formData_3.errorText = this.lanText.text48; // '请输入数量!';\n\n          flag = false;\n        }\n\n        if (!this.inputVolume && this.isMarket && this.orderSide === 'OPEN' && !BfbVol) {\n          this.formData_3.errorText = this.lanText.text49; // '请输入开仓价值!';\n\n          flag = false;\n        }\n      }\n\n      this.setHeight();\n      return flag;\n    },\n    // 验证保证金是否足够\n    amountVerify: function amountVerify() {\n      // 保证金数量\n      var marginCoinVol = this.canBuyCostNumber; // 确认按钮class\n\n      if (this.sideType === 'SELL') {\n        marginCoinVol = this.canSellCostNumber;\n      }\n\n      if (Number(marginCoinVol) > Number(this.canUseAmount)) {\n        // 保证金余额不足！\n        this.$bus.$emit('tip', {\n          text: this.lanText.text51,\n          type: 'error'\n        });\n        return false;\n      }\n\n      return true;\n    },\n    // 点击买入卖出按钮\n    submitForm: function submitForm(sideType) {\n      this.sideType = sideType; // 如果没有登录跳转登录页面\n\n      if (!this.isLogin) {\n        if (this.isIframe) {\n          window.parent.postMessage('login', '*');\n        } else {\n          this.$router.push('/login');\n        }\n      } // 表单非空验证\n\n\n      if (!this.formVerify()) return false; // 表单价格 数量 大小验证\n\n      if (!this.formNumberVerify(sideType)) return false; // 验证保证金余额是够足够\n\n      if (!this.amountVerify()) return false; // 百分比的数量 || 输入的数量 (张)\n\n      var volume = this.countPercentageVlaue(sideType) || this.inputVolume;\n      var submitVolume = volume; // 如果不是市价开仓\n\n      if (!this.isOpenAndIsMarket && submitVolume) {\n        // 转换成张\n        submitVolume = fixD(submitVolume, 0);\n      }\n\n      this.submitData = {\n        contractId: this.contractId,\n        // 合约ID\n        positionType: this.marginModel,\n        // 持仓类型(1 全仓，2 仓逐)\n        side: this.sideType,\n        // 买卖方向（buy 买入，sell 卖出）\n        leverageLevel: this.nowLevel,\n        // 杠杆倍数\n        price: this.inputPrice,\n        // 下单价格(市价单传0)\n        volume: submitVolume,\n        // 下单数量(开仓 市价单：开仓价值)\n        triggerPrice: this.triggerPrice,\n        // 触发价格\n        open: this.orderSide,\n        // 开平仓方向(open 开仓，close 平仓)\n        type: this.submitOrderType,\n        // 订单类型 (1 limit， 2 market，3 IOC，4 FOK，5 POST_ONLY)\n        isConditionOrder: this.currentCategory === 3 // 是否是条件单\n        // expireTime: this.expireTime, // 到期时间\n\n      }; // 判断用户是否设置了开启二次确认\n\n      if (this.userConfig && this.userConfig.pcSecondConfirm) {\n        var sideTypeData = this.buttosContent.buyButton; // 保证金数量\n\n        var marginCoinVol = this.canBuyCostNumber; // 确认按钮class\n\n        var sideClass = 'u-1-bg';\n\n        if (this.sideType === 'SELL') {\n          sideTypeData = this.buttosContent.sellButton;\n          marginCoinVol = this.canSellCostNumber;\n          sideClass = 'u-4-bg';\n        } // 数量\n\n\n        var vol = \"\".concat(volume, \" \").concat(this.volUnit); // 市价开仓\n\n        if (this.orderSide === 'OPEN' && (this.currentCategory === 2 || this.isMarket)) {\n          // 反向\n          var unit = this.contractInfo.base; // 正向\n\n          if (this.contractSide === 1) {\n            unit = this.priceUnit;\n          }\n\n          vol = \"\".concat(volume, \" \").concat(unit);\n        } else if (this.coUnitType === 1) {\n          // 如果当前单位是标的货币 就 把张 换算成 标的数量\n          vol = \"\".concat(fixD(nul(volume, this.multiplier), this.volfix), \" \").concat(this.volUnit);\n        }\n\n        this.confirmData = {\n          // 币种\n          symbol: this.contractSymbol,\n          // 订单类型Number（1限价单、2市价单、3条件单）\n          currentCategory: this.currentCategory,\n          // 确认按钮文案（买入做多...）\n          sideText: sideTypeData.text,\n          // 确认按钮颜色class\n          sideClass: sideClass,\n          // 是否是开仓市价单\n          isOpenAndIsMarket: this.isOpenAndIsMarket,\n          // 条件单 触发价\n          triggerPrice: \"\".concat(this.triggerPrice, \" \").concat(this.priceUnit),\n          // 价格\n          price: this.inputPrice ? \"\".concat(this.inputPrice, \" \").concat(this.priceUnit) : '市价',\n          // 数量\n          vol: vol,\n          marginCoin: \"\".concat(marginCoinVol, \" \").concat(this.marginCoin)\n        };\n        this.forcedReminderShow = true;\n      } else {\n        this.dialogConfirmLoading = true;\n        this.submit();\n      }\n\n      return false;\n    },\n    // 下单提交\n    submit: function submit() {\n      var _this2 = this;\n\n      if (this.submitFlag) {\n        this.submitFlag = false;\n        this.axios({\n          url: this.$store.state.url.futures.orderCreate,\n          hostType: 'co',\n          method: 'post',\n          params: this.submitData\n        }).then(function (_ref) {\n          var code = _ref.code,\n              msg = _ref.msg;\n\n          if (code.toString() === '0') {\n            _this2.clearFormData();\n\n            _this2.$store.dispatch('getUserConfig');\n\n            _this2.$store.dispatch('getPositionList');\n\n            _this2.forcedReminderShow = false;\n\n            _this2.$bus.$emit('CRAET-ORDER-SUCCESS');\n\n            _this2.$bus.$emit('tip', {\n              text: msg,\n              type: 'success'\n            });\n          } else {\n            _this2.$bus.$emit('tip', {\n              text: msg,\n              type: 'error'\n            });\n          }\n\n          _this2.dialogConfirmLoading = false;\n          _this2.submitFlag = true;\n        });\n      }\n    },\n    // 下单二次确认提交\n    submitOrder: function submitOrder(data) {\n      var _this3 = this;\n\n      if (data) {\n        this.axios({\n          url: this.$store.state.url.futures.editUserPageConfig,\n          hostType: 'co',\n          method: 'post',\n          params: {\n            pcSecondConfirm: 0,\n            contractId: this.contractId\n          }\n        }).then(function (_ref2) {\n          var code = _ref2.code,\n              msg = _ref2.msg;\n\n          if (code.toString() === '0') {\n            _this3.$store.dispatch('getUserConfig');\n          } else {\n            _this3.$bus.$emit('tip', {\n              text: msg,\n              type: 'error'\n            });\n          }\n        });\n      }\n\n      this.dialogConfirmLoading = true;\n      this.submit();\n    },\n    // 关闭弹窗\n    closeDialog: function closeDialog() {\n      // 关闭强制提醒（二次确认）弹框\n      this.forcedReminderShow = false; // 关闭杠杆弹窗\n\n      this.leverageDialogShow = false; // 关闭切换保证金模式弹框\n\n      this.depositDialogShow = false;\n    },\n    // 选择 到期时间\n    selectPlanType: function selectPlanType(val) {\n      this.expireTime = val;\n    },\n    setHeight: function setHeight() {\n      var _this4 = this;\n\n      var setTimer = setTimeout(function () {\n        var layoutHeight = document.getElementById('layoutBlockTrade').clientHeight;\n        var coTradeBoxHeight = document.getElementById('coTradeBox').clientHeight;\n        var syHeight = layoutHeight - coTradeBoxHeight - 15;\n\n        _this4.$bus.$emit('syHeight', syHeight);\n\n        clearTimeout(setTimer);\n        setTimer = null;\n      }, 100);\n    },\n    thousandsComma: function thousandsComma(num) {\n      if (num) {\n        return _thousandsComma(num);\n      }\n\n      return num;\n    },\n    evenHandMouseenter: function evenHandMouseenter(key, type) {\n      this[key] = type;\n    },\n    evenHandMouseleave: function evenHandMouseleave(key) {\n      this[key] = null;\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/coTrade/tradeForm/tradeForm.js"],"names":["fixD","division","getDigit","cut","thousandsComma","myStorage","nul","name","data","showClassType","transactionType","currentCategory","isMarket","zhiJianCang","percentageVlaue","percentageVlaueHover","isSubmitDisbled","leverageDialogShow","forcedReminderShow","isCheckedOrdeType","ordeType","hoverOrdeType","sideType","submitFlag","expireTime","formData_1","title","units","priceUnit","fix","isShow","errorText","value","formData_2","formData_3","submitData","confirmData","activeNewPrice","positionModel","get","depositDialogShow","ordeTypePtions","props","computed","isIframe","$store","state","future","marginModelText","userConfig","marginModel","$t","lanText","mPrice","textjz","text1","text2","text3","text4","text5","text6","text7","text8","text9","text10","text11","text12","text13","text14","text15","text16","text17","text18","text19","text20","text21","text22","text23","text24","text25","text26","text27","text28","text29","text30","text31","text32","text33","text34","text35","text36","text37","text38","text39","text40","text41","text42","text43","text44","text45","text46","text47","text48","text49","text50","text51","text52","text53","text56","text57","isLogin","baseData","futureUserConfig","contractId","pricefix","planTypeList","id","openContract","volUnit","coUnit","multiplier","Number","contractName","contractSymbol","volfix","coUnitType","contractInfo","coinResultVo","baseCoin","base","quoteCoin","quote","multiplierCoin","multiplierFix","marginCoin","marginCoinFix","marginCoinPrecision","accountBalanceMap","futureAccountBalance","accountBalance","canUseAmount","nowLevel","marginRate","contractSide","activeCanClose","obj","orderSide","open","percentageList","switchTradeTypeList","text","classes","categoryList","openableData","buyText","sellText","ordeTypeList","loginButton","class","buttosContent","buyButton","sellButton","isOpenAndIsMarket","inputPrice","inputVolume","volume","triggerPrice","submitOrderType","type","worthRate","countPercentageVlaue","V1","worthValue","price","watch","val","setFormType","clearFormData","formData1","formData2","formData3","methods","init","$bus","$on","$nextTick","showDialog","$emit","setShowDialog","levelCanSwitch","marginModelCanSwitch","dispatch","switchTradeType","selectCategory","selectMarket","clearPercentage","setPercentageVlaue","canNumber","maxCanBuyNumber","maxCanSellNumber","number","Np","val1","val3","promptText","setHeight","changeInput","checkoutClick","checkedOrdeTypeclick","radioClick","loginButtonClick","window","parent","postMessage","$router","push","formNumberVerify","flag","range","Math","abs","priceRange","chaFlag","vol","maxMarketMoney","minOrderMoney","coin","contractType","maxLimitVolume","minOrderVolume","canMaxNumber","canMaxNumberZhang","Tn","Kp","formVerify","BfbVol","amountVerify","marginCoinVol","canBuyCostNumber","canSellCostNumber","submitForm","submitVolume","positionType","side","leverageLevel","isConditionOrder","pcSecondConfirm","sideTypeData","sideClass","unit","symbol","sideText","dialogConfirmLoading","submit","axios","url","futures","orderCreate","hostType","method","params","then","code","msg","toString","submitOrder","editUserPageConfig","closeDialog","selectPlanType","setTimer","setTimeout","layoutHeight","document","getElementById","clientHeight","coTradeBoxHeight","syHeight","clearTimeout","num","evenHandMouseenter","key","evenHandMouseleave"],"mappings":"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","sourcesContent":["import {\n  fixD, division, getDigit, cut, thousandsComma, myStorage, nul,\n} from '@/utils';\n\nexport default {\n  name: 'tradeForm',\n  data() {\n    return {\n      // 按钮颜色class类型\n      showClassType: null,\n      // 交易类型 1开仓 2 平仓\n      transactionType: 1,\n      // 1 限价 2 市价 3 条件\n      currentCategory: 1,\n      // 是否是市价\n      isMarket: false,\n      // 只减仓\n      zhiJianCang: false,\n      // 百分比值\n      percentageVlaue: null,\n      // 百分比值鼠标移入效果\n      percentageVlaueHover: null,\n      // 下单按钮是否OK\n      isSubmitDisbled: false,\n      // 是否显示杠杆弹窗\n      leverageDialogShow: false,\n      // 是否显示 二次确认弹框\n      forcedReminderShow: false,\n      // 是否选中了订单类型\n      isCheckedOrdeType: null,\n      // 订单类型对象{}\n      ordeType: {},\n      // 鼠标移入订单类型对象\n      hoverOrdeType: {},\n      // buy买入、sell卖出？\n      sideType: null,\n      // 提交防止连击\n      submitFlag: true,\n      // 到期时间\n      expireTime: '14',\n\n      formData_1: {\n        title: '', // '价格',\n        units: this.priceUnit,\n        fix: 8,\n        isShow: true,\n        errorText: null,\n        value: null,\n      },\n      formData_2: {\n        title: '', // '价格',\n        units: this.priceUnit,\n        fix: 8,\n        isShow: false,\n        errorText: null,\n        value: null,\n      },\n      formData_3: {\n        title: '', // '数量',\n        units: '', // '张',\n        fix: 8,\n        isShow: true,\n        errorText: null,\n        value: null,\n      },\n      // 下单提交数据\n      submitData: null,\n      // 二次确认数据\n      confirmData: {},\n      // 当前合约最新平均价\n      activeNewPrice: 0,\n      // 持仓模式 1：单向持仓 2：双向持仓\n      positionModel: myStorage.get('positionModel') || 2,\n      // 切换保证金模式弹框\n      depositDialogShow: false,\n      // 是否显示下单类型选项类表\n      ordeTypePtions: false,\n    };\n  },\n  props: {\n  },\n  computed: {\n    // 是否 是云合约在iframe中调用\n    isIframe() {\n      return this.$store.state.future.isIframe;\n    },\n    // 当前合约保证金模式\n    marginModelText() {\n      if (this.userConfig) {\n        // 全仓 ： 逐仓\n        return this.userConfig.marginModel === 1\n          ? this.$t('futures.currentSymbol.marginModel1')\n          : this.$t('futures.currentSymbol.marginModel2');\n      }\n      return this.$t('futures.currentSymbol.marginModel1');\n    },\n    lanText() {\n      return {\n        mPrice: this.$t('futures.tradeForm.mPrice'),\n        textjz: this.$t('futures.tradeForm.textjz'),\n        text1: this.$t('futures.tradeForm.text1'),\n        text2: this.$t('futures.tradeForm.text2'),\n        text3: this.$t('futures.tradeForm.text3'),\n        text4: this.$t('futures.tradeForm.text4'),\n        text5: this.$t('futures.tradeForm.text5'),\n        text6: this.$t('futures.tradeForm.text6'),\n        text7: this.$t('futures.tradeForm.text7'),\n        text8: this.$t('futures.tradeForm.text8'),\n        text9: this.$t('futures.tradeForm.text9'),\n        text10: this.$t('futures.tradeForm.text10'),\n        text11: this.$t('futures.tradeForm.text11'),\n        text12: this.$t('futures.tradeForm.text12'),\n        text13: this.$t('futures.tradeForm.text13'),\n        text14: this.$t('futures.tradeForm.text14'),\n        text15: this.$t('futures.tradeForm.text15'),\n        text16: this.$t('futures.tradeForm.text16'),\n        text17: this.$t('futures.tradeForm.text17'),\n        text18: this.$t('futures.tradeForm.text18'),\n        text19: this.$t('futures.tradeForm.text19'),\n        text20: this.$t('futures.tradeForm.text20'),\n        text21: this.$t('futures.tradeForm.text21'),\n        text22: this.$t('futures.tradeForm.text22'),\n        text23: this.$t('futures.tradeForm.text23'),\n        text24: this.$t('futures.tradeForm.text24'),\n        text25: this.$t('futures.tradeForm.text25'),\n        text26: this.$t('futures.tradeForm.text26'),\n        text27: this.$t('futures.tradeForm.text27'),\n        text28: this.$t('futures.tradeForm.text28'),\n        text29: this.$t('futures.tradeForm.text29'),\n        text30: this.$t('futures.tradeForm.text30'),\n        text31: this.$t('futures.tradeForm.text31'),\n        text32: this.$t('futures.tradeForm.text32'),\n        text33: this.$t('futures.tradeForm.text33'),\n        text34: this.$t('futures.tradeForm.text34'),\n        text35: this.$t('futures.tradeForm.text35'),\n        text36: this.$t('futures.tradeForm.text36'),\n        text37: this.$t('futures.tradeForm.text37'),\n        text38: this.$t('futures.tradeForm.text38'),\n        text39: this.$t('futures.tradeForm.text39'),\n        text40: this.$t('futures.tradeForm.text40'),\n        text41: this.$t('futures.tradeForm.text41'),\n        text42: this.$t('futures.tradeForm.text42'),\n        text43: this.$t('futures.tradeForm.text43'),\n        text44: this.$t('futures.tradeForm.text44'),\n        text45: this.$t('futures.tradeForm.text45'),\n        text46: this.$t('futures.tradeForm.text46'),\n        text47: this.$t('futures.tradeForm.text47'),\n        text48: this.$t('futures.tradeForm.text48'),\n        text49: this.$t('futures.tradeForm.text49'),\n        text50: this.$t('futures.tradeForm.text50'),\n        text51: this.$t('futures.tradeForm.text51'),\n        text52: this.$t('futures.tradeForm.text52'),\n        text53: this.$t('futures.tradeForm.text53'),\n        text56: this.$t('futures.tradeForm.text56'),\n        text57: this.$t('futures.tradeForm.text57'),\n      };\n    },\n    // 是否登录\n    isLogin() {\n      if (this.$store.state.baseData.isLogin) {\n        return this.$store.state.baseData.isLogin;\n      }\n      return false;\n    },\n    // 用户配置信息\n    userConfig() {\n      return this.$store.state.future.futureUserConfig;\n    },\n    // 持仓类型(1 全仓，2 仓逐)\n    marginModel() {\n      return this.userConfig ? this.userConfig.marginModel : 1;\n    },\n    // 当前合约ID\n    contractId() {\n      return this.$store.state.future.contractId;\n    },\n    // 当前合约价格单位\n    priceUnit() {\n      return this.$store.state.future.priceUnit;\n    },\n    // 当前合约价格精度\n    pricefix() {\n      return this.$store.state.future.pricefix;\n    },\n    // 到期时间\n    planTypeList() {\n      return [\n        {\n          name: this.lanText.text16, // '24H',\n          id: '1',\n        },\n        {\n          name: this.lanText.text17, // '7天',\n          id: '7',\n        },\n        {\n          name: this.lanText.text18, // '14天',\n          id: '14',\n        },\n        {\n          name: this.lanText.text19, // '30天',\n          id: '30',\n        },\n      ];\n    },\n    // 是否开通了合约交易\n    openContract() {\n      return this.$store.state.future.openContract;\n    },\n    // 数量单位\n    volUnit() {\n      return this.$store.state.future.coUnit;\n    },\n    // 当前合约面值\n    multiplier() {\n      return Number(this.$store.state.future.multiplier) || 1;\n    },\n    // 当前合约名称\n    contractName() {\n      return this.$store.state.future.contractName;\n    },\n    // 当前合约币对\n    contractSymbol() {\n      return this.$store.state.future.contractSymbol;\n    },\n    // 当前合约数量精度\n    volfix() {\n      if (this.coUnitType === 1) {\n        return this.$store.state.future.volfix;\n      }\n      return 0;\n    },\n    // 数量单位类型Number 1标的货币, 2张\n    coUnitType() {\n      return this.$store.state.future.coUnitType;\n    },\n    // 当前合约信息\n    contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 当前合约币对信息\n    coinResultVo() {\n      if (this.contractInfo) {\n        return this.contractInfo.coinResultVo;\n      }\n      return {};\n    },\n    // 标的货币（数量单位 base）\n    baseCoin() {\n      if (this.contractInfo) {\n        return this.contractInfo.base;\n      }\n      return null;\n    },\n    // 计价货币\n    quoteCoin() {\n      if (this.contractInfo) {\n        return this.contractInfo.quote;\n      }\n      return null;\n    },\n    // 标的货币（合约面值单位）\n    multiplierCoin() {\n      if (this.contractInfo) {\n        return this.contractInfo.multiplierCoin;\n      }\n      return null;\n    },\n    // 标的货币精度（合约面值）\n    multiplierFix() {\n      if (this.contractInfo) {\n        return getDigit(this.contractInfo.multiplier);\n      }\n      return 4;\n    },\n    // 当前合约保证金币种\n    marginCoin() {\n      if (this.contractInfo) {\n        return this.contractInfo.marginCoin;\n      }\n      return '';\n    },\n    // 当前合约保证金币种精度\n    marginCoinFix() {\n      if (this.contractInfo && this.contractInfo.coinResultVo) {\n        return this.contractInfo.coinResultVo.marginCoinPrecision;\n      }\n      return 4;\n    },\n    // 用户合约资产\n    accountBalanceMap() {\n      return this.$store.state.future.futureAccountBalance;\n    },\n    accountBalance() {\n      if (this.accountBalanceMap && this.marginCoin) {\n        return this.accountBalanceMap[this.marginCoin];\n      }\n      return {};\n    },\n    // 可用\n    canUseAmount() {\n      if (this.isLogin && this.accountBalance && this.accountBalance.canUseAmount !== '--') {\n        return fixD(this.accountBalance.canUseAmount, this.marginCoinFix);\n      }\n      return 0;\n    },\n    // 当前合约杠杆倍数\n    nowLevel() {\n      if (this.userConfig) {\n        return this.userConfig.nowLevel || 20;\n      }\n      return 20;\n    },\n    // 当前合约保证金汇率\n    marginRate() {\n      if (this.contractInfo && this.contractInfo.marginRate) {\n        return this.contractInfo.marginRate;\n      }\n      return 1;\n    },\n    // 当前合约方向（1正向、0反向）\n    contractSide() {\n      if (this.contractInfo) {\n        return this.contractInfo.contractSide;\n      }\n      return 1;\n    },\n    // 当前合约可平数量\n    activeCanClose() {\n      const { activeCanClose } = this.$store.state.future;\n      let obj = {};\n      if (activeCanClose) {\n        obj = activeCanClose[this.contractName];\n      }\n      return obj;\n    },\n    // 仓位方向（开仓 还是平仓）\n    orderSide() {\n      let open = 'OPEN';\n      if (this.zhiJianCang || this.transactionType === 2) {\n        open = 'CLOSE';\n      }\n      return open;\n    },\n    // 百分比列表\n    percentageList() {\n      return [10, 20, 50, 100];\n    },\n    // 开仓 平仓 Tab\n    switchTradeTypeList() {\n      return [\n        {\n          id: 1,\n          text: this.lanText.text20, // '开仓',\n          classes: this.transactionType === 1 ? 'u-8-bg b-1-cl' : 'a-8-bg b-2-cl',\n        },\n        {\n          id: 2,\n          text: this.lanText.text21, // '平仓',\n          classes: this.transactionType === 2 ? 'u-8-bg b-1-cl' : 'a-8-bg b-2-cl',\n        },\n      ];\n    },\n    // 限价单\\市价单\\条件单\n    categoryList() {\n      return [\n        {\n          id: 1,\n          text: this.lanText.text22, // '限价单',\n          classes: this.currentCategory === 1 ? 'a-5-bg b-1-cl' : 'a-8-bg b-2-cl',\n        },\n        {\n          id: 2,\n          text: this.lanText.text23, // '市价单',\n          classes: this.currentCategory === 2 ? 'a-5-bg b-1-cl' : 'a-8-bg b-2-cl',\n        },\n        {\n          id: 3,\n          text: this.lanText.text24, // '条件单',\n          classes: this.currentCategory === 3 ? 'a-5-bg b-1-cl' : 'a-8-bg b-2-cl',\n        },\n      ];\n    },\n    // 可买 可卖标题文案\n    openableData() {\n      if (this.zhiJianCang || this.transactionType === 2) {\n        return {\n          buyText: this.lanText.text25, // '可平空',\n          sellText: this.lanText.text26, // '可平多',\n        };\n      }\n      return {\n        buyText: this.lanText.text27, // '可买',\n        sellText: this.lanText.text28, // '可卖',\n      };\n    },\n    // 订单类型列表\n    ordeTypeList() {\n      return [\n        {\n          title: this.lanText.text29, // '只做maker',\n          // '只做Maker（Post-Only）订单保证用户只做maker，该订单不会立即在市场成交，假如此委托会立即与已有委托单成交，那么此委托单将被立即取消。',\n          text: this.lanText.text30,\n          id: 5,\n        },\n        {\n          title: 'IOC',\n          // text: 'IOC（Immediately or Cancel）订单若不能立即成交则立即取消未成交的部分。',\n          text: this.lanText.text31,\n          id: 3,\n        },\n        {\n          title: 'FOK',\n          // text: 'FOK（Fill or Kill）订单若不能全部成交则立即全部取消。',\n          text: this.lanText.text32,\n          id: 4,\n        },\n      ];\n    },\n    // login 按钮信息\n    loginButton() {\n      if (this.isLogin && !this.openContract) {\n        return {\n          text: this.lanText.text33, // '开通合约交易',\n          class: 'u-8-bg buyBtn u-16-cl',\n        };\n      }\n      return {\n        text: this.lanText.text34, // '登录后进行交易',\n        class: 'u-8-bg buyBtn u-16-cl',\n      };\n    },\n    // 按钮信息\n    buttosContent() {\n      if (this.transactionType === 2 || this.zhiJianCang) {\n        return {\n          buyButton: {\n            text: this.lanText.text35, // '买入平空',\n            class: 'u-1-bg buyBtn b-1-cl',\n          },\n          sellButton: {\n            text: this.lanText.text36, // '卖出平多',\n            class: 'u-4-bg sellBtn b-1-cl',\n          },\n        };\n      }\n      if (this.positionModel === 2) {\n        return {\n          buyButton: {\n            text: this.lanText.text37, // '买入开多',\n            class: 'u-1-bg buyBtn b-1-cl',\n          },\n          sellButton: {\n            text: this.lanText.text38, // '卖出开空',\n            class: 'u-4-bg sellBtn b-1-cl',\n          },\n        };\n      }\n      return {\n        buyButton: {\n          text: this.lanText.text39, // '买入做多',\n          class: 'u-1-bg buyBtn b-1-cl',\n        },\n        sellButton: {\n          text: this.lanText.text40, // '卖出做空',\n          class: 'u-4-bg sellBtn b-1-cl',\n        },\n      };\n    },\n    // 是否是 市价开仓\n    isOpenAndIsMarket() {\n      // 市价单 && 不是只减仓\n      // 条件市价 && 不是只减仓 && transactionType=== 1 开仓  2平仓\n      if ((this.currentCategory === 2 || this.isMarket)\n      && !this.zhiJianCang && this.transactionType === 1) {\n        return true;\n      }\n      return false;\n    },\n    // 输入的价格\n    inputPrice() {\n      // 市价\n      if (this.currentCategory === 2 || this.isMarket) {\n        return 0;\n      }\n      // 条件单\n      if (this.currentCategory === 3) {\n        return this.formData_2.value;\n      }\n      return Number(this.formData_1.value);\n    },\n    // 数量(张数) || 市价的开仓价值\n    inputVolume() {\n      // 限价的数量 and 市价的开仓价值\n      let volume = this.formData_3.value;\n      // 如果单位是标记货币 && 不是市价开仓(开仓价值)\n      if (this.coUnitType === 1 && !this.isOpenAndIsMarket && volume) {\n        // 转换成张\n        volume = division(volume, this.multiplier);\n      }\n      return Number(volume) || 0;\n    },\n    // 条件单的触发价\n    triggerPrice() {\n      if (this.currentCategory === 3) {\n        return this.formData_1.value;\n      }\n      return null;\n    },\n\n    // 提交时的订单类型\n    submitOrderType() {\n      // 订单类型 (1 limit， 2 market，3 IOC，4 FOK，5 POST_ONLY)\n      let type = this.currentCategory;\n      if (this.currentCategory === 3) {\n        type = this.isMarket ? 2 : 1;\n      }\n      if (this.isCheckedOrdeType && this.ordeType && this.ordeType.id) {\n        type = this.ordeType.id;\n      }\n      return type;\n    },\n    // 开仓价值 约等于\n    worthRate() {\n      // 正向： 开仓价值 / 本交易所最新价格 / 保证金汇率(币)\n      // 正向： 开仓价值 / 本交易所最新价格 / 保证金汇率(张)\n      // 反向： 开仓价值 * 本交易所最新价格 / 保证金汇率(币)\n      // 反向： 开仓价值 * 本交易所最新价格 / 保证金汇率(张)\n      // this.marginRate：保证金汇率\n      // this.multiplier： 合约面值\n      const value = this.countPercentageVlaue() || this.inputVolume;\n      let V1 = '';\n      if (value && this.activeNewPrice) {\n        // 正向\n        if (this.contractSide === 1) {\n          V1 = division(value, this.activeNewPrice);\n        } else {\n          // 反向\n          V1 = nul(value, this.activeNewPrice);\n        }\n        if (V1) {\n          return fixD(division(V1, this.marginRate), this.multiplierFix);\n        }\n      }\n      return 0;\n    },\n    // 价值\n    worthValue() {\n      let volume = this.countPercentageVlaue() || this.inputVolume;\n      let price = this.formData_1.value;\n      if (this.currentCategory === 3) {\n        price = this.formData_2.value;\n      }\n      if (volume && price) {\n        volume = nul(volume, this.multiplier);\n        // 正向合约\n        if (this.contractSide === 1) {\n          return fixD(nul(volume, price), this.pricefix);\n        }\n        // 反向合约\n        // const { volfix } = this.$store.state.future;\n        return fixD(division(volume, price), this.marginCoinFix);\n      }\n      return 0;\n    },\n  },\n  watch: {\n    // 用户配置信息\n    userConfig(val) {\n      if (val) {\n        //\n        this.positionModel = val.positionModel;\n        // 只减仓\n        this.zhiJianCang = false;\n        // 交易类型 1开仓 2 平仓\n        this.transactionType = 1;\n        // 1 限价 2 市价 3 条件\n        // this.currentCategory = 1;\n        // 条件单是否是市价\n        this.isMarket = false;\n        // 只减仓\n        this.zhiJianCang = false;\n        // 设置表单布局\n        this.setFormType();\n        // 清空表单内容\n        this.clearFormData();\n      }\n    },\n    // 合约ID\n    contractId() {\n      // 清空表单内容\n      this.clearFormData();\n    },\n    'formData_1.value': function formData1(value) {\n      if (value && Number(value)) {\n        this.formData_1.errorText = null;\n      }\n    },\n    'formData_2.value': function formData2(value) {\n      if (value && Number(value)) {\n        this.formData_2.errorText = null;\n      }\n    },\n    'formData_3.value': function formData3(value) {\n      if (value && Number(value)) {\n        this.formData_3.errorText = null;\n      }\n    },\n    volUnit(val) {\n      if (val) {\n        this.setFormType();\n      }\n    },\n    ordeTypeList() {\n      const [ordeType] = this.ordeTypeList;\n      this.ordeType = ordeType;\n    },\n  },\n  methods: {\n    init() {\n      // 监听喜好设置\n      this.$bus.$on('set-future', (data) => {\n        if (data && data.positionModel) {\n          this.positionModel = data.positionModel;\n        }\n      });\n      // 监听获取当前最新价格\n      this.$bus.$on('ACTIVE_NEW_PRICE', (val) => {\n        if (val) {\n          this.activeNewPrice = val;\n        }\n      });\n      // 监听点击盘口的价格\n      this.$bus.$on('HANDEL_PRICE', (val) => {\n        if (val) {\n          this.formData_1.value = val;\n        }\n      });\n      this.setFormType();\n      // 设置默认订单类型\n      this.$nextTick(() => {\n        const [ordeType] = this.ordeTypeList;\n        this.ordeType = ordeType;\n      });\n    },\n    // 显示弹框\n    showDialog(type) {\n      this.$bus.$emit(type);\n    },\n    // 开启弹框\n    setShowDialog(type) {\n      // 显示开通合约交易弹框\n      if (this.userConfig && !this.userConfig.openContract) {\n        this.$bus.$emit('OPEN_FUTURE');\n        return false;\n      }\n      if (type === 'leverageDialogShow'\n        && this.userConfig\n        && !this.userConfig.levelCanSwitch) {\n        // 本合约当前存在委托，不可调整杠杆\n        this.$bus.$emit('tip', { text: this.$t('futures.tradeForm.text54'), type: 'error' });\n        return false;\n      }\n      if (type === 'depositDialogShow'\n        && this.userConfig\n        && !this.userConfig.marginModelCanSwitch) {\n        // '本合约当前存在委托/仓位，不可调整仓位类型'\n        this.$bus.$emit('tip', { text: this.$t('futures.tradeForm.text55'), type: 'error' });\n        return false;\n      }\n\n      if (!this.isLogin) {\n        this.$bus.$emit('tip', { text: this.lanText.text34, type: 'error' });\n      } else {\n        this.$store.dispatch('getUserConfig');\n        this[type] = true;\n      }\n\n      return false;\n    },\n\n    // 切换 开仓  和 平仓\n    switchTradeType(type) {\n      if (this.transactionType !== type) {\n        this.transactionType = type;\n        this.setFormType();\n        this.clearFormData();\n      }\n    },\n    // 切换 /普通/高级限价/计划\n    selectCategory(id) {\n      if (this.currentCategory !== id) {\n        this.currentCategory = id;\n        // 条件单是否是市价\n        this.isMarket = false;\n        this.setFormType();\n        this.clearFormData();\n      }\n    },\n    // 条件单切换 市价 and 限价\n    selectMarket() {\n      if (this.isMarket) {\n        this.formData_3.value = '';\n      }\n      this.isMarket = !this.isMarket;\n      this.setFormType();\n      this.clearFormData('isMarket');\n    },\n    // 清除百分比\n    clearPercentage() {\n      this.percentageVlaue = null;\n      this.formData_3.value = null;\n      this.formData_3.percentageVlaue = null;\n      this.formData_1.percentageVlaue = null;\n    },\n    // 设置百分比\n    setPercentageVlaue(value) {\n      this.percentageVlaue = value;\n      if (this.formData_3.isShow) {\n        this.formData_3.percentageVlaue = value;\n        this.formData_3.value = null;\n        this.formData_3.errorText = null;\n      } else {\n        this.formData_1.percentageVlaue = value;\n        this.formData_1.value = null;\n        this.formData_1.errorText = null;\n      }\n    },\n    // 计算百分比的数量\n    countPercentageVlaue(type) {\n      if (!this.percentageVlaue) return 0;\n      const canNumber = type === 'BUY' ? this.maxCanBuyNumber : this.maxCanSellNumber;\n      if (!canNumber) return 0;\n      let number = 0;\n      //  市价 开仓 非只减仓\n      if (this.isOpenAndIsMarket) {\n        // 百分比*可用*杠杆 / 保证金汇率 = 仓位价值\n        const percentageVlaue = division(this.percentageVlaue, 100);\n        // 百分比 * 可用\n        const Np = nul(percentageVlaue, this.canUseAmount);\n        // 根据余额算出可开\n        const val1 = division(nul(Np, this.nowLevel), this.marginRate);\n        // 根据杠杆限制算出可开\n        // const val2 = type === 'BUY' ?\n        // nul(percentageVlaue, this.V1Buy) :\n        // nul(percentageVlaue, this.V1Sell); //senge\n        // const val3 = Number(val1) < Number(val2) ? val1 : val2; //senge\n        const val3 = val1; // senge\n        number = fixD(val3, this.pricefix);\n      } else {\n        // 百分比*（可买 || 可卖）= 数量\n        number = nul(division(this.percentageVlaue, 100), canNumber);\n        // 如果当前单位是标的货币\n        if (this.coUnitType === 1 && number) {\n          // 换算成（张）\n          number = fixD(division(number, this.multiplier), 0);\n        }\n        if (this.coUnitType === 2) {\n          number = fixD(number, 0);\n        }\n      }\n      return number;\n    },\n    // 设置表单\n    setFormType() {\n      this.formData_1.promptText = null;\n      this.formData_3.promptText = null;\n\n      // 限价\n      if (this.currentCategory === 1) {\n        this.formData_1.isShow = true;\n        this.formData_1.title = this.lanText.text11; //  '委托价格';\n        this.formData_1.units = this.priceUnit;\n        this.formData_1.fix = this.pricefix;\n        this.formData_3.isShow = true;\n        this.formData_3.units = this.volUnit;\n        this.formData_3.fix = this.volfix;\n      }\n\n      // 市价\n      if (this.currentCategory === 2) {\n        this.isCheckedOrdeType = false;\n        // 平仓 || 只减仓\n        if (this.transactionType === 2 || this.zhiJianCang) {\n          this.formData_1.isShow = false;\n          this.formData_3.isShow = true;\n        } else {\n          this.formData_1.isShow = false;\n          this.formData_3.isShow = true;\n        }\n      }\n      // 条件单\n      if (this.currentCategory === 3) {\n        this.formData_1.isShow = true;\n        this.formData_2.isShow = true;\n        this.formData_3.isShow = true;\n        this.formData_1.title = this.lanText.text12; // '触发价';\n        // '当该合约的最新成交价达到该价格时，系统将按照你设置的下单价格和下单数量为你下单。';\n        this.formData_1.promptText = this.lanText.text13;\n        this.formData_2.title = this.lanText.text11; // '委托价格';\n        this.formData_1.units = this.priceUnit;\n        this.formData_2.fix = this.pricefix;\n        this.formData_1.fix = this.pricefix;\n      } else {\n        this.formData_2.isShow = false;\n      }\n      // 如果是市价开仓\n      if (this.isOpenAndIsMarket) {\n        this.formData_3.title = this.lanText.text14; // '开仓价值';\n        // '需要开的仓位的价值，仓位价值 = 仓位数量 * 成交价格，实际成交的仓位数量与成交时的成交价格有关。';\n        this.formData_3.promptText = this.lanText.text15;\n        // 正向\n        if (this.contractSide === 1) {\n          this.formData_3.units = this.priceUnit;\n          this.formData_3.fix = this.pricefix;\n        } else {\n          // 反向\n          const { volfix } = this.$store.state.future;\n          this.formData_3.units = this.baseCoin;\n          this.formData_3.fix = volfix;\n        }\n      } else {\n        this.formData_3.title = this.lanText.text53; // '委托数量';\n        this.formData_3.units = this.volUnit;\n        this.formData_3.fix = this.volfix;\n      }\n      this.setHeight();\n    },\n    // 清除表单数据\n    clearFormData(type) {\n      if (type !== 'isMarket') {\n        this.formData_1.value = null;\n      }\n      // this.isMarket = false;\n      this.percentageVlaue = null;\n      this.formData_2.value = null;\n      this.formData_1.errorText = null;\n      this.formData_2.errorText = null;\n      this.formData_3.errorText = null;\n      this.formData_3.value = null;\n      // 百分数\n      this.formData_1.percentageVlaue = null;\n      this.formData_3.percentageVlaue = null;\n      this.setHeight();\n    },\n    // 表单输入事件\n    changeInput(type, value) {\n      this[type].value = value;\n    },\n    // 多选框选择事件(只减仓)\n    checkoutClick(type) {\n      this.zhiJianCang = type;\n      this.setFormType();\n    },\n    // 多选框选择事件(只减仓)\n    checkedOrdeTypeclick(type) {\n      this.isCheckedOrdeType = type;\n    },\n    // 单选框 选择事件\n    radioClick(type) {\n      this.ordeType = type;\n      this.ordeTypePtions = false;\n    },\n    // 显示开通合约弹框/登录\n    loginButtonClick() {\n      if (!this.isLogin) {\n        if (this.isIframe) {\n          window.parent.postMessage('login', '*');\n        } else {\n          this.$router.push('/login');\n        }\n      } else {\n        // 显示开通合约弹框\n        this.$bus.$emit('OPEN_FUTURE');\n      }\n    },\n    // 表单输入值大小验证\n    formNumberVerify() {\n      let flag = true;\n      this.formData_1.errorText = null;\n      this.formData_2.errorText = null;\n      this.formData_3.errorText = null;\n      const { sideType } = this;\n      // 当前输入的价格和最新价的比例 (当前价格 - 输入的价格) / 当前价格\n      if (this.inputPrice) {\n        const range = Math.abs(\n          division(cut(this.activeNewPrice, this.inputPrice),\n            this.activeNewPrice),\n        );\n        const { priceRange } = this.coinResultVo; // 最大价格比例\n\n        let chaFlag = true;\n        if (sideType === 'SELL' && Number(this.inputPrice) < Number(this.activeNewPrice)) {\n          chaFlag = false;\n        }\n        if (sideType === 'BUY' && Number(this.inputPrice) > Number(this.activeNewPrice)) {\n          chaFlag = false;\n        }\n        if (range > priceRange && !chaFlag) {\n          if (this.currentCategory === 3) {\n            this.formData_2.errorText = this.lanText.text41; // '价格偏差太大！';\n          } else {\n            this.formData_1.errorText = this.lanText.text41; // '价格偏差太大！';\n          }\n          flag = false;\n        }\n      }\n      // 数量\n      let vol = this.inputVolume;\n      // debugger\n      if (this.percentageVlaue) {\n        vol = this.countPercentageVlaue(sideType);\n      }\n      if (vol) {\n        // 验证市价开仓\n        if (this.isOpenAndIsMarket) {\n        // 市价（开仓价值）\n          const { maxMarketMoney, minOrderMoney } = this.coinResultVo;\n          if (vol > maxMarketMoney) {\n            // 超出单次最大下单金额，最多可输入\n            this.formData_3.errorText = `${this.lanText.text42}${maxMarketMoney} ${this.marginCoin}`;\n            flag = false;\n          }\n          if (vol < minOrderMoney) {\n            // 超出单次最小下单金额，最少需输入\n\n            let coin = this.marginCoin;\n            if (this.contractInfo.contractType !== 'E' && this.currentCategory === 2) {\n              coin = this.quoteCoin;\n            }\n\n            this.formData_3.errorText = `${this.lanText.text43}${minOrderMoney} ${coin}`;\n            flag = false;\n          }\n          // 百分比 * 可用\n          // const val1 = fixD(division(\n          //   nul(this.canUseAmount, this.nowLevel), this.marginRate,\n          // ), this.pricefix);\n          // const val2 = sideType === 'BUY' ? this.V1Buy : this.V1Sell; // senge\n          // const number = Number(val1) < Number(val2) ? Number(val1) : Number(val2); // senge\n          // if (vol > number) {\n          //   this.formData_3.errorText = `${this.lanText.text57}`;\n          //   flag = false;\n          //   return false;\n          // }\n        } else {\n          // 限价\n          const { maxLimitVolume, minOrderVolume } = this.coinResultVo;\n          //\n          const canMaxNumber = sideType === 'SELL' ? this.maxCanSellNumber : this.maxCanBuyNumber;\n          let canMaxNumberZhang = canMaxNumber;\n          if (this.coUnitType === 1 && !this.isOpenAndIsMarket && canMaxNumber) {\n            // 转换成张\n            canMaxNumberZhang = division(canMaxNumber, this.multiplier);\n          }\n          // 超出最大数量\n          if (vol > Number(canMaxNumberZhang)) {\n            // 超出最大下单量，最多还可以下单\n            this.formData_3.errorText = `${this.lanText.text56} ${canMaxNumber} ${this.volUnit}`;\n            flag = false;\n            return false;\n          }\n\n          if (vol > maxLimitVolume) {\n            let Tn = maxLimitVolume;\n            // 如果是标记货币\n            if (this.coUnitType === 1) {\n              Tn = nul(maxLimitVolume, this.multiplier);\n            }\n            // 超出单次最大下单量，最多可输入\n            this.formData_3.errorText = `${this.lanText.text44}${Tn} ${this.volUnit}！`;\n            flag = false;\n          }\n          // 超出最小数量\n          if (vol < minOrderVolume) {\n            let Tn = minOrderVolume;\n            // 如果是标记货币\n            if (this.coUnitType === 1) {\n              Tn = nul(minOrderVolume, this.multiplier);\n            }\n            // 超出单次最小下单量，最少需输入\n            this.formData_3.errorText = `${this.lanText.text45}${Tn} ${this.volUnit}！`;\n            flag = false;\n          }\n          // 验证平仓数量 是否超出可平数量\n          if (this.zhiJianCang || this.transactionType === 2) {\n            // 可平数量\n            const Kp = sideType === 'SELL' ? Number(this.maxCanSellNumber) : Number(this.maxCanBuyNumber);\n            // 如果当前单位是标的货币\n            if (this.coUnitType === 1) {\n              vol = nul(vol, this.multiplier);\n            }\n            if (vol > Kp) {\n              this.formData_3.errorText = this.lanText.text46; // '超出可平数量！';\n              flag = false;\n            }\n          }\n        }\n      }\n      this.setHeight();\n      return flag;\n    },\n    // 表单 非空 验证\n    formVerify() {\n      let flag = true;\n      const { sideType } = this;\n      // 百分比数量\n      const BfbVol = this.countPercentageVlaue(sideType);\n      // 验证限价\n      if (this.currentCategory === 1) {\n        if (!this.inputPrice) {\n          this.formData_1.errorText = this.lanText.text47; // '请输入价格!';\n          flag = false;\n        }\n        if (!this.inputVolume && !BfbVol) {\n          this.formData_3.errorText = this.lanText.text48; // '请输入数量!';\n          flag = false;\n        }\n      }\n      // 验证市价\n      if (this.currentCategory === 2 && !BfbVol) {\n        if (!this.inputVolume && this.orderSide === 'OPEN') {\n          this.formData_3.errorText = this.lanText.text49; // '请输入开仓价值!';\n          flag = false;\n        }\n        if (!this.inputVolume && this.orderSide === 'CLOSE') {\n          this.formData_3.errorText = this.lanText.text48; // '请输入数量!';\n          flag = false;\n        }\n      }\n      // 验证条件单\n      if (this.currentCategory === 3) {\n        // 触发价\n        if (!this.triggerPrice) {\n          this.formData_1.errorText = this.lanText.text50; // '请输入触发价!';\n          flag = false;\n        }\n        // 价格\n        if (!this.inputPrice && !this.isMarket) {\n          this.formData_2.errorText = this.lanText.text47; // '请输入价格!';\n          flag = false;\n        }\n        // 数量\n        if (!this.inputVolume && !this.isMarket && !BfbVol) {\n          this.formData_3.errorText = this.lanText.text48; // '请输入数量!';\n          flag = false;\n        }\n        if (!this.inputVolume && this.isMarket && this.orderSide === 'OPEN' && !BfbVol) {\n          this.formData_3.errorText = this.lanText.text49; // '请输入开仓价值!';\n          flag = false;\n        }\n      }\n      this.setHeight();\n      return flag;\n    },\n    // 验证保证金是否足够\n    amountVerify() {\n      // 保证金数量\n      let marginCoinVol = this.canBuyCostNumber;\n      // 确认按钮class\n      if (this.sideType === 'SELL') {\n        marginCoinVol = this.canSellCostNumber;\n      }\n      if (Number(marginCoinVol) > Number(this.canUseAmount)) {\n        // 保证金余额不足！\n        this.$bus.$emit('tip', { text: this.lanText.text51, type: 'error' });\n        return false;\n      }\n      return true;\n    },\n    // 点击买入卖出按钮\n    submitForm(sideType) {\n      this.sideType = sideType;\n      // 如果没有登录跳转登录页面\n      if (!this.isLogin) {\n        if (this.isIframe) {\n          window.parent.postMessage('login', '*');\n        } else {\n          this.$router.push('/login');\n        }\n      }\n      // 表单非空验证\n      if (!this.formVerify()) return false;\n      // 表单价格 数量 大小验证\n      if (!this.formNumberVerify(sideType)) return false;\n      // 验证保证金余额是够足够\n      if (!this.amountVerify()) return false;\n\n      // 百分比的数量 || 输入的数量 (张)\n      const volume = this.countPercentageVlaue(sideType) || this.inputVolume;\n      let submitVolume = volume;\n\n      // 如果不是市价开仓\n      if (!this.isOpenAndIsMarket && submitVolume) {\n        // 转换成张\n        submitVolume = fixD(submitVolume, 0);\n      }\n\n      this.submitData = {\n        contractId: this.contractId, // 合约ID\n        positionType: this.marginModel, // 持仓类型(1 全仓，2 仓逐)\n        side: this.sideType, // 买卖方向（buy 买入，sell 卖出）\n        leverageLevel: this.nowLevel, // 杠杆倍数\n        price: this.inputPrice, // 下单价格(市价单传0)\n        volume: submitVolume, // 下单数量(开仓 市价单：开仓价值)\n        triggerPrice: this.triggerPrice, // 触发价格\n        open: this.orderSide, // 开平仓方向(open 开仓，close 平仓)\n        type: this.submitOrderType, // 订单类型 (1 limit， 2 market，3 IOC，4 FOK，5 POST_ONLY)\n        isConditionOrder: this.currentCategory === 3, // 是否是条件单\n        // expireTime: this.expireTime, // 到期时间\n      };\n\n      // 判断用户是否设置了开启二次确认\n      if (this.userConfig && this.userConfig.pcSecondConfirm) {\n        let sideTypeData = this.buttosContent.buyButton;\n        // 保证金数量\n        let marginCoinVol = this.canBuyCostNumber;\n        // 确认按钮class\n        let sideClass = 'u-1-bg';\n        if (this.sideType === 'SELL') {\n          sideTypeData = this.buttosContent.sellButton;\n          marginCoinVol = this.canSellCostNumber;\n          sideClass = 'u-4-bg';\n        }\n        // 数量\n        let vol = `${volume} ${this.volUnit}`;\n        // 市价开仓\n        if (this.orderSide === 'OPEN' && (this.currentCategory === 2 || this.isMarket)) {\n          // 反向\n          let unit = this.contractInfo.base;\n          // 正向\n          if (this.contractSide === 1) {\n            unit = this.priceUnit;\n          }\n          vol = `${volume} ${unit}`;\n        } else if (this.coUnitType === 1) {\n          // 如果当前单位是标的货币 就 把张 换算成 标的数量\n          vol = `${fixD(nul(volume, this.multiplier), this.volfix)} ${this.volUnit}`;\n        }\n        this.confirmData = {\n          // 币种\n          symbol: this.contractSymbol,\n          // 订单类型Number（1限价单、2市价单、3条件单）\n          currentCategory: this.currentCategory,\n          // 确认按钮文案（买入做多...）\n          sideText: sideTypeData.text,\n          // 确认按钮颜色class\n          sideClass,\n          // 是否是开仓市价单\n          isOpenAndIsMarket: this.isOpenAndIsMarket,\n          // 条件单 触发价\n          triggerPrice: `${this.triggerPrice} ${this.priceUnit}`,\n          // 价格\n          price: this.inputPrice ? `${this.inputPrice} ${this.priceUnit}` : '市价',\n          // 数量\n          vol,\n          marginCoin: `${marginCoinVol} ${this.marginCoin}`,\n        };\n        this.forcedReminderShow = true;\n      } else {\n        this.dialogConfirmLoading = true;\n        this.submit();\n      }\n      return false;\n    },\n    // 下单提交\n    submit() {\n      if (this.submitFlag) {\n        this.submitFlag = false;\n        this.axios({\n          url: this.$store.state.url.futures.orderCreate,\n          hostType: 'co',\n          method: 'post',\n          params: this.submitData,\n        }).then(({ code, msg }) => {\n          if (code.toString() === '0') {\n            this.clearFormData();\n            this.$store.dispatch('getUserConfig');\n            this.$store.dispatch('getPositionList');\n            this.forcedReminderShow = false;\n            this.$bus.$emit('CRAET-ORDER-SUCCESS');\n            this.$bus.$emit('tip', { text: msg, type: 'success' });\n          } else {\n            this.$bus.$emit('tip', { text: msg, type: 'error' });\n          }\n          this.dialogConfirmLoading = false;\n          this.submitFlag = true;\n        });\n      }\n    },\n    // 下单二次确认提交\n    submitOrder(data) {\n      if (data) {\n        this.axios({\n          url: this.$store.state.url.futures.editUserPageConfig,\n          hostType: 'co',\n          method: 'post',\n          params: {\n            pcSecondConfirm: 0,\n            contractId: this.contractId,\n          },\n        }).then(({ code, msg }) => {\n          if (code.toString() === '0') {\n            this.$store.dispatch('getUserConfig');\n          } else {\n            this.$bus.$emit('tip', { text: msg, type: 'error' });\n          }\n        });\n      }\n      this.dialogConfirmLoading = true;\n      this.submit();\n    },\n    // 关闭弹窗\n    closeDialog() {\n      // 关闭强制提醒（二次确认）弹框\n      this.forcedReminderShow = false;\n      // 关闭杠杆弹窗\n      this.leverageDialogShow = false;\n      // 关闭切换保证金模式弹框\n      this.depositDialogShow = false;\n    },\n    // 选择 到期时间\n    selectPlanType(val) {\n      this.expireTime = val;\n    },\n    setHeight() {\n      let setTimer = setTimeout(() => {\n        const layoutHeight = document.getElementById('layoutBlockTrade').clientHeight;\n        const coTradeBoxHeight = document.getElementById('coTradeBox').clientHeight;\n        const syHeight = layoutHeight - coTradeBoxHeight - 15;\n        this.$bus.$emit('syHeight', syHeight);\n        clearTimeout(setTimer);\n        setTimer = null;\n      }, 100);\n    },\n    thousandsComma(num) {\n      if (num) {\n        return thousandsComma(num);\n      }\n      return num;\n    },\n    evenHandMouseenter(key, type) {\n      this[key] = type;\n    },\n    evenHandMouseleave(key) {\n      this[key] = null;\n    },\n  },\n\n};\n"]}]}