{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/utils/setDefaultMarket.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/utils/setDefaultMarket.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n// 设置 默认市场 和 默认选中币对\n// eslint-disable-next-line import/extensions\nimport myStorage from \"./mystorage\";\n\nfunction getSorterMaker(market) {\n  var coinName = null;\n  var coinSort = null;\n  Object.keys(market).forEach(function (key) {\n    if (typeof coinSort !== 'number' || market[key].sort < coinSort) {\n      coinName = key;\n      coinSort = market[key].sort;\n    }\n  });\n  return coinName;\n}\n\nexport var setDefaultMarket = function setDefaultMarket(data) {\n  var markTitle = myStorage.get('markTitle');\n  var homeMarkTitle = myStorage.get('homeMarkTitle');\n  var marketIndex = data.maket_index; // 默认市场\n\n  if (!markTitle || !data.market[markTitle]) {\n    var defaultMarket = data.market[marketIndex] ? marketIndex : Object.keys(data.market)[0];\n    myStorage.set('markTitle', defaultMarket);\n  } // 首页默认市场\n\n\n  if (!homeMarkTitle || !data.market[homeMarkTitle]) {\n    var _defaultMarket = data.market[marketIndex] ? marketIndex : Object.keys(data.market)[0];\n\n    myStorage.set('homeMarkTitle', _defaultMarket);\n  } // 设置默认币对\n\n\n  var sSymbolName = myStorage.get('sSymbolName') || null;\n  var sMarkTitle = myStorage.get('markTitle'); // 如果 myStorage 中没有默认币对  或者 市场列表中没有选中的币对\n\n  if (!sSymbolName || !data.market[sMarkTitle][sSymbolName]) {\n    // const defaultSymbol = data.market[sMarkTitle][sSymbolName] ? sSymbolName\n    //   : Object.keys(data.market[sMarkTitle])[0];\n    var defaultSymbol = data.market[sMarkTitle][sSymbolName] ? sSymbolName : getSorterMaker(data.market[sMarkTitle]);\n    myStorage.set('sSymbolName', defaultSymbol);\n  }\n};\nexport var setLeverDefaultMarket = function setLeverDefaultMarket(data) {\n  var leverMarkTitle = myStorage.get('leverMarkTitle'); // // 默认市场\n\n  if (!leverMarkTitle || !data[leverMarkTitle]) {\n    var dataKey = Object.keys(data);\n    var defaultMarket = dataKey[0];\n    myStorage.set('leverMarkTitle', defaultMarket);\n  } // 设置默认币对\n\n\n  var leverSymbolName = myStorage.get('leverSymbolName') || null;\n  var sleverMarkTitle = myStorage.get('leverMarkTitle'); // 如果 myStorage 中没有默认币对  或者 市场列表中没有选中的币对\n\n  if (!leverSymbolName || !(data[sleverMarkTitle] && data[sleverMarkTitle][leverSymbolName])) {\n    if (data[sleverMarkTitle]) {\n      var defaultSymbol = Object.keys(data[sleverMarkTitle])[0];\n      myStorage.set('leverSymbolName', defaultSymbol);\n    }\n  }\n}; // 设置当前合约名称\n\nexport var setCoMarket = function setCoMarket(dataList) {\n  // console.log(contractList);\n  var sort0 = '';\n\n  if (dataList) {\n    var contractList = dataList.sort(function (a, b) {\n      return a.sort - b.sort;\n    });\n    var contractListName = [];\n    var contractListId = {};\n    contractList.forEach(function (item, index) {\n      if (index === 0) {\n        sort0 = item.contractName;\n      }\n\n      contractListName.push(item.contractName);\n      contractListId[item.contractName] = item.id;\n    });\n    var clientPathName = window.location.pathname.split('/');\n    var clientContractNameArr = clientPathName.filter(function (x) {\n      return contractListName.includes(x);\n    });\n    var clientContractName = clientContractNameArr[0];\n\n    if (clientContractName) {\n      myStorage.set('contractName', clientContractName);\n      myStorage.set('contractId', contractListId[clientContractName]);\n    } else {\n      var contractName = myStorage.get('contractName');\n\n      if (!contractName || contractListName.indexOf(contractName) === -1) {\n        myStorage.set('contractName', sort0);\n        myStorage.set('contractId', contractListId[sort0]);\n      }\n    }\n  }\n};",null]}