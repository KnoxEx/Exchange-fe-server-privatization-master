{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/header/header.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/header/header.js","mtime":1642349774124},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport _defineProperty from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.string.link\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { imgMap, setCookie, getCookie, myStorage } from '@/utils'; // 按钮\n\nexport default {\n  name: 'c-header',\n  data: function data() {\n    return {\n      outFlag: true,\n      // langArr: [], // 语言数组\n      langHover: '',\n      // 语言滑过\n      langHoverSub: null,\n      showFlag: false,\n      // 设置主题弹窗变量\n      userSkin: getCookie('cusSkin') || getCookie('defSkin'),\n      // 用户选择的skin\n      hoverHeader: '',\n      //\n      activeHeader: '',\n      hoverMark: '',\n      activeMark: '',\n      extensionPosition: {}\n    };\n  },\n  watch: {\n    title: function title() {\n      this.modifyTilte();\n    },\n    $route: {\n      handler: function handler() {\n        this.setActive();\n        this.setMarkActive();\n      },\n      // 深度观察监听\n      deep: true\n    },\n    market: {\n      handler: function handler(v) {\n        if (v) {\n          this.setActive();\n        }\n      },\n      // 深度观察监听\n      deep: true\n    },\n    router: function router(_router) {\n      if (_router !== null) {\n        this.modifyTilte();\n      }\n    }\n  },\n  methods: {\n    init: function init() {\n      this.setMarkActive();\n      this.modifyTilte();\n    },\n    setAlert: function setAlert() {\n      this.showFlag = true;\n    },\n    setClose: function setClose() {\n      this.userSkin = '';\n      this.showFlag = false;\n    },\n    lanClick: function lanClick(id) {\n      var _this = this;\n\n      // this.\n      if (id === this.lan) {\n        return;\n      }\n\n      if (this.isLogin) {\n        this.axios({\n          url: this.$store.state.url.common.change_language,\n          params: {\n            language: id\n          },\n          method: 'post'\n        }).then(function (res) {\n          if (Number(res.code) === 0) {\n            // setCookie('lan', id);\n            var fullPath = _this.$route.fullPath;\n            var str = fullPath.replace(_this.lan, id);\n            window.location.href = str;\n          }\n        });\n      } else {\n        // setCookie('lan', id);\n        var fullPath = this.$route.fullPath;\n        var str = fullPath.replace(this.lan, id);\n        window.location.href = str;\n      }\n    },\n    // 获取服务端自选币对\n    getMySymbol: function getMySymbol() {\n      var _this2 = this;\n\n      return this.axios({\n        url: 'optional/list_symbol',\n        params: {},\n        method: 'post'\n      }).then(function (data) {\n        if (data.code === '0') {\n          var mySymbol = data.data.symbols.filter(function (x) {\n            return x !== '';\n          });\n          myStorage.set('mySymbol', mySymbol);\n        } else {\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    handMouseenter: function handMouseenter(id, sub) {\n      if (sub === 'sub') {\n        this.langHoverSub = id;\n      } else {\n        this.langHover = id;\n      }\n\n      if (id === 'extension' && this.$refs.commonHeader) {\n        var top = this.$refs.extension.offsetTop;\n\n        var _this$$refs$commonHea = this.$refs.commonHeader.getBoundingClientRect(),\n            height = _this$$refs$commonHea.height;\n\n        if (height - top > 350) {\n          this.extensionPosition = {\n            top: \"\".concat(top + 20, \"px\")\n          };\n        } else {\n          this.extensionPosition = {\n            bottom: \"\".concat(height - top - 40, \"px\")\n          };\n        }\n      }\n    },\n    handMouseleave: function handMouseleave(sub) {\n      if (sub === 'sub') {\n        this.langHoverSub = '';\n      } else {\n        this.langHover = '';\n      }\n    },\n    // 路由跳转\n    btnLink: function btnLink(link) {\n      if (link.indexOf('http') > -1) {\n        window.location.href = link;\n      } else {\n        this.$router.push(link);\n      }\n    },\n    btnHref: function btnHref(link, target, options) {\n      var _this3 = this;\n\n      if (options && options.trades) {\n        if (options.id === this.activeHeader) {\n          return;\n        }\n\n        if (options.id === 'exTrade' && this.etfOpen) {\n          this.marketCurrent = myStorage.set('markTitle', ''); // 获取当前币对\n\n          this.symbolCurrent = myStorage.set('sSymbolName', '');\n        }\n      }\n\n      var headerTitleList = Object.keys(this.headerLink);\n      var currentTitle = headerTitleList.filter(function (x) {\n        return _this3.headerLink[x] === link ? x : '';\n      }).join(); // 点击首页行情和币币交易 现货交易时拉取最新自选币对\n\n      if (this.optionalSymbolServerOpen === 1 && this.isLogin && (currentTitle === 'home' || currentTitle === 'trade')) {\n        this.getMySymbol().finally(function () {\n          if (target && target === 'black') {\n            window.open(link);\n          } else {\n            window.location.href = link;\n          }\n        });\n      } else if (target && target === 'black') {\n        window.open(link);\n      } else {\n        window.location.href = link;\n      }\n    },\n    // 退出登录\n    out: function out() {\n      var _this4 = this;\n\n      if (!this.outFlag) {\n        return;\n      }\n\n      this.outFlag = false;\n      this.axios({\n        url: '/user/login_out'\n      }).then(function (data) {\n        _this4.outFlag = true;\n\n        if (data.code.toString() === '0') {\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this4.$bus.$emit('outUserIsLogin');\n        } else {\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    getClass: function getClass(v) {\n      var str = '';\n\n      if (v === this.activeHeader || v === this.hoverHeader) {\n        str = 'x-3-cl';\n      }\n\n      return str;\n    },\n    setActive: function setActive() {\n      var _this5 = this;\n\n      var meta = this.$route.meta;\n      var arr = ['exTrade', 'otcTrade', 'coTrade', 'marginTrade', 'assets', 'order'];\n      var active = '';\n\n      if (meta && meta.activeName && arr.indexOf(meta.activeName) !== -1) {\n        active = meta.activeName;\n      } else {\n        var reg = /\\/ex\\/|\\/otc\\/|\\/co\\//g;\n        var myPath = '';\n\n        if (this.$route.path.match(reg)) {\n          var Brr = this.$route.path.match(reg);\n          myPath = \"\".concat(this.$route.path.split(Brr[0])[1]);\n        } else {\n          myPath = this.$route.path.slice(1, this.$route.path.length);\n        }\n\n        active = myPath;\n      }\n\n      if (active === 'exTrade') {\n        if (this.market && this.etfOpen && this.$route.params && this.$route.params.symbol) {\n          var routeSymbol = this.$route.params.symbol;\n          var symbolNameClassCion = routeSymbol.split('_')[0];\n          var markTitleClassCion = routeSymbol.split('_')[1];\n          var symbolNameClass = routeSymbol.split('_')[0];\n          var markTitleClass = routeSymbol.split('_')[1];\n          var coinLisArr = Object.keys(this.coinList);\n          coinLisArr.forEach(function (item) {\n            var showName = _this5.coinList[item].showName;\n\n            if (showName === markTitleClass) {\n              markTitleClassCion = item;\n            }\n\n            if (showName === symbolNameClass) {\n              symbolNameClassCion = item;\n            }\n          });\n          var symbol = \"\".concat(symbolNameClassCion, \"/\").concat(markTitleClassCion);\n\n          if (this.symbolAll[symbol] && this.symbolAll[symbol].etfOpen) {\n            active = 'etf';\n          }\n        }\n      }\n\n      this.activeHeader = active;\n    },\n    setMarkActive: function setMarkActive() {\n      var reg = /\\/ex\\/|\\/otc\\/|\\/co\\//g;\n      var myPath = '';\n\n      if (this.$route.path.match(reg)) {\n        var arr = this.$route.path.match(reg);\n        myPath = \"/\".concat(this.$route.path.split(arr[0])[1]);\n      } else {\n        myPath = this.$route.path.slice(0, this.$route.path.length);\n      }\n\n      this.activeMark = myPath;\n    },\n    // title\n    modifyTilte: function modifyTilte() {\n      var routerName = this.$route.name;\n\n      if (this.fiatTradeOpen && routerName === 'fiatdeal') {\n        routerName = 'b2cFiatdeal';\n      }\n\n      var title = \"\".concat(this.$t('pageTitle')[routerName] ? this.$t('pageTitle')[routerName] : '');\n      if (this.title !== '') title = \"\".concat(this.title, \"-\").concat(title);\n      document.title = title;\n    },\n    setConfirm: function setConfirm() {\n      setCookie('cusSkin', this.userSkin);\n      window.location.reload();\n    },\n    setSkin: function setSkin(id) {\n      this.userSkin = id;\n    },\n    evenHandMouseenter: function evenHandMouseenter(v) {\n      this.hoverHeader = v;\n    },\n    evenHandMouseleave: function evenHandMouseleave() {\n      this.hoverHeader = '';\n    },\n    markMouseenter: function markMouseenter(v) {\n      this.hoverMark = v;\n    },\n    markMouseleave: function markMouseleave() {\n      this.hoverMark = '';\n    },\n    // App 下载\n    download: function download(type) {\n      window.open(this.appDownload[\"\".concat(type, \"_download_url\")]);\n    },\n    compare: function compare(property) {\n      return function short(a, b) {\n        var value1 = a[property];\n        var value2 = b[property];\n        return value1 - value2;\n      };\n    }\n  },\n  computed: {\n    fiatTradeOpen: function fiatTradeOpen() {\n      var base = this.$store.state.baseData.publicInfo;\n\n      if (base && base.switch && base.switch.fiat_trade_open === '1') {\n        return true;\n      }\n\n      return false;\n    },\n    symbolAll: function symbolAll() {\n      return this.$store.state.baseData.symbolAll;\n    },\n    // 全部币种列表\n    coinList: function coinList() {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n\n      return null;\n    },\n    // market 接口\n    market: function market() {\n      return this.$store.state.baseData.market;\n    },\n    saasOtcFlowConfig: function saasOtcFlowConfig() {\n      var flag = false;\n\n      if (this.publicInfo && this.publicInfo.switch && this.publicInfo.switch.saas_otc_flow_config && this.publicInfo.switch.saas_otc_flow_config.toString() === '1') {\n        flag = true;\n      }\n\n      return flag;\n    },\n    headerTemplateReceived: function headerTemplateReceived() {\n      return this.$store.state.baseData.swiperFlag;\n    },\n    optionalSymbolServerOpen: function optionalSymbolServerOpen() {\n      return this.$store.state.baseData.optional_symbol_server_open;\n    },\n    leverFlag: function leverFlag() {\n      var leverFlag = false;\n\n      if (this.publicInfo && this.publicInfo.switch && this.publicInfo.switch.lever_open && this.publicInfo.switch.lever_open.toString() === '1') {\n        leverFlag = true;\n      }\n\n      return leverFlag;\n    },\n    etfNavigationSwitch: function etfNavigationSwitch() {\n      var flag = false;\n\n      if (this.publicInfo && this.publicInfo.switch && this.publicInfo.switch.etfNavigationSwitch && this.publicInfo.switch.etfNavigationSwitch.toString() === '1') {\n        flag = true;\n      }\n\n      return flag;\n    },\n    etfHave: function etfHave() {\n      var flag = false;\n\n      if (this.market && this.market.market.ETF && Object.keys(this.market.market.ETF).length) {\n        flag = true;\n      }\n\n      return flag;\n    },\n    etfOpen: function etfOpen() {\n      if (this.etfNavigationSwitch && this.etfHave) {\n        return true;\n      }\n\n      return false;\n    },\n    tradesList: function tradesList() {\n      var arr = []; // 行情\n\n      if (this.publicInfo && this.publicInfo.switch.index_kline_switch === '1') {\n        arr.push({\n          title: this.$t('header.market'),\n          activeId: 'market',\n          link: this.headerLink.market\n        });\n      } // 币币交易\n\n\n      if (this.headerLink.trade) {\n        arr.push({\n          title: this.$t('header.trade'),\n          activeId: 'exTrade',\n          link: this.headerLink.trade\n        });\n      } // 法币\n\n\n      if (this.headerLink.otc) {\n        arr.push({\n          title: this.fiatTradeOpen ? this.$t('assets.b2c.otcShow.header') : this.$t('header.otc'),\n          activeId: 'otcTrade',\n          link: this.headerLink.otc\n        });\n      } // 一键买币\n\n\n      if (!this.headerLink.otc && this.saasOtcFlowConfig) {\n        arr.push({\n          title: this.$t('mobilityTrade.immediately'),\n          activeId: 'otcTrade',\n          link: '/mobility'\n        });\n      } // 合约\n      // if (this.headerLink.co) {\n      //   arr.push({\n      //     title: this.$t('header.co'),\n      //     activeId: 'coTrade',\n      //     link: this.headerLink.co,\n      //     selectList: [\n      //       {\n      //         activeId: 'coTrade',\n      //         link: this.headerLink.co,\n      //         title: this.$t('header.co'),\n      //       },\n      //       {\n      //         activeId: 'futuresData',\n      //         link: this.headerLink.futuresData,\n      //         title: '合约数据', // '合约数据',\n      //       },\n      //     ],\n      //   });\n      // }\n      // 杠杆\n\n\n      if (this.leverFlag) {\n        arr.push({\n          title: this.$t('header.lever'),\n          activeId: 'marginTrade',\n          link: this.headerLink.lever\n        });\n      } // etf\n      // 币币交易\n\n\n      if (this.etfOpen) {\n        arr.push({\n          title: this.$t('etfAdd.title'),\n          activeId: 'etf',\n          link: this.etfUrl\n        });\n      }\n\n      return arr;\n    },\n    etfUrl: function etfUrl() {\n      var _this6 = this;\n\n      var str = '';\n\n      if (this.market) {\n        var etfArr = [];\n        Object.keys(this.market.market.ETF).forEach(function (ci) {\n          etfArr.push(_this6.market.market.ETF[ci]);\n        });\n        var symbol = etfArr.sort(this.compare('sort'))[0];\n        var name = symbol.showName || symbol.name;\n        str = name.replace('/', '_');\n      }\n\n      return \"\".concat(this.headerLink.trade, \"/\").concat(str);\n    },\n    isCoOpen: function isCoOpen() {\n      var base = this.$store.state.baseData.publicInfo;\n\n      if (base && base.switch && base.switch.indep_co_switch === '1') {\n        return true;\n      }\n\n      return false;\n    },\n    assetsList: function assetsList() {\n      var arr = [];\n\n      if (!this.isCoOpen && this.headerLink.trade) {\n        arr.push({\n          title: this.isCoOpen ? this.$t('assets.index.coExchangeAccount') : this.$t('assets.index.exchangeAccount'),\n          link: '/assets/exchangeAccount'\n        });\n      } else if (this.isCoOpen) {\n        arr.push({\n          title: this.isCoOpen ? this.$t('assets.index.coExchangeAccount') : this.$t('assets.index.exchangeAccount'),\n          link: '/assets/exchangeAccount'\n        });\n      }\n\n      var otcTitle = !this.fiatTradeOpen ? this.$t('assets.index.otcAccount') : this.$t('assets.b2c.otcShow.otcAccount');\n\n      if (this.headerLink.otc) {\n        arr.push({\n          title: otcTitle,\n          link: '/assets/otcAccount'\n        });\n      }\n\n      if (this.fiatTradeOpen) {\n        arr.push({\n          title: this.$t('assets.index.otcAccount'),\n          link: '/assets/b2cAccount'\n        });\n      }\n\n      if (!this.headerLink.otc && this.saasOtcFlowConfig) {\n        arr.push({\n          title: otcTitle,\n          link: '/assets/otcAccount'\n        });\n      }\n\n      if (this.headerLink.co) {\n        var url = \"\".concat(this.headerLink.co, \"/assets/coAccount\");\n\n        if (window.HOSTAPI === 'co') {\n          url = '/assets/coAccount';\n        }\n\n        arr.push({\n          title: this.$t('assets.index.coAccount'),\n          link: url\n        });\n      }\n\n      if (this.leverFlag) {\n        arr.push({\n          title: this.$t('assets.index.leverage'),\n          link: '/assets/leverageAccount'\n        });\n      }\n\n      return arr;\n    },\n    orderList: function orderList() {\n      var arr = [];\n\n      if (this.headerLink.trade) {\n        arr.push({\n          title: this.$t('order.index.exOrder'),\n          link: '/order/exchangeOrder'\n        });\n      }\n\n      var otcTitle = !this.fiatTradeOpen ? this.$t('order.index.otcOrder') : this.$t('assets.b2c.otcShow.otcOrder');\n\n      if (this.headerLink.otc) {\n        arr.push({\n          title: otcTitle,\n          link: '/order/otcOrder'\n        });\n      }\n\n      if (!this.headerLink.otc && this.saasOtcFlowConfig) {\n        arr.push({\n          title: otcTitle,\n          link: '/order/otcOrder'\n        });\n      }\n\n      if (this.headerLink.co) {\n        var url = \"\".concat(this.headerLink.co, \"/order/coOrder\");\n\n        if (window.HOSTAPI === 'co') {\n          url = '/order/coOrder';\n        }\n\n        arr.push({\n          title: this.$t('order.coOrder.coOrder'),\n          link: url\n        });\n      }\n\n      if (this.leverFlag) {\n        arr.push({\n          title: this.$t('order.index.leverage'),\n          link: '/order/leverageOrder'\n        });\n      }\n\n      return arr;\n    },\n    title: function title() {\n      var seo = {};\n\n      if (this.publicInfo) {\n        seo = this.publicInfo.seo;\n      }\n\n      var _this$$store$state$ba = this.$store.state.baseData,\n          indexHeaderTitle = _this$$store$state$ba.indexHeaderTitle,\n          lan = _this$$store$state$ba.lan;\n      var title = '';\n\n      if (getCookie('lan')) {\n        var language = getCookie('lan');\n        title = indexHeaderTitle[language] || '';\n      } else {\n        var _language = lan ? lan.defLan : '';\n\n        title = _language ? indexHeaderTitle[_language] : '';\n      }\n\n      return seo.title || title;\n    },\n    templateLayoutType: function templateLayoutType() {\n      return this.$store.state.baseData.templateLayoutType;\n    },\n    navigationType: function navigationType() {\n      if (this.templateLayoutType === '2' && this.$route.meta.navigation !== '1') {\n        return '2';\n      }\n\n      return '1';\n    },\n    appDownload: function appDownload() {\n      return this.$store.state.baseData.app_download || '';\n    },\n    Dskin: function Dskin() {\n      var str = '';\n\n      if (this.userSkin) {\n        str = this.userSkin;\n      } else if (getCookie('defSkin') || getCookie('cusSkin')) {\n        if (getCookie('cusSkin')) {\n          str = getCookie('cusSkin');\n        } else {\n          str = getCookie('defSkin');\n        }\n      }\n\n      return str;\n    },\n    colorList: function colorList() {\n      var arr = [];\n      var _this$publicInfo$skin = this.publicInfo.skinType,\n          skinType = _this$publicInfo$skin === void 0 ? [] : _this$publicInfo$skin;\n\n      if (this.publicInfo && skinType.length) {\n        arr = skinType;\n      } else if (this.publicInfo && this.publicInfo.skin && this.publicInfo.skin.listist) {\n        arr = this.publicInfo.skin.listist;\n      }\n\n      return arr;\n    },\n    chanSkin: function chanSkin() {\n      var sw = '1';\n\n      if (this.publicInfo && this.publicInfo.skin && this.publicInfo.skin.changeSkin) {\n        sw = this.publicInfo.skin.changeSkin;\n      }\n\n      return sw;\n    },\n    subNavisShow: function subNavisShow() {\n      if (this.publicInfo && this.publicInfo.switch.newcoinOpen === '1') {\n        return true;\n      }\n\n      if (this.publicInfo && this.publicInfo.switch.is_return_open === '1') {\n        return true;\n      }\n\n      if (this.appDownload && this.appDownload.app_page_url) {\n        return true;\n      }\n\n      if (this.publicInfo && this.publicInfo.switch.is_financing_open) {\n        return true;\n      }\n\n      if (this.userInfo && this.userInfo.agentStatus && this.publicInfo && this.publicInfo.switch.agentUserOpen) {\n        return true;\n      }\n\n      return false;\n    },\n    lan: function lan() {\n      if (this.$store.state.baseData) {\n        return this.$store.state.baseData.lan;\n      }\n\n      return null;\n    },\n    showLan: function showLan() {\n      var _this7 = this;\n\n      var str = '';\n\n      if (this.langArr.length) {\n        this.langArr.forEach(function (item) {\n          if (_this7.lan === item.id) {\n            str = item.name;\n          }\n        });\n      }\n\n      return str;\n    },\n    messageCount: function messageCount() {\n      if (this.$store.state.baseData.messageCount) {\n        return this.$store.state.baseData.messageCount;\n      }\n\n      return null;\n    },\n    userMessageList: function userMessageList() {\n      if (this.$store.state.baseData.userMessageList) {\n        return this.$store.state.baseData.userMessageList;\n      }\n\n      return null;\n    },\n    linkurl: function linkurl() {\n      if (this.$store.state.baseData.publicInfo) {\n        return this.$store.state.baseData.publicInfo.url;\n      }\n\n      return {};\n    },\n    headerLink: function headerLink() {\n      if (process.env.NODE_ENV === 'development') {\n        return {\n          home: '/ex/',\n          trade: this.linkurl.exUrl ? '/ex/zh_CN/trade' : '',\n          market: this.linkurl.exUrl ? '/ex/zh_CN/market' : '',\n          lever: '/ex/margin',\n          otc: this.linkurl.otcUrl ? '/otc/zh_CN/' : '',\n          co: this.linkurl.coUrl ? '/co/zh_CN/trade' : ''\n        };\n      }\n\n      if (this.$store.state.baseData && this.$store.state.baseData.publicInfo) {\n        return {\n          home: this.linkurl.exUrl ? \"\".concat(this.linkurl.exUrl, \"/\").concat(this.lan, \"/\") : '',\n          trade: this.linkurl.exUrl ? \"\".concat(this.linkurl.exUrl, \"/\").concat(this.lan, \"/trade\") : '',\n          market: this.linkurl.exUrl ? \"\".concat(this.linkurl.exUrl, \"/\").concat(this.lan, \"/market\") : '',\n          otc: this.linkurl.otcUrl ? \"\".concat(this.linkurl.otcUrl, \"/\").concat(this.lan, \"/\") : '',\n          lever: this.linkurl.exUrl ? \"\".concat(this.linkurl.exUrl, \"/\").concat(this.lan, \"/margin\") : '',\n          co: this.linkurl.coUrl ? \"\".concat(this.linkurl.coUrl, \"/\").concat(this.lan, \"/trade\") : ''\n        };\n      }\n\n      return '';\n    },\n    router: function router() {\n      return this.$route.name;\n    },\n    routerPath: function routerPath() {\n      return this.$route.path;\n    },\n    headerTemplate: function headerTemplate() {\n      var arr = [];\n\n      try {\n        arr = JSON.parse(this.$store.state.baseData.headerTemplate) || [];\n      } catch (w) {\n        arr = [];\n      }\n\n      var newArr = [];\n\n      if (Array.isArray(arr)) {\n        arr.forEach(function (item) {\n          var str = '';\n          var first = item.link.split('//');\n\n          if (first && first.length === 2) {\n            var fid = first[1].indexOf('/');\n\n            if (fid !== -1) {\n              var ac = first[1].slice(fid + 1, first[1].length);\n\n              if (ac && ac.length) {\n                str = ac;\n              }\n            }\n          }\n\n          if (str.length === 0) {\n            str = item.link;\n          }\n\n          newArr.push(_objectSpread(_objectSpread(_objectSpread({}, {}), item), {\n            activeId: str\n          }));\n        });\n      }\n\n      return newArr;\n    },\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    userInfoIsReady: function userInfoIsReady() {\n      return this.$store.state.baseData.userInfoIsReady;\n    },\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    publicInfo: function publicInfo() {\n      return this.$store.state.baseData.publicInfo;\n    },\n    langArr: function langArr() {\n      if (this.publicInfo && this.publicInfo.lan) {\n        return this.publicInfo.lan.lanList;\n      }\n\n      return [];\n    },\n    userText: function userText() {\n      if (this.userInfo) {\n        return this.userInfo.userAccount;\n      }\n\n      return '';\n    },\n    logoUrl: function logoUrl() {\n      var url = '';\n\n      if (this.publicInfo && this.publicInfo.msg && this.publicInfo.msg.logoUrl) {\n        url = this.publicInfo.msg.logoUrl || imgMap.logo; // 设置 标题栏的 icon 图标\n        // const link = document.querySelector\n        // (\"link[rel*='icon']\") || document.createElement('link');\n        // link.type = 'image/x-icon';\n        // link.rel = 'shortcut icon';\n        // link.href = this.publicInfo.msg.iconUrl;\n        // document.getElementsByTagName('head')[0].appendChild(link);\n      }\n\n      return url;\n    },\n    intLogoUrl: function intLogoUrl() {\n      var url = '';\n\n      if (this.publicInfo && this.publicInfo.msg && this.publicInfo.msg.logoUrl) {\n        url = this.publicInfo.msg.index_international_logo || imgMap.int_logo;\n      }\n\n      return url;\n    },\n    userStatus: function userStatus() {\n      var str = '';\n\n      if (this.userInfo && this.userInfo.accountStatus.toString()) {\n        switch (this.userInfo.accountStatus.toString()) {\n          case '0':\n            str = this.$t('header.userStatus1'); // '正常';\n\n            break;\n\n          case '1':\n            str = this.$t('header.userStatus2'); // '冻结交易，冻结提现';\n\n            break;\n\n          case '2':\n            str = this.$t('header.userStatus3'); // '冻结交易 3冻结提现';\n\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return str;\n    }\n  }\n};",null]}