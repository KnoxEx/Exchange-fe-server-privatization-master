{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/coTrade/currentSymbol/currentSymbol.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/coTrade/currentSymbol/currentSymbol.js","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport { nul, fixD, division, thousandsComma as _thousandsComma, getCookie, myStorage } from '@/utils';\nexport default {\n  name: 'currentSymbol',\n  components: {},\n  data: function data() {\n    return {\n      // 24小时行情数据\n      WsData: {},\n      // 是否显示市场\n      isShowMarket: false,\n      // 是否显示 合约设置弹框\n      setFuturesIsShow: false,\n      // 下次收取资金费率开始时间戳\n      nextStartTime: null,\n      // 下次收取资金费率开始时间倒计时\n      countDownTime: null,\n      // 倒计时\n      setIntervalTimer: null,\n      // 当前价格颜色的Class\n      activePriceClass: '',\n      // 轮训倒计时\n      timer: null,\n      // 本期结算时间\n      activeTimer: null,\n      // 下期结算时间\n      nextTimer: null,\n      // 当前合约市场id\n      contractSide: myStorage.get('futuresMarketCurrent')\n    };\n  },\n  computed: {\n    lantext: function lantext() {\n      return {\n        explain1: this.$t('futures.currentSymbol.explain1'),\n        explain4: this.$t('futures.currentSymbol.explain4')\n      };\n    },\n    // 是否登录\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    // 当前合约信息\n    contractInfo: function contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 资金费率间隔\n    capitalFrequency: function capitalFrequency() {\n      if (this.contractInfo) {\n        return this.contractInfo.capitalFrequency;\n      }\n\n      return 1;\n    },\n    // 当前合约名称\n    activeContractName: function activeContractName() {\n      var name = '';\n      var text = '';\n\n      if (this.contractInfo) {\n        var nameText = this.contractInfo.symbol ? this.contractInfo.symbol.replace('-', '') : '';\n\n        if (this.contractInfo.contractType !== 'E') {\n          text = \"-\".concat(this.contractInfo.marginCoin);\n        }\n\n        name = \"\".concat(nameText).concat(text);\n      }\n\n      return name;\n    },\n    // 当前合约面值\n    multiplier: function multiplier() {\n      return Number(this.$store.state.future.multiplier);\n    },\n    // 合约数量单位\n    coUnit: function coUnit() {\n      return this.$store.state.future.coUnit;\n    },\n    // 数量单位类型Number\n    coUnitType: function coUnitType() {\n      return this.$store.state.future.coUnitType;\n    },\n    // 合约数量精度\n    volfix: function volfix() {\n      return this.$store.state.future.volfix;\n    },\n    // 合约币对价格精度\n    pricefix: function pricefix() {\n      return this.$store.state.future.pricefix;\n    },\n    // 合约类型列表\n    contractTypeText: function contractTypeText() {\n      return this.$store.state.future.contractTypeText;\n    },\n    // 用户配置信息\n    userConfig: function userConfig() {\n      return this.$store.state.future.futureUserConfig;\n    },\n    // 当前合约保证金模式\n    marginModel: function marginModel() {\n      if (this.userConfig) {\n        // 全仓 ： 逐仓\n        return this.userConfig.marginModel === 1 ? this.$t('futures.currentSymbol.marginModel1') : this.$t('futures.currentSymbol.marginModel2');\n      }\n\n      return this.$t('futures.currentSymbol.marginModel1');\n    },\n    // 当前合约杠杆倍数\n    nowLevel: function nowLevel() {\n      if (this.userConfig) {\n        return this.userConfig.nowLevel || '20';\n      }\n\n      return '20';\n    },\n    // 获取服务器和本地的时间差\n    serveTimeDiff: function serveTimeDiff() {\n      return this.$store.state.future.serveTimeDiff;\n    },\n    // 标记价格、指数价格、资金费率\n    publicMarkertInfo: function publicMarkertInfo() {\n      var publicMarkertInfo = this.$store.state.future.publicMarkertInfo;\n\n      if (publicMarkertInfo) {\n        return {\n          // 标记价格\n          tagPrice: this.fixPrice(publicMarkertInfo.tagPrice),\n          // 资金费率下次\n          nextFundRate: this.fundRate(publicMarkertInfo.nextFundRate),\n          // 指数价格\n          indexPrice: this.fixPrice(publicMarkertInfo.indexPrice),\n          // 本期资金费率\n          currentFundRate: this.fundRate(publicMarkertInfo.currentFundRate)\n        };\n      }\n\n      return {\n        tagPrice: '--',\n        nextFundRate: '--',\n        currentFundRate: '--',\n        indexPrice: '--'\n      };\n    },\n    // 当前合约24小时行情数据\n    activeWsData: function activeWsData() {\n      var obj = {\n        close: '--',\n        rose: '--',\n        vol: '--',\n        roseClass: ''\n      };\n\n      if (this.contractInfo && this.WsData) {\n        var key = this.contractInfo.wsDatakey;\n\n        if (this.WsData[key]) {\n          var data = this.WsData[key]; // 关闭当前合约价格\n\n          this.$bus.$emit('ACTIVE_CONTRACT_PRICE', data.close);\n          var vol = data.vol;\n          var roseClass = '';\n          var slie = '';\n          var val = parseFloat(data.rose, 0);\n\n          if (val > 0) {\n            roseClass = 'u-1-bg';\n            slie = '+';\n          }\n\n          if (val < 0) {\n            roseClass = 'u-4-bg';\n            slie = '-';\n          }\n\n          if (val === 0) {\n            roseClass = 'b-2-bg';\n            slie = '-';\n          } // 标的货币\n\n\n          if (this.coUnitType === 1) {\n            vol = fixD(nul(vol, this.multiplier), 0);\n          }\n\n          obj = {\n            close: this.fixPrice(data.close),\n            rose: \"\".concat(slie).concat(this.fixdRose(data.rose)),\n            vol: vol,\n            roseClass: roseClass\n          };\n        }\n      }\n\n      return obj;\n    },\n    publicInfo: function publicInfo() {\n      if (this.$store.state && this.$store.state.baseData) {\n        return this.$store.state.baseData.publicInfo;\n      }\n\n      return null;\n    },\n    typeTabList: function typeTabList() {\n      // console.log(this.contractSide);\n      if (this.contractSide === 1) {\n        return this.$t('futures.market.text4'); // 'USDT合约',\n      }\n\n      if (this.contractSide === 0) {\n        return this.$t('futures.market.text5'); // '币本位合约',\n      }\n\n      if (this.contractSide === 2) {\n        return this.$t('futures.market.text6'); // '混合合约',\n      }\n\n      return this.$t('futures.market.text7'); // '模拟合约',\n    },\n    // 页面标题title\n    documentTitle: function documentTitle() {\n      var lang = getCookie('lan');\n      var str = '';\n\n      if (this.publicInfo) {\n        var _this$publicInfo = this.publicInfo,\n            indexHeaderTitle = _this$publicInfo.indexHeaderTitle,\n            seo = _this$publicInfo.seo;\n        var title = '';\n\n        if (indexHeaderTitle) {\n          if (lang) {\n            title = seo.title || indexHeaderTitle[lang];\n          } else {\n            var lan = this.publicInfo.lan.defLan;\n            title = seo.title || indexHeaderTitle[lan];\n          }\n        }\n\n        str = \"\".concat(this.activeWsData.close, \"-\").concat(this.activeContractName, \" \").concat(this.typeTabList, \" | \").concat(title);\n      }\n\n      return str;\n    }\n  },\n  watch: {\n    // 页面标题title\n    documentTitle: function documentTitle(val) {\n      document.title = val;\n    },\n    // 当前价格变化\n    activeWsData: function activeWsData(val, old) {\n      if (val && old) {\n        if (val.close !== '--' || old.close !== '--') {\n          var newP = parseFloat(val.close, 0);\n          var oldP = parseFloat(old.close, 0);\n\n          if (newP > oldP) {\n            this.activePriceClass = 'u-1-cl';\n          } else if (newP < oldP) {\n            this.activePriceClass = 'u-4-cl';\n          } else if (newP !== oldP) {\n            this.activePriceClass = '';\n          }\n        } else if (val !== old) {\n          this.activePriceClass = '';\n        }\n      }\n\n      this.$bus.$emit('activeWsData', {\n        close: val.close,\n        class: this.activePriceClass\n      });\n    },\n    contractInfo: function contractInfo(val) {\n      if (val) {\n        // 设置 资金费率倒计时\n        this.setNextStartTime();\n      }\n    }\n  },\n  methods: {\n    // 新价精度\n    fixPrice: function fixPrice(value) {\n      if (value) {\n        return fixD(value, this.pricefix);\n      }\n\n      return '--';\n    },\n    // 数量精度\n    fixVol: function fixVol(value) {\n      if (value) {\n        return fixD(value, this.volfix);\n      }\n\n      return '--';\n    },\n    // 处理涨跌幅\n    fixdRose: function fixdRose(value) {\n      if (value) {\n        var num = Math.abs(value * 10000 / 100);\n        return \"\".concat(Number(num.toString().match(/^\\d+(?:\\.\\d{0,2})?/)));\n      }\n\n      return '00.00';\n    },\n    // 处理资金费率\n    fundRate: function fundRate(value) {\n      if (value === 0) {\n        return value;\n      }\n\n      if (value) {\n        var slie;\n        var val = parseFloat(value, 0);\n\n        if (val > 0) {\n          slie = '+';\n        }\n\n        if (val < 0) {\n          slie = '-';\n        }\n\n        var num = Math.abs(value * 10000 / 100); // return `${slie}${Number(num.toString().match(/^\\d+(?:\\.\\d{0,5})?/))}`;\n\n        return \"\".concat(slie).concat(fixD(num, 5));\n      }\n\n      return '--';\n    },\n    // 设置下次收取资金费率开始时间戳\n    setNextStartTime: function setNextStartTime() {\n      if (this.contractInfo) {\n        // 开始时间\n        var Time = this.contractInfo.capitalStartTime; // 一天结算次数\n\n        var Len = division(24, this.capitalFrequency); // 当前时间戳\n\n        var serverTime = new Date().getTime() + this.serveTimeDiff; // 当前时间的小时数\n\n        var NowH = new Date(serverTime).getHours(); // 当天的的0点时间戳\n\n        var TNS = new Date(new Date(serverTime).toLocaleDateString()).getTime();\n\n        for (var index = 0; index < Len; index += 1) {\n          if (NowH >= Time) {\n            Time += this.capitalFrequency;\n          }\n        } // 本期结算时间\n\n\n        this.activeTimer = Time > 9 ? \"\".concat(Time, \":00\") : \"0\".concat(Time, \":00\"); // 下期结算时间\n\n        var nextTimer = Time + this.capitalFrequency;\n\n        if (nextTimer > 24) {\n          nextTimer -= 24;\n        }\n\n        if (nextTimer < 9) {\n          nextTimer = \"0\".concat(nextTimer);\n        }\n\n        this.nextTimer = \"\".concat(nextTimer, \":00\");\n        this.nextStartTime = nul(Time, 3600000) + TNS;\n        this.countdown();\n      }\n    },\n    // 设置倒计时\n    countdown: function countdown() {\n      var _this = this;\n\n      clearInterval(this.setIntervalTimer);\n      this.setIntervalTimer = setInterval(function () {\n        // 获取当前时间\n        var nowtime = new Date().getTime() + _this.serveTimeDiff;\n\n        var lefttime = _this.nextStartTime - nowtime; // 距离结束时间的毫秒数\n\n        if (lefttime > 0) {\n          var lefth = Math.floor(division(lefttime, 3600000) % 24); // 计算小时数\n\n          var leftm = Math.floor(division(lefttime, 60000) % 60); // 计算分钟数\n\n          var lefts = Math.floor(division(lefttime, 1000) % 60); // 计算秒数\n\n          lefth = lefth < 10 ? \"0\".concat(lefth) : lefth;\n          leftm = leftm < 10 ? \"0\".concat(leftm) : leftm;\n          lefts = lefts < 10 ? \"0\".concat(lefts) : lefts;\n          _this.countDownTime = \"\".concat(lefth, \":\").concat(leftm, \":\").concat(lefts); // 返回倒计时的字符串\n        } else {\n          _this.setNextStartTime();\n        }\n      }, 1000);\n    },\n    // 开启弹框\n    showDialog: function showDialog(type) {\n      // 显示开通合约交易弹框\n      if (this.userConfig && !this.userConfig.openContract) {\n        this.$bus.$emit('OPEN_FUTURE');\n        return false;\n      }\n\n      if (this.isLogin) {\n        this.$store.dispatch('getUserConfig');\n      }\n\n      this[type] = true;\n      return false;\n    },\n    // 关闭弹窗\n    closeDialog: function closeDialog() {\n      // 关闭市场\n      this.isShowMarket = false; // 关闭合约设置弹窗\n\n      this.setFuturesIsShow = false; // 关闭杠杆弹窗\n\n      this.leverageDialogShow = false; // 关闭切换保证金模式弹框\n\n      this.depositDialogShow = false;\n    },\n    // 关闭市场\n    onClickOutside: function onClickOutside() {\n      this.isShowMarket = false;\n    },\n    // 显示 市场\n    showMarket: function showMarket() {\n      this.isShowMarket = !this.isShowMarket;\n    },\n    init: function init() {\n      var _this2 = this;\n\n      // 获取前台公共实时信息(指数价格 标记价格 资金费率)\n      clearInterval(this.timer);\n      this.timer = setInterval(function () {\n        _this2.$store.dispatch('getPublicMarkertInfo');\n      }, 5000); // 接收24小时行情数据\n\n      this.$bus.$on('FUTURE_MARKET_DATA', function (data) {\n        _this2.WsData = JSON.parse(data);\n      });\n      this.$bus.$on('futuresMarketCurrent', function (data) {\n        _this2.contractSide = data;\n      });\n      this.setNextStartTime();\n    },\n    thousandsComma: function thousandsComma(num) {\n      if (num) {\n        return _thousandsComma(num);\n      }\n\n      return num;\n    }\n  },\n  destroyed: function destroyed() {\n    this.$bus.$off('FUTURE_MARKET_DATA');\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/modules/coTrade/currentSymbol/currentSymbol.js"],"names":["nul","fixD","division","thousandsComma","getCookie","myStorage","name","components","data","WsData","isShowMarket","setFuturesIsShow","nextStartTime","countDownTime","setIntervalTimer","activePriceClass","timer","activeTimer","nextTimer","contractSide","get","computed","lantext","explain1","$t","explain4","isLogin","$store","state","baseData","contractInfo","future","capitalFrequency","activeContractName","text","nameText","symbol","replace","contractType","marginCoin","multiplier","Number","coUnit","coUnitType","volfix","pricefix","contractTypeText","userConfig","futureUserConfig","marginModel","nowLevel","serveTimeDiff","publicMarkertInfo","tagPrice","fixPrice","nextFundRate","fundRate","indexPrice","currentFundRate","activeWsData","obj","close","rose","vol","roseClass","key","wsDatakey","$bus","$emit","slie","val","parseFloat","fixdRose","publicInfo","typeTabList","documentTitle","lang","str","indexHeaderTitle","seo","title","lan","defLan","watch","document","old","newP","oldP","class","setNextStartTime","methods","value","fixVol","num","Math","abs","toString","match","Time","capitalStartTime","Len","serverTime","Date","getTime","NowH","getHours","TNS","toLocaleDateString","index","countdown","clearInterval","setInterval","nowtime","lefttime","lefth","floor","leftm","lefts","showDialog","type","openContract","dispatch","closeDialog","leverageDialogShow","depositDialogShow","onClickOutside","showMarket","init","$on","JSON","parse","destroyed","$off"],"mappings":"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","sourcesContent":["import {\n  nul, fixD, division, thousandsComma, getCookie, myStorage,\n} from '@/utils';\n\nexport default {\n  name: 'currentSymbol',\n  components: {\n  },\n  data() {\n    return {\n      // 24小时行情数据\n      WsData: {},\n      // 是否显示市场\n      isShowMarket: false,\n      // 是否显示 合约设置弹框\n      setFuturesIsShow: false,\n\n      // 下次收取资金费率开始时间戳\n      nextStartTime: null,\n      // 下次收取资金费率开始时间倒计时\n      countDownTime: null,\n      // 倒计时\n      setIntervalTimer: null,\n      // 当前价格颜色的Class\n      activePriceClass: '',\n      // 轮训倒计时\n      timer: null,\n      // 本期结算时间\n      activeTimer: null,\n      // 下期结算时间\n      nextTimer: null,\n      // 当前合约市场id\n      contractSide: myStorage.get('futuresMarketCurrent'),\n    };\n  },\n  computed: {\n    lantext() {\n      return {\n        explain1: this.$t('futures.currentSymbol.explain1'),\n        explain4: this.$t('futures.currentSymbol.explain4'),\n      };\n    },\n    // 是否登录\n    isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    // 当前合约信息\n    contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 资金费率间隔\n    capitalFrequency() {\n      if (this.contractInfo) {\n        return this.contractInfo.capitalFrequency;\n      }\n      return 1;\n    },\n    // 当前合约名称\n    activeContractName() {\n      let name = '';\n      let text = '';\n      if (this.contractInfo) {\n        const nameText = this.contractInfo.symbol ? this.contractInfo.symbol.replace('-', '') : '';\n        if (this.contractInfo.contractType !== 'E') {\n          text = `-${this.contractInfo.marginCoin}`;\n        }\n        name = `${nameText}${text}`;\n      }\n      return name;\n    },\n    // 当前合约面值\n    multiplier() {\n      return Number(this.$store.state.future.multiplier);\n    },\n    // 合约数量单位\n    coUnit() {\n      return this.$store.state.future.coUnit;\n    },\n    // 数量单位类型Number\n    coUnitType() {\n      return this.$store.state.future.coUnitType;\n    },\n    // 合约数量精度\n    volfix() {\n      return this.$store.state.future.volfix;\n    },\n    // 合约币对价格精度\n    pricefix() {\n      return this.$store.state.future.pricefix;\n    },\n    // 合约类型列表\n    contractTypeText() {\n      return this.$store.state.future.contractTypeText;\n    },\n    // 用户配置信息\n    userConfig() {\n      return this.$store.state.future.futureUserConfig;\n    },\n    // 当前合约保证金模式\n    marginModel() {\n      if (this.userConfig) {\n        // 全仓 ： 逐仓\n        return this.userConfig.marginModel === 1\n          ? this.$t('futures.currentSymbol.marginModel1')\n          : this.$t('futures.currentSymbol.marginModel2');\n      }\n      return this.$t('futures.currentSymbol.marginModel1');\n    },\n    // 当前合约杠杆倍数\n    nowLevel() {\n      if (this.userConfig) {\n        return this.userConfig.nowLevel || '20';\n      }\n      return '20';\n    },\n    // 获取服务器和本地的时间差\n    serveTimeDiff() {\n      return this.$store.state.future.serveTimeDiff;\n    },\n    // 标记价格、指数价格、资金费率\n    publicMarkertInfo() {\n      const { publicMarkertInfo } = this.$store.state.future;\n      if (publicMarkertInfo) {\n        return {\n          // 标记价格\n          tagPrice: this.fixPrice(publicMarkertInfo.tagPrice),\n          // 资金费率下次\n          nextFundRate: this.fundRate(publicMarkertInfo.nextFundRate),\n          // 指数价格\n          indexPrice: this.fixPrice(publicMarkertInfo.indexPrice),\n          // 本期资金费率\n          currentFundRate: this.fundRate(publicMarkertInfo.currentFundRate),\n        };\n      }\n      return {\n        tagPrice: '--',\n        nextFundRate: '--',\n        currentFundRate: '--',\n        indexPrice: '--',\n      };\n    },\n    // 当前合约24小时行情数据\n    activeWsData() {\n      let obj = {\n        close: '--',\n        rose: '--',\n        vol: '--',\n        roseClass: '',\n      };\n      if (this.contractInfo && this.WsData) {\n        const key = this.contractInfo.wsDatakey;\n        if (this.WsData[key]) {\n          const data = this.WsData[key];\n          // 关闭当前合约价格\n          this.$bus.$emit('ACTIVE_CONTRACT_PRICE', data.close);\n          let { vol } = data;\n          let roseClass = '';\n          let slie = '';\n          const val = parseFloat(data.rose, 0);\n          if (val > 0) {\n            roseClass = 'u-1-bg';\n            slie = '+';\n          }\n          if (val < 0) {\n            roseClass = 'u-4-bg';\n            slie = '-';\n          }\n          if (val === 0) {\n            roseClass = 'b-2-bg';\n            slie = '-';\n          }\n          // 标的货币\n          if (this.coUnitType === 1) {\n            vol = fixD(nul(vol, this.multiplier), 0);\n          }\n          obj = {\n            close: this.fixPrice(data.close),\n            rose: `${slie}${this.fixdRose(data.rose)}`,\n            vol,\n            roseClass,\n          };\n        }\n      }\n      return obj;\n    },\n    publicInfo() {\n      if (this.$store.state && this.$store.state.baseData) {\n        return this.$store.state.baseData.publicInfo;\n      }\n      return null;\n    },\n    typeTabList() {\n      // console.log(this.contractSide);\n      if (this.contractSide === 1) {\n        return this.$t('futures.market.text4'); // 'USDT合约',\n      }\n      if (this.contractSide === 0) {\n        return this.$t('futures.market.text5'); // '币本位合约',\n      }\n      if (this.contractSide === 2) {\n        return this.$t('futures.market.text6'); // '混合合约',\n      }\n      return this.$t('futures.market.text7'); // '模拟合约',\n    },\n    // 页面标题title\n    documentTitle() {\n      const lang = getCookie('lan');\n      let str = '';\n      if (this.publicInfo) {\n        const { indexHeaderTitle, seo } = this.publicInfo;\n        let title = '';\n        if (indexHeaderTitle) {\n          if (lang) {\n            title = seo.title || indexHeaderTitle[lang];\n          } else {\n            const lan = this.publicInfo.lan.defLan;\n            title = seo.title || indexHeaderTitle[lan];\n          }\n        }\n        str = `${this.activeWsData.close}-${this.activeContractName} ${this.typeTabList} | ${title}`;\n      }\n      return str;\n    },\n  },\n  watch: {\n    // 页面标题title\n    documentTitle(val) {\n      document.title = val;\n    },\n    // 当前价格变化\n    activeWsData(val, old) {\n      if (val && old) {\n        if (val.close !== '--' || old.close !== '--') {\n          const newP = parseFloat(val.close, 0);\n          const oldP = parseFloat(old.close, 0);\n          if (newP > oldP) {\n            this.activePriceClass = 'u-1-cl';\n          } else if (newP < oldP) {\n            this.activePriceClass = 'u-4-cl';\n          } else if (newP !== oldP) {\n            this.activePriceClass = '';\n          }\n        } else if (val !== old) {\n          this.activePriceClass = '';\n        }\n      }\n      this.$bus.$emit('activeWsData', { close: val.close, class: this.activePriceClass });\n    },\n    contractInfo(val) {\n      if (val) {\n        // 设置 资金费率倒计时\n        this.setNextStartTime();\n      }\n    },\n  },\n  methods: {\n    // 新价精度\n    fixPrice(value) {\n      if (value) {\n        return fixD(value, this.pricefix);\n      }\n      return '--';\n    },\n    // 数量精度\n    fixVol(value) {\n      if (value) {\n        return fixD(value, this.volfix);\n      }\n      return '--';\n    },\n    // 处理涨跌幅\n    fixdRose(value) {\n      if (value) {\n        const num = Math.abs((value * 10000) / 100);\n        return `${Number(num.toString().match(/^\\d+(?:\\.\\d{0,2})?/))}`;\n      }\n      return '00.00';\n    },\n    // 处理资金费率\n    fundRate(value) {\n      if (value === 0) {\n        return value;\n      }\n      if (value) {\n        let slie;\n        const val = parseFloat(value, 0);\n        if (val > 0) {\n          slie = '+';\n        }\n        if (val < 0) {\n          slie = '-';\n        }\n        const num = Math.abs((value * 10000) / 100);\n        // return `${slie}${Number(num.toString().match(/^\\d+(?:\\.\\d{0,5})?/))}`;\n        return `${slie}${fixD(num, 5)}`;\n      }\n      return '--';\n    },\n    // 设置下次收取资金费率开始时间戳\n    setNextStartTime() {\n      if (this.contractInfo) {\n        // 开始时间\n        let Time = this.contractInfo.capitalStartTime;\n        // 一天结算次数\n        const Len = division(24, this.capitalFrequency);\n        // 当前时间戳\n        const serverTime = new Date().getTime() + this.serveTimeDiff;\n        // 当前时间的小时数\n        const NowH = new Date(serverTime).getHours();\n        // 当天的的0点时间戳\n        const TNS = new Date(new Date(serverTime).toLocaleDateString()).getTime();\n        for (let index = 0; index < Len; index += 1) {\n          if (NowH >= Time) {\n            Time += this.capitalFrequency;\n          }\n        }\n\n        // 本期结算时间\n        this.activeTimer = Time > 9 ? `${Time}:00` : `0${Time}:00`;\n        // 下期结算时间\n        let nextTimer = Time + this.capitalFrequency;\n        if (nextTimer > 24) {\n          nextTimer -= 24;\n        }\n        if (nextTimer < 9) {\n          nextTimer = `0${nextTimer}`;\n        }\n        this.nextTimer = `${nextTimer}:00`;\n        this.nextStartTime = nul(Time, 3600000) + TNS;\n        this.countdown();\n      }\n    },\n    // 设置倒计时\n    countdown() {\n      clearInterval(this.setIntervalTimer);\n      this.setIntervalTimer = setInterval(() => {\n        // 获取当前时间\n        const nowtime = new Date().getTime() + this.serveTimeDiff;\n        const lefttime = this.nextStartTime - nowtime; // 距离结束时间的毫秒数\n        if (lefttime > 0) {\n          let lefth = Math.floor(division(lefttime, 3600000) % 24); // 计算小时数\n          let leftm = Math.floor(division(lefttime, 60000) % 60); // 计算分钟数\n          let lefts = Math.floor(division(lefttime, 1000) % 60); // 计算秒数\n          lefth = lefth < 10 ? `0${lefth}` : lefth;\n          leftm = leftm < 10 ? `0${leftm}` : leftm;\n          lefts = lefts < 10 ? `0${lefts}` : lefts;\n          this.countDownTime = `${lefth}:${leftm}:${lefts}`; // 返回倒计时的字符串\n        } else {\n          this.setNextStartTime();\n        }\n      }, 1000);\n    },\n    // 开启弹框\n    showDialog(type) {\n      // 显示开通合约交易弹框\n      if (this.userConfig && !this.userConfig.openContract) {\n        this.$bus.$emit('OPEN_FUTURE');\n        return false;\n      }\n      if (this.isLogin) {\n        this.$store.dispatch('getUserConfig');\n      }\n      this[type] = true;\n      return false;\n    },\n    // 关闭弹窗\n    closeDialog() {\n      // 关闭市场\n      this.isShowMarket = false;\n      // 关闭合约设置弹窗\n      this.setFuturesIsShow = false;\n      // 关闭杠杆弹窗\n      this.leverageDialogShow = false;\n      // 关闭切换保证金模式弹框\n      this.depositDialogShow = false;\n    },\n    // 关闭市场\n    onClickOutside() {\n      this.isShowMarket = false;\n    },\n    // 显示 市场\n    showMarket() {\n      this.isShowMarket = !this.isShowMarket;\n    },\n    init() {\n      // 获取前台公共实时信息(指数价格 标记价格 资金费率)\n      clearInterval(this.timer);\n      this.timer = setInterval(() => {\n        this.$store.dispatch('getPublicMarkertInfo');\n      }, 5000);\n      // 接收24小时行情数据\n      this.$bus.$on('FUTURE_MARKET_DATA', (data) => {\n        this.WsData = JSON.parse(data);\n      });\n      this.$bus.$on('futuresMarketCurrent', (data) => {\n        this.contractSide = data;\n      });\n      this.setNextStartTime();\n    },\n    thousandsComma(num) {\n      if (num) {\n        return thousandsComma(num);\n      }\n      return num;\n    },\n  },\n  destroyed() {\n    this.$bus.$off('FUTURE_MARKET_DATA');\n    clearInterval(this.timer);\n    this.timer = null;\n  },\n};\n"]}]}