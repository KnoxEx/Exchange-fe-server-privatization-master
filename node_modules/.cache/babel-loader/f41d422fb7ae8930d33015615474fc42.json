{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/tradeInput/tradeInput.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/modules/trade/tradeForm/tradeInput/tradeInput.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { fixD, fixInput } from '@/utils';\nexport default {\n  name: 'tableList',\n  components: {},\n  data: function data() {\n    return {\n      focusv: false,\n      valueData: null\n    };\n  },\n  props: {\n    datas: {\n      type: Object\n    },\n    value: {\n      type: [String, Number],\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    fixValue: {\n      type: [String, Number]\n    }\n  },\n  computed: {\n    // 全部币种列表\n    coinList: function coinList() {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n\n      return null;\n    },\n    ItemClass: function ItemClass() {\n      var bg = '';\n      var bd = 'a-3-bd';\n\n      if (this.content && this.content.disabled) {\n        bg = '';\n      }\n\n      if (this.focusv) {\n        bd = 'a-12-bd';\n      }\n\n      if (this.content && this.content.isError) {\n        bd = 'c-3-bd';\n      }\n\n      return [bg, bd];\n    },\n    content: function content() {\n      if (this.datas) {\n        return this.datas;\n      }\n\n      return {};\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.valueData = fixInput(val, this.fixValue);\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      this.$bus.$on('SYMBOL_CURRENT', function () {\n        _this.valueData = null;\n      });\n      this.$bus.$on('ECHARTS_DATA', function (data) {\n        if (_this.name === 'formData_1' && !_this.valueData && !_this.focusv) {\n          if (data.asksArr && data.asksArr.length) {\n            var f = data.asksArr[0];\n\n            if (f) {\n              var _f = _slicedToArray(f, 1),\n                  d = _f[0];\n\n              _this.valueData = fixD(d, _this.fixValue);\n\n              _this.$emit('onChanes', {\n                name: _this.name,\n                value: d\n              });\n            }\n          }\n        }\n\n        if (_this.name === 'formData_3' && !_this.valueData && !_this.focusv) {\n          if (data.buysArr && data.buysArr.length) {\n            var i = data.buysArr.length - 1;\n            var _f2 = data.buysArr[i];\n\n            if (_f2) {\n              var _f3 = _slicedToArray(_f2, 1),\n                  _d = _f3[0];\n\n              _this.valueData = fixD(_d, _this.fixValue);\n\n              _this.$emit('onChanes', {\n                name: _this.name,\n                value: _d\n              });\n            }\n          }\n        }\n      });\n    },\n    inputFocus: function inputFocus() {\n      if (!this.content.disabled) {\n        this.focusv = true;\n        this.$refs.inputs.focus();\n      }\n    },\n    handle: function handle(type) {\n      if (type === 'focus') {\n        this.focusv = true;\n      } else {\n        this.focusv = false;\n      }\n    },\n    handleInput: function handleInput(val) {\n      var data = val;\n      this.valueData = fixInput(data, this.fixValue);\n      this.$emit('onChanes', {\n        name: this.name,\n        value: data,\n        type: 'from'\n      });\n    }\n  }\n};",null]}