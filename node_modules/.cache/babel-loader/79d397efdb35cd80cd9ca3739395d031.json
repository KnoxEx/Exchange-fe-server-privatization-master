{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/otcDetailOrder/index/index.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui-privatization/PC/common-mixin/otcDetailOrder/index/index.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { fixD, imgMap, colorMap } from '@/utils';\nexport default {\n  data: function data() {\n    return {\n      timer: null,\n      orderIsReady: false,\n      orderId: '',\n      axiosData: {},\n      payObj: {},\n      // 买家支付时，选择的支付方式对象\n      cancelOrderFlag: false,\n      // 取消订单 开关变量 -- 用于买1\n      cancelOrderCheck: false,\n      // 取消订单 checkout\n      cancelOrderLoading: false,\n      // 取消订单 loading\n      goPayFlag: false,\n      // 确认付款弹窗 开关变量 -- 用于买1\n      gopayConfirmLoading: false,\n      // 确认付款弹窗 -- loading 用于买1\n      releaseFlag: false,\n      // 确认放行弹窗 开关变量\n      passValue: '',\n      // 资金密码 -- 用于卖2\n      passCheck: false,\n      // 资金密码 checkout -- 用于卖2\n      releaseConfirmLoading: false,\n      // 确认放币弹窗 确认按钮loading -- 用于卖2\n      appealFlag: false,\n      // 申诉弹窗 -- 用于买2/卖2\n      appealValue: '',\n      // 申诉内容 -- 用于买2/卖2\n      appealLoading: false,\n      // 申诉弹窗 确认按钮loading -- 用于买2/卖2\n      cancelAppealFlag: false,\n      // 取消申诉弹窗\n      cancelAppealLoading: false,\n      // 取消申诉的loading\n      chatTop: 0,\n      // chatHeight: 0,\n      maxEvmFlag: false,\n      imgMap: imgMap,\n      colorMap: colorMap,\n      identificationShow: false\n    };\n  },\n  watch: {\n    status: function status(v) {\n      var _this = this;\n\n      if (v) {\n        this.$nextTick(function () {\n          var title = _this.$refs.title;\n          _this.chatTop = title.$el.offsetHeight;\n        });\n      }\n    }\n  },\n  computed: {\n    identificationInfo: function identificationInfo() {\n      var obj = {};\n      var sideMap = {\n        SELL: 'buyer',\n        BUY: 'seller'\n      };\n\n      if (this.commonData.side) {\n        var commonData = this.commonData[sideMap[this.commonData.side]];\n\n        if (commonData) {\n          obj.realName = commonData.realName;\n          obj.mobileNumber = commonData.mobileNumber;\n          obj.email = commonData.email;\n          obj.isTwoMin = Number(this.commonData.isTwoMin);\n        }\n      }\n\n      return obj;\n    },\n    goPayText: function goPayText() {\n      var price = '';\n      var id = '';\n      var _this$commonData = this.commonData,\n          sequence = _this$commonData.sequence,\n          totalPrice = _this$commonData.totalPrice,\n          paycoin = _this$commonData.paycoin;\n\n      if (sequence) {\n        id = sequence.substring(sequence.length - 6);\n      }\n\n      if (totalPrice && paycoin) {\n        price = \"\".concat(totalPrice, \" \").concat(paycoin);\n      }\n\n      return {\n        id: id,\n        price: price\n      };\n    },\n    // buy 1 去支付按钮 disabled\n    goPayDisabled: function goPayDisabled() {\n      var flag = true;\n\n      if (this.payObj.payment) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    // 资金密码 是否复合正则验证 卖2\n    passFlag: function passFlag() {\n      return this.$store.state.regExp.passWord.test(this.passValue);\n    },\n    // 资金密码 是否为错误状态 卖2\n    passErrorFlag: function passErrorFlag() {\n      if (this.passValue.length !== 0 && !this.passFlag) return true;\n      return false;\n    },\n    // 确认放币弹窗 确定按钮 禁用  卖2\n    releaseConfirmDisbale: function releaseConfirmDisbale() {\n      var flag = true;\n\n      if (this.passCheck && this.passFlag || this.releaseConfirmLoading) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    // 申诉弹窗 确定按钮 禁用 买2/卖2\n    appealConfirmDisabled: function appealConfirmDisabled() {\n      var flag = true;\n\n      if (this.appealValue.length || this.appealLoading) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    // 取消订单 确定按钮 禁用\n    cancelOrderConfirmDisabled: function cancelOrderConfirmDisabled() {\n      var flag = true;\n\n      if (this.cancelOrderCheck || this.cancelOrderLoading) {\n        flag = false;\n      }\n\n      return flag;\n    },\n    status: function status() {\n      if (this.commonData.status) {\n        return this.commonData.status.toString();\n      }\n\n      return '0';\n    },\n    baseData: function baseData() {\n      return this.$store.state.baseData;\n    },\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    // 传给子组件是否准备就绪 必须订单接口和user_info请求成功\n    isReady: function isReady() {\n      var flag = false;\n\n      if (this.isLogin && this.orderIsReady) {\n        flag = true;\n      }\n\n      return flag;\n    },\n    // 传给子组件的数据 axios返回的订单数据 + 自己算出的方向\n    commonData: function commonData() {\n      var obj = {};\n\n      if (this.isReady) {\n        if (this.userInfo.id && this.axiosData.seller && this.axiosData.seller.uid) {\n          var side = this.userInfo.id.toString() === this.axiosData.seller.uid.toString() ? 'SELL' : 'BUY';\n          obj = _objectSpread(_objectSpread({}, this.axiosData), {\n            side: side\n          });\n        }\n      }\n\n      return obj;\n    },\n    market: function market() {\n      return this.$store.state.baseData.market;\n    },\n    priceFix: function priceFix() {\n      var fix = this.$store.state.baseData.defaultFiatPrecision;\n      var _this$commonData2 = this.commonData,\n          coin = _this$commonData2.coin,\n          paycoin = _this$commonData2.paycoin;\n\n      if (this.market && this.market.coinList[coin] && this.market.coinList[coin].fiatPrecision && this.market.coinList[coin].fiatPrecision[paycoin.toLowerCase()]) {\n        fix = this.market.coinList[coin].fiatPrecision[paycoin.toLowerCase()];\n      }\n\n      return Number(fix);\n    },\n    volumeFix: function volumeFix() {\n      var fix = '';\n      var coin = this.commonData.coin;\n\n      if (this.market && coin && this.market.coinList[coin] && this.market.coinList[coin].showPrecision) {\n        fix = this.market.coinList[coin].showPrecision;\n      }\n\n      return Number(fix);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearInterval(this.timer);\n  },\n  methods: {\n    init: function init() {\n      var orderId = this.$route.query.orderId;\n\n      if (orderId) {\n        this.orderId = orderId;\n        this.getData();\n      }\n    },\n    maxEvm: function maxEvm(v) {\n      this.maxEvmFlag = v;\n    },\n    getData: function getData() {\n      var _this2 = this;\n\n      clearInterval(this.timer);\n      this.timer = setInterval(function () {\n        _this2.initOrder(true);\n      }, 10000);\n      this.initOrder();\n    },\n    // 获取订单数据\n    initOrder: function initOrder(auto) {\n      var _this3 = this;\n\n      var headers = {};\n\n      if (auto) {\n        headers['exchange-auto'] = '1';\n      }\n\n      this.axios({\n        url: 'v4/otc/order_detail',\n        params: {\n          sequence: this.orderId,\n          headers: headers\n        },\n        hostType: 'otc'\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          _this3.orderIsReady = true;\n          _this3.axiosData = data.data;\n          _this3.axiosData.price = fixD(_this3.axiosData.price, _this3.priceFix);\n          _this3.axiosData.totalPrice = fixD(_this3.axiosData.totalPrice, _this3.priceFix);\n          _this3.axiosData.volume = fixD(_this3.axiosData.volume, _this3.volumeFix);\n        } else {\n          _this3.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 买家支付时，修改选择的支付方式对象\n    setPayObj: function setPayObj(v) {\n      this.payObj = v;\n    },\n    // 买1 去支付按钮\n    goPayClick: function goPayClick() {\n      this.goPayFlag = true;\n    },\n    // 买1 确认付款碳层 close\n    goPayClose: function goPayClose() {\n      this.goPayFlag = false;\n    },\n    // 买1 标记为已付款 confirm\n    gopayConfirm: function gopayConfirm() {\n      var _this4 = this;\n\n      this.gopayConfirmLoading = true;\n      this.axios({\n        url: '/v4/otc/order_payed',\n        hostType: 'otc',\n        params: {\n          sequence: this.orderId,\n          payment: this.payObj.payment\n        }\n      }).then(function (data) {\n        _this4.gopayConfirmLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this4.getData();\n\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this4.goPayFlag = false;\n        } else {\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 卖2 确认收款并放币\n    releaseClick: function releaseClick() {\n      this.releaseFlag = true;\n    },\n    // 卖2 checkout点击\n    passCheckClick: function passCheckClick() {\n      this.passCheck = !this.passCheck;\n    },\n    // 卖2 关闭确认放行弹窗\n    releaseClose: function releaseClose() {\n      this.releaseFlag = false; // 关闭弹窗\n\n      this.passValue = ''; // 清空资金密码\n\n      this.passCheck = false; // 取消checkout\n    },\n    // 卖2 确认放行弹窗 确定\n    releaseConfirm: function releaseConfirm() {\n      var _this5 = this;\n\n      this.releaseConfirmLoading = true;\n      var url = 'otc/confirm_order';\n      this.axios({\n        url: url,\n        hostType: 'otc',\n        params: {\n          sequence: this.orderId,\n          capitalPword: this.passValue\n        }\n      }).then(function (data) {\n        _this5.releaseConfirmLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this5.getData();\n\n          _this5.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this5.releaseClose();\n        } else {\n          _this5.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 申诉按钮点击 买2 / 卖2\n    appealClick: function appealClick() {\n      var nowTime = new Date().getTime();\n      var spk = nowTime - this.axiosData.payTime;\n\n      if (spk <= 300000) {\n        // 确认付款5分钟后才可提交申诉\n        this.$bus.$emit('tip', {\n          text: this.$t('otcDetailOrder.AppealTitleFive'),\n          type: 'warning'\n        });\n      } else {\n        this.appealFlag = true;\n      }\n    },\n    // 申诉弹窗 关闭按钮\n    appealClose: function appealClose() {\n      this.appealFlag = false;\n      this.appealValue = '';\n    },\n    // 申诉弹窗 确认按钮\n    appealConfirm: function appealConfirm() {\n      var _this6 = this;\n\n      this.appealLoading = true;\n      this.axios({\n        url: '/question/create_problem',\n        params: {\n          rqType: this.commonData.side === 'BUY' ? 8 : 9,\n          rqDescribe: this.appealValue\n        }\n      }).then(function (data) {\n        if (data.code.toString() === '0') {\n          var url = 'otc/complain_order';\n\n          _this6.axios({\n            url: url,\n            hostType: 'otc',\n            params: {\n              sequence: _this6.orderId,\n              complainId: data.data.complainId\n            }\n          }).then(function (cdata) {\n            _this6.appealLoading = false;\n\n            if (cdata.code.toString() === '0') {\n              _this6.getData();\n\n              _this6.appealClose();\n\n              _this6.$bus.$emit('tip', {\n                text: cdata.msg,\n                type: 'success'\n              });\n            } else {\n              _this6.$bus.$emit('tip', {\n                text: cdata.msg,\n                type: 'error'\n              });\n            }\n          });\n        } else {\n          _this6.appealLoading = false;\n\n          _this6.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 取消申诉 点击\n    cancelAppealClick: function cancelAppealClick() {\n      this.cancelAppealFlag = true;\n    },\n    // 取消申诉弹窗 关闭按钮\n    cancelAppealClose: function cancelAppealClose() {\n      this.cancelAppealFlag = false;\n    },\n    // 取消申诉弹窗 确定按钮\n    cancelAppealConfirm: function cancelAppealConfirm() {\n      var _this7 = this;\n\n      this.cancelAppealLoading = true;\n      var url = 'otc/complain_cancel';\n      this.axios({\n        hostType: 'otc',\n        url: url,\n        params: {\n          sequence: this.orderId\n        }\n      }).then(function (data) {\n        _this7.cancelAppealLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this7.getData();\n\n          _this7.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this7.cancelAppealClose();\n        } else {\n          _this7.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // ---------- 取消订单 -----------\n    // 取消订单 click\n    cancelOrderClick: function cancelOrderClick() {\n      this.cancelOrderFlag = true;\n    },\n    // 取消订单 checkout点击\n    cancelOrderCheckClick: function cancelOrderCheckClick() {\n      this.cancelOrderCheck = !this.cancelOrderCheck;\n    },\n    // 取消订单 弹窗关闭\n    cancelOrderClose: function cancelOrderClose() {\n      this.cancelOrderFlag = false;\n      this.cancelOrderCheck = false;\n    },\n    // 取消订单 确认按钮\n    cancelOrderConfirm: function cancelOrderConfirm() {\n      var _this8 = this;\n\n      this.cancelOrderLoading = true;\n      var url = 'otc/order_cancel';\n      this.axios({\n        url: url,\n        hostType: 'otc',\n        params: {\n          sequence: this.orderId\n        }\n      }).then(function (data) {\n        _this8.cancelOrderLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this8.getData();\n\n          _this8.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'success'\n          });\n\n          _this8.cancelOrderClose();\n        } else {\n          _this8.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    inputLineChange: function inputLineChange(value, name) {\n      this[name] = value;\n    },\n    // 前往广告大厅\n    goHall: function goHall() {\n      this.$router.push('/');\n    }\n  }\n};",null]}