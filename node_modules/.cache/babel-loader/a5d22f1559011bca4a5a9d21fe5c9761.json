{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/personal/ChangePhone/ChangePhone.js","dependencies":[{"path":"/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/personal/ChangePhone/ChangePhone.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n// @ is an alias to /src\nimport countryMinix from \"../../countryList/countryList\";\nexport default {\n  name: 'changePassword',\n  mixins: [countryMinix],\n  watch: {\n    userInfo: function userInfo(userinfo) {\n      this.googleCode = !!Number(userinfo.googleStatus);\n      this.smsCode = !!Number(userinfo.isOpenMobileCheck);\n      this.checkValue1 = this.userInfo.mobileNumber;\n    },\n    mobileUpdate: function mobileUpdate(_mobileUpdate) {\n      if (_mobileUpdate !== null) {\n        this.loading = false;\n\n        if (_mobileUpdate.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _mobileUpdate.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n          this.$router.push('/personal/userManagement');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _mobileUpdate.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n\n          if (_mobileUpdate.code !== '10009') {\n            this.$bus.$emit('getCode-clear', 'smsCode');\n          }\n        }\n      }\n    },\n    sendSmsCode: function sendSmsCode(_sendSmsCode) {\n      if (_sendSmsCode !== null) {\n        if (_sendSmsCode.text === 'success') {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'success'\n          });\n          this.$store.dispatch('resetType');\n        } else {\n          this.$bus.$emit('tip', {\n            text: _sendSmsCode.msg,\n            type: 'error'\n          });\n          this.$store.dispatch('resetType');\n        }\n      }\n    }\n  },\n  computed: {\n    userInfo: function userInfo() {\n      return this.$store.state.baseData.userInfo;\n    },\n    sendSmsCode: function sendSmsCode() {\n      return this.$store.state.personal.sendSmsCode;\n    },\n    mobileUpdate: function mobileUpdate() {\n      return this.$store.state.personal.mobileUpdate;\n    }\n  },\n  data: function data() {\n    return {\n      promptText: this.$t('personal.label.promptText'),\n      errorText: this.$t('personal.label.errorText'),\n      loading: false,\n      checkValue1: '',\n      checkValue2: '',\n      checkValue3: '',\n      checkValue4: '',\n      checkValue5: '',\n      promptText1: this.$t('personal.label.oldPhone'),\n      promptText2: this.$t('personal.label.smsCodeText'),\n      promptText3: this.$t('personal.label.newPhone'),\n      promptText4: this.$t('personal.label.smsCodeText'),\n      promptText5: this.$t('personal.label.googleCodeText'),\n      errorText1: '',\n      errorText2: this.$t('personal.prompt.errorCode'),\n      errorText3: this.$t('personal.prompt.errorPhone'),\n      errorText4: this.$t('personal.prompt.errorCode'),\n      errorText5: this.$t('personal.prompt.errorCode'),\n      checkErrorFlag1: false,\n      checkErrorFlag2: false,\n      checkErrorFlag3: false,\n      checkErrorFlag4: false,\n      checkErrorFlag5: false,\n      disabled: true,\n      oldNew: false,\n      smsCode: false,\n      googleCode: false,\n      countryErrorFlag: false\n    };\n  },\n  methods: {\n    init: function init() {\n      if (this.userInfo) {\n        this.googleCode = !!Number(this.userInfo.googleStatus);\n        this.smsCode = !!Number(this.userInfo.isOpenMobileCheck);\n        this.checkValue1 = this.userInfo.mobileNumber;\n      }\n    },\n    // 手机正则\n    phoneFlag: function phoneFlag(val) {\n      return this.$store.state.regExp.phone.test(val);\n    },\n    codeFlag: function codeFlag(val) {\n      return this.$store.state.regExp.verification.test(val);\n    },\n    getCodeClick: function getCodeClick(name) {\n      if (name === 'oldSmsCode') {\n        this.$bus.$emit('getCode-start', 'oldSmsCode');\n        var info = {\n          operationType: 3\n        };\n        this.$store.dispatch('sendSmsCode', info);\n      } else if (this.checkValue3 && !this.checkErrorFlag3) {\n        this.$bus.$emit('getCode-start', 'smsCode');\n        var _info = {\n          mobile: this.checkValue3,\n          operationType: 2,\n          countryCode: this.countryKeyCode\n        };\n        this.$store.dispatch('sendSmsCode', _info);\n      } else {\n        this.checkErrorFlag3 = true;\n        this.errorText3 = this.$t('personal.prompt.errorNewPhone');\n      }\n    },\n    inputChanges: function inputChanges(value, name) {\n      switch (name) {\n        case 'oldSmsCode':\n          {\n            // oldSmsCode\n            this.checkValue2 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag2 = false;\n            } else {\n              this.checkErrorFlag2 = true;\n            }\n\n            break;\n          }\n\n        case 'newPhone':\n          {\n            // newPhone\n            this.checkValue3 = value;\n\n            if (this.phoneFlag(value)) {\n              this.checkErrorFlag3 = false;\n            } else {\n              this.checkErrorFlag3 = true;\n              this.errorText3 = this.$t('personal.prompt.errorPhone');\n            }\n\n            break;\n          }\n\n        case 'smsCode':\n          {\n            // 短信验证码\n            this.checkValue4 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag4 = false;\n            } else {\n              this.checkErrorFlag4 = true;\n            }\n\n            break;\n          }\n\n        default:\n          {\n            // google验证码\n            this.checkValue5 = value;\n\n            if (this.codeFlag(value)) {\n              this.checkErrorFlag5 = false;\n            } else {\n              this.checkErrorFlag5 = true;\n            }\n          }\n      }\n\n      if (this.checkValue4 && this.checkValue2 && this.checkValue3 && !this.checkErrorFlag2 && !this.checkErrorFlag3 && !this.checkErrorFlag4 && !this.checkErrorFlag5) {\n        if (this.googleCode) {\n          this.disabled = !this.checkValue5;\n        } else {\n          this.disabled = false;\n        }\n      } else {\n        this.disabled = true;\n      }\n    },\n    btnLink: function btnLink() {\n      this.loading = true;\n      var info = {\n        smsAuthCode: this.checkValue4,\n        countryCode: this.countryKeyCode,\n        mobileNumber: this.checkValue3,\n        googleCode: this.checkValue5,\n        authenticationCode: this.checkValue2\n      };\n      this.$store.dispatch('mobileUpdate', info);\n    }\n  }\n};",{"version":3,"sources":["/Users/h/Downloads/blockchain-ui-privatization/PC/common-mixin/personal/ChangePhone/ChangePhone.js"],"names":["countryMinix","name","mixins","watch","userInfo","userinfo","googleCode","Number","googleStatus","smsCode","isOpenMobileCheck","checkValue1","mobileNumber","mobileUpdate","loading","text","$bus","$emit","msg","type","$store","dispatch","$router","push","code","sendSmsCode","computed","state","baseData","personal","data","promptText","$t","errorText","checkValue2","checkValue3","checkValue4","checkValue5","promptText1","promptText2","promptText3","promptText4","promptText5","errorText1","errorText2","errorText3","errorText4","errorText5","checkErrorFlag1","checkErrorFlag2","checkErrorFlag3","checkErrorFlag4","checkErrorFlag5","disabled","oldNew","countryErrorFlag","methods","init","phoneFlag","val","regExp","phone","test","codeFlag","verification","getCodeClick","info","operationType","mobile","countryCode","countryKeyCode","inputChanges","value","btnLink","smsAuthCode","authenticationCode"],"mappings":";AAAA;AACA,OAAOA,YAAP;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,gBADO;AAEbC,EAAAA,MAAM,EAAE,CAACF,YAAD,CAFK;AAGbG,EAAAA,KAAK,EAAE;AACLC,IAAAA,QADK,oBACIC,QADJ,EACc;AACjB,WAAKC,UAAL,GAAkB,CAAC,CAACC,MAAM,CAACF,QAAQ,CAACG,YAAV,CAA1B;AACA,WAAKC,OAAL,GAAe,CAAC,CAACF,MAAM,CAACF,QAAQ,CAACK,iBAAV,CAAvB;AACA,WAAKC,WAAL,GAAmB,KAAKP,QAAL,CAAcQ,YAAjC;AACD,KALI;AAMLC,IAAAA,YANK,wBAMQA,aANR,EAMsB;AACzB,UAAIA,aAAY,KAAK,IAArB,EAA2B;AACzB,aAAKC,OAAL,GAAe,KAAf;;AACA,YAAID,aAAY,CAACE,IAAb,KAAsB,SAA1B,EAAqC;AACnC,eAAKC,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEF,YAAAA,IAAI,EAAEF,aAAY,CAACK,GAArB;AAA0BC,YAAAA,IAAI,EAAE;AAAhC,WAAvB;AACA,eAAKC,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACA,eAAKC,OAAL,CAAaC,IAAb,CAAkB,0BAAlB;AACD,SAJD,MAIO;AACL,eAAKP,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEF,YAAAA,IAAI,EAAEF,aAAY,CAACK,GAArB;AAA0BC,YAAAA,IAAI,EAAE;AAAhC,WAAvB;AACA,eAAKC,MAAL,CAAYC,QAAZ,CAAqB,WAArB;;AACA,cAAIR,aAAY,CAACW,IAAb,KAAsB,OAA1B,EAAmC;AACjC,iBAAKR,IAAL,CAAUC,KAAV,CAAgB,eAAhB,EAAiC,SAAjC;AACD;AACF;AACF;AACF,KArBI;AAsBLQ,IAAAA,WAtBK,uBAsBOA,YAtBP,EAsBoB;AACvB,UAAIA,YAAW,KAAK,IAApB,EAA0B;AACxB,YAAIA,YAAW,CAACV,IAAZ,KAAqB,SAAzB,EAAoC;AAClC,eAAKC,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEF,YAAAA,IAAI,EAAEU,YAAW,CAACP,GAApB;AAAyBC,YAAAA,IAAI,EAAE;AAA/B,WAAvB;AACA,eAAKC,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD,SAHD,MAGO;AACL,eAAKL,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB;AAAEF,YAAAA,IAAI,EAAEU,YAAW,CAACP,GAApB;AAAyBC,YAAAA,IAAI,EAAE;AAA/B,WAAvB;AACA,eAAKC,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;AACF;AACF;AAhCI,GAHM;AAqCbK,EAAAA,QAAQ,EAAE;AACRtB,IAAAA,QADQ,sBACG;AACT,aAAO,KAAKgB,MAAL,CAAYO,KAAZ,CAAkBC,QAAlB,CAA2BxB,QAAlC;AACD,KAHO;AAIRqB,IAAAA,WAJQ,yBAIM;AACZ,aAAO,KAAKL,MAAL,CAAYO,KAAZ,CAAkBE,QAAlB,CAA2BJ,WAAlC;AACD,KANO;AAORZ,IAAAA,YAPQ,0BAOO;AACb,aAAO,KAAKO,MAAL,CAAYO,KAAZ,CAAkBE,QAAlB,CAA2BhB,YAAlC;AACD;AATO,GArCG;AAgDbiB,EAAAA,IAhDa,kBAgDN;AACL,WAAO;AACLC,MAAAA,UAAU,EAAE,KAAKC,EAAL,CAAQ,2BAAR,CADP;AAELC,MAAAA,SAAS,EAAE,KAAKD,EAAL,CAAQ,0BAAR,CAFN;AAGLlB,MAAAA,OAAO,EAAE,KAHJ;AAILH,MAAAA,WAAW,EAAE,EAJR;AAKLuB,MAAAA,WAAW,EAAE,EALR;AAMLC,MAAAA,WAAW,EAAE,EANR;AAOLC,MAAAA,WAAW,EAAE,EAPR;AAQLC,MAAAA,WAAW,EAAE,EARR;AASLC,MAAAA,WAAW,EAAE,KAAKN,EAAL,CAAQ,yBAAR,CATR;AAULO,MAAAA,WAAW,EAAE,KAAKP,EAAL,CAAQ,4BAAR,CAVR;AAWLQ,MAAAA,WAAW,EAAE,KAAKR,EAAL,CAAQ,yBAAR,CAXR;AAYLS,MAAAA,WAAW,EAAE,KAAKT,EAAL,CAAQ,4BAAR,CAZR;AAaLU,MAAAA,WAAW,EAAE,KAAKV,EAAL,CAAQ,+BAAR,CAbR;AAcLW,MAAAA,UAAU,EAAE,EAdP;AAeLC,MAAAA,UAAU,EAAE,KAAKZ,EAAL,CAAQ,2BAAR,CAfP;AAgBLa,MAAAA,UAAU,EAAE,KAAKb,EAAL,CAAQ,4BAAR,CAhBP;AAiBLc,MAAAA,UAAU,EAAE,KAAKd,EAAL,CAAQ,2BAAR,CAjBP;AAkBLe,MAAAA,UAAU,EAAE,KAAKf,EAAL,CAAQ,2BAAR,CAlBP;AAmBLgB,MAAAA,eAAe,EAAE,KAnBZ;AAoBLC,MAAAA,eAAe,EAAE,KApBZ;AAqBLC,MAAAA,eAAe,EAAE,KArBZ;AAsBLC,MAAAA,eAAe,EAAE,KAtBZ;AAuBLC,MAAAA,eAAe,EAAE,KAvBZ;AAwBLC,MAAAA,QAAQ,EAAE,IAxBL;AAyBLC,MAAAA,MAAM,EAAE,KAzBH;AA0BL7C,MAAAA,OAAO,EAAE,KA1BJ;AA2BLH,MAAAA,UAAU,EAAE,KA3BP;AA4BLiD,MAAAA,gBAAgB,EAAE;AA5Bb,KAAP;AA8BD,GA/EY;AAgFbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IADO,kBACA;AACL,UAAI,KAAKrD,QAAT,EAAmB;AACjB,aAAKE,UAAL,GAAkB,CAAC,CAACC,MAAM,CAAC,KAAKH,QAAL,CAAcI,YAAf,CAA1B;AACA,aAAKC,OAAL,GAAe,CAAC,CAACF,MAAM,CAAC,KAAKH,QAAL,CAAcM,iBAAf,CAAvB;AACA,aAAKC,WAAL,GAAmB,KAAKP,QAAL,CAAcQ,YAAjC;AACD;AACF,KAPM;AAQP;AACA8C,IAAAA,SATO,qBASGC,GATH,EASQ;AACb,aAAO,KAAKvC,MAAL,CAAYO,KAAZ,CAAkBiC,MAAlB,CAAyBC,KAAzB,CAA+BC,IAA/B,CAAoCH,GAApC,CAAP;AACD,KAXM;AAYPI,IAAAA,QAZO,oBAYEJ,GAZF,EAYO;AACZ,aAAO,KAAKvC,MAAL,CAAYO,KAAZ,CAAkBiC,MAAlB,CAAyBI,YAAzB,CAAsCF,IAAtC,CAA2CH,GAA3C,CAAP;AACD,KAdM;AAePM,IAAAA,YAfO,wBAeMhE,IAfN,EAeY;AACjB,UAAIA,IAAI,KAAK,YAAb,EAA2B;AACzB,aAAKe,IAAL,CAAUC,KAAV,CAAgB,eAAhB,EAAiC,YAAjC;AACA,YAAMiD,IAAI,GAAG;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAAb;AACA,aAAK/C,MAAL,CAAYC,QAAZ,CAAqB,aAArB,EAAoC6C,IAApC;AACD,OAJD,MAIO,IAAI,KAAK/B,WAAL,IAAoB,CAAC,KAAKe,eAA9B,EAA+C;AACpD,aAAKlC,IAAL,CAAUC,KAAV,CAAgB,eAAhB,EAAiC,SAAjC;AACA,YAAMiD,KAAI,GAAG;AACXE,UAAAA,MAAM,EAAE,KAAKjC,WADF;AAEXgC,UAAAA,aAAa,EAAE,CAFJ;AAGXE,UAAAA,WAAW,EAAE,KAAKC;AAHP,SAAb;AAKA,aAAKlD,MAAL,CAAYC,QAAZ,CAAqB,aAArB,EAAoC6C,KAApC;AACD,OARM,MAQA;AACL,aAAKhB,eAAL,GAAuB,IAAvB;AACA,aAAKL,UAAL,GAAkB,KAAKb,EAAL,CAAQ,+BAAR,CAAlB;AACD;AACF,KAhCM;AAiCPuC,IAAAA,YAjCO,wBAiCMC,KAjCN,EAiCavE,IAjCb,EAiCmB;AACxB,cAAQA,IAAR;AACE,aAAK,YAAL;AAAmB;AAAE;AACnB,iBAAKiC,WAAL,GAAmBsC,KAAnB;;AACA,gBAAI,KAAKT,QAAL,CAAcS,KAAd,CAAJ,EAA0B;AACxB,mBAAKvB,eAAL,GAAuB,KAAvB;AACD,aAFD,MAEO;AACL,mBAAKA,eAAL,GAAuB,IAAvB;AACD;;AACD;AACD;;AACD,aAAK,UAAL;AAAiB;AAAE;AACjB,iBAAKd,WAAL,GAAmBqC,KAAnB;;AACA,gBAAI,KAAKd,SAAL,CAAec,KAAf,CAAJ,EAA2B;AACzB,mBAAKtB,eAAL,GAAuB,KAAvB;AACD,aAFD,MAEO;AACL,mBAAKA,eAAL,GAAuB,IAAvB;AACA,mBAAKL,UAAL,GAAkB,KAAKb,EAAL,CAAQ,4BAAR,CAAlB;AACD;;AACD;AACD;;AACD,aAAK,SAAL;AAAgB;AAAE;AAChB,iBAAKI,WAAL,GAAmBoC,KAAnB;;AACA,gBAAI,KAAKT,QAAL,CAAcS,KAAd,CAAJ,EAA0B;AACxB,mBAAKrB,eAAL,GAAuB,KAAvB;AACD,aAFD,MAEO;AACL,mBAAKA,eAAL,GAAuB,IAAvB;AACD;;AACD;AACD;;AACD;AAAS;AAAE;AACT,iBAAKd,WAAL,GAAmBmC,KAAnB;;AACA,gBAAI,KAAKT,QAAL,CAAcS,KAAd,CAAJ,EAA0B;AACxB,mBAAKpB,eAAL,GAAuB,KAAvB;AACD,aAFD,MAEO;AACL,mBAAKA,eAAL,GAAuB,IAAvB;AACD;AACF;AApCH;;AAsCA,UAAI,KAAKhB,WAAL,IAAoB,KAAKF,WAAzB,IAAwC,KAAKC,WAA7C,IACC,CAAC,KAAKc,eADP,IAC0B,CAAC,KAAKC,eADhC,IACmD,CAAC,KAAKC,eADzD,IAEC,CAAC,KAAKC,eAFX,EAE4B;AAC1B,YAAI,KAAK9C,UAAT,EAAqB;AACnB,eAAK+C,QAAL,GAAgB,CAAC,KAAKhB,WAAtB;AACD,SAFD,MAEO;AACL,eAAKgB,QAAL,GAAgB,KAAhB;AACD;AACF,OARD,MAQO;AACL,aAAKA,QAAL,GAAgB,IAAhB;AACD;AACF,KAnFM;AAoFPoB,IAAAA,OApFO,qBAoFG;AACR,WAAK3D,OAAL,GAAe,IAAf;AACA,UAAMoD,IAAI,GAAG;AACXQ,QAAAA,WAAW,EAAE,KAAKtC,WADP;AAEXiC,QAAAA,WAAW,EAAE,KAAKC,cAFP;AAGX1D,QAAAA,YAAY,EAAE,KAAKuB,WAHR;AAIX7B,QAAAA,UAAU,EAAE,KAAK+B,WAJN;AAKXsC,QAAAA,kBAAkB,EAAE,KAAKzC;AALd,OAAb;AAOA,WAAKd,MAAL,CAAYC,QAAZ,CAAqB,cAArB,EAAqC6C,IAArC;AACD;AA9FM;AAhFI,CAAf","sourcesContent":["// @ is an alias to /src\r\nimport countryMinix from '../../countryList/countryList';\r\n\r\nexport default {\r\n  name: 'changePassword',\r\n  mixins: [countryMinix],\r\n  watch: {\r\n    userInfo(userinfo) {\r\n      this.googleCode = !!Number(userinfo.googleStatus);\r\n      this.smsCode = !!Number(userinfo.isOpenMobileCheck);\r\n      this.checkValue1 = this.userInfo.mobileNumber;\r\n    },\r\n    mobileUpdate(mobileUpdate) {\r\n      if (mobileUpdate !== null) {\r\n        this.loading = false;\r\n        if (mobileUpdate.text === 'success') {\r\n          this.$bus.$emit('tip', { text: mobileUpdate.msg, type: 'success' });\r\n          this.$store.dispatch('resetType');\r\n          this.$router.push('/personal/userManagement');\r\n        } else {\r\n          this.$bus.$emit('tip', { text: mobileUpdate.msg, type: 'error' });\r\n          this.$store.dispatch('resetType');\r\n          if (mobileUpdate.code !== '10009') {\r\n            this.$bus.$emit('getCode-clear', 'smsCode');\r\n          }\r\n        }\r\n      }\r\n    },\r\n    sendSmsCode(sendSmsCode) {\r\n      if (sendSmsCode !== null) {\r\n        if (sendSmsCode.text === 'success') {\r\n          this.$bus.$emit('tip', { text: sendSmsCode.msg, type: 'success' });\r\n          this.$store.dispatch('resetType');\r\n        } else {\r\n          this.$bus.$emit('tip', { text: sendSmsCode.msg, type: 'error' });\r\n          this.$store.dispatch('resetType');\r\n        }\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    userInfo() {\r\n      return this.$store.state.baseData.userInfo;\r\n    },\r\n    sendSmsCode() {\r\n      return this.$store.state.personal.sendSmsCode;\r\n    },\r\n    mobileUpdate() {\r\n      return this.$store.state.personal.mobileUpdate;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      promptText: this.$t('personal.label.promptText'),\r\n      errorText: this.$t('personal.label.errorText'),\r\n      loading: false,\r\n      checkValue1: '',\r\n      checkValue2: '',\r\n      checkValue3: '',\r\n      checkValue4: '',\r\n      checkValue5: '',\r\n      promptText1: this.$t('personal.label.oldPhone'),\r\n      promptText2: this.$t('personal.label.smsCodeText'),\r\n      promptText3: this.$t('personal.label.newPhone'),\r\n      promptText4: this.$t('personal.label.smsCodeText'),\r\n      promptText5: this.$t('personal.label.googleCodeText'),\r\n      errorText1: '',\r\n      errorText2: this.$t('personal.prompt.errorCode'),\r\n      errorText3: this.$t('personal.prompt.errorPhone'),\r\n      errorText4: this.$t('personal.prompt.errorCode'),\r\n      errorText5: this.$t('personal.prompt.errorCode'),\r\n      checkErrorFlag1: false,\r\n      checkErrorFlag2: false,\r\n      checkErrorFlag3: false,\r\n      checkErrorFlag4: false,\r\n      checkErrorFlag5: false,\r\n      disabled: true,\r\n      oldNew: false,\r\n      smsCode: false,\r\n      googleCode: false,\r\n      countryErrorFlag: false,\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      if (this.userInfo) {\r\n        this.googleCode = !!Number(this.userInfo.googleStatus);\r\n        this.smsCode = !!Number(this.userInfo.isOpenMobileCheck);\r\n        this.checkValue1 = this.userInfo.mobileNumber;\r\n      }\r\n    },\r\n    // 手机正则\r\n    phoneFlag(val) {\r\n      return this.$store.state.regExp.phone.test(val);\r\n    },\r\n    codeFlag(val) {\r\n      return this.$store.state.regExp.verification.test(val);\r\n    },\r\n    getCodeClick(name) {\r\n      if (name === 'oldSmsCode') {\r\n        this.$bus.$emit('getCode-start', 'oldSmsCode');\r\n        const info = { operationType: 3 };\r\n        this.$store.dispatch('sendSmsCode', info);\r\n      } else if (this.checkValue3 && !this.checkErrorFlag3) {\r\n        this.$bus.$emit('getCode-start', 'smsCode');\r\n        const info = {\r\n          mobile: this.checkValue3,\r\n          operationType: 2,\r\n          countryCode: this.countryKeyCode,\r\n        };\r\n        this.$store.dispatch('sendSmsCode', info);\r\n      } else {\r\n        this.checkErrorFlag3 = true;\r\n        this.errorText3 = this.$t('personal.prompt.errorNewPhone');\r\n      }\r\n    },\r\n    inputChanges(value, name) {\r\n      switch (name) {\r\n        case 'oldSmsCode': { // oldSmsCode\r\n          this.checkValue2 = value;\r\n          if (this.codeFlag(value)) {\r\n            this.checkErrorFlag2 = false;\r\n          } else {\r\n            this.checkErrorFlag2 = true;\r\n          }\r\n          break;\r\n        }\r\n        case 'newPhone': { // newPhone\r\n          this.checkValue3 = value;\r\n          if (this.phoneFlag(value)) {\r\n            this.checkErrorFlag3 = false;\r\n          } else {\r\n            this.checkErrorFlag3 = true;\r\n            this.errorText3 = this.$t('personal.prompt.errorPhone');\r\n          }\r\n          break;\r\n        }\r\n        case 'smsCode': { // 短信验证码\r\n          this.checkValue4 = value;\r\n          if (this.codeFlag(value)) {\r\n            this.checkErrorFlag4 = false;\r\n          } else {\r\n            this.checkErrorFlag4 = true;\r\n          }\r\n          break;\r\n        }\r\n        default: { // google验证码\r\n          this.checkValue5 = value;\r\n          if (this.codeFlag(value)) {\r\n            this.checkErrorFlag5 = false;\r\n          } else {\r\n            this.checkErrorFlag5 = true;\r\n          }\r\n        }\r\n      }\r\n      if (this.checkValue4 && this.checkValue2 && this.checkValue3\r\n        && !this.checkErrorFlag2 && !this.checkErrorFlag3 && !this.checkErrorFlag4\r\n        && !this.checkErrorFlag5) {\r\n        if (this.googleCode) {\r\n          this.disabled = !this.checkValue5;\r\n        } else {\r\n          this.disabled = false;\r\n        }\r\n      } else {\r\n        this.disabled = true;\r\n      }\r\n    },\r\n    btnLink() {\r\n      this.loading = true;\r\n      const info = {\r\n        smsAuthCode: this.checkValue4,\r\n        countryCode: this.countryKeyCode,\r\n        mobileNumber: this.checkValue3,\r\n        googleCode: this.checkValue5,\r\n        authenticationCode: this.checkValue2,\r\n      };\r\n      this.$store.dispatch('mobileUpdate', info);\r\n    },\r\n  },\r\n};\r\n"]}]}