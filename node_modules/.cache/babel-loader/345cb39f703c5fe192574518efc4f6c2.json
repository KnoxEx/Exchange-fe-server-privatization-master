{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/resetPass/resetPass.js","dependencies":[{"path":"/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/resetPass/resetPass.js","mtime":1623835967000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { imgMap, colorMap } from '@/utils'; // 获取验证码\n\nexport default {\n  name: 'page-resetPass',\n  data: function data() {\n    return {\n      imgMap: imgMap,\n      colorMap: colorMap,\n      nowType: 'phone',\n      // phone--手机注册  email--邮箱注册\n      nowStep: '1',\n      // 当前步骤\n      // 内容部分\n      userValue: '',\n      // userValue\n      checkValue: '',\n      // 验证码value\n      passValue: '',\n      // 密码Value\n      comfirmValue: '',\n      // 确认密码value\n      submitLoading: false,\n      submitDisabled: false,\n      verifyObj: {},\n      // 滑动返回对象\n      verifyFlag: false,\n      // 滑动是否通过\n      haveGoogle: false,\n      // 是否开启谷歌\n      haveID: false,\n      // 是否开启身份证\n      googleValue: '',\n      // 谷歌\n      IDValue: '' // 身份证\n\n    };\n  },\n  watch: {\n    loginRegistType: function loginRegistType(v) {\n      if (v) {\n        this.initNowType();\n      }\n    },\n    loginFlag: function loginFlag(v) {\n      if (v) {\n        this.goHome();\n      }\n    }\n  },\n  computed: {\n    isInternationTem: function isInternationTem() {\n      return this.$store.state.baseData.templateLayoutType === '2';\n    },\n    // 是否展示tab切换\n    tabFlag: function tabFlag() {\n      var flag = false;\n\n      if (this.loginRegistType === '1') {\n        flag = true;\n      }\n\n      return flag;\n    },\n    // 开启验证方式\n    loginRegistType: function loginRegistType() {\n      // const { publicInfo } = this.$store.state.baseData;\n      var str = '1'; // 1 手机/邮箱， 2 仅手机， 3 仅邮箱\n      // if (publicInfo && publicInfo.switch && publicInfo.switch.login_regist_type) {\n      //   str = publicInfo.switch.login_regist_type.toString();\n      // }\n\n      return str;\n    },\n    tabList: function tabList() {\n      return [// 手机号找回\n      {\n        name: this.$t('resetPass.phoneReset'),\n        key: 'phone'\n      }, // 邮箱找回\n      {\n        name: this.$t('resetPass.emailReset'),\n        key: 'email'\n      }];\n    },\n    loginFlag: function loginFlag() {\n      var _this$$store$state$ba = this.$store.state.baseData,\n          isLogin = _this$$store$state$ba.isLogin,\n          userInfoIsReady = _this$$store$state$ba.userInfoIsReady;\n\n      if (isLogin && userInfoIsReady) {\n        return true;\n      }\n\n      return false;\n    },\n    maxLength: function maxLength() {\n      var maxLength = '100';\n\n      if (this.nowType === 'phone') {\n        maxLength = '30';\n      }\n\n      return maxLength;\n    },\n    regExps: function regExps() {\n      return this.$store.state.regExp;\n    },\n    // userValue 是否复合正则验证\n    userFlag: function userFlag() {\n      var reg = this.nowType === 'phone' ? this.regExps.phone : this.regExps.email;\n      return reg.test(this.userValue);\n    },\n    // checkValue 是否复合正则验证\n    checkFlag: function checkFlag() {\n      return this.regExps.verification.test(this.checkValue);\n    },\n    // google 是否复合正则验证\n    googleFlag: function googleFlag() {\n      return this.regExps.verification.test(this.googleValue);\n    },\n    // 身份证号 是否复合正则验证\n    IDFlag: function IDFlag() {\n      return this.regExps.nonEmpty.test(this.IDValue);\n    },\n    // passValue 是否复合正则验证\n    passFlag: function passFlag() {\n      return this.regExps.passWord.test(this.passValue);\n    },\n    // comfirmValue 是否两次密码输入一致\n    comfirmFlag: function comfirmFlag() {\n      return this.passValue === this.comfirmValue;\n    },\n    // user框是否为错误状态\n    userErrorFlag: function userErrorFlag() {\n      if (this.userValue.length !== 0 && !this.userFlag) return true;\n      return false;\n    },\n    // 验证框是否为错误\n    checkErrorFlag: function checkErrorFlag() {\n      if (this.checkValue.length !== 0 && !this.checkFlag) return true;\n      return false;\n    },\n    googleErrorFlag: function googleErrorFlag() {\n      if (this.googleValue.length !== 0 && !this.googleFlag) return true;\n      return false;\n    },\n    IDErrorFlag: function IDErrorFlag() {\n      if (this.IDValue.length !== 0 && !this.IDFlag) return true;\n      return false;\n    },\n    // pass框是否为错误状态\n    passErrorFlag: function passErrorFlag() {\n      if (this.passValue.length !== 0 && !this.passFlag) return true;\n      return false;\n    },\n    // comfirm框是否为错误状态\n    comfirmErrorFlag: function comfirmErrorFlag() {\n      if (this.comfirmValue.length !== 0 && !this.comfirmFlag) return true;\n      return false;\n    },\n    domKeys: function domKeys() {\n      if (this.nowType === 'phone') {\n        return {\n          userKey: 'phone-user',\n          verifyKey: 'phone-verify',\n          checkKey: 'phone-check',\n          passKey: 'phone-pass',\n          comfirmKey: 'phone-comfirm',\n          googleKey: 'phone-google',\n          IDKey: 'phone-ID'\n        };\n      }\n\n      return {\n        userKey: 'email-user',\n        verifyKey: 'email-verify',\n        checkKey: 'email-check',\n        passKey: 'email-pass',\n        comfirmKey: 'email-comfirm',\n        googleKey: 'email-google',\n        IDKey: 'email-ID'\n      };\n    },\n    domTexts: function domTexts() {\n      if (this.nowType === 'phone') {\n        return {\n          userText: this.$t('resetPass.phone'),\n          // 手机号\n          userError: this.$t('resetPass.phoneError'),\n          // 手机号输入格式不正确\n          codeText: this.$t('resetPass.phoneCode'),\n          // 短信验证码\n          codeError: this.$t('resetPass.phoneCodeError') // 请输入6位数字短信验证码\n\n        };\n      }\n\n      return {\n        userText: this.$t('resetPass.email'),\n        // 邮箱\n        userError: this.$t('resetPass.emailError'),\n        // 邮箱输入格式不正确\n        codeText: this.$t('resetPass.emailCode'),\n        // 邮箱验证码\n        codeError: this.$t('resetPass.emailCodeError') // 请输入6位数字邮箱验证码\n\n      };\n    },\n    submitStatus: function submitStatus() {\n      // 当前步骤为步骤一时\n      var disabled = true;\n      var text = '';\n\n      if (this.nowStep === '1') {\n        if (this.verifyFlag && this.userFlag || this.submitLoading) {\n          disabled = false;\n        }\n\n        text = this.$t('resetPass.next'); // 第二步\n      } else if (this.nowStep === '2') {\n        var IDF = true;\n        var googleF = true;\n\n        if (this.haveID) {\n          IDF = this.IDFlag;\n        }\n\n        if (this.haveGoogle) {\n          googleF = this.googleFlag;\n        }\n\n        if (this.checkFlag && googleF && IDF || this.submitLoading) {\n          disabled = false;\n        }\n\n        text = this.$t('resetPass.next'); // 第三步\n      } else if (this.nowStep === '3') {\n        if (this.passFlag && this.comfirmFlag || this.submitLoading) {\n          disabled = false;\n        }\n\n        text = this.$t('resetPass.submit');\n      }\n\n      return {\n        text: text,\n        disabled: disabled // 是否禁用\n\n      };\n    },\n    publicInfo: function publicInfo() {\n      var publicInfo = this.$store.state.baseData.publicInfo;\n      return publicInfo;\n    },\n    companyName: function companyName() {\n      if (this.publicInfo && this.publicInfo.msg) {\n        return this.publicInfo.msg.company_name;\n      }\n\n      return '';\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      if (this.loginFlag) {\n        this.goHome();\n      }\n\n      this.$bus.$off('emailCode');\n      this.$bus.$on('emailCode', function (data) {\n        var newData = JSON.parse(JSON.stringify(data));\n        newData.callback = undefined;\n\n        _this.axios({\n          url: 'v4/common/emailValidCode',\n          method: 'post',\n          header: {},\n          params: newData\n        }).then(function (info) {\n          data.callback(info);\n        }).catch(function () {});\n      });\n      this.$bus.$off('phoneCode');\n      this.$bus.$on('phoneCode', function (data) {\n        var newData = JSON.parse(JSON.stringify(data));\n        newData.callback = undefined;\n\n        _this.axios({\n          url: 'v4/common/smsValidCode',\n          method: 'post',\n          header: {},\n          params: newData\n        }).then(function (info) {\n          data.callback(info);\n        }).catch(function () {// console.log(info);\n        });\n      });\n\n      if (this.loginRegistType) {\n        this.initNowType();\n      }\n    },\n    goUrl: function goUrl(url) {\n      this.$router.push(url);\n    },\n    initNowType: function initNowType() {\n      if (this.loginRegistType === '3') {\n        this.nowType = 'email';\n      } else {\n        this.nowType = 'phone';\n      }\n    },\n    goHome: function goHome() {\n      this.$router.push('/');\n    },\n    // 切换找回类型\n    setNowType: function setNowType(type) {\n      this.nowStep = '1'; // 步骤返回到第一步\n\n      this.nowType = type; // 切换tab\n\n      this.userValue = ''; // 清空userValue\n\n      this.verifyFlag = false; // 滑动验证\n\n      this.verifyObj = {}; // 滑动验证\n\n      this.checkValue = ''; // 短信/邮箱验证\n    },\n    // input onchanges事件\n    inputChanges: function inputChanges(value, name) {\n      this[name] = value;\n    },\n    // 滑动验证成功后\n    verifyCallBack: function verifyCallBack(parameter) {\n      this.verifyObj = parameter;\n      this.verifyFlag = true;\n    },\n    // 获取验证码\n    getCodeClick: function getCodeClick() {\n      this.sendCode();\n    },\n    submit: function submit() {\n      if (this.nowStep === '1') {\n        this.submitStep1();\n      } else if (this.nowStep === '2') {\n        this.submitStep2();\n      } else if (this.nowStep === '3') {\n        this.submitStep3();\n      }\n    },\n    // 第一步提交\n    submitStep1: function submitStep1() {\n      var _this2 = this;\n\n      var key = this.nowType === 'phone' ? 'mobileNumber' : 'email';\n      this.submitLoading = true;\n      this.axios({\n        url: 'v4/user/reset_password_step_one',\n        params: _objectSpread(_objectSpread({}, this.verifyObj), {}, _defineProperty({\n          nc: undefined\n        }, key, this.userValue))\n      }).then(function (data) {\n        if (_this2.verifyObj.nc) {\n          _this2.verifyObj.nc.reset();\n        }\n\n        _this2.verifyFlag = false;\n        _this2.verifyObj = {};\n        _this2.submitLoading = false;\n\n        if (data.code.toString() === '0') {\n          var _data$data = data.data,\n              token = _data$data.token,\n              isCertificateNumber = _data$data.isCertificateNumber,\n              isGoogleAuth = _data$data.isGoogleAuth;\n          _this2.token = token;\n\n          if (isCertificateNumber && isCertificateNumber.toString() === '1') {\n            _this2.haveID = true; // 是否开启谷歌身份证\n          }\n\n          if (isGoogleAuth && isGoogleAuth.toString() === '1') {\n            _this2.haveGoogle = true; // 是否开启谷歌\n          }\n\n          _this2.nowStep = '2';\n        } else {\n          _this2.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 第二步提交\n    submitStep2: function submitStep2() {\n      var _params,\n          _this3 = this;\n\n      var key = this.nowType === 'phone' ? 'smsCode' : 'emailCode';\n      this.submitLoading = true;\n      this.axios({\n        url: 'v4/user/reset_password_step_two',\n        params: (_params = {}, _defineProperty(_params, key, this.checkValue), _defineProperty(_params, \"token\", this.token), _defineProperty(_params, \"googleCode\", this.googleValue), _defineProperty(_params, \"certifcateNumber\", this.IDValue), _params)\n      }).then(function (data) {\n        _this3.submitLoading = false;\n\n        if (data.code.toString() === '0') {\n          _this3.nowStep = '3';\n        } else {\n          _this3.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 第三步提交\n    submitStep3: function submitStep3() {\n      var _this4 = this;\n\n      this.submitLoading = true;\n      this.axios({\n        url: '/user/reset_password_step_three',\n        params: {\n          loginPword: this.passValue,\n          // 密码\n          token: this.token // token\n\n        }\n      }).then(function (data) {\n        _this4.submitLoading = false;\n\n        if (data.code.toString() === '0') {\n          // 重置密码成功，请您登录\n          _this4.$bus.$emit('tip', {\n            text: _this4.$t('resetPass.resetSuccess'),\n            type: 'success'\n          });\n\n          _this4.$router.push('/login');\n        } else {\n          _this4.$bus.$emit('tip', {\n            text: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 发送短信/邮箱\n    sendCode: function sendCode() {\n      var _this5 = this;\n\n      if (this.nowType === 'phone') {\n        this.$bus.$emit('phoneCode', {\n          token: this.token,\n          // token\n          operationType: '24',\n          // 模版\n          callback: function callback(data) {\n            if (data.code.toString() !== '0') {\n              // 倒计时重置\n              _this5.$bus.$emit('getCode-clear', 'resetPassGetcode'); // tip框提示错误\n\n\n              _this5.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'error'\n              });\n            } else {\n              // 短信已发送，请注意查收\n              _this5.$bus.$emit('tip', {\n                text: _this5.$t('resetPass.phoneSendSuccess'),\n                type: 'success'\n              });\n            }\n          }\n        });\n      } else if (this.nowType === 'email') {\n        this.$bus.$emit('emailCode', {\n          token: this.token,\n          // token\n          operationType: '3',\n          callback: function callback(data) {\n            if (data.code.toString() !== '0') {\n              // 倒计时重置\n              _this5.$bus.$emit('getCode-clear', 'resetPassGetcode'); // tip框提示错误\n\n\n              _this5.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'error'\n              });\n            } else {\n              // 邮件已发送，请注意查收\n              _this5.$bus.$emit('tip', {\n                text: _this5.$t('resetPass.emailSendSuccess'),\n                type: 'success'\n              });\n            }\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["/Users/h/partTimeJob/BlockChain-ui/PC/common-mixin/resetPass/resetPass.js"],"names":["imgMap","colorMap","name","data","nowType","nowStep","userValue","checkValue","passValue","comfirmValue","submitLoading","submitDisabled","verifyObj","verifyFlag","haveGoogle","haveID","googleValue","IDValue","watch","loginRegistType","v","initNowType","loginFlag","goHome","computed","isInternationTem","$store","state","baseData","templateLayoutType","tabFlag","flag","str","tabList","$t","key","isLogin","userInfoIsReady","maxLength","regExps","regExp","userFlag","reg","phone","email","test","checkFlag","verification","googleFlag","IDFlag","nonEmpty","passFlag","passWord","comfirmFlag","userErrorFlag","length","checkErrorFlag","googleErrorFlag","IDErrorFlag","passErrorFlag","comfirmErrorFlag","domKeys","userKey","verifyKey","checkKey","passKey","comfirmKey","googleKey","IDKey","domTexts","userText","userError","codeText","codeError","submitStatus","disabled","text","IDF","googleF","publicInfo","companyName","msg","company_name","methods","init","$bus","$off","$on","newData","JSON","parse","stringify","callback","undefined","axios","url","method","header","params","then","info","catch","goUrl","$router","push","setNowType","type","inputChanges","value","verifyCallBack","parameter","getCodeClick","sendCode","submit","submitStep1","submitStep2","submitStep3","nc","reset","code","toString","token","isCertificateNumber","isGoogleAuth","$emit","loginPword","operationType"],"mappings":"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","sourcesContent":["import { imgMap, colorMap } from '@/utils';\n// 获取验证码\nexport default {\n  name: 'page-resetPass',\n  data() {\n    return {\n      imgMap,\n      colorMap,\n      nowType: 'phone', // phone--手机注册  email--邮箱注册\n      nowStep: '1', // 当前步骤\n      // 内容部分\n      userValue: '', // userValue\n      checkValue: '', // 验证码value\n      passValue: '', // 密码Value\n      comfirmValue: '', // 确认密码value\n      submitLoading: false,\n      submitDisabled: false,\n      verifyObj: {}, // 滑动返回对象\n      verifyFlag: false, // 滑动是否通过\n      haveGoogle: false, // 是否开启谷歌\n      haveID: false, // 是否开启身份证\n      googleValue: '', // 谷歌\n      IDValue: '', // 身份证\n    };\n  },\n  watch: {\n    loginRegistType(v) {\n      if (v) { this.initNowType(); }\n    },\n    loginFlag(v) { if (v) { this.goHome(); } },\n  },\n  computed: {\n    isInternationTem() {\n      return this.$store.state.baseData.templateLayoutType === '2';\n    },\n    // 是否展示tab切换\n    tabFlag() {\n      let flag = false;\n      if (this.loginRegistType === '1') {\n        flag = true;\n      }\n      return flag;\n    },\n    // 开启验证方式\n    loginRegistType() {\n      // const { publicInfo } = this.$store.state.baseData;\n      const str = '1'; // 1 手机/邮箱， 2 仅手机， 3 仅邮箱\n      // if (publicInfo && publicInfo.switch && publicInfo.switch.login_regist_type) {\n      //   str = publicInfo.switch.login_regist_type.toString();\n      // }\n      return str;\n    },\n    tabList() {\n      return [\n        // 手机号找回\n        { name: this.$t('resetPass.phoneReset'), key: 'phone' },\n        // 邮箱找回\n        { name: this.$t('resetPass.emailReset'), key: 'email' },\n      ];\n    },\n    loginFlag() {\n      const { isLogin, userInfoIsReady } = this.$store.state.baseData;\n      if (isLogin && userInfoIsReady) {\n        return true;\n      }\n      return false;\n    },\n    maxLength() {\n      let maxLength = '100';\n      if (this.nowType === 'phone') {\n        maxLength = '30';\n      }\n      return maxLength;\n    },\n    regExps() { return this.$store.state.regExp; },\n    // userValue 是否复合正则验证\n    userFlag() {\n      const reg = this.nowType === 'phone' ? this.regExps.phone : this.regExps.email;\n      return reg.test(this.userValue);\n    },\n    // checkValue 是否复合正则验证\n    checkFlag() { return this.regExps.verification.test(this.checkValue); },\n    // google 是否复合正则验证\n    googleFlag() { return this.regExps.verification.test(this.googleValue); },\n    // 身份证号 是否复合正则验证\n    IDFlag() { return this.regExps.nonEmpty.test(this.IDValue); },\n    // passValue 是否复合正则验证\n    passFlag() { return this.regExps.passWord.test(this.passValue); },\n    // comfirmValue 是否两次密码输入一致\n    comfirmFlag() { return this.passValue === this.comfirmValue; },\n    // user框是否为错误状态\n    userErrorFlag() {\n      if (this.userValue.length !== 0 && !this.userFlag) return true;\n      return false;\n    },\n    // 验证框是否为错误\n    checkErrorFlag() {\n      if (this.checkValue.length !== 0 && !this.checkFlag) return true;\n      return false;\n    },\n    googleErrorFlag() {\n      if (this.googleValue.length !== 0 && !this.googleFlag) return true;\n      return false;\n    },\n    IDErrorFlag() {\n      if (this.IDValue.length !== 0 && !this.IDFlag) return true;\n      return false;\n    },\n    // pass框是否为错误状态\n    passErrorFlag() {\n      if (this.passValue.length !== 0 && !this.passFlag) return true;\n      return false;\n    },\n    // comfirm框是否为错误状态\n    comfirmErrorFlag() {\n      if (this.comfirmValue.length !== 0 && !this.comfirmFlag) return true;\n      return false;\n    },\n    domKeys() {\n      if (this.nowType === 'phone') {\n        return {\n          userKey: 'phone-user',\n          verifyKey: 'phone-verify',\n          checkKey: 'phone-check',\n          passKey: 'phone-pass',\n          comfirmKey: 'phone-comfirm',\n          googleKey: 'phone-google',\n          IDKey: 'phone-ID',\n        };\n      }\n      return {\n        userKey: 'email-user',\n        verifyKey: 'email-verify',\n        checkKey: 'email-check',\n        passKey: 'email-pass',\n        comfirmKey: 'email-comfirm',\n        googleKey: 'email-google',\n        IDKey: 'email-ID',\n      };\n    },\n    domTexts() {\n      if (this.nowType === 'phone') {\n        return {\n          userText: this.$t('resetPass.phone'), // 手机号\n          userError: this.$t('resetPass.phoneError'), // 手机号输入格式不正确\n          codeText: this.$t('resetPass.phoneCode'), // 短信验证码\n          codeError: this.$t('resetPass.phoneCodeError'), // 请输入6位数字短信验证码\n        };\n      }\n      return {\n        userText: this.$t('resetPass.email'), // 邮箱\n        userError: this.$t('resetPass.emailError'), // 邮箱输入格式不正确\n        codeText: this.$t('resetPass.emailCode'), // 邮箱验证码\n        codeError: this.$t('resetPass.emailCodeError'), // 请输入6位数字邮箱验证码\n      };\n    },\n    submitStatus() {\n      // 当前步骤为步骤一时\n      let disabled = true;\n      let text = '';\n      if (this.nowStep === '1') {\n        if ((this.verifyFlag && this.userFlag) || this.submitLoading) { disabled = false; }\n        text = this.$t('resetPass.next');\n        // 第二步\n      } else if (this.nowStep === '2') {\n        let IDF = true;\n        let googleF = true;\n        if (this.haveID) { IDF = this.IDFlag; }\n        if (this.haveGoogle) { googleF = this.googleFlag; }\n        if ((this.checkFlag\n                    && googleF\n                    && IDF) || this.submitLoading) { disabled = false; }\n        text = this.$t('resetPass.next');\n        // 第三步\n      } else if (this.nowStep === '3') {\n        if ((this.passFlag && this.comfirmFlag) || this.submitLoading) { disabled = false; }\n        text = this.$t('resetPass.submit');\n      }\n      return {\n        text,\n        disabled, // 是否禁用\n      };\n    },\n    publicInfo() {\n      const { publicInfo } = this.$store.state.baseData;\n      return publicInfo;\n    },\n    companyName() {\n      if (this.publicInfo && this.publicInfo.msg) {\n        return this.publicInfo.msg.company_name;\n      }\n      return '';\n    },\n  },\n  methods: {\n    init() {\n      if (this.loginFlag) { this.goHome(); }\n      this.$bus.$off('emailCode');\n      this.$bus.$on('emailCode', (data) => {\n        const newData = JSON.parse(JSON.stringify(data));\n        newData.callback = undefined;\n        this.axios({\n          url: 'v4/common/emailValidCode',\n          method: 'post',\n          header: {},\n          params: newData,\n        }).then((info) => {\n          data.callback(info);\n        }).catch(() => {\n\n        });\n      });\n      this.$bus.$off('phoneCode');\n      this.$bus.$on('phoneCode', (data) => {\n        const newData = JSON.parse(JSON.stringify(data));\n        newData.callback = undefined;\n        this.axios({\n          url: 'v4/common/smsValidCode',\n          method: 'post',\n          header: {},\n          params: newData,\n        }).then((info) => {\n          data.callback(info);\n        }).catch(() => {\n          // console.log(info);\n        });\n      });\n      if (this.loginRegistType) {\n        this.initNowType();\n      }\n    },\n    goUrl(url) { this.$router.push(url); },\n    initNowType() {\n      if (this.loginRegistType === '3') {\n        this.nowType = 'email';\n      } else {\n        this.nowType = 'phone';\n      }\n    },\n    goHome() { this.$router.push('/'); },\n    // 切换找回类型\n    setNowType(type) {\n      this.nowStep = '1'; // 步骤返回到第一步\n      this.nowType = type; // 切换tab\n      this.userValue = ''; // 清空userValue\n      this.verifyFlag = false; // 滑动验证\n      this.verifyObj = {}; // 滑动验证\n      this.checkValue = ''; // 短信/邮箱验证\n    },\n    // input onchanges事件\n    inputChanges(value, name) {\n      this[name] = value;\n    },\n    // 滑动验证成功后\n    verifyCallBack(parameter) {\n      this.verifyObj = parameter;\n      this.verifyFlag = true;\n    },\n    // 获取验证码\n    getCodeClick() {\n      this.sendCode();\n    },\n    submit() {\n      if (this.nowStep === '1') {\n        this.submitStep1();\n      } else if (this.nowStep === '2') {\n        this.submitStep2();\n      } else if (this.nowStep === '3') {\n        this.submitStep3();\n      }\n    },\n    // 第一步提交\n    submitStep1() {\n      const key = this.nowType === 'phone' ? 'mobileNumber' : 'email';\n      this.submitLoading = true;\n      this.axios({\n        url: 'v4/user/reset_password_step_one',\n        params: {\n          ...this.verifyObj,\n          nc: undefined,\n          [key]: this.userValue,\n        },\n      }).then((data) => {\n        if (this.verifyObj.nc) { this.verifyObj.nc.reset(); }\n        this.verifyFlag = false;\n        this.verifyObj = {};\n        this.submitLoading = false;\n        if (data.code.toString() === '0') {\n          const { token, isCertificateNumber, isGoogleAuth } = data.data;\n          this.token = token;\n          if (isCertificateNumber && isCertificateNumber.toString() === '1') {\n            this.haveID = true; // 是否开启谷歌身份证\n          }\n          if (isGoogleAuth && isGoogleAuth.toString() === '1') {\n            this.haveGoogle = true; // 是否开启谷歌\n          }\n          this.nowStep = '2';\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n        }\n      });\n    },\n    // 第二步提交\n    submitStep2() {\n      const key = this.nowType === 'phone' ? 'smsCode' : 'emailCode';\n      this.submitLoading = true;\n      this.axios({\n        url: 'v4/user/reset_password_step_two',\n        params: {\n          [key]: this.checkValue,\n          token: this.token,\n          googleCode: this.googleValue,\n          certifcateNumber: this.IDValue,\n        },\n      }).then((data) => {\n        this.submitLoading = false;\n        if (data.code.toString() === '0') {\n          this.nowStep = '3';\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n        }\n      });\n    },\n    // 第三步提交\n    submitStep3() {\n      this.submitLoading = true;\n      this.axios({\n        url: '/user/reset_password_step_three',\n        params: {\n          loginPword: this.passValue, // 密码\n          token: this.token, // token\n        },\n      }).then((data) => {\n        this.submitLoading = false;\n        if (data.code.toString() === '0') {\n          // 重置密码成功，请您登录\n          this.$bus.$emit('tip', { text: this.$t('resetPass.resetSuccess'), type: 'success' });\n          this.$router.push('/login');\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n        }\n      });\n    },\n    // 发送短信/邮箱\n    sendCode() {\n      if (this.nowType === 'phone') {\n        this.$bus.$emit('phoneCode', {\n          token: this.token, // token\n          operationType: '24', // 模版\n          callback: (data) => {\n            if (data.code.toString() !== '0') {\n              // 倒计时重置\n              this.$bus.$emit('getCode-clear', 'resetPassGetcode');\n              // tip框提示错误\n              this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n            } else {\n              // 短信已发送，请注意查收\n              this.$bus.$emit('tip', { text: this.$t('resetPass.phoneSendSuccess'), type: 'success' });\n            }\n          },\n        });\n      } else if (this.nowType === 'email') {\n        this.$bus.$emit('emailCode', {\n          token: this.token, // token\n          operationType: '3',\n          callback: (data) => {\n            if (data.code.toString() !== '0') {\n              // 倒计时重置\n              this.$bus.$emit('getCode-clear', 'resetPassGetcode');\n              // tip框提示错误\n              this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n            } else {\n              // 邮件已发送，请注意查收\n              this.$bus.$emit('tip', { text: this.$t('resetPass.emailSendSuccess'), type: 'success' });\n            }\n          },\n        });\n      }\n    },\n  },\n};\n"]}]}