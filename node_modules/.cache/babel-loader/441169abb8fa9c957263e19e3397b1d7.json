{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js!/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/orderList/orderList.js","dependencies":[{"path":"/Users/h/partTimeJob/blockchain-ui-privatization/PC/common-mixin/modules/coTrade/orderList/orderList.js","mtime":1641739480224},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/babel.config.js","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { imgMap, colorMap, formatTime, fixD, nul, division, thousandsComma as _thousandsComma, myStorage } from '@/utils';\nexport default {\n  name: 'orderList',\n  data: function data() {\n    return {\n      // 订单类型：0：持有仓位 1：当前委托 2：当日成交 3：历史委托 4: 盈亏记录 5: '成交记录'\n      orderType: 1,\n      imgMap: imgMap,\n      colorMap: colorMap,\n      pagination: {\n        // 翻页数据\n        count: 0,\n        // 总数量\n        pageSize: 10,\n        // 每页显示条数\n        page: 1 // 当前页数\n\n      },\n      // 撤销订单 防止重复点击\n      cancelFla: true,\n      tableLoading: false,\n      cancelOrderId: null,\n      timer: 15000,\n      // 当前操作的合约数据（修改保证金，平仓，全仓）\n      currentOrder: {},\n      // 当前委托列表\n      currentOrderLis: [],\n      // table使用的 数量列表\n      dataList: [],\n      cellHeight: 56,\n      revokeList: [],\n      // 条件单显示类别\n      triggeType: 0,\n      // 轮训请求订单\n      getDataTimer: null,\n      // 只显示当前合约开关\n      isShowCurPosition: myStorage.get('isShowCurPosition'),\n      // 仓位数量\n      positionListNumber: 0\n    };\n  },\n  watch: {\n    orderType: function orderType(val) {\n      this.dataList = [];\n      clearInterval(this.getDataTimer);\n      this.getDataTimer = null;\n\n      if (val > 0) {\n        this.getOrderList();\n      } // if (val > 3) {\n      //   this.cellHeight = 28;\n      // } else {\n      //   this.cellHeight = 56;\n      // }\n\n    },\n    currentOrderLis: function currentOrderLis(data) {\n      if (data && data.length && this.orderType > 0 && this.orderType < 3) {\n        clearInterval(this.getDataTimer);\n        this.getDataTimer = null;\n        this.intervalGetData();\n      } else {\n        clearInterval(this.getDataTimer);\n        this.getDataTimer = null;\n      }\n    },\n    coUnitType: function coUnitType() {\n      this.getOrderList();\n\n      if (this.orderType === 1) {\n        this.formatCurrentData();\n      }\n    },\n    contractId: function contractId() {\n      this.getOrderList();\n    },\n    orderCount: function orderCount() {\n      this.$store.dispatch('getUserConfig');\n    }\n  },\n  computed: {\n    // 是否 是云合约在iframe中调用\n    isIframe: function isIframe() {\n      return this.$store.state.future.isIframe;\n    },\n    lanText: function lanText() {\n      return {\n        tabType1: this.$t('futures.orderList.tabType1'),\n        // 仓位\n        tabType2: this.$t('futures.orderList.tabType2'),\n        // 普通委托\n        tabType3: this.$t('futures.orderList.tabType3'),\n        // 条件委托\n        tabType4: this.$t('futures.orderList.tabType4'),\n        // 历史委托\n        tabType5: this.$t('futures.orderList.tabType5'),\n        // 资金流水\n        subTabType1: this.$t('futures.orderList.subTabType1'),\n        // 所有\n        subTabType2: this.$t('futures.orderList.subTabType2'),\n        // 止损单\n        subTabType3: this.$t('futures.orderList.subTabType3'),\n        // 止盈单\n        a_columns_1: this.$t('futures.orderList.a_columns_1'),\n        // 合约\n        a_columns_2: this.$t('futures.orderList.a_columns_2'),\n        // 方向\n        a_columns_3: this.$t('futures.orderList.a_columns_3'),\n        // 数量\n        a_columns_4: this.$t('futures.orderList.a_columns_4'),\n        // 完成度\n        a_columns_5: this.$t('futures.orderList.a_columns_5'),\n        // 委托价格\n        a_columns_6: this.$t('futures.orderList.a_columns_6'),\n        // 成交均价\n        a_columns_7: this.$t('futures.orderList.a_columns_7'),\n        // 类型\n        a_columns_8: this.$t('futures.orderList.a_columns_8'),\n        // 只减仓\n        a_columns_9: this.$t('futures.orderList.a_columns_9'),\n        // 时间\n        a_columns_10: this.$t('futures.orderList.a_columns_10'),\n        // 操作\n        b_columns_1: this.$t('futures.orderList.b_columns_1'),\n        // 合约\n        b_columns_2: this.$t('futures.orderList.b_columns_2'),\n        // 方向\n        b_columns_3: this.$t('futures.orderList.b_columns_3'),\n        // 触发价格\n        b_columns_4: this.$t('futures.orderList.b_columns_4'),\n        // 委托价格\n        b_columns_5: this.$t('futures.orderList.b_columns_5'),\n        // 委托数量/价值\n        b_columns_6: this.$t('futures.orderList.b_columns_6'),\n        // 类型\n        b_columns_7: this.$t('futures.orderList.b_columns_7'),\n        // 只减仓\n        b_columns_8: this.$t('futures.orderList.b_columns_8'),\n        // 提交时间\n        b_columns_9: this.$t('futures.orderList.b_columns_9'),\n        // 过期时间\n        c_columns_1: this.$t('futures.orderList.c_columns_1'),\n        // 合约\n        c_columns_2: this.$t('futures.orderList.c_columns_2'),\n        // 类型\n        c_columns_3: this.$t('futures.orderList.c_columns_3'),\n        // 方向\n        c_columns_4: this.$t('futures.orderList.c_columns_4'),\n        // 委托价格\n        c_columns_5: this.$t('futures.orderList.c_columns_5'),\n        // 委托数量/价值\n        c_columns_6: this.$t('futures.orderList.c_columns_6'),\n        // 成交数量\n        c_columns_7: this.$t('futures.orderList.c_columns_7'),\n        // 成交均价\n        c_columns_8: this.$t('futures.orderList.c_columns_8'),\n        // 盈亏\n        c_columns_9: this.$t('futures.orderList.c_columns_9'),\n        // 状态\n        c_columns_10: this.$t('futures.orderList.c_columns_10'),\n        // 时间\n        c_columns_11: this.$t('futures.orderList.c_columns_11'),\n        // 手续费\n        d_columns_1: this.$t('futures.orderList.d_columns_1'),\n        // 时间\n        d_columns_2: this.$t('futures.orderList.d_columns_2'),\n        // 类型\n        d_columns_3: this.$t('futures.orderList.d_columns_3'),\n        // 金额\n        d_columns_4: this.$t('futures.orderList.d_columns_4'),\n        // 币种\n        typeStatus1: this.$t('futures.orderList.typeStatus1'),\n        // 限价单\n        typeStatus2: this.$t('futures.orderList.typeStatus2'),\n        // 市价单\n        typeStatus3: this.$t('futures.orderList.typeStatus3'),\n        // 只做maker\n        typeStatus4: this.$t('futures.orderList.typeStatus4'),\n        // 强制减仓\n        typeStatus5: this.$t('futures.orderList.typeStatus5'),\n        // 仓位合并\n        getStatus1: this.$t('futures.orderList.getStatus1'),\n        // 新订单\n        getStatus2: this.$t('futures.orderList.getStatus2'),\n        // 完全成交\n        getStatus3: this.$t('futures.orderList.getStatus3'),\n        // 部分成交\n        getStatus4: this.$t('futures.orderList.getStatus4'),\n        // 已取消\n        getStatus5: this.$t('futures.orderList.getStatus5'),\n        // 待撤销\n        getStatus6: this.$t('futures.orderList.getStatus6'),\n        // 异常订单\n        getStatus7: this.$t('futures.orderList.getStatus7'),\n        // 部分成交已撤销\n        sideT1: this.$t('futures.orderList.sideT1'),\n        // 开\n        sideT2: this.$t('futures.orderList.sideT2'),\n        // 平\n        sideT3: this.$t('futures.orderList.sideT3'),\n        // 空\n        sideT4: this.$t('futures.orderList.sideT4'),\n        // 多\n        mPrice: this.$t('futures.orderList.mPrice'),\n        // 市价\n        isclose1: this.$t('futures.orderList.isclose1'),\n        // 是\n        isclose2: this.$t('futures.orderList.isclose2'),\n        // 否\n        cancel: this.$t('futures.orderList.cancel'),\n        // 取消\n        allCancel: this.$t('futures.orderList.allCancel'),\n        // 全部取消\n        tstext1: this.$t('futures.orderList.tstext1'),\n        // 请\n        tstext2: this.$t('futures.orderList.tstext2'),\n        // 登录/注册\n        tstext3: this.$t('futures.orderList.tstext3'),\n        // 再进行操作\n        text14: this.$t('futures.positionLis.text14'),\n        text15: this.$t('futures.positionLis.text15')\n      };\n    },\n    // tab 项\n    tabTypeItem: function tabTypeItem() {\n      // return [\n      // 持仓\n      // this.isLogin ? `${this.lanText.tabType1} (${this.positionListNumber})` : this.lanText.tabType1,\n      // this.isLogin ? `${this.lanText.tabType2} (${this.orderCount})` : this.lanText.tabType2, // '普通委托'\n      // this.isLogin ? `${this.lanText.tabType3} (${this.triggerOrderCount})` : this.lanText.tabType3, // '条件委托'\n      // this.lanText.tabType4, // '历史委托'\n      // this.lanText.tabType5, // '资金流水'\n      // this.$t('futures.orderList.newText1'), // '盈亏记录',\n      // this.$t('futures.orderList.newText2'), // '成交记录',\n      // ];\n      return [{\n        label: this.isLogin ? \"\".concat(this.lanText.tabType2, \" (\").concat(this.orderCount, \")\") : this.lanText.tabType2,\n        value: 1\n      }, // '普通委托'\n      {\n        label: this.lanText.tabType4,\n        value: 3\n      } // '历史委托'\n      ];\n    },\n    // 条件单（筛选项）\n    subTabTypeItem: function subTabTypeItem() {\n      return [{\n        label: this.lanText.subTabType1,\n        value: 0\n      }, // '所有'\n      {\n        label: this.lanText.subTabType2,\n        value: 1\n      }, // '止损单'\n      {\n        label: this.lanText.subTabType3,\n        value: 2\n      } // '止盈单'\n      ];\n    },\n    // 合约列表 MAP\n    contractListMap: function contractListMap() {\n      return this.$store.state.future.contractListMap;\n    },\n    // 当前合约ID\n    contractId: function contractId() {\n      return this.$store.state.future.contractId;\n    },\n    // 仓位数量\n    // positionListNumber() {\n    //   if (this.$store.state.future.positionListNumber) {\n    //     return this.$store.state.future.positionListNumber;\n    //   }\n    //   return '0';\n    // },\n    // 当前合约信息\n    contractInfo: function contractInfo() {\n      return this.$store.state.future.contractInfo;\n    },\n    // 当前合约方向（1正向、0反向）\n    contractSide: function contractSide() {\n      if (this.contractInfo) {\n        return this.contractInfo.contractSide;\n      }\n\n      return 1;\n    },\n    // 当前合约保证金币种\n    marginCoin: function marginCoin() {\n      if (this.contractInfo) {\n        return this.contractInfo.marginCoin;\n      }\n\n      return '';\n    },\n    // 当前合约币种精度\n    coinfix: function coinfix() {\n      return this.$store.state.future.coinfix;\n    },\n    // 当前合约价格精度\n    pricefix: function pricefix() {\n      return this.$store.state.future.pricefix;\n    },\n    // 当前合约保证金币种精度\n    marginCoinFix: function marginCoinFix() {\n      if (this.contractInfo && this.contractInfo.coinResultVo) {\n        return this.contractInfo.coinResultVo.marginCoinPrecision;\n      }\n\n      return 4;\n    },\n    // 数量单位类型Number(1标的货币 2张)\n    coUnitType: function coUnitType() {\n      return this.$store.state.future.coUnitType;\n    },\n    // 当前合约面值\n    multiplier: function multiplier() {\n      return Number(this.$store.state.future.multiplier) || 1;\n    },\n    // 当前合约数量精度\n    volfix: function volfix() {\n      if (this.coUnitType === 1) {\n        return this.$store.state.future.volfix;\n      }\n\n      return 0;\n    },\n    // 当前合约数量单位\n    volUnit: function volUnit() {\n      return this.$store.state.future.coUnit;\n    },\n    // 当前合约价格单位\n    priceUnit: function priceUnit() {\n      return this.$store.state.future.priceUnit;\n    },\n    // 当前普通单委托数量\n    orderCount: function orderCount() {\n      return this.$store.state.future.orderCount;\n    },\n    // 当前条件单委托数量\n    triggerOrderCount: function triggerOrderCount() {\n      return this.$store.state.future.triggerOrderCount;\n    },\n    // 表头\n    columns: function columns() {\n      if (this.orderType === 1) {\n        return [{\n          title: this.lanText.a_columns_1,\n          // 合约\n          width: '120px',\n          classes: 'symbol',\n          styleClass: 'symbol-name'\n        }, {\n          title: this.lanText.a_columns_2,\n          // 方向\n          width: '60px'\n        }, {\n          title: \"\".concat(this.lanText.a_columns_3, \"(\").concat(this.volUnit, \")\"),\n          // 数量\n          width: '150px'\n        }, {\n          title: this.lanText.a_columns_4,\n          // 完成度\n          width: '120px'\n        }, {\n          title: this.lanText.a_columns_5,\n          // 委托价格\n          width: '180px'\n        }, {\n          title: this.lanText.a_columns_6,\n          // 成交均价\n          width: '180px'\n        }, {\n          title: this.lanText.a_columns_7,\n          // 类型\n          width: '80px'\n        }, {\n          title: this.lanText.a_columns_8,\n          // 只减仓\n          width: '100px'\n        }, {\n          title: this.lanText.a_columns_9,\n          // 时间\n          width: '100px'\n        }, {\n          title: this.lanText.a_columns_10,\n          // 操作\n          width: '100px',\n          classes: 'opera',\n          styleClass: 'opera-btn'\n        }];\n      }\n\n      if (this.orderType === 2) {\n        return [{\n          title: this.lanText.b_columns_1,\n          // 合约\n          width: '100px'\n        }, {\n          title: this.lanText.b_columns_2,\n          // 方向\n          width: '80px'\n        }, {\n          title: this.lanText.b_columns_3,\n          // 触发价格\n          width: '180px'\n        }, {\n          title: this.lanText.b_columns_4,\n          // 委托价格\n          width: '180px'\n        }, {\n          title: this.lanText.b_columns_5,\n          // 委托数量/价值\n          width: '180px'\n        }, {\n          title: this.lanText.b_columns_6,\n          // 类型\n          width: '100px'\n        }, {\n          title: this.lanText.b_columns_7,\n          // 只减仓\n          width: '80px'\n        }, {\n          title: this.lanText.b_columns_8,\n          // 提交时间\n          width: '100px'\n        }, {\n          title: this.lanText.b_columns_9,\n          // 过期时间\n          width: '100px'\n        }, {\n          title: this.lanText.a_columns_10,\n          // 操作\n          width: '80px'\n        }];\n      }\n\n      if (this.orderType === 3) {\n        return [{\n          title: this.lanText.c_columns_1,\n          // 合约\n          width: '120px'\n        }, {\n          title: this.lanText.c_columns_2,\n          // 类型\n          width: '100px'\n        }, {\n          title: this.lanText.c_columns_3,\n          // 方向\n          width: '100px'\n        }, {\n          title: this.lanText.c_columns_4,\n          // 委托价格\n          width: '160px'\n        }, {\n          title: this.lanText.c_columns_5,\n          // 委托数量/价值\n          width: '160px'\n        }, {\n          title: \"\".concat(this.lanText.c_columns_6, \"(\").concat(this.volUnit, \")\"),\n          // 成交数量\n          width: '160px'\n        }, {\n          title: this.lanText.c_columns_7,\n          // 成交均价\n          width: '160px'\n        }, {\n          title: this.lanText.c_columns_8,\n          // 盈亏\n          width: '160px'\n        }, {\n          title: \"\".concat(this.lanText.c_columns_11, \" (\").concat(this.marginCoin, \")\"),\n          // 手续费\n          width: '160px'\n        }, // {\n        //   title: this.lanText.xxxx, // 只减仓\n        //   width: '100px',\n        // },\n        {\n          title: this.lanText.c_columns_9,\n          // 状态\n          width: '100px'\n        }, {\n          title: this.lanText.c_columns_10,\n          // 时间\n          width: '100px'\n        }];\n      }\n\n      if (this.orderType === 4) {\n        return [{\n          title: this.lanText.c_columns_1,\n          // 合约\n          width: '10%'\n        }, {\n          title: this.$t('futures.orderList.newText3'),\n          // '开仓均价',\n          width: '10%',\n          classes: 'left-text'\n        }, {\n          title: this.$t('futures.orderList.newText4'),\n          // '平仓均价',\n          width: '10%'\n        }, {\n          title: \"\".concat(this.$t('futures.orderList.newText5'), \" (\").concat(this.volUnit, \")\"),\n          // 仓位数量\n          width: '10%'\n        }, {\n          title: this.$t('futures.orderList.newText6'),\n          // '已实现盈亏',\n          promptText: this.$t('futures.orderList.newText7'),\n          // '总盈亏为该仓位持仓期间累计发生的总盈亏，总盈亏 = 手续费+资金费用+仓位盈亏',\n          width: '10%'\n        }, {\n          title: \"\".concat(this.lanText.c_columns_11, \" (\").concat(this.marginCoin, \")\"),\n          // 手续费\n          promptText: this.$t('futures.orderList.newText8'),\n          // '开仓、平仓累计总手续费',\n          width: '10%'\n        }, {\n          title: this.$t('futures.orderList.newText9'),\n          // '资金费用',\n          promptText: this.$t('futures.orderList.newText10'),\n          // '持仓期间的总资金费用',\n          width: '10%'\n        }, {\n          title: this.$t('futures.orderList.newText15'),\n          // '仓位盈亏',\n          promptText: this.$t('futures.orderList.newText11'),\n          // '仓位盈亏为仓位每次平仓的仓位盈亏之和，平仓盈亏根据 平仓前的持仓均价和平仓均价计算得出',\n          width: '10%'\n        }, {\n          title: this.$t('futures.orderList.newText12'),\n          // '分摊',\n          width: '10%'\n        }, {\n          title: this.$t('futures.orderList.newText13'),\n          // '平仓时间',\n          width: '120px'\n        }];\n      }\n\n      return [{\n        title: this.lanText.c_columns_1,\n        // 合约\n        width: '12%'\n      }, {\n        title: this.$t('futures.orderList.newText3'),\n        // '开仓均价',\n        width: '12%',\n        classes: 'left-text'\n      }, {\n        title: this.lanText.c_columns_3,\n        // 方向\n        width: '12%'\n      }, {\n        title: \"\".concat(this.lanText.c_columns_6, \"(\").concat(this.volUnit, \")\"),\n        // 成交数量\n        width: '12%'\n      }, {\n        title: this.$t('futures.orderList.newText14'),\n        // '角色',\n        width: '12%'\n      }, {\n        title: \"\".concat(this.lanText.c_columns_11, \" (\").concat(this.marginCoin, \")\"),\n        // 手续费\n        width: '12%'\n      }, {\n        title: this.lanText.c_columns_10,\n        // 时间\n        width: '120px'\n      }];\n    },\n    // 是否Login\n    isLogin: function isLogin() {\n      return this.$store.state.baseData.isLogin;\n    },\n    // 是否开通了合约交易\n    openContract: function openContract() {\n      return this.$store.state.future.openContract;\n    },\n    bodyClasses: function bodyClasses() {\n      return \"bodyContent\".concat(this.orderType, \" a-6-bg\");\n    },\n    memoText: function memoText() {\n      return [this.$t('futures.orderList.memoText1'), this.$t('futures.orderList.memoText2'), this.$t('futures.orderList.memoText3'), this.$t('futures.orderList.memoText4'), this.$t('futures.orderList.memoText5'), this.$t('futures.orderList.memoText6'), this.$t('futures.orderList.memoText7'), this.$t('futures.orderList.memoText8')]; // return [\n      //   '用户撤销',\n      //   '订单异常，被系统撤销',\n      //   '仓位发生强平，未成交委托被系统撤销',\n      //   '对手盘不足，委托被系统取消',\n      //   'FOK订单，无法全部成交时被系统撤销',\n      //   'IOC订单，无法立即成交时部分委托被系统撤销',\n      //   '被动委托, 被动委托，撮合时为taker部分被系统撤销',\n      // ];\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      if (myStorage.get('isShowCurPosition') === undefined) {\n        this.isShowCurPosition = true;\n      }\n\n      this.getOrderList('init'); // 监听下单成功 重新请求订单\n\n      this.$bus.$on('CRAET-ORDER-SUCCESS', function () {\n        _this.getOrderList();\n\n        _this.$store.dispatch('getUserOrderCount');\n      });\n      this.$bus.$on('positionListNumber', function (data) {\n        _this.positionListNumber = data;\n      });\n    },\n    // 切换订单类型\n    switchType: function switchType(index) {\n      if (this.orderType !== index) {\n        this.orderType = index;\n\n        if (this.isLogin && this.openContract) {\n          this.tableLoading = true;\n        }\n      }\n    },\n    subSwitchType: function subSwitchType(index) {\n      if (this.triggeType !== index) {\n        this.triggeType = index;\n        this.formatTrigData();\n      }\n    },\n    // 订单类型\n    typeStatus: function typeStatus(status) {\n      var str = '';\n\n      switch (status) {\n        case 1:\n          str = this.lanText.typeStatus1; // '限价单';\n\n          break;\n\n        case 2:\n          str = this.lanText.typeStatus2; // '市价单';\n\n          break;\n\n        case 3:\n          str = 'IOC'; // 'IOC';\n\n          break;\n\n        case 4:\n          str = 'FOK'; // 'FOK';\n\n          break;\n\n        case 5:\n          str = this.lanText.typeStatus3; // '只做maker';\n\n          break;\n\n        case 6:\n          str = this.lanText.typeStatus4; // '强制减仓';\n\n          break;\n\n        case 7:\n          str = this.lanText.typeStatus5; // '仓位合并';\n\n          break;\n\n        default:\n          str = '';\n      }\n\n      return str;\n    },\n    // 订单状态\n    getStatus: function getStatus(status) {\n      var str = '';\n\n      switch (status) {\n        case 0:\n          str = this.lanText.getStatus1; // 新订单\n\n          break;\n\n        case 1:\n          str = this.lanText.getStatus1; // 新订单\n\n          break;\n\n        case 2:\n          str = this.lanText.getStatus2; // 完全成交\n\n          break;\n\n        case 3:\n          str = this.lanText.getStatus3; // 部分成交\n\n          break;\n\n        case 4:\n          str = this.lanText.getStatus4; // 已取消\n\n          break;\n\n        case 5:\n          str = this.lanText.getStatus5; // 待撤销\n\n          break;\n\n        case 6:\n          str = this.lanText.getStatus6; // 异常订单\n\n          break;\n\n        case 7:\n          str = this.lanText.getStatus7; // 部分成交已撤销\n\n          break;\n\n        default:\n          str = '';\n      }\n\n      return str;\n    },\n    // 订单数量\n    setVolume: function setVolume(volume) {\n      if (this.coUnitType === 1) {\n        return fixD(nul(volume, this.multiplier), this.volfix);\n      }\n\n      return this.thousandsComma(volume);\n    },\n    // 完成度\n    makeRate: function makeRate(dealVolume, volume) {\n      if (dealVolume && volume) {\n        // 已完成数量 / 委托数量\n        var value = nul(division(dealVolume, volume), 100);\n        return fixD(value, 2);\n      }\n\n      return 0.00;\n    },\n    // 返回订单方向\n    setSide: function setSide(data) {\n      var classes = 'u-1-cl'; // 开 ：平\n\n      var open = data.open === 'OPEN' ? this.lanText.sideT1 : this.lanText.sideT2; // 空\n\n      var side = this.lanText.sideT3;\n\n      if (data.open === 'OPEN' && data.side === 'BUY' || data.open === 'CLOSE' && data.side === 'SELL') {\n        // 多\n        side = this.lanText.sideT4;\n      }\n\n      if (data.side === 'SELL') {\n        classes = 'u-4-cl';\n      }\n\n      return [{\n        text: \"\".concat(open).concat(side),\n        classes: classes\n      }];\n    },\n    // 返回合约名称\n    setContractName: function setContractName(data) {\n      var acriveData = this.contractListMap[data.contractName];\n\n      if (acriveData) {\n        var name = '';\n        var text = '';\n\n        if (data) {\n          var nameText = acriveData.symbol ? acriveData.symbol.replace('-', '') : '';\n\n          if (acriveData.contractType !== 'E') {\n            text = \"-\".concat(acriveData.marginCoin);\n          }\n\n          name = \"\".concat(nameText).concat(text);\n        }\n\n        return name;\n      }\n\n      return data.symbol.replace('-', '');\n    },\n    // 请求订单数据\n    getOrderList: function getOrderList(type) {\n      var _this2 = this;\n\n      if (!this.isLogin || !this.openContract) return;\n      var paramsData = {\n        contractId: this.contractId\n      }; // 请求数量\n\n      this.$store.dispatch('getUserOrderCount'); // 当前委托\n\n      var url = this.$store.state.url.futures.currentOrderList; // 条件委托\n\n      if (this.orderType === 2) {\n        url = this.$store.state.url.futures.triggerOrderList;\n      } // 历史委托\n\n\n      if (this.orderType === 3) {\n        url = this.$store.state.url.futures.historyOrderList;\n      } // 盈亏记录\n\n\n      if (this.orderType === 4) {\n        url = this.$store.state.url.futures.historyPositionList;\n      } // 成交记录\n\n\n      if (this.orderType === 5) {\n        url = this.$store.state.url.futures.getTradeInfo;\n      }\n\n      this.axios({\n        url: url,\n        method: 'post',\n        hostType: 'co',\n        params: paramsData\n      }).then(function (rs) {\n        _this2.tableLoading = false;\n\n        if (rs.code === '0' && rs.data) {\n          // 当前委托\n          if (_this2.orderType === 1 || type === 'init') {\n            _this2.currentOrderLis = rs.data.orderList; // 将当前委托存储在vuex\n\n            _this2.$store.commit('CURRENT_OTDER_LIST', _this2.currentOrderLis);\n\n            _this2.formatCurrentData();\n          } // 条件委托\n\n\n          if (_this2.orderType === 2) {\n            _this2.currentOrderLis = rs.data.trigOrderList;\n\n            _this2.formatTrigData();\n          } // 历史委托\n\n\n          if (_this2.orderType === 3) {\n            _this2.currentOrderLis = rs.data.orderList;\n\n            _this2.formatHistoryData();\n          } // 盈亏记录\n\n\n          if (_this2.orderType === 4) {\n            _this2.currentOrderLis = rs.data.positionList;\n\n            _this2.formatTransData();\n          } // 成交记录\n\n\n          if (_this2.orderType === 5) {\n            _this2.currentOrderLis = rs.data.tradeList;\n\n            _this2.formatTradeInfo();\n          }\n        }\n      });\n    },\n    // 格式化当前委托订单数据\n    formatCurrentData: function formatCurrentData() {\n      var _this3 = this;\n\n      var list = [];\n\n      if (this.currentOrderLis && this.currentOrderLis.length) {\n        this.currentOrderLis.forEach(function (item) {\n          var price = null;\n\n          if (item.type === 2 && Number(item.price) === 0) {\n            price = _this3.lanText.mPrice; // '市价';\n          } else {\n            price = _this3.thousandsComma(fixD(item.price, item.pricePrecision));\n          }\n\n          list.push({\n            id: JSON.stringify(item),\n            classes: 'b-2-cl',\n            data: [// 合约\n            _this3.setContractName(item), // 方向\n            _this3.setSide(item), // 成交数量 / 委托数量\n            \"\".concat(_this3.setVolume(item.dealVolume), \" / \").concat(_this3.setVolume(item.volume)), // '完成度',\n            \"\".concat(_this3.makeRate(item.dealVolume, item.volume), \"%\"), // 委托价格\n            price, // 成交均价\n            item.pricePrecision ? _this3.thousandsComma(fixD(item.avgPrice, item.pricePrecision)) : '--', // 类型\n            _this3.typeStatus(item.type), // 只减仓\n            // '是' : '否'\n            item.open === 'CLOSE' ? _this3.lanText.isclose1 : _this3.lanText.isclose2, // 时间\n            formatTime(item.ctime), // 撤单\n            [{\n              type: 'button',\n              text: _this3.lanText.cancel,\n              // 取消\n              eventType: 'cancelOrder'\n            }]]\n          });\n        });\n      }\n\n      this.dataList = list;\n    },\n    // 格式化条件委托订单数据\n    formatTrigData: function formatTrigData() {\n      var _this4 = this;\n\n      var list = [];\n\n      if (this.currentOrderLis && this.currentOrderLis.length) {\n        this.currentOrderLis.forEach(function (item) {\n          if (_this4.triggeType && _this4.triggeType !== item.triggerType) return;\n          var price = null;\n          var volume = null;\n\n          if (item.type === 2 && Number(item.price) === 0) {\n            price = _this4.lanText.mPrice; // '市价';\n            // 价值\n\n            if (item.open === 'OPEN') {\n              // 反向\n              var unit = _this4.contractInfo.base;\n              var volfix = _this4.$store.state.future.volfix;\n              var coinFix = volfix; // 正向\n\n              if (_this4.contractSide === 1) {\n                unit = _this4.priceUnit;\n                coinFix = _this4.pricefix;\n              }\n\n              volume = \"\".concat(fixD(item.volume, coinFix), \" \").concat(unit);\n            } else {\n              volume = \"\".concat(_this4.setVolume(item.volume), \" \").concat(_this4.volUnit);\n            }\n          } else {\n            price = _this4.thousandsComma(fixD(item.price, item.pricePrecision)); // 委托数量\n\n            volume = \"\".concat(_this4.setVolume(item.volume), \" \").concat(_this4.volUnit);\n          }\n\n          list.push({\n            id: JSON.stringify(item),\n            classes: 'b-2-cl',\n            data: [// 合约\n            _this4.setContractName(item), // 方向\n            _this4.setSide(item), // 触发价格\n            _this4.thousandsComma(fixD(item.triggerPrice, item.pricePrecision)), // 委托价格\n            price, // 委托数量/价值\n            volume, // 类型\n            _this4.typeStatus(item.timeInForce), // 只减仓\n            // '是' : '否',\n            item.open === 'CLOSE' ? _this4.lanText.isclose1 : _this4.lanText.isclose2, // 提交时间\n            formatTime(item.mtime), // 过期时间\n            formatTime(item.expireTime), // 撤单\n            [{\n              type: 'button',\n              text: _this4.lanText.cancel,\n              // 取消\n              eventType: 'cancelOrder'\n            }]]\n          });\n        });\n      }\n\n      this.dataList = list;\n    },\n    // 格式化 历史委托 订单数据\n    formatHistoryData: function formatHistoryData() {\n      var _this5 = this;\n\n      var list = [];\n\n      if (this.currentOrderLis && this.currentOrderLis.length) {\n        this.currentOrderLis.forEach(function (item, index) {\n          var price = null;\n          var volume = null;\n\n          if (item.type === 2 && Number(item.price) === 0) {\n            price = _this5.lanText.mPrice; // '市价';\n            // 价值\n\n            if (item.open === 'OPEN') {\n              // 反向\n              var unit = _this5.contractInfo.base;\n              var volfix = _this5.$store.state.future.volfix;\n              var coinFix = volfix; // 正向\n\n              if (_this5.contractSide === 1) {\n                unit = _this5.priceUnit;\n                coinFix = _this5.pricefix;\n              }\n\n              volume = \"\".concat(fixD(item.volume, coinFix), \" \").concat(unit);\n            } else {\n              // 委托数量\n              volume = \"\".concat(_this5.setVolume(item.volume), \" \").concat(_this5.volUnit);\n            }\n          } else {\n            price = _this5.thousandsComma(fixD(item.price, item.pricePrecision)); // 委托数量\n\n            volume = \"\".concat(_this5.setVolume(item.volume), \" \").concat(_this5.volUnit);\n          }\n\n          var cancelCauseClass = index > 3 ? 'position-bottom' : '';\n          list.push({\n            id: JSON.stringify(item),\n            classes: 'b-2-cl',\n            data: [// 合约\n            _this5.setContractName(item), // 类型\n            // this.typeStatus(item.type),\n            item.liqPositionMsg ? [{\n              text: \"<div class=\\\"cancel_cause cancel_cause_right\\\">\\n                  \".concat(_this5.typeStatus(item.type), \"\\n                  <span class=\\\"cancel_cause-btn\\\">\\n                    <svg aria-hidden=\\\"true\\\" class=\\\"icon icon-16\\\">\\n                      <use xlink:href=\\\"#icon-a_15\\\"></use>\\n                    </svg>\\n                    <div class=\\\"cancel_cause_text a-5-bg b-1-cl a-3-bd \").concat(cancelCauseClass, \"\\\">\\n                    \").concat(_this5.replaceAll(item.liqPositionMsg), \"\\n                    </div>\\n                  </span>\\n                </div>\"),\n              type: 'html'\n            }] : _this5.typeStatus(item.type), // 方向\n            _this5.setSide(item), // 委托价格\n            item.type === 6 ? '--' : price, // 委托数量/价值\n            volume, // 成交数量\n            _this5.setVolume(item.dealVolume), // 成交均价\n            item.type === 6 ? '--' : _this5.thousandsComma(fixD(item.avgPrice, item.pricePrecision)), // 盈亏\n            [{\n              text: \"\".concat(fixD(item.realizedAmount, _this5.marginCoinFix), \" \").concat(_this5.marginCoin),\n              classes: _this5.setClsdsd(item.realizedAmount)\n            }], // 手续费\n            fixD(item.tradeFee, _this5.marginCoinFix), // 只减仓\n            // item.open === 'CLOSE' ? '是' : '否',\n            // 状态\n            item.status === 4 && item.memo ? [{\n              text: \"<div class=\\\"cancel_cause\\\">\\n                  \".concat(_this5.getStatus(item.status), \"\\n                  <span class=\\\"cancel_cause-btn\\\">\\n                    <svg aria-hidden=\\\"true\\\" class=\\\"icon icon-16\\\">\\n                      <use xlink:href=\\\"#icon-a_15\\\"></use>\\n                    </svg>\\n                    <div class=\\\"cancel_cause_text a-5-bg b-1-cl a-3-bd \").concat(cancelCauseClass, \"\\\">\\n                      \").concat(_this5.memoText[item.memo - 1], \"\\n                    </div>\\n                  </span>\\n                </div>\"),\n              type: 'html'\n            }] : _this5.getStatus(item.status), // 提交时间\n            formatTime(item.ctime)]\n          });\n        });\n      }\n\n      this.dataList = list;\n    },\n    // 格式化盈亏记录数据\n    formatTransData: function formatTransData() {\n      var _this6 = this;\n\n      var list = [];\n\n      if (this.currentOrderLis && this.currentOrderLis.length) {\n        this.currentOrderLis.forEach(function (item) {\n          // 杠杆\n          var level = \"\".concat(item.leverageLevel, \"X\"); // 类型\n\n          var sideBgclass = item.side === 'BUY' ? 'u-1-bg' : 'u-4-bg'; //\n\n          var sideClclass = item.side === 'BUY' ? 'u-1-cl' : 'u-4-cl'; // 合约名称\n\n          var name = _this6.setContractName(_this6.contractInfo); // 类型  '逐仓' : '全仓';\n\n\n          var type = item.positionType === 2 ? _this6.lanText.text15 : _this6.lanText.text14;\n          list.push({\n            id: JSON.stringify(item),\n            classes: 'b-2-cl',\n            data: [// 合约\n            [{\n              type: 'html',\n              text: \"<div class=\\\"futurs-name\\\">\\n                    <i class=\\\"sideBg \".concat(sideBgclass, \"\\\"></i>\\n                    <p class=\\\"\").concat(sideClclass, \"\\\">\").concat(name, \"</p>\\n                    <p>\").concat(type, \" \").concat(level, \"</p>\\n                    </div>\"),\n              classes: _this6.amountClass(item.amount)\n            }], fixD(item.openPrice, _this6.pricefix), // 开仓均价\n            fixD(item.closePrice, _this6.pricefix), // 平仓均价\n            _this6.setVolume(item.volume), // 仓位数量\n            _this6.fixDSign(item.historyRealizedAmount, _this6.marginCoinFix), // 已实现盈亏\n            _this6.fixDSign(item.tradeFee, _this6.marginCoinFix), // 手续费\n            _this6.fixDSign(item.capitalFee, _this6.marginCoinFix), // 资金费用\n            _this6.fixDSign(item.closeProfit, _this6.marginCoinFix), // 仓位盈亏\n            _this6.fixDSign(item.shareAmount, _this6.marginCoinFix), // 分摊金额\n            formatTime(item.mtime) // 平仓时间\n            ]\n          });\n        });\n      }\n\n      this.dataList = list;\n    },\n    // 格式化成交记录数据\n    formatTradeInfo: function formatTradeInfo() {\n      var _this7 = this;\n\n      var list = [];\n\n      if (this.currentOrderLis && this.currentOrderLis.length) {\n        this.currentOrderLis.forEach(function (item) {\n          list.push({\n            id: JSON.stringify(item),\n            classes: 'b-2-cl',\n            data: [// 合约\n            _this7.setContractName(item), // 成交均价\n            fixD(item.price, _this7.pricefix), // 方向\n            _this7.setSide(item), // 成交数量\n            _this7.setVolume(item.volume), // 角色\n            item.role, // 手续费\n            \"\".concat(fixD(item.fee, item.feeCoinPrecision), \" \").concat(item.feeCoin), // 时间\n            formatTime(item.ctime)]\n          });\n        });\n      }\n\n      this.dataList = list;\n    },\n    replaceAll: function replaceAll(str) {\n      return str.replace(/\\\\n/g, '<br/>');\n    },\n    setClsdsd: function setClsdsd(val) {\n      if (val === 0) {\n        return '';\n      }\n\n      return val < 0 ? 'u-4-cl' : 'u-1-cl';\n    },\n    // 设置精度 + 符号\n    fixDSign: function fixDSign(value, fix) {\n      if (value && fix.toString()) {\n        if (Number(value) > 0) {\n          return \"+\".concat(fixD(value, fix));\n        }\n\n        return fixD(value, fix);\n      }\n\n      return '0.00';\n    },\n    amountClass: function amountClass(value) {\n      if (value) {\n        if (Number(value) > 0) {\n          return 'u-1-cl';\n        }\n\n        if (Number(value) < 0) {\n          return 'u-4-cl';\n        }\n      }\n\n      return '';\n    },\n    // 表格操作按钮点击事件\n    elementClick: function elementClick(type, v) {\n      var _this8 = this;\n\n      if (type === 'cancelOrder') {\n        var obj = JSON.parse(v);\n        this.revokeList.push(obj.id);\n        setTimeout(function () {\n          _this8.axios({\n            url: _this8.$store.state.url.futures.orderCancel,\n            hostType: 'co',\n            method: 'post',\n            params: {\n              contractId: _this8.contractId,\n              orderId: obj.id,\n              isConditionOrder: _this8.orderType === 2\n            }\n          }).then(function (data) {\n            var ind = _this8.revokeList.indexOf(obj.id);\n\n            _this8.revokeList.splice(ind, 1);\n\n            if (data.code.toString() === '0') {\n              _this8.$store.dispatch('getPositionList');\n\n              _this8.$store.dispatch('getUserConfig');\n\n              _this8.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'success'\n              });\n\n              _this8.getOrderList();\n            } else {\n              _this8.$bus.$emit('tip', {\n                text: data.msg,\n                type: 'error'\n              });\n            }\n          });\n        }, 500);\n      }\n    },\n    // 取消委托\n    cancelOrder: function cancelOrder() {},\n    goPage: function goPage(path) {\n      if (path === 'login' && this.isIframe) {\n        window.parent.postMessage('login', '*');\n      } else {\n        this.$router.push(\"/\".concat(path));\n      }\n    },\n    // 轮训请求订单数据\n    intervalGetData: function intervalGetData() {\n      var _this9 = this;\n\n      clearInterval(this.getDataTimer);\n      this.getDataTimer = setInterval(function () {\n        _this9.getOrderList();\n\n        if (!_this9.isLogin || !_this9.currentOrderLis.length) {\n          clearInterval(_this9.getDataTimer);\n          _this9.getDataTimer = null;\n        }\n      }, 5000);\n    },\n    thousandsComma: function thousandsComma(num) {\n      if (num) {\n        return _thousandsComma(num);\n      }\n\n      return num;\n    },\n    // 只显示当前合约开关\n    switchChange: function switchChange() {\n      this.isShowCurPosition = !this.isShowCurPosition;\n      myStorage.set('isShowCurPosition', this.isShowCurPosition);\n      this.$bus.$emit('isShowCurPosition', this.isShowCurPosition);\n    }\n  }\n};",null]}