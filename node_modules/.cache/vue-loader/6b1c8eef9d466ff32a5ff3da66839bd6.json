{"remainingRequest":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/trade/gridDialog/GridDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/app/view/src/components/modules/trade/gridDialog/GridDialog.vue","mtime":1620459862000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/h/partTimeJob/exchange-fe-server-privatization-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  colorMap,\n  formatTime,\n  fixD,\n  getCoinShowName,\n} from 'BlockChain-ui-privatization/utils';\nimport GridTabel from './GridTabel.vue';\n\nexport default {\n  name: 'GridDialog',\n  props: {\n    gridShowFlag: {\n      default: false,\n      type: Boolean,\n    },\n    dataId: {\n      default: null,\n      type: [Number, String],\n    },\n    fixValue: {\n      default: null,\n      type: Object,\n    },\n    type: { // 网格状态已完成和正在执行\n      default: null,\n      type: [Number, String],\n    },\n  },\n  data() {\n    return {\n      beingTabelList: [],\n      endTabelList: [],\n      tableLoading: false,\n      cellHeight: 38,\n      pagination: {\n        total: 0, // 数据总条数\n        pageSize: 30, // 每页显示条数\n        page: 1, // 当前页码\n      },\n      transactionType: 1, // 选择哪个tab\n      colorMap,\n      BeingLoding: false,\n      endLoding: false,\n      subTableData: [],\n      subLoading: false,\n      subTableDataId: null,\n      getDataInter: null,\n      gridData: {},\n      beingLeng: 0,\n      endLeng: 0,\n      timer: 5000,\n    };\n  },\n  components: {\n    GridTabel,\n  },\n  watch: {\n    gridShowFlag(v) {\n      if (v) {\n        this.$nextTick(() => {\n          this.getGridData();\n          this.intervalGet();\n          if (this.$refs.dialog.offsetHeight % 2 !== 0) {\n            const str = `${this.$refs.dialog.offsetHeight + 1}px`;\n            this.$refs.dialog.style.height = str;\n          }\n        });\n      }\n    },\n  },\n  computed: {\n    // 表头\n    columns() {\n      if (this.transactionType === 2) {\n        return [\n          {\n            title: this.$t('gridTrade.dialog7'), // '买盘',\n            width: '10%',\n          },\n          {\n            title: this.$t('gridTrade.dialog8'), // '买入价格'\n            width: '30%',\n          },\n          {\n            title: this.$t('gridTrade.dialog9'), // '卖出价格'\n            width: '30%',\n          },\n          {\n            title: this.$t('gridTrade.dialog10'), // 卖盘\n            width: '25%',\n          },\n        ];\n      } if (this.transactionType === 3) {\n        return [\n          {\n            title: this.$t('trade.time'), // '时间',\n            width: '300px',\n          },\n          {\n            title: `${this.$t('gridTrade.dialog11')}(${this.symbol ? getCoinShowName(this.symbol[1], this.coinList) : ''})`, // '利润'\n          },\n        ];\n      }\n      return [];\n    },\n    symbol() {\n      let symbol = null;\n      if (this.gridData && this.gridData.symbol) {\n        symbol = this.gridData.symbol.split('/');\n      }\n      return symbol;\n    },\n    // 全部币种列表\n    coinList() {\n      if (this.$store.state.baseData && this.$store.state.baseData.market) {\n        return this.$store.state.baseData.market.coinList;\n      }\n      return null;\n    },\n  },\n  methods: {\n    formatTime,\n    fixD,\n    getCoinShowName,\n    dialogClose() {\n      this.beingTabelList = [];\n      this.endTabelList = [];\n      this.tableLoading = false;\n      this.pagination.total = 0;\n      this.transactionType = 1; // 选择哪个tab\n      this.gridData = {};\n      this.beingLeng = 0;\n      this.endLeng = 0;\n      clearInterval(this.getDataInter);\n      this.getDataInter = null;\n      this.$emit('gridDialogClose');\n    },\n    // 点击tab\n    switchTradeType(val) {\n      this.transactionType = val;\n      this.pagination.total = 0;\n      this.pagination.page = 1; // 当前页码\n      clearInterval(this.getDataInter);\n      this.getDataInter = null;\n      if (val === 2) {\n        this.getBeingData();\n      } else if (val === 3) {\n        this.getEndData();\n      } else {\n        this.getGridData();\n        this.intervalGet();\n      }\n    },\n    // 轮训请求数据\n    intervalGet() {\n      clearInterval(this.getDataInter);\n      // 如果定时器没有和等于详情tab和是正在进行再论训\n      if (!this.getDataInter && this.transactionType === 1 && this.type === 1) {\n        this.getDataInter = setInterval(() => {\n          this.getGridData();\n        }, this.timer);\n      }\n    },\n    // 翻页事件\n    pagechange(num) {\n      this.pagination.page = num;\n      this.subTableData = null;\n      this.subTableDataId = null;\n      // this.orderIdArrar = [];\n      if (this.transactionType === 3) {\n        this.getEndData();\n      } else if (this.transactionType === 2) {\n        this.getBeingData();\n      }\n    },\n    setTime(startTime, endTime) {\n      if (!Number(startTime)) {\n        return `0${this.$t('otcDetailOrder.day')}0${this.$t('gridTrade.hours')}0${this.$t('otcDetailOrder.min')}`;\n      }\n      let dateEnd = new Date().getTime();\n      if (endTime) {\n        dateEnd = endTime;\n      }\n      const dateDiff = dateEnd - startTime;// 时间差的毫秒数\n      const day = Math.floor(dateDiff / (24 * 3600 * 1000));// 计算出相差天数\\\n      const leave1 = dateDiff % (24 * 3600 * 1000); // 计算天数后剩余的毫秒数\n      const hours = Math.floor(leave1 / (3600 * 1000));// 计算出小时数\n      // 计算相差分钟数\n      const leave2 = leave1 % (3600 * 1000); // 计算小时数后剩余的毫秒数\n      const minutes = Math.floor(leave2 / (60 * 1000));// 计算相差分钟数\n      function s(t) {\n        return t < 10 && t > 0 ? `0${t}` : t;\n      }\n      return `${s(day)}${this.$t('otcDetailOrder.day')}${s(hours)}${this.$t('gridTrade.hours')}${s(minutes)}${this.$t('otcDetailOrder.min')}`;\n    },\n    // 请求详情\n    getGridData() {\n      const params = {\n        id: this.dataId,\n      };\n      this.axios({\n        url: 'quant/getStrategyById ',\n        hostType: 'quant',\n        method: 'post',\n        params,\n      }).then((data) => {\n        if (data.code.toString() === '0') {\n          if (data.data) {\n            this.gridData = { ...data.data };\n            // 正在执行总条数\n            this.beingLeng = this.gridData.orderingCount;\n            // 已执行总条数\n            this.endLeng = this.gridData.finishCount;\n          }\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n        }\n      });\n    },\n    // 请求正在执行tabel\n    getBeingData() {\n      if (this.BeingLoding) {\n        return;\n      }\n      this.BeingLoding = true;\n      this.beingTabelList = [];\n      const params = {\n        strategyId: this.dataId,\n      };\n      this.axios({\n        url: 'quant/getOrderingGridList',\n        hostType: 'quant',\n        method: 'post',\n        params,\n      }).then((data) => {\n        if (data.code.toString() === '0') {\n          const newList = [];\n          if (data.data && data.data) {\n            if (data.data.BUY && data.data.BUY.length) {\n              data.data.BUY.forEach((item, i) => {\n                if (!data.data.SELL[i]) {\n                  newList[i] = {\n                    id: i,\n                    data: [\n                      i + 1,\n                      [\n                        {\n                          text: fixD(item, this.fixValue.priceFix),\n                          classes: 'u-1-cl',\n                        },\n                      ],\n                      null,\n                      null,\n                    ],\n                  };\n                } else {\n                  newList[i] = {\n                    id: i,\n                    data: [\n                      i + 1,\n                      [\n                        {\n                          text: fixD(item, this.fixValue.priceFix),\n                          classes: 'u-1-cl',\n                        },\n                      ],\n                    ],\n                  };\n                }\n              });\n            }\n            if (data.data.SELL && data.data.SELL.length) {\n              data.data.SELL.forEach((item, i) => {\n                if (!newList[i]) {\n                  newList[i] = {\n                    id: i,\n                    data: [\n                      null,\n                      null,\n                      [\n                        {\n                          text: fixD(item, this.fixValue.priceFix),\n                          classes: 'u-4-cl',\n                        },\n                      ],\n                      i + 1,\n                    ],\n                  };\n                } else {\n                  newList[i].data.push(\n                    [\n                      {\n                        text: fixD(item, this.fixValue.priceFix),\n                        classes: 'u-4-cl',\n                      },\n                    ],\n                    i + 1,\n                  );\n                }\n              });\n            }\n            this.beingLeng = data.data.BUY.length + data.data.SELL.length;\n          }\n          this.beingTabelList = [...newList];\n          this.BeingLoding = false;\n        } else {\n          this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n        }\n      });\n    },\n    // 请求已完成tabel\n    getEndData() {\n      if (this.endLoding) {\n        return;\n      }\n      this.endLoding = true;\n      this.endTabelList = [];\n      if (this.gridData) {\n        const params = {\n          strategyId: this.dataId,\n          pageSize: this.pagination.pageSize,\n          page: this.pagination.page, // 页码\n        };\n        this.axios({\n          url: 'quant/getFinishGridList',\n          hostType: 'quant',\n          method: 'post',\n          params,\n        }).then((data) => {\n          if (data.code.toString() === '0') {\n            const list = [];\n            if (data.data && data.data && data.data.list.length) {\n              data.data.list.forEach((item, i) => {\n                const subData = [];\n                if (item.buyOrder && !item.sellOrder) {\n                  subData.push({\n                    typeText: item.buyOrder.orderSide === 'BUY' ? this.$t('trade.buy') : this.$t('trade.sell'),\n                    balanceSymbol: this.symbol ? getCoinShowName(this.symbol[1], this.coinList) : '',\n                    numSymbol: this.symbol ? getCoinShowName(this.symbol[0], this.coinList) : '',\n                    avgPrice: fixD(item.buyOrder.avgPrice, this.fixValue.priceFix), // 成交均价\n                    dealMoney: fixD(item.buyOrder.dealMoney, this.fixValue.priceFix), // 成交金额\n                    orderCtime: formatTime(item.buyOrder.orderCtime),\n                    type: 1,\n                    dealVolume: fixD(item.buyOrder.dealVolume, this.fixValue.volumeFix), // 成交数量\n                  });\n                } else if (item.buyOrder && item.sellOrder) {\n                  subData.push({\n                    typeText: item.buyOrder.orderSide === 'BUY' ? this.$t('trade.buy') : this.$t('trade.sell'),\n                    balanceSymbol: this.symbol ? getCoinShowName(this.symbol[1], this.coinList) : '',\n                    numSymbol: this.symbol ? getCoinShowName(this.symbol[0], this.coinList) : '',\n                    avgPrice: fixD(item.buyOrder.avgPrice, this.fixValue.priceFix), // 成交均价\n                    dealMoney: fixD(item.buyOrder.dealMoney, this.fixValue.priceFix), // 成交金额\n                    orderCtime: formatTime(item.buyOrder.orderCtime),\n                    type: 1,\n                    dealVolume: fixD(item.buyOrder.dealVolume, this.fixValue.volumeFix), // 成交数量\n                  },\n                  {\n                    typeText: item.sellOrder.orderSide === 'BUY' ? this.$t('trade.buy') : this.$t('trade.sell'),\n                    balanceSymbol: this.symbol ? getCoinShowName(this.symbol[1], this.coinList) : '',\n                    numSymbol: this.symbol ? getCoinShowName(this.symbol[0], this.coinList) : '',\n                    type: 2,\n                    orderCtime: formatTime(item.sellOrder.orderCtime),\n                    avgPrice: fixD(item.sellOrder.avgPrice, this.fixValue.priceFix), // 成交均价\n                    dealMoney: fixD(item.sellOrder.dealMoney, this.fixValue.priceFix), // 成交金额\n                    dealVolume: fixD(item.sellOrder.dealVolume, this.fixValue.volumeFix), // 成交数量\n                  });\n                } else if (!item.buyOrder && item.sellOrder) {\n                  subData.push({\n                    typeText: item.sellOrder.orderSide === 'BUY' ? this.$t('trade.buy') : this.$t('trade.sell'),\n                    balanceSymbol: this.symbol ? getCoinShowName(this.symbol[1], this.coinList) : '',\n                    numSymbol: this.symbol ? getCoinShowName(this.symbol[0], this.coinList) : '',\n                    type: 2,\n                    orderCtime: formatTime(item.sellOrder.orderCtime),\n                    avgPrice: fixD(item.sellOrder.avgPrice, this.fixValue.priceFix), // 成交均价\n                    dealMoney: fixD(item.sellOrder.dealMoney, this.fixValue.priceFix), // 成交金额\n                    dealVolume: fixD(item.sellOrder.dealVolume, this.fixValue.volumeFix), // 成交数量\n                  });\n                }\n                list.push({\n                  id: i,\n                  data: [\n                    [\n                      {\n                        classes: 'size_text',\n                        text: item.buyTime ? formatTime(item.buyTime) : '--',\n                      },\n                    ],\n                    [\n                      {\n                        type: 'subTable',\n                        text: item.profit ? fixD(item.profit, this.fixValue.priceFix) : '--',\n                        eventType: 'view',\n                        classes: 'u-1-cl size_text',\n                      },\n                    ],\n                  ],\n                  subData,\n                });\n              });\n            }\n            this.endTabelList = [...list];\n            this.endLeng = data.data.count; // 已执行总条数\n            this.endLoding = false;\n            this.pagination.total = data.data.count;\n          } else {\n            this.$bus.$emit('tip', { text: data.msg, type: 'error' });\n          }\n        });\n      }\n    },\n    elementClick(type, data) {\n      this.setSubTableData(data);\n    },\n    // 查看详情\n    setSubTableData(data) {\n      this.subLoading = true;\n      this.subTableDataId = data.id;\n      this.subTableData = [];\n      if (this.endTabelList.length) {\n        this.endTabelList.forEach((item) => {\n          if (item.id === data.id) {\n            this.subTableData = [...item.subData];\n          }\n        });\n      }\n      this.subLoading = false;\n    },\n  },\n};\n",null]}